{"version":3,"sources":["webpack:///0.b5cba9f.chunk.js","webpack:///./~/d3/d3.js","webpack:///./app/middleware/utils/applyYDomain.js","webpack:///./app/utils/dataFormats/getNiceDomain.js","webpack:///./app/components/Chart/ChartTypes ^\\.\\/.*\\/index$","webpack:///./app/components/Chart/ChartTypes/NVD3Adapter/index.js","webpack:///./~/nvd3/build/nv.d3.js","webpack:///./~/react-nvd3/dist/react-nvd3.min.js"],"names":["simplechartJsonp","78","module","exports","__webpack_require__","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","d3_documentElement","node","ownerDocument","document","documentElement","d3_window","defaultView","d3_ascending","a","b","NaN","d3_number","x","d3_numeric","isNaN","d3_bisector","compare","left","lo","hi","arguments","length","mid","right","d3_transposeLength","d","d3_range_integerScale","k","d3_class","ctor","properties","key","Object","defineProperty","prototype","value","enumerable","d3_Map","this","_","create","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","slice","d3_map_has","d3_map_remove","d3_map_keys","keys","push","d3_map_size","size","d3_map_empty","d3_Set","d3_identity","d3_rebind","target","source","method","apply","d3_vendorSymbol","object","name","charAt","toUpperCase","i","n","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","event","l","z","listeners","on","listenerByName","listener","get","indexOf","concat","remove","set","d3_eventPreventDefault","d3","preventDefault","d3_eventSource","s","e","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","type","d3_selection","groups","d3_subclass","d3_selectionPrototype","d3_selection_selector","selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","trim","replace","d3_selection_classedRe","RegExp","requote","d3_selection_classes","split","d3_selection_classed","classedConstant","classedFunction","map","d3_selection_classedName","re","c","classList","add","getAttribute","lastIndex","test","d3_selection_style","priority","styleNull","style","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","namespace","namespaceURI","d3_nsXhtml","createElement","createElementNS","createNS","d3_selectionRemove","parent","parentNode","removeChild","d3_selection_dataNode","data","__data__","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","comparator","d3_selection_each","callback","j","m","group","d3_selection_enter","selection","d3_selection_enterPrototype","d3_selection_enterInsertBefore","enter","i0","j0","update","d3_selection_on","capture","onRemove","removeEventListener","$","onAdd","wrap","d3_array","call","addEventListener","removeAll","match","d3_selection_onListener","filter","d3_selection_onFilters","d3_selection_onFilter","o","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","click","w","select","d3_event_dragSelect","suppressClick","off","setTimeout","d3_mousePoint","container","changedTouches","svg","ownerSVGElement","createSVGPoint","point","d3_mouse_bug44083","window","scrollX","scrollY","append","position","top","margin","padding","border","ctm","getScreenCTM","f","pageX","y","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","d3_sgn","d3_cross2d","d3_acos","π","Math","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","sin","d3_color","d3_hsl","h","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","v","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","rgb","r","g","d3_hcl_lab","cos","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","sqrt","d3_xyz_lab","pow","d3_rgbNumber","d3_rgbString","d3_rgb_hex","max","toString","min","format","hsl","color","exec","toLowerCase","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","respond","result","status","request","d3_xhrHasResponse","xhr","error","load","headers","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","forEach","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","responseText","d3_timer","delay","then","Date","now","time","timer","t","d3_timer_queueTail","d3_timer_queueHead","d3_timer_interval","d3_timer_timeout","clearTimeout","d3_timer_frame","d3_timer_step","d3_timer_mark","d3_timer_sweep","isFinite","t0","t1","Infinity","d3_format_precision","p","ceil","log","LN10","d3_formatPrefix","abs","scale","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","width","substring","reverse","join","specifier","d3_format_re","fill","align","sign","zfill","comma","precision","prefix","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","before","after","lastIndexOf","Array","d3_date_utc","UTC","d3_time_interval","step","number","date","d0","d1","offset","d3_date","range","dt","times","range_utc","utc","floor","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","template","string","charCodeAt","d3_time_formatPads","d3_time_formats","parse","H","M","S","L","Z","d3_time_parse","localZ","setFullYear","W","getDay","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","multi","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","A","getMonth","B","d3_time_formatPad","getDate","getHours","I","d3_time","dayOfYear","getMilliseconds","getMinutes","getSeconds","sundayOfYear","mondayOfYear","getFullYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","names","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","hasOwnProperty","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","u","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","y0","z0","x0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cx","cy","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","compose","invert","d3_true","d3_geo_clipPolygon","segments","clipStartInside","interpolate","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","sort","d3_geo_clipPolygonLinkCircular","entry","points","start","current","isSubject","array","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","pointLine","line","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","buffer","pop","polygon","polygonStarted","shift","d3_geo_clipSegmentLength1","rotatedClipStart","merge","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","lines","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","from","to","direction","meridian","parallel","meridianNormal","polarAngle","winding","reset","point0","antimeridian","τ","arc","intersection","φarc","d3_geo_clipCircle","radius","visible","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","x1","y1","ax","ay","bx","by","dx","dy","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","a1","linePoint","first","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","C","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","context","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","depth","d2","δ2","φ2","λ2","x2","y2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","center","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","translate","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","angle","PI","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","F","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","circle","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","previous","P","next","N","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","insert","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","extent","cell","iHalfEdge","halfEdges","nHalfEdges","end","cells","d3_geom_voronoiCells","iCell","prepare","splice","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","nodes","d3_geom_quadtreeVisit","sx","sy","children","d3_geom_quadtreeFind","root","closestPoint","minDistance2","find","distance2","xm","ym","below","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","index","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransformPop","d3_interpolateTranslate","ta","tb","d3_interpolateRotate","ra","rb","d3_interpolateSkew","wa","wb","d3_interpolateScale","ka","kb","d3_interpolateTransform","transform","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","random","pointCharge","d3_layout_hierarchyRebind","hierarchy","links","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","reduce","d3_layout_stackSum","d3_layout_histogramBinSturges","values","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","domain","stop","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","i1","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","bisect","d3_scale_linear","clamp","rescale","linear","input","Number","rangeRound","ticks","d3_scale_linearTicks","tickFormat","d3_scale_linearTickFormat","d3_scale_linearNice","copy","d3_scale_linearRebind","d3_scale_linearTickRange","span","err","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","steps","rangeBand","xi","has","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","identity","d3_zero","d3_svg_arcInnerRadius","innerRadius","d3_svg_arcOuterRadius","outerRadius","d3_svg_arcStartAngle","startAngle","d3_svg_arcEndAngle","endAngle","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","path","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","activeId","active","count","interrupt","d3_transition","id","d3_transitionPrototype","d3_transition_tween","tween","d3_transition_text","textContent","d3_transitionNamespace","d3_transitionNode","inherit","schedule","elapsed","transition","cancelId","cancel","tick","tweens","ease","duration","d3_svg_axisX","attr","d3_svg_axisY","d3_time_formatIsoNative","toISOString","d3_time_scale","methods","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","interval","skip","skipped","d3_json","JSON","d3_html","d3_document","createRange","selectNode","body","createContextualFragment","version","d3_arraySlice","list","childNodes","nodeType","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","ascending","descending","sum","mean","median","numbers","variance","deviation","d3_bisect","bisectLeft","bisectRight","bisector","shuffle","permute","indexes","permutes","pairs","transpose","matrix","row","zip","entries","arrays","merged","Error","isArray","empty","nest","mapType","rollup","sortValues","keyValue","setter","valuesByKey","sortKey","sortKeys","keyMap","order","behavior","d3_requote_re","__proto__","property","querySelector","querySelectorAll","d3_selectMatcher","matches","Sizzle","matchesSelector","subgroup","subnode","subgroups","selectAll","d3_nsPrefix","xhtml","xlink","xml","xmlns","getAttributeNS","each","classed","contains","getComputedStyle","getPropertyValue","text","html","innerHTML","appendChild","insertBefore","bind","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","exit","datum","nextSibling","args","upgroup","mouseenter","mouseleave","mouse","navigator","userAgent","touch","touches","drag","mousedown","touchstart","dragstart","move","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","that","correspondingElement","origin","τε","SQRT2","ρ2","ρ4","interpolateZoom","ux0","uy0","w0","ux1","uy1","w1","coshr0","zoom","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","view","scaleTo","scaleExtent","translateTo","zoomTo","__chart__","center0","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","scale0","locations0","started","touchmove","touchend","targets","changed","touchtime","distance0","l0","l1","distance1","scale1","zoomName","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","d3_hslPrototype","brighter","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","typedResponse","formatRow","formatValue","reFormat","delimiterCode","parseRows","Function","stringify","token","EOF","eol","EOL","rows","formatRows","fieldSet","fields","field","csv","tsv","flush","d3_formatPrefixes","String","fromCharCode","toPrecision","toExponential","toFixed","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","getTime","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","day","years","week","sunday","weeks","weekOfYear","-","0","numberFormat","timeFormat","d3_locale_enUS","geo","d3_adderTemp","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","centroid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","vertices","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","s0","delaunay","quadtree","nx","ny","insertChild","nPoint","xs","ys","x1_","y1_","x2_","y2_","compat","visit","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","layout","bundle","paths","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","force","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","weight","chargeDistance","theta","dimension","neighbors","candidates","stack","childs","revalue","partition","pie","arcs","d3_layout_pieSortByValue","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","bottom","tops","bottoms","default","silhouette","wiggle","s3","o0","expand","zero","histogram","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","nodeSize","sizeNode","tx","separation","node1","queue","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","pad","remaining","mode","worst","stickify","rmax","rmin","ratio","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","threshold","circleSegment","rp","ap","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","rc1","rc0","oc","kc","lc","t30","t12","t03","t21","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","self","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","attrTween","attrTweenNS","styleString","styleTween","inheritId","id0","id1","axis","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","tickSpacing","innerTickSize","tickPadding","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","orient","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSize","tickSubdivide","brush","brushstart","background","resize","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","xExtent","yExtent","keydown","keyCode","dragging","keyup","brushmove","altKey","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","ex","ey","d3_svg_brushResizes","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","json","responseXML","undefined","122","_interopRequireDefault","obj","__esModule","shouldSetupYDomain","typeConfig","dataFormat","modules","settings","applyYDomain","chartOptions","chartData","_reactAddonsUpdate2","yDomain","$set","_getNiceDomain2","_reactAddonsUpdate","_getNiceDomain","__REACT_HOT_LOADER__","register","123","_getSeriesDomain","_d","_getMultiSeriesDomain","mins","maxs","singleSeries","_makeNice","getNiceDomain","246","webpackContext","req","webpackContextResolve","./NVD3Adapter/index","resolve","267","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","constructor","writable","configurable","setPrototypeOf","_createClass","defineProperties","props","descriptor","protoProps","staticProps","_react","_react2","_reactNvd","_reactNvd2","_reactRedux","_actions","_actions2","_constants","_chartTypeUtils","_chartTypes","_applyDataFormatters","_applyDataFormatters2","_applyYDomain","NVD3Adapter","_Component","getPrototypeOf","setState","_buildStateFromProps","nextProps","refs","chartNode","rendering","wrapEl","RECEIVE_ERROR","console","message","nextState","options","_dataTransform","ref","widget","getChartTypeObject","config","nvd3Defaults","$apply","oldYDomain","chartType","state","Component","propTypes","PropTypes","oneOfType","bool","func","_default","connect","329","nv","dev","tooltip","utils","models","charts","logs","dom","oThis","aArgs","fToBind","fNOP","fBound","startTime","endTime","totalTime","deprecated","info","warn","render","render_start","renderLoop","chart","graph","generate","render_end","addGraph","write","fastdom","mutate","read","measure","interactiveGuideline","layer","mouseHandler","d3mouse","mouseX","mouseY","subtractMargin","mouseOutAnyReason","isMSIE","offsetX","offsetY","tagName","className","availableWidth","availableHeight","nvPointerEventsClass","elementMouseout","renderGuideLine","hidden","scaleIsOrdinal","xScale","pointXValue","elementIndex","elementMousemove","elementDblclick","elementClick","elementMouseDown","elementMouseUp","height","wrapEnter","svgContainer","guideLine","showGuideLine","NaNtoZero","ActiveXObject","hideDelay","interactiveBisect","searchVal","xAccessor","_xAccessor","_cmp","currentValue","nextIndex","nextValue","nearestValueIndex","yDistMax","indexToHighlight","delta","initTooltip","classes","nvtooltip","enabled","dataSeriesExists","newContent","contentGenerator","positionTooltip","snapDistance","lastPosition","headerEnabled","valueFormatter","headerFormatter","keyFormatter","table","theadEnter","tbodyEnter","trowEnter","highlight","total","percent","opacityScale","opacity","outerHTML","footer","pos","client","isObject","calcGravityOffset","tmp","offsetHeight","offsetWidth","clientWidth","clientHeight","gravityOffset","old_translate","new_translate","translateInterpolator","is_hidden","optionsFunc","_options","chartContainer","fixedTop","initOptions","windowSize","innerWidth","innerHeight","compatMode","isFunction","isDate","isNumber","windowResize","handler","getColor","defaultColor","color_scale","customTheme","dictionary","getKey","defaultColors","defIndex","pjax","content","href","fragment","replaceChild","history","pushState","calcApproxTextWidth","svgTextElem","fontSize","textLength","watchTransition","renderWatch","_duration","renderStack","model","__rendered","arg","renderEnd","every","deepExtend","dst","sources","srcObj","_setState","_getState","init","getter","fn","_set","calcTicksX","numTicks","numValues","stream_len","calcTicksY","initOption","_calls","_overrides","ops","getOwnPropertyNames","calls","inheritOptionsD3","oplist","_d3options","arrayUnique","item","symbolMap","inheritOptions","inherited","_inherited","d3ops","initSVG","nvd3-svg","sanitizeHeight","sanitizeWidth","noData","opt","noDataText","wrapTicks","word","words","lineNumber","lineHeight","tspan","getComputedTextLength","arrayEquals","array1","array2","fmt","axisLabel","axisLabelText","xLabelMargin","axisMaxMin","isOrdinal","showMaxMin","axisLabelDistance","maxTextWidth","textHeight","xTicks","rotateLabelsRule","rotateLabels","box","staggerLabels","rotateYLabel","maxMinRange","boxPlot","xDomain","getX","xRange","yData","getQ1","q3","getQ3","wl","getWl","wh","getWh","olItems","getOlItems","getOlValue","yScale","yRange","xScale0","yScale0","boxplots","boxEnter","hover","box_width","maxBoxWidth","box_left","box_right","endpoint","elementMouseover","getQ2","outliers","getOlColor","getOlLabel","label","Q1","Q2","Q3","whisker_low","whisker_high","q2","itemColor","outlierValue","outlierLabel","outlierColor","boxPlotChart","boxplot","showXAxis","xAxis","showYAxis","yAxis","beforeUpdate","gEnter","defsEnter","rightAlignYAxis","barsWrap","disabled","evt","tooltipContent","bullet","sortLabels","labels","lz","iA","iB","rangez","markerz","markers","markerLinez","markerLines","measurez","measures","rangeLabelz","rangeLabels","markerLabelz","markerLabels","markerLineLabelz","markerLineLabels","measureLabelz","measureLabels","forceX","il","rangeClassNames","legacyRangeClassNames","xp1","h3","markerData","marker","markerLinesData","defaultRangeLabels","bulletChart","title","subtitle","bulletWrap","candlestickBar","barWidth","padData","getLow","forceY","getHigh","chartClick","clipEdge","tickGroups","getOpen","getClose","getY","close","high","low","interactive","highlightPoint","pointIndex","isHoverOver","clearHighlights","cumulativeLineChart","dragStart","dragMove","updateZero","dragEnd","stateChange","indexLine","oldDuration","stateSetter","stateGetter","defaultState","indexDrag","rescaleY","seriesDomains","initialDomain","completeDomain","indexify","interactivePointerEvents","showLegend","legend","showControls","controlsData","controls","rightAlign","tempDisabled","useInteractiveGuideline","interactiveLayer","display","linesWrap","seriesIndex","avgLineData","average","avgLines","getAvgLineY","yVal","_ticks","newState","singlePoint","pointXLocation","allData","yValue","domainExtent","xValue","idx","indexifyYGetter","indexValue","noErrorCheck","updateState","useVoronoi","discreteBar","seriesData","showValues","bars","barsEnter","element","stopPropagation","elementDblClick","valueFormat","rectClass","discreteBarChart","discretebar","wrapLabels","distribution","naxis","distWrap","dist","getData","focus","resizePath","updateBrushBG","brushExtent","brushBG","leftWidth","rightWidth","onBrush","contentWrap","brushBGenter","gBrush","pointActive","xTickFormat","yTickFormat","forceDirectedGraph","nodeFieldSet","Set","linkDist","nodeColor","linkExtras","nodeExtras","furiousLegend","setTextColor","vers","expanded","disengaged","setBGColor","seriesShape","seriesEnter","seriesCheckbox","seriesText","legendMouseover","legendMouseout","legendClick","radioButtonMode","userDisabled","engaged","legendDblclick","versPadding","seriesWidths","legendText","maxKeyLength","trimmedKey","nodeTextLength","seriesPerRow","legendWidth","columnWidths","prev","cur","xPositions","curX","xpos","ypos","newxpos","maxwidth","historicalBar","rval","historicalBarChart","bar_model","transitionDuration","tooltipHide","ohlcBarChart","ohlcBar","candlestickBarChart","setBGOpacity","seriesBG","scatter","scatterWrap","strokeWidth","fillOpacity","areaPaths","isArea","linePaths","pointSize","pointDomain","lineChart","updateXAxis","updateYAxis","focusLinesWrap","disableTooltip","focusEnable","focusEnter","legendPosition","currentValues","pointYValue","defaultValueFormatter","yPos","x2Axis","y2Axis","focusHeight","focusShowAxisX","focusShowAxisY","focusMargin","lineWithFocusChart","linePlusBarChart","availableHeight2","availableHeight1","bar","focusBarsWrap","dataBars","allDisabled","dataLines","dataLine","switchYAxisOrder","y1Axis","barsOpacity","linesOpacity","y1Opacity","y2Opacity","margin2","lines2","bars2","y4","series1","series2","contextEnter","legendXPosition","originalKey","legendRightAxisHint","legendLeftAxisHint","bars2Wrap","lines2Wrap","y3Axis","y4Axis","getBarsAxis","main","getLinesAxis","multiBar","nonStackableCount","hideable","stacked","parsed","stackOffset","nonStackable","nonStackableSeries","posBase","negBase","groupSpacing","exitTransition","last_datalength","barColor","barSelection","multiBarChart","multibar","controlWidth","controlLabels","grouped","getTranslate","staggerUp","staggerDown","totalInBetweenTicks","reduceXTicks","multiBarHorizontal","valuePadding","getYerr","xerr","yerr","showBarLabels","yErr","multiBarHorizontalChart","multiChart","mouseover_line","yaxis","yAxis2","yAxis1","mouseover_scatter","mouseover_stack","stack1","mouseover_bar","bars1","serieIndex","dataLines1","dataLines2","dataScatters1","dataScatters2","dataBars1","dataBars2","dataStack1","dataStack2","color_array","lines1","scatters1","scatters2","stack2","lines1Wrap","scatters1Wrap","bars1Wrap","stack1Wrap","scatters2Wrap","stack2Wrap","extraValue1","aVal","extraValue2","yScale1","yDomain1","yScale2","yDomain2","stackedArea","parallelCoordinates","enabledDimensions","displayMissingValuesline","axisWithUndefinedValues","newscale","missingValuesline","missingValueslineText","restoreBrush","filters","brushDomain","hasOnlyNaN","oldDomainMaxValue","hasNaN","dimensions","updateTicks","displayBrush","actives","dimensionNames","extents","foreground","isActive","hasActiveBrush","brushEnd","currentTicks","__origin__","dimensionPosition","currentPosition","dimensionsOrder","newData","val","dataValues","dimensionData","onlyUndefinedValues","lineTension","axisDrag","lineData","undefinedValuesLabel","dimensionsEnter","formerActive","activeChanged","dimensionFormats","parallelCoordinatesChart","originalPosition","parallelCoordinatesWrap","isSorted","nanValue","str","tp","dim","dd","arcTween","donut","_current","arcsRadiusOuter","arcsRadiusInner","arcsRadius","outer","inner","donutRatio","growOnHover","g_pie","arcsOver","arcOver","titleOffset","slices","pieLabels","ae","showLabels","labelsArc","labelsOutside","labelSunbeamLayout","rotateAngle","labelLocationHash","avgHeight","avgWidth","createHashKey","getSlicePercentage","labelThreshold","hashKey","labelType","pieLabelsOutside","donutLabelsOutside","labelFormat","pieChart","pieWrap","showTooltipPercent","getCache","cache","_caches","getDiffs","diffs","updateInteractiveLayer","needsUpdate","pX","pY","pointArray","pointPaths","vPointPaths","showVoronoi","clipVoronoi","pointClips","clipRadius","mouseEventCallback","mDispatch","scrollTop","pageYOffset","scrollLeft","pageXOffset","relativePos","logScale","sizeDomain","getSize","padDataOuter","forceSize","sizeRange","_sizeRange_def","scaleDiff","getShape","titles","interactiveUpdateDelay","timeoutID","shape","notActive","pointScale","pointRange","forcePoint","pointShape","scatterChart","showDistX","distX","showDistY","distY","regWrap","regLine","intercept","slope","sparkline","yValues","maxPoint","minPoint","currentPoint","showMinMaxPoints","showCurrentPoint","animate","sparklinePlus","updateValueLine","paused","hoverValue","hoverEnter","sparklineHover","getClosestIndex","closestIndex","sparklineWrap","showLastValue","valueWrap","rightAlignValue","alignValue","dataRaw","aseries","dataFiltered","zeroArea","areaMouseover","areaMouseout","areaClick","d3_stackedOffset_stackPercent","stackData","stackedAreaChart","currentFormat","oldYTickFormat","percentFormatter","stackedWrap","metaKey","stack_percent","controlOptions","valueSum","allNullValues","tooltipValue","showTotalInTooltip","stackedY0","stackedY","totalLabel","oldValueFormatter","stackedAreaWithFocusChart","sunburst","rotationToAvoidUpsideDown","centerAngle","computeCenterAngle","computeNodePercentage","labelThresholdMatched","arcTweenZoom","xd","yd","yr","arcTweenUpdate","ipo","updatePrevPosition","prevPositions","pP","storeRetrievePrevPositions","zoomClick","arcText","getBBox","modes","cG","cGE","groupColorByParent","sunburstChart","354","loaded","O","E","renderChart","isCallable","ready","resizeHandler","renderStart","parsedProps","bindFunctions","getValueFunction","pick","propsByPrefix","configureComponents","without","configure","isPlainObject","containerStyle","assign","__g","__e","Symbol","getKeys","getSymbols","isEnum","getProto","propertyIsEnumerable","getDesc","getOwnPropertyDescriptor","setDesc","setDescs","getNames","getOwnPropertySymbols","T","_k","V","J","K","for","keyFor","useSetter","useSimple","check","substr","includes","negate","filterObject"],"mappings":"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","file":"0.b5cba9f.chunk.js","sourcesContent":["simplechartJsonp([0],{\n\n/***/ 78:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {\n\t  var d3 = {\n\t    version: \"3.5.17\"\n\t  };\n\t  var d3_arraySlice = [].slice, d3_array = function(list) {\n\t    return d3_arraySlice.call(list);\n\t  };\n\t  var d3_document = this.document;\n\t  function d3_documentElement(node) {\n\t    return node && (node.ownerDocument || node.document || node).documentElement;\n\t  }\n\t  function d3_window(node) {\n\t    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n\t  }\n\t  if (d3_document) {\n\t    try {\n\t      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n\t    } catch (e) {\n\t      d3_array = function(list) {\n\t        var i = list.length, array = new Array(i);\n\t        while (i--) array[i] = list[i];\n\t        return array;\n\t      };\n\t    }\n\t  }\n\t  if (!Date.now) Date.now = function() {\n\t    return +new Date();\n\t  };\n\t  if (d3_document) {\n\t    try {\n\t      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n\t    } catch (error) {\n\t      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n\t      d3_element_prototype.setAttribute = function(name, value) {\n\t        d3_element_setAttribute.call(this, name, value + \"\");\n\t      };\n\t      d3_element_prototype.setAttributeNS = function(space, local, value) {\n\t        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n\t      };\n\t      d3_style_prototype.setProperty = function(name, value, priority) {\n\t        d3_style_setProperty.call(this, name, value + \"\", priority);\n\t      };\n\t    }\n\t  }\n\t  d3.ascending = d3_ascending;\n\t  function d3_ascending(a, b) {\n\t    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t  }\n\t  d3.descending = function(a, b) {\n\t    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t  };\n\t  d3.min = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.max = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.extent = function(array, f) {\n\t    var i = -1, n = array.length, a, b, c;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    }\n\t    return [ a, c ];\n\t  };\n\t  function d3_number(x) {\n\t    return x === null ? NaN : +x;\n\t  }\n\t  function d3_numeric(x) {\n\t    return !isNaN(x);\n\t  }\n\t  d3.sum = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n\t    }\n\t    return s;\n\t  };\n\t  d3.mean = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1, j = n;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n\t    }\n\t    if (j) return s / j;\n\t  };\n\t  d3.quantile = function(values, p) {\n\t    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n\t    return e ? v + e * (values[h] - v) : v;\n\t  };\n\t  d3.median = function(array, f) {\n\t    var numbers = [], n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n\t    }\n\t    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n\t  };\n\t  d3.variance = function(array, f) {\n\t    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(array[i]))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    }\n\t    if (j > 1) return s / (j - 1);\n\t  };\n\t  d3.deviation = function() {\n\t    var v = d3.variance.apply(this, arguments);\n\t    return v ? Math.sqrt(v) : v;\n\t  };\n\t  function d3_bisector(compare) {\n\t    return {\n\t      left: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n\t        }\n\t        return lo;\n\t      },\n\t      right: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n\t        }\n\t        return lo;\n\t      }\n\t    };\n\t  }\n\t  var d3_bisect = d3_bisector(d3_ascending);\n\t  d3.bisectLeft = d3_bisect.left;\n\t  d3.bisect = d3.bisectRight = d3_bisect.right;\n\t  d3.bisector = function(f) {\n\t    return d3_bisector(f.length === 1 ? function(d, x) {\n\t      return d3_ascending(f(d), x);\n\t    } : f);\n\t  };\n\t  d3.shuffle = function(array, i0, i1) {\n\t    if ((m = arguments.length) < 3) {\n\t      i1 = array.length;\n\t      if (m < 2) i0 = 0;\n\t    }\n\t    var m = i1 - i0, t, i;\n\t    while (m) {\n\t      i = Math.random() * m-- | 0;\n\t      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n\t    }\n\t    return array;\n\t  };\n\t  d3.permute = function(array, indexes) {\n\t    var i = indexes.length, permutes = new Array(i);\n\t    while (i--) permutes[i] = array[indexes[i]];\n\t    return permutes;\n\t  };\n\t  d3.pairs = function(array) {\n\t    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n\t    return pairs;\n\t  };\n\t  d3.transpose = function(matrix) {\n\t    if (!(n = matrix.length)) return [];\n\t    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n\t      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n\t        row[j] = matrix[j][i];\n\t      }\n\t    }\n\t    return transpose;\n\t  };\n\t  function d3_transposeLength(d) {\n\t    return d.length;\n\t  }\n\t  d3.zip = function() {\n\t    return d3.transpose(arguments);\n\t  };\n\t  d3.keys = function(map) {\n\t    var keys = [];\n\t    for (var key in map) keys.push(key);\n\t    return keys;\n\t  };\n\t  d3.values = function(map) {\n\t    var values = [];\n\t    for (var key in map) values.push(map[key]);\n\t    return values;\n\t  };\n\t  d3.entries = function(map) {\n\t    var entries = [];\n\t    for (var key in map) entries.push({\n\t      key: key,\n\t      value: map[key]\n\t    });\n\t    return entries;\n\t  };\n\t  d3.merge = function(arrays) {\n\t    var n = arrays.length, m, i = -1, j = 0, merged, array;\n\t    while (++i < n) j += arrays[i].length;\n\t    merged = new Array(j);\n\t    while (--n >= 0) {\n\t      array = arrays[n];\n\t      m = array.length;\n\t      while (--m >= 0) {\n\t        merged[--j] = array[m];\n\t      }\n\t    }\n\t    return merged;\n\t  };\n\t  var abs = Math.abs;\n\t  d3.range = function(start, stop, step) {\n\t    if (arguments.length < 3) {\n\t      step = 1;\n\t      if (arguments.length < 2) {\n\t        stop = start;\n\t        start = 0;\n\t      }\n\t    }\n\t    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n\t    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n\t    start *= k, stop *= k, step *= k;\n\t    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n\t    return range;\n\t  };\n\t  function d3_range_integerScale(x) {\n\t    var k = 1;\n\t    while (x * k % 1) k *= 10;\n\t    return k;\n\t  }\n\t  function d3_class(ctor, properties) {\n\t    for (var key in properties) {\n\t      Object.defineProperty(ctor.prototype, key, {\n\t        value: properties[key],\n\t        enumerable: false\n\t      });\n\t    }\n\t  }\n\t  d3.map = function(object, f) {\n\t    var map = new d3_Map();\n\t    if (object instanceof d3_Map) {\n\t      object.forEach(function(key, value) {\n\t        map.set(key, value);\n\t      });\n\t    } else if (Array.isArray(object)) {\n\t      var i = -1, n = object.length, o;\n\t      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n\t    } else {\n\t      for (var key in object) map.set(key, object[key]);\n\t    }\n\t    return map;\n\t  };\n\t  function d3_Map() {\n\t    this._ = Object.create(null);\n\t  }\n\t  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n\t  d3_class(d3_Map, {\n\t    has: d3_map_has,\n\t    get: function(key) {\n\t      return this._[d3_map_escape(key)];\n\t    },\n\t    set: function(key, value) {\n\t      return this._[d3_map_escape(key)] = value;\n\t    },\n\t    remove: d3_map_remove,\n\t    keys: d3_map_keys,\n\t    values: function() {\n\t      var values = [];\n\t      for (var key in this._) values.push(this._[key]);\n\t      return values;\n\t    },\n\t    entries: function() {\n\t      var entries = [];\n\t      for (var key in this._) entries.push({\n\t        key: d3_map_unescape(key),\n\t        value: this._[key]\n\t      });\n\t      return entries;\n\t    },\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n\t    }\n\t  });\n\t  function d3_map_escape(key) {\n\t    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n\t  }\n\t  function d3_map_unescape(key) {\n\t    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n\t  }\n\t  function d3_map_has(key) {\n\t    return d3_map_escape(key) in this._;\n\t  }\n\t  function d3_map_remove(key) {\n\t    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n\t  }\n\t  function d3_map_keys() {\n\t    var keys = [];\n\t    for (var key in this._) keys.push(d3_map_unescape(key));\n\t    return keys;\n\t  }\n\t  function d3_map_size() {\n\t    var size = 0;\n\t    for (var key in this._) ++size;\n\t    return size;\n\t  }\n\t  function d3_map_empty() {\n\t    for (var key in this._) return false;\n\t    return true;\n\t  }\n\t  d3.nest = function() {\n\t    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n\t    function map(mapType, array, depth) {\n\t      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n\t      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n\t      while (++i < n) {\n\t        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n\t          values.push(object);\n\t        } else {\n\t          valuesByKey.set(keyValue, [ object ]);\n\t        }\n\t      }\n\t      if (mapType) {\n\t        object = mapType();\n\t        setter = function(keyValue, values) {\n\t          object.set(keyValue, map(mapType, values, depth));\n\t        };\n\t      } else {\n\t        object = {};\n\t        setter = function(keyValue, values) {\n\t          object[keyValue] = map(mapType, values, depth);\n\t        };\n\t      }\n\t      valuesByKey.forEach(setter);\n\t      return object;\n\t    }\n\t    function entries(map, depth) {\n\t      if (depth >= keys.length) return map;\n\t      var array = [], sortKey = sortKeys[depth++];\n\t      map.forEach(function(key, keyMap) {\n\t        array.push({\n\t          key: key,\n\t          values: entries(keyMap, depth)\n\t        });\n\t      });\n\t      return sortKey ? array.sort(function(a, b) {\n\t        return sortKey(a.key, b.key);\n\t      }) : array;\n\t    }\n\t    nest.map = function(array, mapType) {\n\t      return map(mapType, array, 0);\n\t    };\n\t    nest.entries = function(array) {\n\t      return entries(map(d3.map, array, 0), 0);\n\t    };\n\t    nest.key = function(d) {\n\t      keys.push(d);\n\t      return nest;\n\t    };\n\t    nest.sortKeys = function(order) {\n\t      sortKeys[keys.length - 1] = order;\n\t      return nest;\n\t    };\n\t    nest.sortValues = function(order) {\n\t      sortValues = order;\n\t      return nest;\n\t    };\n\t    nest.rollup = function(f) {\n\t      rollup = f;\n\t      return nest;\n\t    };\n\t    return nest;\n\t  };\n\t  d3.set = function(array) {\n\t    var set = new d3_Set();\n\t    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n\t    return set;\n\t  };\n\t  function d3_Set() {\n\t    this._ = Object.create(null);\n\t  }\n\t  d3_class(d3_Set, {\n\t    has: d3_map_has,\n\t    add: function(key) {\n\t      this._[d3_map_escape(key += \"\")] = true;\n\t      return key;\n\t    },\n\t    remove: d3_map_remove,\n\t    values: d3_map_keys,\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key));\n\t    }\n\t  });\n\t  d3.behavior = {};\n\t  function d3_identity(d) {\n\t    return d;\n\t  }\n\t  d3.rebind = function(target, source) {\n\t    var i = 1, n = arguments.length, method;\n\t    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n\t    return target;\n\t  };\n\t  function d3_rebind(target, source, method) {\n\t    return function() {\n\t      var value = method.apply(source, arguments);\n\t      return value === source ? target : value;\n\t    };\n\t  }\n\t  function d3_vendorSymbol(object, name) {\n\t    if (name in object) return name;\n\t    name = name.charAt(0).toUpperCase() + name.slice(1);\n\t    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n\t      var prefixName = d3_vendorPrefixes[i] + name;\n\t      if (prefixName in object) return prefixName;\n\t    }\n\t  }\n\t  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n\t  function d3_noop() {}\n\t  d3.dispatch = function() {\n\t    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    return dispatch;\n\t  };\n\t  function d3_dispatch() {}\n\t  d3_dispatch.prototype.on = function(type, listener) {\n\t    var i = type.indexOf(\".\"), name = \"\";\n\t    if (i >= 0) {\n\t      name = type.slice(i + 1);\n\t      type = type.slice(0, i);\n\t    }\n\t    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n\t    if (arguments.length === 2) {\n\t      if (listener == null) for (type in this) {\n\t        if (this.hasOwnProperty(type)) this[type].on(name, null);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t  function d3_dispatch_event(dispatch) {\n\t    var listeners = [], listenerByName = new d3_Map();\n\t    function event() {\n\t      var z = listeners, i = -1, n = z.length, l;\n\t      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n\t      return dispatch;\n\t    }\n\t    event.on = function(name, listener) {\n\t      var l = listenerByName.get(name), i;\n\t      if (arguments.length < 2) return l && l.on;\n\t      if (l) {\n\t        l.on = null;\n\t        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n\t        listenerByName.remove(name);\n\t      }\n\t      if (listener) listeners.push(listenerByName.set(name, {\n\t        on: listener\n\t      }));\n\t      return dispatch;\n\t    };\n\t    return event;\n\t  }\n\t  d3.event = null;\n\t  function d3_eventPreventDefault() {\n\t    d3.event.preventDefault();\n\t  }\n\t  function d3_eventSource() {\n\t    var e = d3.event, s;\n\t    while (s = e.sourceEvent) e = s;\n\t    return e;\n\t  }\n\t  function d3_eventDispatch(target) {\n\t    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    dispatch.of = function(thiz, argumentz) {\n\t      return function(e1) {\n\t        try {\n\t          var e0 = e1.sourceEvent = d3.event;\n\t          e1.target = target;\n\t          d3.event = e1;\n\t          dispatch[e1.type].apply(thiz, argumentz);\n\t        } finally {\n\t          d3.event = e0;\n\t        }\n\t      };\n\t    };\n\t    return dispatch;\n\t  }\n\t  d3.requote = function(s) {\n\t    return s.replace(d3_requote_re, \"\\\\$&\");\n\t  };\n\t  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n\t    object.__proto__ = prototype;\n\t  } : function(object, prototype) {\n\t    for (var property in prototype) object[property] = prototype[property];\n\t  };\n\t  function d3_selection(groups) {\n\t    d3_subclass(groups, d3_selectionPrototype);\n\t    return groups;\n\t  }\n\t  var d3_select = function(s, n) {\n\t    return n.querySelector(s);\n\t  }, d3_selectAll = function(s, n) {\n\t    return n.querySelectorAll(s);\n\t  }, d3_selectMatches = function(n, s) {\n\t    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n\t    d3_selectMatches = function(n, s) {\n\t      return d3_selectMatcher.call(n, s);\n\t    };\n\t    return d3_selectMatches(n, s);\n\t  };\n\t  if (typeof Sizzle === \"function\") {\n\t    d3_select = function(s, n) {\n\t      return Sizzle(s, n)[0] || null;\n\t    };\n\t    d3_selectAll = Sizzle;\n\t    d3_selectMatches = Sizzle.matchesSelector;\n\t  }\n\t  d3.selection = function() {\n\t    return d3.select(d3_document.documentElement);\n\t  };\n\t  var d3_selectionPrototype = d3.selection.prototype = [];\n\t  d3_selectionPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, group, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n\t          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selector(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_select(selector, this);\n\t    };\n\t  }\n\t  d3_selectionPrototype.selectAll = function(selector) {\n\t    var subgroups = [], subgroup, node;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n\t          subgroup.parentNode = node;\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selectorAll(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_selectAll(selector, this);\n\t    };\n\t  }\n\t  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n\t  var d3_nsPrefix = {\n\t    svg: \"http://www.w3.org/2000/svg\",\n\t    xhtml: d3_nsXhtml,\n\t    xlink: \"http://www.w3.org/1999/xlink\",\n\t    xml: \"http://www.w3.org/XML/1998/namespace\",\n\t    xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t  };\n\t  d3.ns = {\n\t    prefix: d3_nsPrefix,\n\t    qualify: function(name) {\n\t      var i = name.indexOf(\":\"), prefix = name;\n\t      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n\t      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n\t        space: d3_nsPrefix[prefix],\n\t        local: name\n\t      } : name;\n\t    }\n\t  };\n\t  d3_selectionPrototype.attr = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node();\n\t        name = d3.ns.qualify(name);\n\t        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n\t      }\n\t      for (value in name) this.each(d3_selection_attr(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_attr(name, value));\n\t  };\n\t  function d3_selection_attr(name, value) {\n\t    name = d3.ns.qualify(name);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrConstant() {\n\t      this.setAttribute(name, value);\n\t    }\n\t    function attrConstantNS() {\n\t      this.setAttributeNS(name.space, name.local, value);\n\t    }\n\t    function attrFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n\t    }\n\t    function attrFunctionNS() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n\t    }\n\t    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n\t  }\n\t  function d3_collapse(s) {\n\t    return s.trim().replace(/\\s+/g, \" \");\n\t  }\n\t  d3_selectionPrototype.classed = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n\t        if (value = node.classList) {\n\t          while (++i < n) if (!value.contains(name[i])) return false;\n\t        } else {\n\t          value = node.getAttribute(\"class\");\n\t          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n\t        }\n\t        return true;\n\t      }\n\t      for (value in name) this.each(d3_selection_classed(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_classed(name, value));\n\t  };\n\t  function d3_selection_classedRe(name) {\n\t    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n\t  }\n\t  function d3_selection_classes(name) {\n\t    return (name + \"\").trim().split(/^|\\s+/);\n\t  }\n\t  function d3_selection_classed(name, value) {\n\t    name = d3_selection_classes(name).map(d3_selection_classedName);\n\t    var n = name.length;\n\t    function classedConstant() {\n\t      var i = -1;\n\t      while (++i < n) name[i](this, value);\n\t    }\n\t    function classedFunction() {\n\t      var i = -1, x = value.apply(this, arguments);\n\t      while (++i < n) name[i](this, x);\n\t    }\n\t    return typeof value === \"function\" ? classedFunction : classedConstant;\n\t  }\n\t  function d3_selection_classedName(name) {\n\t    var re = d3_selection_classedRe(name);\n\t    return function(node, value) {\n\t      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n\t      var c = node.getAttribute(\"class\") || \"\";\n\t      if (value) {\n\t        re.lastIndex = 0;\n\t        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n\t      } else {\n\t        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n\t      }\n\t    };\n\t  }\n\t  d3_selectionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n\t        return this;\n\t      }\n\t      if (n < 2) {\n\t        var node = this.node();\n\t        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n\t      }\n\t      priority = \"\";\n\t    }\n\t    return this.each(d3_selection_style(name, value, priority));\n\t  };\n\t  function d3_selection_style(name, value, priority) {\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleConstant() {\n\t      this.style.setProperty(name, value, priority);\n\t    }\n\t    function styleFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n\t    }\n\t    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n\t  }\n\t  d3_selectionPrototype.property = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") return this.node()[name];\n\t      for (value in name) this.each(d3_selection_property(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_property(name, value));\n\t  };\n\t  function d3_selection_property(name, value) {\n\t    function propertyNull() {\n\t      delete this[name];\n\t    }\n\t    function propertyConstant() {\n\t      this[name] = value;\n\t    }\n\t    function propertyFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) delete this[name]; else this[name] = x;\n\t    }\n\t    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n\t  }\n\t  d3_selectionPrototype.text = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.textContent = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.textContent = \"\";\n\t    } : function() {\n\t      this.textContent = value;\n\t    }) : this.node().textContent;\n\t  };\n\t  d3_selectionPrototype.html = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.innerHTML = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.innerHTML = \"\";\n\t    } : function() {\n\t      this.innerHTML = value;\n\t    }) : this.node().innerHTML;\n\t  };\n\t  d3_selectionPrototype.append = function(name) {\n\t    name = d3_selection_creator(name);\n\t    return this.select(function() {\n\t      return this.appendChild(name.apply(this, arguments));\n\t    });\n\t  };\n\t  function d3_selection_creator(name) {\n\t    function create() {\n\t      var document = this.ownerDocument, namespace = this.namespaceURI;\n\t      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n\t    }\n\t    function createNS() {\n\t      return this.ownerDocument.createElementNS(name.space, name.local);\n\t    }\n\t    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n\t  }\n\t  d3_selectionPrototype.insert = function(name, before) {\n\t    name = d3_selection_creator(name);\n\t    before = d3_selection_selector(before);\n\t    return this.select(function() {\n\t      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n\t    });\n\t  };\n\t  d3_selectionPrototype.remove = function() {\n\t    return this.each(d3_selectionRemove);\n\t  };\n\t  function d3_selectionRemove() {\n\t    var parent = this.parentNode;\n\t    if (parent) parent.removeChild(this);\n\t  }\n\t  d3_selectionPrototype.data = function(value, key) {\n\t    var i = -1, n = this.length, group, node;\n\t    if (!arguments.length) {\n\t      value = new Array(n = (group = this[0]).length);\n\t      while (++i < n) {\n\t        if (node = group[i]) {\n\t          value[i] = node.__data__;\n\t        }\n\t      }\n\t      return value;\n\t    }\n\t    function bind(group, groupData) {\n\t      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n\t      if (key) {\n\t        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n\t        for (i = -1; ++i < n; ) {\n\t          if (node = group[i]) {\n\t            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n\t              exitNodes[i] = node;\n\t            } else {\n\t              nodeByKeyValue.set(keyValue, node);\n\t            }\n\t            keyValues[i] = keyValue;\n\t          }\n\t        }\n\t        for (i = -1; ++i < m; ) {\n\t          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          } else if (node !== true) {\n\t            updateNodes[i] = node;\n\t            node.__data__ = nodeData;\n\t          }\n\t          nodeByKeyValue.set(keyValue, true);\n\t        }\n\t        for (i = -1; ++i < n; ) {\n\t          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n\t            exitNodes[i] = group[i];\n\t          }\n\t        }\n\t      } else {\n\t        for (i = -1; ++i < n0; ) {\n\t          node = group[i];\n\t          nodeData = groupData[i];\n\t          if (node) {\n\t            node.__data__ = nodeData;\n\t            updateNodes[i] = node;\n\t          } else {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          }\n\t        }\n\t        for (;i < m; ++i) {\n\t          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n\t        }\n\t        for (;i < n; ++i) {\n\t          exitNodes[i] = group[i];\n\t        }\n\t      }\n\t      enterNodes.update = updateNodes;\n\t      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n\t      enter.push(enterNodes);\n\t      update.push(updateNodes);\n\t      exit.push(exitNodes);\n\t    }\n\t    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n\t    if (typeof value === \"function\") {\n\t      while (++i < n) {\n\t        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        bind(group = this[i], value);\n\t      }\n\t    }\n\t    update.enter = function() {\n\t      return enter;\n\t    };\n\t    update.exit = function() {\n\t      return exit;\n\t    };\n\t    return update;\n\t  };\n\t  function d3_selection_dataNode(data) {\n\t    return {\n\t      __data__: data\n\t    };\n\t  }\n\t  d3_selectionPrototype.datum = function(value) {\n\t    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n\t  };\n\t  d3_selectionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_filter(selector) {\n\t    return function() {\n\t      return d3_selectMatches(this, selector);\n\t    };\n\t  }\n\t  d3_selectionPrototype.order = function() {\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n\t        if (node = group[i]) {\n\t          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t          next = node;\n\t        }\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.sort = function(comparator) {\n\t    comparator = d3_selection_sortComparator.apply(this, arguments);\n\t    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n\t    return this.order();\n\t  };\n\t  function d3_selection_sortComparator(comparator) {\n\t    if (!arguments.length) comparator = d3_ascending;\n\t    return function(a, b) {\n\t      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n\t    };\n\t  }\n\t  d3_selectionPrototype.each = function(callback) {\n\t    return d3_selection_each(this, function(node, i, j) {\n\t      callback.call(node, node.__data__, i, j);\n\t    });\n\t  };\n\t  function d3_selection_each(groups, callback) {\n\t    for (var j = 0, m = groups.length; j < m; j++) {\n\t      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n\t        if (node = group[i]) callback(node, i, j);\n\t      }\n\t    }\n\t    return groups;\n\t  }\n\t  d3_selectionPrototype.call = function(callback) {\n\t    var args = d3_array(arguments);\n\t    callback.apply(args[0] = this, args);\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.empty = function() {\n\t    return !this.node();\n\t  };\n\t  d3_selectionPrototype.node = function() {\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        var node = group[i];\n\t        if (node) return node;\n\t      }\n\t    }\n\t    return null;\n\t  };\n\t  d3_selectionPrototype.size = function() {\n\t    var n = 0;\n\t    d3_selection_each(this, function() {\n\t      ++n;\n\t    });\n\t    return n;\n\t  };\n\t  function d3_selection_enter(selection) {\n\t    d3_subclass(selection, d3_selection_enterPrototype);\n\t    return selection;\n\t  }\n\t  var d3_selection_enterPrototype = [];\n\t  d3.selection.enter = d3_selection_enter;\n\t  d3.selection.enter.prototype = d3_selection_enterPrototype;\n\t  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n\t  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n\t  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n\t  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n\t  d3_selection_enterPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, upgroup, group, node;\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      upgroup = (group = this[j]).update;\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = group.parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n\t          subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  d3_selection_enterPrototype.insert = function(name, before) {\n\t    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n\t    return d3_selectionPrototype.insert.call(this, name, before);\n\t  };\n\t  function d3_selection_enterInsertBefore(enter) {\n\t    var i0, j0;\n\t    return function(d, i, j) {\n\t      var group = enter[j].update, n = group.length, node;\n\t      if (j != j0) j0 = j, i0 = 0;\n\t      if (i >= i0) i0 = i + 1;\n\t      while (!(node = group[i0]) && ++i0 < n) ;\n\t      return node;\n\t    };\n\t  }\n\t  d3.select = function(node) {\n\t    var group;\n\t    if (typeof node === \"string\") {\n\t      group = [ d3_select(node, d3_document) ];\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = [ node ];\n\t      group.parentNode = d3_documentElement(node);\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3.selectAll = function(nodes) {\n\t    var group;\n\t    if (typeof nodes === \"string\") {\n\t      group = d3_array(d3_selectAll(nodes, d3_document));\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = d3_array(nodes);\n\t      group.parentNode = null;\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3_selectionPrototype.on = function(type, listener, capture) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof type !== \"string\") {\n\t        if (n < 2) listener = false;\n\t        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n\t        return this;\n\t      }\n\t      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n\t      capture = false;\n\t    }\n\t    return this.each(d3_selection_on(type, listener, capture));\n\t  };\n\t  function d3_selection_on(type, listener, capture) {\n\t    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n\t    if (i > 0) type = type.slice(0, i);\n\t    var filter = d3_selection_onFilters.get(type);\n\t    if (filter) type = filter, wrap = d3_selection_onFilter;\n\t    function onRemove() {\n\t      var l = this[name];\n\t      if (l) {\n\t        this.removeEventListener(type, l, l.$);\n\t        delete this[name];\n\t      }\n\t    }\n\t    function onAdd() {\n\t      var l = wrap(listener, d3_array(arguments));\n\t      onRemove.call(this);\n\t      this.addEventListener(type, this[name] = l, l.$ = capture);\n\t      l._ = listener;\n\t    }\n\t    function removeAll() {\n\t      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n\t      for (var name in this) {\n\t        if (match = name.match(re)) {\n\t          var l = this[name];\n\t          this.removeEventListener(match[1], l, l.$);\n\t          delete this[name];\n\t        }\n\t      }\n\t    }\n\t    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n\t  }\n\t  var d3_selection_onFilters = d3.map({\n\t    mouseenter: \"mouseover\",\n\t    mouseleave: \"mouseout\"\n\t  });\n\t  if (d3_document) {\n\t    d3_selection_onFilters.forEach(function(k) {\n\t      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n\t    });\n\t  }\n\t  function d3_selection_onListener(listener, argumentz) {\n\t    return function(e) {\n\t      var o = d3.event;\n\t      d3.event = e;\n\t      argumentz[0] = this.__data__;\n\t      try {\n\t        listener.apply(this, argumentz);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t  }\n\t  function d3_selection_onFilter(listener, argumentz) {\n\t    var l = d3_selection_onListener(listener, argumentz);\n\t    return function(e) {\n\t      var target = this, related = e.relatedTarget;\n\t      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n\t        l.call(target, e);\n\t      }\n\t    };\n\t  }\n\t  var d3_event_dragSelect, d3_event_dragId = 0;\n\t  function d3_event_dragSuppress(node) {\n\t    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n\t    if (d3_event_dragSelect == null) {\n\t      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n\t    }\n\t    if (d3_event_dragSelect) {\n\t      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n\t      style[d3_event_dragSelect] = \"none\";\n\t    }\n\t    return function(suppressClick) {\n\t      w.on(name, null);\n\t      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n\t      if (suppressClick) {\n\t        var off = function() {\n\t          w.on(click, null);\n\t        };\n\t        w.on(click, function() {\n\t          d3_eventPreventDefault();\n\t          off();\n\t        }, true);\n\t        setTimeout(off, 0);\n\t      }\n\t    };\n\t  }\n\t  d3.mouse = function(container) {\n\t    return d3_mousePoint(container, d3_eventSource());\n\t  };\n\t  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n\t  function d3_mousePoint(container, e) {\n\t    if (e.changedTouches) e = e.changedTouches[0];\n\t    var svg = container.ownerSVGElement || container;\n\t    if (svg.createSVGPoint) {\n\t      var point = svg.createSVGPoint();\n\t      if (d3_mouse_bug44083 < 0) {\n\t        var window = d3_window(container);\n\t        if (window.scrollX || window.scrollY) {\n\t          svg = d3.select(\"body\").append(\"svg\").style({\n\t            position: \"absolute\",\n\t            top: 0,\n\t            left: 0,\n\t            margin: 0,\n\t            padding: 0,\n\t            border: \"none\"\n\t          }, \"important\");\n\t          var ctm = svg[0][0].getScreenCTM();\n\t          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n\t          svg.remove();\n\t        }\n\t      }\n\t      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n\t      point.y = e.clientY;\n\t      point = point.matrixTransform(container.getScreenCTM().inverse());\n\t      return [ point.x, point.y ];\n\t    }\n\t    var rect = container.getBoundingClientRect();\n\t    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n\t  }\n\t  d3.touch = function(container, touches, identifier) {\n\t    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n\t    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n\t      if ((touch = touches[i]).identifier === identifier) {\n\t        return d3_mousePoint(container, touch);\n\t      }\n\t    }\n\t  };\n\t  d3.behavior.drag = function() {\n\t    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n\t    function drag() {\n\t      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n\t    }\n\t    function dragstart(id, position, subject, move, end) {\n\t      return function() {\n\t        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n\t        if (origin) {\n\t          dragOffset = origin.apply(that, arguments);\n\t          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n\t        } else {\n\t          dragOffset = [ 0, 0 ];\n\t        }\n\t        dispatch({\n\t          type: \"dragstart\"\n\t        });\n\t        function moved() {\n\t          var position1 = position(parent, dragId), dx, dy;\n\t          if (!position1) return;\n\t          dx = position1[0] - position0[0];\n\t          dy = position1[1] - position0[1];\n\t          dragged |= dx | dy;\n\t          position0 = position1;\n\t          dispatch({\n\t            type: \"drag\",\n\t            x: position1[0] + dragOffset[0],\n\t            y: position1[1] + dragOffset[1],\n\t            dx: dx,\n\t            dy: dy\n\t          });\n\t        }\n\t        function ended() {\n\t          if (!position(parent, dragId)) return;\n\t          dragSubject.on(move + dragName, null).on(end + dragName, null);\n\t          dragRestore(dragged);\n\t          dispatch({\n\t            type: \"dragend\"\n\t          });\n\t        }\n\t      };\n\t    }\n\t    drag.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return drag;\n\t    };\n\t    return d3.rebind(drag, event, \"on\");\n\t  };\n\t  function d3_behavior_dragTouchId() {\n\t    return d3.event.changedTouches[0].identifier;\n\t  }\n\t  d3.touches = function(container, touches) {\n\t    if (arguments.length < 2) touches = d3_eventSource().touches;\n\t    return touches ? d3_array(touches).map(function(touch) {\n\t      var point = d3_mousePoint(container, touch);\n\t      point.identifier = touch.identifier;\n\t      return point;\n\t    }) : [];\n\t  };\n\t  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n\t  function d3_sgn(x) {\n\t    return x > 0 ? 1 : x < 0 ? -1 : 0;\n\t  }\n\t  function d3_cross2d(a, b, c) {\n\t    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t  }\n\t  function d3_acos(x) {\n\t    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n\t  }\n\t  function d3_asin(x) {\n\t    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n\t  }\n\t  function d3_sinh(x) {\n\t    return ((x = Math.exp(x)) - 1 / x) / 2;\n\t  }\n\t  function d3_cosh(x) {\n\t    return ((x = Math.exp(x)) + 1 / x) / 2;\n\t  }\n\t  function d3_tanh(x) {\n\t    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t  }\n\t  function d3_haversin(x) {\n\t    return (x = Math.sin(x / 2)) * x;\n\t  }\n\t  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n\t  d3.interpolateZoom = function(p0, p1) {\n\t    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n\t    if (d2 < ε2) {\n\t      S = Math.log(w1 / w0) / ρ;\n\t      i = function(t) {\n\t        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n\t      };\n\t    } else {\n\t      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n\t      S = (r1 - r0) / ρ;\n\t      i = function(t) {\n\t        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n\t        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n\t      };\n\t    }\n\t    i.duration = S * 1e3;\n\t    return i;\n\t  };\n\t  d3.behavior.zoom = function() {\n\t    var view = {\n\t      x: 0,\n\t      y: 0,\n\t      k: 1\n\t    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n\t    if (!d3_behavior_zoomWheel) {\n\t      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n\t      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return d3.event.wheelDelta;\n\t      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.detail;\n\t      }, \"MozMousePixelScroll\");\n\t    }\n\t    function zoom(g) {\n\t      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n\t    }\n\t    zoom.event = function(g) {\n\t      g.each(function() {\n\t        var dispatch = event.of(this, arguments), view1 = view;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.zoom\", function() {\n\t            view = this.__chart__ || {\n\t              x: 0,\n\t              y: 0,\n\t              k: 1\n\t            };\n\t            zoomstarted(dispatch);\n\t          }).tween(\"zoom:zoom\", function() {\n\t            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n\t            return function(t) {\n\t              var l = i(t), k = dx / l[2];\n\t              this.__chart__ = view = {\n\t                x: cx - l[0] * k,\n\t                y: cy - l[1] * k,\n\t                k: k\n\t              };\n\t              zoomed(dispatch);\n\t            };\n\t          }).each(\"interrupt.zoom\", function() {\n\t            zoomended(dispatch);\n\t          }).each(\"end.zoom\", function() {\n\t            zoomended(dispatch);\n\t          });\n\t        } else {\n\t          this.__chart__ = view;\n\t          zoomstarted(dispatch);\n\t          zoomed(dispatch);\n\t          zoomended(dispatch);\n\t        }\n\t      });\n\t    };\n\t    zoom.translate = function(_) {\n\t      if (!arguments.length) return [ view.x, view.y ];\n\t      view = {\n\t        x: +_[0],\n\t        y: +_[1],\n\t        k: view.k\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scale = function(_) {\n\t      if (!arguments.length) return view.k;\n\t      view = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: null\n\t      };\n\t      scaleTo(+_);\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scaleExtent = function(_) {\n\t      if (!arguments.length) return scaleExtent;\n\t      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.center = function(_) {\n\t      if (!arguments.length) return center;\n\t      center = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.duration = function(_) {\n\t      if (!arguments.length) return duration;\n\t      duration = +_;\n\t      return zoom;\n\t    };\n\t    zoom.x = function(z) {\n\t      if (!arguments.length) return x1;\n\t      x1 = z;\n\t      x0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    zoom.y = function(z) {\n\t      if (!arguments.length) return y1;\n\t      y1 = z;\n\t      y0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    function location(p) {\n\t      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n\t    }\n\t    function point(l) {\n\t      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n\t    }\n\t    function scaleTo(s) {\n\t      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n\t    }\n\t    function translateTo(p, l) {\n\t      l = point(l);\n\t      view.x += p[0] - l[0];\n\t      view.y += p[1] - l[1];\n\t    }\n\t    function zoomTo(that, p, l, k) {\n\t      that.__chart__ = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: view.k\n\t      };\n\t      scaleTo(Math.pow(2, k));\n\t      translateTo(center0 = p, l);\n\t      that = d3.select(that);\n\t      if (duration > 0) that = that.transition().duration(duration);\n\t      that.call(zoom.event);\n\t    }\n\t    function rescale() {\n\t      if (x1) x1.domain(x0.range().map(function(x) {\n\t        return (x - view.x) / view.k;\n\t      }).map(x0.invert));\n\t      if (y1) y1.domain(y0.range().map(function(y) {\n\t        return (y - view.y) / view.k;\n\t      }).map(y0.invert));\n\t    }\n\t    function zoomstarted(dispatch) {\n\t      if (!zooming++) dispatch({\n\t        type: \"zoomstart\"\n\t      });\n\t    }\n\t    function zoomed(dispatch) {\n\t      rescale();\n\t      dispatch({\n\t        type: \"zoom\",\n\t        scale: view.k,\n\t        translate: [ view.x, view.y ]\n\t      });\n\t    }\n\t    function zoomended(dispatch) {\n\t      if (!--zooming) dispatch({\n\t        type: \"zoomend\"\n\t      }), center0 = null;\n\t    }\n\t    function mousedowned() {\n\t      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n\t      d3_selection_interrupt.call(that);\n\t      zoomstarted(dispatch);\n\t      function moved() {\n\t        dragged = 1;\n\t        translateTo(d3.mouse(that), location0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        subject.on(mousemove, null).on(mouseup, null);\n\t        dragRestore(dragged);\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function touchstarted() {\n\t      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n\t      started();\n\t      zoomstarted(dispatch);\n\t      subject.on(mousedown, null).on(touchstart, started);\n\t      function relocate() {\n\t        var touches = d3.touches(that);\n\t        scale0 = view.k;\n\t        touches.forEach(function(t) {\n\t          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n\t        });\n\t        return touches;\n\t      }\n\t      function started() {\n\t        var target = d3.event.target;\n\t        d3.select(target).on(touchmove, moved).on(touchend, ended);\n\t        targets.push(target);\n\t        var changed = d3.event.changedTouches;\n\t        for (var i = 0, n = changed.length; i < n; ++i) {\n\t          locations0[changed[i].identifier] = null;\n\t        }\n\t        var touches = relocate(), now = Date.now();\n\t        if (touches.length === 1) {\n\t          if (now - touchtime < 500) {\n\t            var p = touches[0];\n\t            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n\t            d3_eventPreventDefault();\n\t          }\n\t          touchtime = now;\n\t        } else if (touches.length > 1) {\n\t          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n\t          distance0 = dx * dx + dy * dy;\n\t        }\n\t      }\n\t      function moved() {\n\t        var touches = d3.touches(that), p0, l0, p1, l1;\n\t        d3_selection_interrupt.call(that);\n\t        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n\t          p1 = touches[i];\n\t          if (l1 = locations0[p1.identifier]) {\n\t            if (l0) break;\n\t            p0 = p1, l0 = l1;\n\t          }\n\t        }\n\t        if (l1) {\n\t          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n\t          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n\t          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n\t          scaleTo(scale1 * scale0);\n\t        }\n\t        touchtime = null;\n\t        translateTo(p0, l0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        if (d3.event.touches.length) {\n\t          var changed = d3.event.changedTouches;\n\t          for (var i = 0, n = changed.length; i < n; ++i) {\n\t            delete locations0[changed[i].identifier];\n\t          }\n\t          for (var identifier in locations0) {\n\t            return void relocate();\n\t          }\n\t        }\n\t        d3.selectAll(targets).on(zoomName, null);\n\t        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n\t        dragRestore();\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function mousewheeled() {\n\t      var dispatch = event.of(this, arguments);\n\t      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n\t      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n\t      mousewheelTimer = setTimeout(function() {\n\t        mousewheelTimer = null;\n\t        zoomended(dispatch);\n\t      }, 50);\n\t      d3_eventPreventDefault();\n\t      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n\t      translateTo(center0, translate0);\n\t      zoomed(dispatch);\n\t    }\n\t    function dblclicked() {\n\t      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n\t      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n\t    }\n\t    return d3.rebind(zoom, event, \"on\");\n\t  };\n\t  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n\t  d3.color = d3_color;\n\t  function d3_color() {}\n\t  d3_color.prototype.toString = function() {\n\t    return this.rgb() + \"\";\n\t  };\n\t  d3.hsl = d3_hsl;\n\t  function d3_hsl(h, s, l) {\n\t    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n\t  }\n\t  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n\t  d3_hslPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, this.l / k);\n\t  };\n\t  d3_hslPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, k * this.l);\n\t  };\n\t  d3_hslPrototype.rgb = function() {\n\t    return d3_hsl_rgb(this.h, this.s, this.l);\n\t  };\n\t  function d3_hsl_rgb(h, s, l) {\n\t    var m1, m2;\n\t    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n\t    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n\t    l = l < 0 ? 0 : l > 1 ? 1 : l;\n\t    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n\t    m1 = 2 * l - m2;\n\t    function v(h) {\n\t      if (h > 360) h -= 360; else if (h < 0) h += 360;\n\t      if (h < 60) return m1 + (m2 - m1) * h / 60;\n\t      if (h < 180) return m2;\n\t      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n\t      return m1;\n\t    }\n\t    function vv(h) {\n\t      return Math.round(v(h) * 255);\n\t    }\n\t    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n\t  }\n\t  d3.hcl = d3_hcl;\n\t  function d3_hcl(h, c, l) {\n\t    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n\t  }\n\t  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n\t  d3_hclPrototype.brighter = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.darker = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.rgb = function() {\n\t    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n\t  };\n\t  function d3_hcl_lab(h, c, l) {\n\t    if (isNaN(h)) h = 0;\n\t    if (isNaN(c)) c = 0;\n\t    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n\t  }\n\t  d3.lab = d3_lab;\n\t  function d3_lab(l, a, b) {\n\t    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n\t  }\n\t  var d3_lab_K = 18;\n\t  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n\t  var d3_labPrototype = d3_lab.prototype = new d3_color();\n\t  d3_labPrototype.brighter = function(k) {\n\t    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.darker = function(k) {\n\t    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.rgb = function() {\n\t    return d3_lab_rgb(this.l, this.a, this.b);\n\t  };\n\t  function d3_lab_rgb(l, a, b) {\n\t    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n\t    x = d3_lab_xyz(x) * d3_lab_X;\n\t    y = d3_lab_xyz(y) * d3_lab_Y;\n\t    z = d3_lab_xyz(z) * d3_lab_Z;\n\t    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n\t  }\n\t  function d3_lab_hcl(l, a, b) {\n\t    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n\t  }\n\t  function d3_lab_xyz(x) {\n\t    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n\t  }\n\t  function d3_xyz_lab(x) {\n\t    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n\t  }\n\t  function d3_xyz_rgb(r) {\n\t    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n\t  }\n\t  d3.rgb = d3_rgb;\n\t  function d3_rgb(r, g, b) {\n\t    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n\t  }\n\t  function d3_rgbNumber(value) {\n\t    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n\t  }\n\t  function d3_rgbString(value) {\n\t    return d3_rgbNumber(value) + \"\";\n\t  }\n\t  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n\t  d3_rgbPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    var r = this.r, g = this.g, b = this.b, i = 30;\n\t    if (!r && !g && !b) return new d3_rgb(i, i, i);\n\t    if (r && r < i) r = i;\n\t    if (g && g < i) g = i;\n\t    if (b && b < i) b = i;\n\t    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n\t  };\n\t  d3_rgbPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n\t  };\n\t  d3_rgbPrototype.hsl = function() {\n\t    return d3_rgb_hsl(this.r, this.g, this.b);\n\t  };\n\t  d3_rgbPrototype.toString = function() {\n\t    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n\t  };\n\t  function d3_rgb_hex(v) {\n\t    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n\t  }\n\t  function d3_rgb_parse(format, rgb, hsl) {\n\t    var r = 0, g = 0, b = 0, m1, m2, color;\n\t    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n\t    if (m1) {\n\t      m2 = m1[2].split(\",\");\n\t      switch (m1[1]) {\n\t       case \"hsl\":\n\t        {\n\t          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n\t        }\n\t\n\t       case \"rgb\":\n\t        {\n\t          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n\t        }\n\t      }\n\t    }\n\t    if (color = d3_rgb_names.get(format)) {\n\t      return rgb(color.r, color.g, color.b);\n\t    }\n\t    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n\t      if (format.length === 4) {\n\t        r = (color & 3840) >> 4;\n\t        r = r >> 4 | r;\n\t        g = color & 240;\n\t        g = g >> 4 | g;\n\t        b = color & 15;\n\t        b = b << 4 | b;\n\t      } else if (format.length === 7) {\n\t        r = (color & 16711680) >> 16;\n\t        g = (color & 65280) >> 8;\n\t        b = color & 255;\n\t      }\n\t    }\n\t    return rgb(r, g, b);\n\t  }\n\t  function d3_rgb_hsl(r, g, b) {\n\t    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n\t    if (d) {\n\t      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n\t      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n\t      h *= 60;\n\t    } else {\n\t      h = NaN;\n\t      s = l > 0 && l < 1 ? 0 : h;\n\t    }\n\t    return new d3_hsl(h, s, l);\n\t  }\n\t  function d3_rgb_lab(r, g, b) {\n\t    r = d3_rgb_xyz(r);\n\t    g = d3_rgb_xyz(g);\n\t    b = d3_rgb_xyz(b);\n\t    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n\t    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n\t  }\n\t  function d3_rgb_xyz(r) {\n\t    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n\t  }\n\t  function d3_rgb_parseNumber(c) {\n\t    var f = parseFloat(c);\n\t    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n\t  }\n\t  var d3_rgb_names = d3.map({\n\t    aliceblue: 15792383,\n\t    antiquewhite: 16444375,\n\t    aqua: 65535,\n\t    aquamarine: 8388564,\n\t    azure: 15794175,\n\t    beige: 16119260,\n\t    bisque: 16770244,\n\t    black: 0,\n\t    blanchedalmond: 16772045,\n\t    blue: 255,\n\t    blueviolet: 9055202,\n\t    brown: 10824234,\n\t    burlywood: 14596231,\n\t    cadetblue: 6266528,\n\t    chartreuse: 8388352,\n\t    chocolate: 13789470,\n\t    coral: 16744272,\n\t    cornflowerblue: 6591981,\n\t    cornsilk: 16775388,\n\t    crimson: 14423100,\n\t    cyan: 65535,\n\t    darkblue: 139,\n\t    darkcyan: 35723,\n\t    darkgoldenrod: 12092939,\n\t    darkgray: 11119017,\n\t    darkgreen: 25600,\n\t    darkgrey: 11119017,\n\t    darkkhaki: 12433259,\n\t    darkmagenta: 9109643,\n\t    darkolivegreen: 5597999,\n\t    darkorange: 16747520,\n\t    darkorchid: 10040012,\n\t    darkred: 9109504,\n\t    darksalmon: 15308410,\n\t    darkseagreen: 9419919,\n\t    darkslateblue: 4734347,\n\t    darkslategray: 3100495,\n\t    darkslategrey: 3100495,\n\t    darkturquoise: 52945,\n\t    darkviolet: 9699539,\n\t    deeppink: 16716947,\n\t    deepskyblue: 49151,\n\t    dimgray: 6908265,\n\t    dimgrey: 6908265,\n\t    dodgerblue: 2003199,\n\t    firebrick: 11674146,\n\t    floralwhite: 16775920,\n\t    forestgreen: 2263842,\n\t    fuchsia: 16711935,\n\t    gainsboro: 14474460,\n\t    ghostwhite: 16316671,\n\t    gold: 16766720,\n\t    goldenrod: 14329120,\n\t    gray: 8421504,\n\t    green: 32768,\n\t    greenyellow: 11403055,\n\t    grey: 8421504,\n\t    honeydew: 15794160,\n\t    hotpink: 16738740,\n\t    indianred: 13458524,\n\t    indigo: 4915330,\n\t    ivory: 16777200,\n\t    khaki: 15787660,\n\t    lavender: 15132410,\n\t    lavenderblush: 16773365,\n\t    lawngreen: 8190976,\n\t    lemonchiffon: 16775885,\n\t    lightblue: 11393254,\n\t    lightcoral: 15761536,\n\t    lightcyan: 14745599,\n\t    lightgoldenrodyellow: 16448210,\n\t    lightgray: 13882323,\n\t    lightgreen: 9498256,\n\t    lightgrey: 13882323,\n\t    lightpink: 16758465,\n\t    lightsalmon: 16752762,\n\t    lightseagreen: 2142890,\n\t    lightskyblue: 8900346,\n\t    lightslategray: 7833753,\n\t    lightslategrey: 7833753,\n\t    lightsteelblue: 11584734,\n\t    lightyellow: 16777184,\n\t    lime: 65280,\n\t    limegreen: 3329330,\n\t    linen: 16445670,\n\t    magenta: 16711935,\n\t    maroon: 8388608,\n\t    mediumaquamarine: 6737322,\n\t    mediumblue: 205,\n\t    mediumorchid: 12211667,\n\t    mediumpurple: 9662683,\n\t    mediumseagreen: 3978097,\n\t    mediumslateblue: 8087790,\n\t    mediumspringgreen: 64154,\n\t    mediumturquoise: 4772300,\n\t    mediumvioletred: 13047173,\n\t    midnightblue: 1644912,\n\t    mintcream: 16121850,\n\t    mistyrose: 16770273,\n\t    moccasin: 16770229,\n\t    navajowhite: 16768685,\n\t    navy: 128,\n\t    oldlace: 16643558,\n\t    olive: 8421376,\n\t    olivedrab: 7048739,\n\t    orange: 16753920,\n\t    orangered: 16729344,\n\t    orchid: 14315734,\n\t    palegoldenrod: 15657130,\n\t    palegreen: 10025880,\n\t    paleturquoise: 11529966,\n\t    palevioletred: 14381203,\n\t    papayawhip: 16773077,\n\t    peachpuff: 16767673,\n\t    peru: 13468991,\n\t    pink: 16761035,\n\t    plum: 14524637,\n\t    powderblue: 11591910,\n\t    purple: 8388736,\n\t    rebeccapurple: 6697881,\n\t    red: 16711680,\n\t    rosybrown: 12357519,\n\t    royalblue: 4286945,\n\t    saddlebrown: 9127187,\n\t    salmon: 16416882,\n\t    sandybrown: 16032864,\n\t    seagreen: 3050327,\n\t    seashell: 16774638,\n\t    sienna: 10506797,\n\t    silver: 12632256,\n\t    skyblue: 8900331,\n\t    slateblue: 6970061,\n\t    slategray: 7372944,\n\t    slategrey: 7372944,\n\t    snow: 16775930,\n\t    springgreen: 65407,\n\t    steelblue: 4620980,\n\t    tan: 13808780,\n\t    teal: 32896,\n\t    thistle: 14204888,\n\t    tomato: 16737095,\n\t    turquoise: 4251856,\n\t    violet: 15631086,\n\t    wheat: 16113331,\n\t    white: 16777215,\n\t    whitesmoke: 16119285,\n\t    yellow: 16776960,\n\t    yellowgreen: 10145074\n\t  });\n\t  d3_rgb_names.forEach(function(key, value) {\n\t    d3_rgb_names.set(key, d3_rgbNumber(value));\n\t  });\n\t  function d3_functor(v) {\n\t    return typeof v === \"function\" ? v : function() {\n\t      return v;\n\t    };\n\t  }\n\t  d3.functor = d3_functor;\n\t  d3.xhr = d3_xhrType(d3_identity);\n\t  function d3_xhrType(response) {\n\t    return function(url, mimeType, callback) {\n\t      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n\t      mimeType = null;\n\t      return d3_xhr(url, mimeType, response, callback);\n\t    };\n\t  }\n\t  function d3_xhr(url, mimeType, response, callback) {\n\t    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n\t    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n\t    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n\t      request.readyState > 3 && respond();\n\t    };\n\t    function respond() {\n\t      var status = request.status, result;\n\t      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n\t        try {\n\t          result = response.call(xhr, request);\n\t        } catch (e) {\n\t          dispatch.error.call(xhr, e);\n\t          return;\n\t        }\n\t        dispatch.load.call(xhr, result);\n\t      } else {\n\t        dispatch.error.call(xhr, request);\n\t      }\n\t    }\n\t    request.onprogress = function(event) {\n\t      var o = d3.event;\n\t      d3.event = event;\n\t      try {\n\t        dispatch.progress.call(xhr, request);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t    xhr.header = function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers[name];\n\t      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.mimeType = function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.responseType = function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return xhr;\n\t    };\n\t    xhr.response = function(value) {\n\t      response = value;\n\t      return xhr;\n\t    };\n\t    [ \"get\", \"post\" ].forEach(function(method) {\n\t      xhr[method] = function() {\n\t        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n\t      };\n\t    });\n\t    xhr.send = function(method, data, callback) {\n\t      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n\t      request.open(method, url, true);\n\t      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n\t      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n\t      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n\t      if (responseType != null) request.responseType = responseType;\n\t      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n\t        callback(null, request);\n\t      });\n\t      dispatch.beforesend.call(xhr, request);\n\t      request.send(data == null ? null : data);\n\t      return xhr;\n\t    };\n\t    xhr.abort = function() {\n\t      request.abort();\n\t      return xhr;\n\t    };\n\t    d3.rebind(xhr, dispatch, \"on\");\n\t    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n\t  }\n\t  function d3_xhr_fixCallback(callback) {\n\t    return callback.length === 1 ? function(error, request) {\n\t      callback(error == null ? request : null);\n\t    } : callback;\n\t  }\n\t  function d3_xhrHasResponse(request) {\n\t    var type = request.responseType;\n\t    return type && type !== \"text\" ? request.response : request.responseText;\n\t  }\n\t  d3.dsv = function(delimiter, mimeType) {\n\t    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n\t    function dsv(url, row, callback) {\n\t      if (arguments.length < 3) callback = row, row = null;\n\t      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n\t      xhr.row = function(_) {\n\t        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n\t      };\n\t      return xhr;\n\t    }\n\t    function response(request) {\n\t      return dsv.parse(request.responseText);\n\t    }\n\t    function typedResponse(f) {\n\t      return function(request) {\n\t        return dsv.parse(request.responseText, f);\n\t      };\n\t    }\n\t    dsv.parse = function(text, f) {\n\t      var o;\n\t      return dsv.parseRows(text, function(row, i) {\n\t        if (o) return o(row, i - 1);\n\t        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n\t          return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t        }).join(\",\") + \"}\");\n\t        o = f ? function(row, i) {\n\t          return f(a(row), i);\n\t        } : a;\n\t      });\n\t    };\n\t    dsv.parseRows = function(text, f) {\n\t      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n\t      function token() {\n\t        if (I >= N) return EOF;\n\t        if (eol) return eol = false, EOL;\n\t        var j = I;\n\t        if (text.charCodeAt(j) === 34) {\n\t          var i = j;\n\t          while (i++ < N) {\n\t            if (text.charCodeAt(i) === 34) {\n\t              if (text.charCodeAt(i + 1) !== 34) break;\n\t              ++i;\n\t            }\n\t          }\n\t          I = i + 2;\n\t          var c = text.charCodeAt(i + 1);\n\t          if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(i + 2) === 10) ++I;\n\t          } else if (c === 10) {\n\t            eol = true;\n\t          }\n\t          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n\t        }\n\t        while (I < N) {\n\t          var c = text.charCodeAt(I++), k = 1;\n\t          if (c === 10) eol = true; else if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(I) === 10) ++I, ++k;\n\t          } else if (c !== delimiterCode) continue;\n\t          return text.slice(j, I - k);\n\t        }\n\t        return text.slice(j);\n\t      }\n\t      while ((t = token()) !== EOF) {\n\t        var a = [];\n\t        while (t !== EOL && t !== EOF) {\n\t          a.push(t);\n\t          t = token();\n\t        }\n\t        if (f && (a = f(a, n++)) == null) continue;\n\t        rows.push(a);\n\t      }\n\t      return rows;\n\t    };\n\t    dsv.format = function(rows) {\n\t      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n\t      var fieldSet = new d3_Set(), fields = [];\n\t      rows.forEach(function(row) {\n\t        for (var field in row) {\n\t          if (!fieldSet.has(field)) {\n\t            fields.push(fieldSet.add(field));\n\t          }\n\t        }\n\t      });\n\t      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n\t        return fields.map(function(field) {\n\t          return formatValue(row[field]);\n\t        }).join(delimiter);\n\t      })).join(\"\\n\");\n\t    };\n\t    dsv.formatRows = function(rows) {\n\t      return rows.map(formatRow).join(\"\\n\");\n\t    };\n\t    function formatRow(row) {\n\t      return row.map(formatValue).join(delimiter);\n\t    }\n\t    function formatValue(text) {\n\t      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n\t    }\n\t    return dsv;\n\t  };\n\t  d3.csv = d3.dsv(\",\", \"text/csv\");\n\t  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n\t  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n\t    setTimeout(callback, 17);\n\t  };\n\t  d3.timer = function() {\n\t    d3_timer.apply(this, arguments);\n\t  };\n\t  function d3_timer(callback, delay, then) {\n\t    var n = arguments.length;\n\t    if (n < 2) delay = 0;\n\t    if (n < 3) then = Date.now();\n\t    var time = then + delay, timer = {\n\t      c: callback,\n\t      t: time,\n\t      n: null\n\t    };\n\t    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n\t    d3_timer_queueTail = timer;\n\t    if (!d3_timer_interval) {\n\t      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t    return timer;\n\t  }\n\t  function d3_timer_step() {\n\t    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n\t    if (delay > 24) {\n\t      if (isFinite(delay)) {\n\t        clearTimeout(d3_timer_timeout);\n\t        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n\t      }\n\t      d3_timer_interval = 0;\n\t    } else {\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  }\n\t  d3.timer.flush = function() {\n\t    d3_timer_mark();\n\t    d3_timer_sweep();\n\t  };\n\t  function d3_timer_mark() {\n\t    var now = Date.now(), timer = d3_timer_queueHead;\n\t    while (timer) {\n\t      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n\t      timer = timer.n;\n\t    }\n\t    return now;\n\t  }\n\t  function d3_timer_sweep() {\n\t    var t0, t1 = d3_timer_queueHead, time = Infinity;\n\t    while (t1) {\n\t      if (t1.c) {\n\t        if (t1.t < time) time = t1.t;\n\t        t1 = (t0 = t1).n;\n\t      } else {\n\t        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n\t      }\n\t    }\n\t    d3_timer_queueTail = t0;\n\t    return time;\n\t  }\n\t  function d3_format_precision(x, p) {\n\t    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n\t  }\n\t  d3.round = function(x, n) {\n\t    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n\t  };\n\t  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n\t  d3.formatPrefix = function(value, precision) {\n\t    var i = 0;\n\t    if (value = +value) {\n\t      if (value < 0) value *= -1;\n\t      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n\t      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n\t      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n\t    }\n\t    return d3_formatPrefixes[8 + i / 3];\n\t  };\n\t  function d3_formatPrefix(d, i) {\n\t    var k = Math.pow(10, abs(8 - i) * 3);\n\t    return {\n\t      scale: i > 8 ? function(d) {\n\t        return d / k;\n\t      } : function(d) {\n\t        return d * k;\n\t      },\n\t      symbol: d\n\t    };\n\t  }\n\t  function d3_locale_numberFormat(locale) {\n\t    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n\t      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n\t      while (i > 0 && g > 0) {\n\t        if (length + g + 1 > width) g = Math.max(1, width - length);\n\t        t.push(value.substring(i -= g, i + g));\n\t        if ((length += g + 1) > width) break;\n\t        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n\t      }\n\t      return t.reverse().join(locale_thousands);\n\t    } : d3_identity;\n\t    return function(specifier) {\n\t      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n\t      if (precision) precision = +precision.substring(1);\n\t      if (zfill || fill === \"0\" && align === \"=\") {\n\t        zfill = fill = \"0\";\n\t        align = \"=\";\n\t      }\n\t      switch (type) {\n\t       case \"n\":\n\t        comma = true;\n\t        type = \"g\";\n\t        break;\n\t\n\t       case \"%\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"f\";\n\t        break;\n\t\n\t       case \"p\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"r\";\n\t        break;\n\t\n\t       case \"b\":\n\t       case \"o\":\n\t       case \"x\":\n\t       case \"X\":\n\t        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\t\n\t       case \"c\":\n\t        exponent = false;\n\t\n\t       case \"d\":\n\t        integer = true;\n\t        precision = 0;\n\t        break;\n\t\n\t       case \"s\":\n\t        scale = -1;\n\t        type = \"r\";\n\t        break;\n\t      }\n\t      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n\t      if (type == \"r\" && !precision) type = \"g\";\n\t      if (precision != null) {\n\t        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n\t      }\n\t      type = d3_format_types.get(type) || d3_format_typeDefault;\n\t      var zcomma = zfill && comma;\n\t      return function(value) {\n\t        var fullSuffix = suffix;\n\t        if (integer && value % 1) return \"\";\n\t        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n\t        if (scale < 0) {\n\t          var unit = d3.formatPrefix(value, precision);\n\t          value = unit.scale(value);\n\t          fullSuffix = unit.symbol + suffix;\n\t        } else {\n\t          value *= scale;\n\t        }\n\t        value = type(value, precision);\n\t        var i = value.lastIndexOf(\".\"), before, after;\n\t        if (i < 0) {\n\t          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n\t          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n\t        } else {\n\t          before = value.substring(0, i);\n\t          after = locale_decimal + value.substring(i + 1);\n\t        }\n\t        if (!zfill && comma) before = formatGroup(before, Infinity);\n\t        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n\t        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n\t        negative += prefix;\n\t        value = before + after;\n\t        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n\t      };\n\t    };\n\t  }\n\t  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n\t  var d3_format_types = d3.map({\n\t    b: function(x) {\n\t      return x.toString(2);\n\t    },\n\t    c: function(x) {\n\t      return String.fromCharCode(x);\n\t    },\n\t    o: function(x) {\n\t      return x.toString(8);\n\t    },\n\t    x: function(x) {\n\t      return x.toString(16);\n\t    },\n\t    X: function(x) {\n\t      return x.toString(16).toUpperCase();\n\t    },\n\t    g: function(x, p) {\n\t      return x.toPrecision(p);\n\t    },\n\t    e: function(x, p) {\n\t      return x.toExponential(p);\n\t    },\n\t    f: function(x, p) {\n\t      return x.toFixed(p);\n\t    },\n\t    r: function(x, p) {\n\t      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n\t    }\n\t  });\n\t  function d3_format_typeDefault(x) {\n\t    return x + \"\";\n\t  }\n\t  var d3_time = d3.time = {}, d3_date = Date;\n\t  function d3_date_utc() {\n\t    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n\t  }\n\t  d3_date_utc.prototype = {\n\t    getDate: function() {\n\t      return this._.getUTCDate();\n\t    },\n\t    getDay: function() {\n\t      return this._.getUTCDay();\n\t    },\n\t    getFullYear: function() {\n\t      return this._.getUTCFullYear();\n\t    },\n\t    getHours: function() {\n\t      return this._.getUTCHours();\n\t    },\n\t    getMilliseconds: function() {\n\t      return this._.getUTCMilliseconds();\n\t    },\n\t    getMinutes: function() {\n\t      return this._.getUTCMinutes();\n\t    },\n\t    getMonth: function() {\n\t      return this._.getUTCMonth();\n\t    },\n\t    getSeconds: function() {\n\t      return this._.getUTCSeconds();\n\t    },\n\t    getTime: function() {\n\t      return this._.getTime();\n\t    },\n\t    getTimezoneOffset: function() {\n\t      return 0;\n\t    },\n\t    valueOf: function() {\n\t      return this._.valueOf();\n\t    },\n\t    setDate: function() {\n\t      d3_time_prototype.setUTCDate.apply(this._, arguments);\n\t    },\n\t    setDay: function() {\n\t      d3_time_prototype.setUTCDay.apply(this._, arguments);\n\t    },\n\t    setFullYear: function() {\n\t      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n\t    },\n\t    setHours: function() {\n\t      d3_time_prototype.setUTCHours.apply(this._, arguments);\n\t    },\n\t    setMilliseconds: function() {\n\t      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n\t    },\n\t    setMinutes: function() {\n\t      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n\t    },\n\t    setMonth: function() {\n\t      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n\t    },\n\t    setSeconds: function() {\n\t      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n\t    },\n\t    setTime: function() {\n\t      d3_time_prototype.setTime.apply(this._, arguments);\n\t    }\n\t  };\n\t  var d3_time_prototype = Date.prototype;\n\t  function d3_time_interval(local, step, number) {\n\t    function round(date) {\n\t      var d0 = local(date), d1 = offset(d0, 1);\n\t      return date - d0 < d1 - date ? d0 : d1;\n\t    }\n\t    function ceil(date) {\n\t      step(date = local(new d3_date(date - 1)), 1);\n\t      return date;\n\t    }\n\t    function offset(date, k) {\n\t      step(date = new d3_date(+date), k);\n\t      return date;\n\t    }\n\t    function range(t0, t1, dt) {\n\t      var time = ceil(t0), times = [];\n\t      if (dt > 1) {\n\t        while (time < t1) {\n\t          if (!(number(time) % dt)) times.push(new Date(+time));\n\t          step(time, 1);\n\t        }\n\t      } else {\n\t        while (time < t1) times.push(new Date(+time)), step(time, 1);\n\t      }\n\t      return times;\n\t    }\n\t    function range_utc(t0, t1, dt) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = t0;\n\t        return range(utc, t1, dt);\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    }\n\t    local.floor = local;\n\t    local.round = round;\n\t    local.ceil = ceil;\n\t    local.offset = offset;\n\t    local.range = range;\n\t    var utc = local.utc = d3_time_interval_utc(local);\n\t    utc.floor = utc;\n\t    utc.round = d3_time_interval_utc(round);\n\t    utc.ceil = d3_time_interval_utc(ceil);\n\t    utc.offset = d3_time_interval_utc(offset);\n\t    utc.range = range_utc;\n\t    return local;\n\t  }\n\t  function d3_time_interval_utc(method) {\n\t    return function(date, k) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = date;\n\t        return method(utc, k)._;\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    };\n\t  }\n\t  d3_time.year = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setMonth(0, 1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setFullYear(date.getFullYear() + offset);\n\t  }, function(date) {\n\t    return date.getFullYear();\n\t  });\n\t  d3_time.years = d3_time.year.range;\n\t  d3_time.years.utc = d3_time.year.utc.range;\n\t  d3_time.day = d3_time_interval(function(date) {\n\t    var day = new d3_date(2e3, 0);\n\t    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n\t    return day;\n\t  }, function(date, offset) {\n\t    date.setDate(date.getDate() + offset);\n\t  }, function(date) {\n\t    return date.getDate() - 1;\n\t  });\n\t  d3_time.days = d3_time.day.range;\n\t  d3_time.days.utc = d3_time.day.utc.range;\n\t  d3_time.dayOfYear = function(date) {\n\t    var year = d3_time.year(date);\n\t    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n\t  };\n\t  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n\t    i = 7 - i;\n\t    var interval = d3_time[day] = d3_time_interval(function(date) {\n\t      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n\t      return date;\n\t    }, function(date, offset) {\n\t      date.setDate(date.getDate() + Math.floor(offset) * 7);\n\t    }, function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n\t    });\n\t    d3_time[day + \"s\"] = interval.range;\n\t    d3_time[day + \"s\"].utc = interval.utc.range;\n\t    d3_time[day + \"OfYear\"] = function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n\t    };\n\t  });\n\t  d3_time.week = d3_time.sunday;\n\t  d3_time.weeks = d3_time.sunday.range;\n\t  d3_time.weeks.utc = d3_time.sunday.utc.range;\n\t  d3_time.weekOfYear = d3_time.sundayOfYear;\n\t  function d3_locale_timeFormat(locale) {\n\t    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n\t    function d3_time_format(template) {\n\t      var n = template.length;\n\t      function format(date) {\n\t        var string = [], i = -1, j = 0, c, p, f;\n\t        while (++i < n) {\n\t          if (template.charCodeAt(i) === 37) {\n\t            string.push(template.slice(j, i));\n\t            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n\t            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n\t            string.push(c);\n\t            j = i + 1;\n\t          }\n\t        }\n\t        string.push(template.slice(j, i));\n\t        return string.join(\"\");\n\t      }\n\t      format.parse = function(string) {\n\t        var d = {\n\t          y: 1900,\n\t          m: 0,\n\t          d: 1,\n\t          H: 0,\n\t          M: 0,\n\t          S: 0,\n\t          L: 0,\n\t          Z: null\n\t        }, i = d3_time_parse(d, template, string, 0);\n\t        if (i != string.length) return null;\n\t        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n\t        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n\t          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n\t          date.setFullYear(d.y, 0, 1);\n\t          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n\t        } else date.setFullYear(d.y, d.m, d.d);\n\t        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n\t        return localZ ? date._ : date;\n\t      };\n\t      format.toString = function() {\n\t        return template;\n\t      };\n\t      return format;\n\t    }\n\t    function d3_time_parse(date, template, string, j) {\n\t      var c, p, t, i = 0, n = template.length, m = string.length;\n\t      while (i < n) {\n\t        if (j >= m) return -1;\n\t        c = template.charCodeAt(i++);\n\t        if (c === 37) {\n\t          t = template.charAt(i++);\n\t          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n\t          if (!p || (j = p(date, string, j)) < 0) return -1;\n\t        } else if (c != string.charCodeAt(j++)) {\n\t          return -1;\n\t        }\n\t      }\n\t      return j;\n\t    }\n\t    d3_time_format.utc = function(template) {\n\t      var local = d3_time_format(template);\n\t      function format(date) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var utc = new d3_date();\n\t          utc._ = date;\n\t          return local(utc);\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      }\n\t      format.parse = function(string) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var date = local.parse(string);\n\t          return date && date._;\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      };\n\t      format.toString = local.toString;\n\t      return format;\n\t    };\n\t    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n\t    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n\t    locale_periods.forEach(function(p, i) {\n\t      d3_time_periodLookup.set(p.toLowerCase(), i);\n\t    });\n\t    var d3_time_formats = {\n\t      a: function(d) {\n\t        return locale_shortDays[d.getDay()];\n\t      },\n\t      A: function(d) {\n\t        return locale_days[d.getDay()];\n\t      },\n\t      b: function(d) {\n\t        return locale_shortMonths[d.getMonth()];\n\t      },\n\t      B: function(d) {\n\t        return locale_months[d.getMonth()];\n\t      },\n\t      c: d3_time_format(locale_dateTime),\n\t      d: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      e: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      H: function(d, p) {\n\t        return d3_time_formatPad(d.getHours(), p, 2);\n\t      },\n\t      I: function(d, p) {\n\t        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n\t      },\n\t      j: function(d, p) {\n\t        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n\t      },\n\t      L: function(d, p) {\n\t        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n\t      },\n\t      m: function(d, p) {\n\t        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n\t      },\n\t      M: function(d, p) {\n\t        return d3_time_formatPad(d.getMinutes(), p, 2);\n\t      },\n\t      p: function(d) {\n\t        return locale_periods[+(d.getHours() >= 12)];\n\t      },\n\t      S: function(d, p) {\n\t        return d3_time_formatPad(d.getSeconds(), p, 2);\n\t      },\n\t      U: function(d, p) {\n\t        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n\t      },\n\t      w: function(d) {\n\t        return d.getDay();\n\t      },\n\t      W: function(d, p) {\n\t        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n\t      },\n\t      x: d3_time_format(locale_date),\n\t      X: d3_time_format(locale_time),\n\t      y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n\t      },\n\t      Y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n\t      },\n\t      Z: d3_time_zone,\n\t      \"%\": function() {\n\t        return \"%\";\n\t      }\n\t    };\n\t    var d3_time_parsers = {\n\t      a: d3_time_parseWeekdayAbbrev,\n\t      A: d3_time_parseWeekday,\n\t      b: d3_time_parseMonthAbbrev,\n\t      B: d3_time_parseMonth,\n\t      c: d3_time_parseLocaleFull,\n\t      d: d3_time_parseDay,\n\t      e: d3_time_parseDay,\n\t      H: d3_time_parseHour24,\n\t      I: d3_time_parseHour24,\n\t      j: d3_time_parseDayOfYear,\n\t      L: d3_time_parseMilliseconds,\n\t      m: d3_time_parseMonthNumber,\n\t      M: d3_time_parseMinutes,\n\t      p: d3_time_parseAmPm,\n\t      S: d3_time_parseSeconds,\n\t      U: d3_time_parseWeekNumberSunday,\n\t      w: d3_time_parseWeekdayNumber,\n\t      W: d3_time_parseWeekNumberMonday,\n\t      x: d3_time_parseLocaleDate,\n\t      X: d3_time_parseLocaleTime,\n\t      y: d3_time_parseYear,\n\t      Y: d3_time_parseFullYear,\n\t      Z: d3_time_parseZone,\n\t      \"%\": d3_time_parseLiteralPercent\n\t    };\n\t    function d3_time_parseWeekdayAbbrev(date, string, i) {\n\t      d3_time_dayAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseWeekday(date, string, i) {\n\t      d3_time_dayRe.lastIndex = 0;\n\t      var n = d3_time_dayRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonthAbbrev(date, string, i) {\n\t      d3_time_monthAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonth(date, string, i) {\n\t      d3_time_monthRe.lastIndex = 0;\n\t      var n = d3_time_monthRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseLocaleFull(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleDate(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleTime(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n\t    }\n\t    function d3_time_parseAmPm(date, string, i) {\n\t      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n\t      return n == null ? -1 : (date.p = n, i);\n\t    }\n\t    return d3_time_format;\n\t  }\n\t  var d3_time_formatPads = {\n\t    \"-\": \"\",\n\t    _: \" \",\n\t    \"0\": \"0\"\n\t  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n\t  function d3_time_formatPad(value, fill, width) {\n\t    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n\t    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t  }\n\t  function d3_time_formatRe(names) {\n\t    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n\t  }\n\t  function d3_time_formatLookup(names) {\n\t    var map = new d3_Map(), i = -1, n = names.length;\n\t    while (++i < n) map.set(names[i].toLowerCase(), i);\n\t    return map;\n\t  }\n\t  function d3_time_parseWeekdayNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n\t    return n ? (date.w = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberSunday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.U = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberMonday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.W = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseFullYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n\t    return n ? (date.y = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseZone(date, string, i) {\n\t    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n\t    i + 5) : -1;\n\t  }\n\t  function d3_time_expandYear(d) {\n\t    return d + (d > 68 ? 1900 : 2e3);\n\t  }\n\t  function d3_time_parseMonthNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDay(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.d = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDayOfYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.j = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseHour24(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.H = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMinutes(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.M = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseSeconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.S = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMilliseconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.L = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_zone(d) {\n\t    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n\t    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n\t  }\n\t  function d3_time_parseLiteralPercent(date, string, i) {\n\t    d3_time_percentRe.lastIndex = 0;\n\t    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n\t    return n ? i + n[0].length : -1;\n\t  }\n\t  function d3_time_formatMulti(formats) {\n\t    var n = formats.length, i = -1;\n\t    while (++i < n) formats[i][0] = this(formats[i][0]);\n\t    return function(date) {\n\t      var i = 0, f = formats[i];\n\t      while (!f[1](date)) f = formats[++i];\n\t      return f[0](date);\n\t    };\n\t  }\n\t  d3.locale = function(locale) {\n\t    return {\n\t      numberFormat: d3_locale_numberFormat(locale),\n\t      timeFormat: d3_locale_timeFormat(locale)\n\t    };\n\t  };\n\t  var d3_locale_enUS = d3.locale({\n\t    decimal: \".\",\n\t    thousands: \",\",\n\t    grouping: [ 3 ],\n\t    currency: [ \"$\", \"\" ],\n\t    dateTime: \"%a %b %e %X %Y\",\n\t    date: \"%m/%d/%Y\",\n\t    time: \"%H:%M:%S\",\n\t    periods: [ \"AM\", \"PM\" ],\n\t    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n\t    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n\t    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n\t    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n\t  });\n\t  d3.format = d3_locale_enUS.numberFormat;\n\t  d3.geo = {};\n\t  function d3_adder() {}\n\t  d3_adder.prototype = {\n\t    s: 0,\n\t    t: 0,\n\t    add: function(y) {\n\t      d3_adderSum(y, this.t, d3_adderTemp);\n\t      d3_adderSum(d3_adderTemp.s, this.s, this);\n\t      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n\t    },\n\t    reset: function() {\n\t      this.s = this.t = 0;\n\t    },\n\t    valueOf: function() {\n\t      return this.s;\n\t    }\n\t  };\n\t  var d3_adderTemp = new d3_adder();\n\t  function d3_adderSum(a, b, o) {\n\t    var x = o.s = a + b, bv = x - a, av = x - bv;\n\t    o.t = a - av + (b - bv);\n\t  }\n\t  d3.geo.stream = function(object, listener) {\n\t    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n\t      d3_geo_streamObjectType[object.type](object, listener);\n\t    } else {\n\t      d3_geo_streamGeometry(object, listener);\n\t    }\n\t  };\n\t  function d3_geo_streamGeometry(geometry, listener) {\n\t    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n\t      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n\t    }\n\t  }\n\t  var d3_geo_streamObjectType = {\n\t    Feature: function(feature, listener) {\n\t      d3_geo_streamGeometry(feature.geometry, listener);\n\t    },\n\t    FeatureCollection: function(object, listener) {\n\t      var features = object.features, i = -1, n = features.length;\n\t      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n\t    }\n\t  };\n\t  var d3_geo_streamGeometryType = {\n\t    Sphere: function(object, listener) {\n\t      listener.sphere();\n\t    },\n\t    Point: function(object, listener) {\n\t      object = object.coordinates;\n\t      listener.point(object[0], object[1], object[2]);\n\t    },\n\t    MultiPoint: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n\t    },\n\t    LineString: function(object, listener) {\n\t      d3_geo_streamLine(object.coordinates, listener, 0);\n\t    },\n\t    MultiLineString: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n\t    },\n\t    Polygon: function(object, listener) {\n\t      d3_geo_streamPolygon(object.coordinates, listener);\n\t    },\n\t    MultiPolygon: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n\t    },\n\t    GeometryCollection: function(object, listener) {\n\t      var geometries = object.geometries, i = -1, n = geometries.length;\n\t      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n\t    }\n\t  };\n\t  function d3_geo_streamLine(coordinates, listener, closed) {\n\t    var i = -1, n = coordinates.length - closed, coordinate;\n\t    listener.lineStart();\n\t    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n\t    listener.lineEnd();\n\t  }\n\t  function d3_geo_streamPolygon(coordinates, listener) {\n\t    var i = -1, n = coordinates.length;\n\t    listener.polygonStart();\n\t    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n\t    listener.polygonEnd();\n\t  }\n\t  d3.geo.area = function(object) {\n\t    d3_geo_areaSum = 0;\n\t    d3.geo.stream(object, d3_geo_area);\n\t    return d3_geo_areaSum;\n\t  };\n\t  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n\t  var d3_geo_area = {\n\t    sphere: function() {\n\t      d3_geo_areaSum += 4 * π;\n\t    },\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_areaRingSum.reset();\n\t      d3_geo_area.lineStart = d3_geo_areaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      var area = 2 * d3_geo_areaRingSum;\n\t      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n\t      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n\t    }\n\t  };\n\t  function d3_geo_areaRingStart() {\n\t    var λ00, φ00, λ0, cosφ0, sinφ0;\n\t    d3_geo_area.point = function(λ, φ) {\n\t      d3_geo_area.point = nextPoint;\n\t      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n\t      sinφ0 = Math.sin(φ);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      φ = φ * d3_radians / 2 + π / 4;\n\t      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n\t      d3_geo_areaRingSum.add(Math.atan2(v, u));\n\t      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n\t    }\n\t    d3_geo_area.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t    };\n\t  }\n\t  function d3_geo_cartesian(spherical) {\n\t    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n\t    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n\t  }\n\t  function d3_geo_cartesianDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t  }\n\t  function d3_geo_cartesianCross(a, b) {\n\t    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n\t  }\n\t  function d3_geo_cartesianAdd(a, b) {\n\t    a[0] += b[0];\n\t    a[1] += b[1];\n\t    a[2] += b[2];\n\t  }\n\t  function d3_geo_cartesianScale(vector, k) {\n\t    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n\t  }\n\t  function d3_geo_cartesianNormalize(d) {\n\t    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t    d[0] /= l;\n\t    d[1] /= l;\n\t    d[2] /= l;\n\t  }\n\t  function d3_geo_spherical(cartesian) {\n\t    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n\t  }\n\t  function d3_geo_sphericalEqual(a, b) {\n\t    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n\t  }\n\t  d3.geo.bounds = function() {\n\t    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n\t    var bound = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        bound.point = ringPoint;\n\t        bound.lineStart = ringStart;\n\t        bound.lineEnd = ringEnd;\n\t        dλSum = 0;\n\t        d3_geo_area.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        d3_geo_area.polygonEnd();\n\t        bound.point = point;\n\t        bound.lineStart = lineStart;\n\t        bound.lineEnd = lineEnd;\n\t        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n\t        range[0] = λ0, range[1] = λ1;\n\t      }\n\t    };\n\t    function point(λ, φ) {\n\t      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n\t      if (φ < φ0) φ0 = φ;\n\t      if (φ > φ1) φ1 = φ;\n\t    }\n\t    function linePoint(λ, φ) {\n\t      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n\t      if (p0) {\n\t        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n\t        d3_geo_cartesianNormalize(inflection);\n\t        inflection = d3_geo_spherical(inflection);\n\t        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n\t        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = inflection[1] * d3_degrees;\n\t          if (φi > φ1) φ1 = φi;\n\t        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = -inflection[1] * d3_degrees;\n\t          if (φi < φ0) φ0 = φi;\n\t        } else {\n\t          if (φ < φ0) φ0 = φ;\n\t          if (φ > φ1) φ1 = φ;\n\t        }\n\t        if (antimeridian) {\n\t          if (λ < λ_) {\n\t            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t          } else {\n\t            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t          }\n\t        } else {\n\t          if (λ1 >= λ0) {\n\t            if (λ < λ0) λ0 = λ;\n\t            if (λ > λ1) λ1 = λ;\n\t          } else {\n\t            if (λ > λ_) {\n\t              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t            } else {\n\t              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        point(λ, φ);\n\t      }\n\t      p0 = p, λ_ = λ;\n\t    }\n\t    function lineStart() {\n\t      bound.point = linePoint;\n\t    }\n\t    function lineEnd() {\n\t      range[0] = λ0, range[1] = λ1;\n\t      bound.point = point;\n\t      p0 = null;\n\t    }\n\t    function ringPoint(λ, φ) {\n\t      if (p0) {\n\t        var dλ = λ - λ_;\n\t        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n\t      } else λ__ = λ, φ__ = φ;\n\t      d3_geo_area.point(λ, φ);\n\t      linePoint(λ, φ);\n\t    }\n\t    function ringStart() {\n\t      d3_geo_area.lineStart();\n\t    }\n\t    function ringEnd() {\n\t      ringPoint(λ__, φ__);\n\t      d3_geo_area.lineEnd();\n\t      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n\t      range[0] = λ0, range[1] = λ1;\n\t      p0 = null;\n\t    }\n\t    function angle(λ0, λ1) {\n\t      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n\t    }\n\t    function compareRanges(a, b) {\n\t      return a[0] - b[0];\n\t    }\n\t    function withinRange(x, range) {\n\t      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t    }\n\t    return function(feature) {\n\t      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n\t      ranges = [];\n\t      d3.geo.stream(feature, bound);\n\t      var n = ranges.length;\n\t      if (n) {\n\t        ranges.sort(compareRanges);\n\t        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n\t          b = ranges[i];\n\t          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n\t            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t          } else {\n\t            merged.push(a = b);\n\t          }\n\t        }\n\t        var best = -Infinity, dλ;\n\t        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n\t          b = merged[i];\n\t          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n\t        }\n\t      }\n\t      ranges = range = null;\n\t      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n\t    };\n\t  }();\n\t  d3.geo.centroid = function(object) {\n\t    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t    d3.geo.stream(object, d3_geo_centroid);\n\t    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n\t    if (m < ε2) {\n\t      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n\t      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n\t      m = x * x + y * y + z * z;\n\t      if (m < ε2) return [ NaN, NaN ];\n\t    }\n\t    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n\t  };\n\t  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n\t  var d3_geo_centroid = {\n\t    sphere: d3_noop,\n\t    point: d3_geo_centroidPoint,\n\t    lineStart: d3_geo_centroidLineStart,\n\t    lineEnd: d3_geo_centroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n\t    }\n\t  };\n\t  function d3_geo_centroidPoint(λ, φ) {\n\t    λ *= d3_radians;\n\t    var cosφ = Math.cos(φ *= d3_radians);\n\t    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n\t  }\n\t  function d3_geo_centroidPointXYZ(x, y, z) {\n\t    ++d3_geo_centroidW0;\n\t    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n\t    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n\t    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n\t  }\n\t  function d3_geo_centroidLineStart() {\n\t    var x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroid.point = nextPoint;\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_centroidLineEnd() {\n\t    d3_geo_centroid.point = d3_geo_centroidPoint;\n\t  }\n\t  function d3_geo_centroidRingStart() {\n\t    var λ00, φ00, x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ00 = λ, φ00 = φ;\n\t      d3_geo_centroid.point = nextPoint;\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    d3_geo_centroid.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n\t      d3_geo_centroid.point = d3_geo_centroidPoint;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n\t      d3_geo_centroidX2 += v * cx;\n\t      d3_geo_centroidY2 += v * cy;\n\t      d3_geo_centroidZ2 += v * cz;\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_compose(a, b) {\n\t    function compose(x, y) {\n\t      return x = a(x, y), b(x[0], x[1]);\n\t    }\n\t    if (a.invert && b.invert) compose.invert = function(x, y) {\n\t      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t    };\n\t    return compose;\n\t  }\n\t  function d3_true() {\n\t    return true;\n\t  }\n\t  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n\t    var subject = [], clip = [];\n\t    segments.forEach(function(segment) {\n\t      if ((n = segment.length - 1) <= 0) return;\n\t      var n, p0 = segment[0], p1 = segment[n];\n\t      if (d3_geo_sphericalEqual(p0, p1)) {\n\t        listener.lineStart();\n\t        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n\t        listener.lineEnd();\n\t        return;\n\t      }\n\t      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n\t      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t    });\n\t    clip.sort(compare);\n\t    d3_geo_clipPolygonLinkCircular(subject);\n\t    d3_geo_clipPolygonLinkCircular(clip);\n\t    if (!subject.length) return;\n\t    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n\t      clip[i].e = entry = !entry;\n\t    }\n\t    var start = subject[0], points, point;\n\t    while (1) {\n\t      var current = start, isSubject = true;\n\t      while (current.v) if ((current = current.n) === start) return;\n\t      points = current.z;\n\t      listener.lineStart();\n\t      do {\n\t        current.v = current.o.v = true;\n\t        if (current.e) {\n\t          if (isSubject) {\n\t            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.n.x, 1, listener);\n\t          }\n\t          current = current.n;\n\t        } else {\n\t          if (isSubject) {\n\t            points = current.p.z;\n\t            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.p.x, -1, listener);\n\t          }\n\t          current = current.p;\n\t        }\n\t        current = current.o;\n\t        points = current.z;\n\t        isSubject = !isSubject;\n\t      } while (!current.v);\n\t      listener.lineEnd();\n\t    }\n\t  }\n\t  function d3_geo_clipPolygonLinkCircular(array) {\n\t    if (!(n = array.length)) return;\n\t    var n, i = 0, a = array[0], b;\n\t    while (++i < n) {\n\t      a.n = b = array[i];\n\t      b.p = a;\n\t      a = b;\n\t    }\n\t    a.n = b = array[0];\n\t    b.p = a;\n\t  }\n\t  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n\t    this.x = point;\n\t    this.z = points;\n\t    this.o = other;\n\t    this.e = entry;\n\t    this.v = false;\n\t    this.n = this.p = null;\n\t  }\n\t  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n\t    return function(rotate, listener) {\n\t      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          clip.point = pointRing;\n\t          clip.lineStart = ringStart;\n\t          clip.lineEnd = ringEnd;\n\t          segments = [];\n\t          polygon = [];\n\t        },\n\t        polygonEnd: function() {\n\t          clip.point = point;\n\t          clip.lineStart = lineStart;\n\t          clip.lineEnd = lineEnd;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n\t          if (segments.length) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n\t          } else if (clipStartInside) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            interpolate(null, null, 1, listener);\n\t            listener.lineEnd();\n\t          }\n\t          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n\t          segments = polygon = null;\n\t        },\n\t        sphere: function() {\n\t          listener.polygonStart();\n\t          listener.lineStart();\n\t          interpolate(null, null, 1, listener);\n\t          listener.lineEnd();\n\t          listener.polygonEnd();\n\t        }\n\t      };\n\t      function point(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n\t      }\n\t      function pointLine(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        line.point(point[0], point[1]);\n\t      }\n\t      function lineStart() {\n\t        clip.point = pointLine;\n\t        line.lineStart();\n\t      }\n\t      function lineEnd() {\n\t        clip.point = point;\n\t        line.lineEnd();\n\t      }\n\t      var segments;\n\t      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n\t      function pointRing(λ, φ) {\n\t        ring.push([ λ, φ ]);\n\t        var point = rotate(λ, φ);\n\t        ringListener.point(point[0], point[1]);\n\t      }\n\t      function ringStart() {\n\t        ringListener.lineStart();\n\t        ring = [];\n\t      }\n\t      function ringEnd() {\n\t        pointRing(ring[0][0], ring[0][1]);\n\t        ringListener.lineEnd();\n\t        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n\t        ring.pop();\n\t        polygon.push(ring);\n\t        ring = null;\n\t        if (!n) return;\n\t        if (clean & 1) {\n\t          segment = ringSegments[0];\n\t          var n = segment.length - 1, i = -1, point;\n\t          if (n > 0) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n\t            listener.lineEnd();\n\t          }\n\t          return;\n\t        }\n\t        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n\t      }\n\t      return clip;\n\t    };\n\t  }\n\t  function d3_geo_clipSegmentLength1(segment) {\n\t    return segment.length > 1;\n\t  }\n\t  function d3_geo_clipBufferListener() {\n\t    var lines = [], line;\n\t    return {\n\t      lineStart: function() {\n\t        lines.push(line = []);\n\t      },\n\t      point: function(λ, φ) {\n\t        line.push([ λ, φ ]);\n\t      },\n\t      lineEnd: d3_noop,\n\t      buffer: function() {\n\t        var buffer = lines;\n\t        lines = [];\n\t        line = null;\n\t        return buffer;\n\t      },\n\t      rejoin: function() {\n\t        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipSort(a, b) {\n\t    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n\t  }\n\t  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n\t  function d3_geo_clipAntimeridianLine(listener) {\n\t    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n\t    return {\n\t      lineStart: function() {\n\t        listener.lineStart();\n\t        clean = 1;\n\t      },\n\t      point: function(λ1, φ1) {\n\t        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n\t        if (abs(dλ - π) < ε) {\n\t          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          listener.point(λ1, φ0);\n\t          clean = 0;\n\t        } else if (sλ0 !== sλ1 && dλ >= π) {\n\t          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n\t          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n\t          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          clean = 0;\n\t        }\n\t        listener.point(λ0 = λ1, φ0 = φ1);\n\t        sλ0 = sλ1;\n\t      },\n\t      lineEnd: function() {\n\t        listener.lineEnd();\n\t        λ0 = φ0 = NaN;\n\t      },\n\t      clean: function() {\n\t        return 2 - clean;\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n\t    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n\t    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n\t  }\n\t  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n\t    var φ;\n\t    if (from == null) {\n\t      φ = direction * halfπ;\n\t      listener.point(-π, φ);\n\t      listener.point(0, φ);\n\t      listener.point(π, φ);\n\t      listener.point(π, 0);\n\t      listener.point(π, -φ);\n\t      listener.point(0, -φ);\n\t      listener.point(-π, -φ);\n\t      listener.point(-π, 0);\n\t      listener.point(-π, φ);\n\t    } else if (abs(from[0] - to[0]) > ε) {\n\t      var s = from[0] < to[0] ? π : -π;\n\t      φ = direction * s / 2;\n\t      listener.point(-s, φ);\n\t      listener.point(0, φ);\n\t      listener.point(s, φ);\n\t    } else {\n\t      listener.point(to[0], to[1]);\n\t    }\n\t  }\n\t  function d3_geo_pointInPolygon(point, polygon) {\n\t    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n\t    d3_geo_areaRingSum.reset();\n\t    for (var i = 0, n = polygon.length; i < n; ++i) {\n\t      var ring = polygon[i], m = ring.length;\n\t      if (!m) continue;\n\t      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n\t      while (true) {\n\t        if (j === m) j = 0;\n\t        point = ring[j];\n\t        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n\t        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n\t        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n\t        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n\t          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n\t          d3_geo_cartesianNormalize(arc);\n\t          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n\t          d3_geo_cartesianNormalize(intersection);\n\t          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n\t          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n\t            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n\t          }\n\t        }\n\t        if (!j++) break;\n\t        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n\t      }\n\t    }\n\t    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n\t  }\n\t  function d3_geo_clipCircle(radius) {\n\t    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n\t    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n\t    function visible(λ, φ) {\n\t      return Math.cos(λ) * Math.cos(φ) > cr;\n\t    }\n\t    function clipLine(listener) {\n\t      var point0, c0, v0, v00, clean;\n\t      return {\n\t        lineStart: function() {\n\t          v00 = v0 = false;\n\t          clean = 1;\n\t        },\n\t        point: function(λ, φ) {\n\t          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n\t          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n\t          if (v !== v0) {\n\t            point2 = intersect(point0, point1);\n\t            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n\t              point1[0] += ε;\n\t              point1[1] += ε;\n\t              v = visible(point1[0], point1[1]);\n\t            }\n\t          }\n\t          if (v !== v0) {\n\t            clean = 0;\n\t            if (v) {\n\t              listener.lineStart();\n\t              point2 = intersect(point1, point0);\n\t              listener.point(point2[0], point2[1]);\n\t            } else {\n\t              point2 = intersect(point0, point1);\n\t              listener.point(point2[0], point2[1]);\n\t              listener.lineEnd();\n\t            }\n\t            point0 = point2;\n\t          } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t            var t;\n\t            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t              clean = 0;\n\t              if (smallRadius) {\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t              } else {\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t              }\n\t            }\n\t          }\n\t          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n\t            listener.point(point1[0], point1[1]);\n\t          }\n\t          point0 = point1, v0 = v, c0 = c;\n\t        },\n\t        lineEnd: function() {\n\t          if (v0) listener.lineEnd();\n\t          point0 = null;\n\t        },\n\t        clean: function() {\n\t          return clean | (v00 && v0) << 1;\n\t        }\n\t      };\n\t    }\n\t    function intersect(a, b, two) {\n\t      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n\t      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n\t      if (!determinant) return !two && a;\n\t      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n\t      d3_geo_cartesianAdd(A, B);\n\t      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n\t      if (t2 < 0) return;\n\t      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n\t      d3_geo_cartesianAdd(q, A);\n\t      q = d3_geo_spherical(q);\n\t      if (!two) return q;\n\t      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n\t      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n\t      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n\t      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n\t      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n\t        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n\t        d3_geo_cartesianAdd(q1, A);\n\t        return [ q, d3_geo_spherical(q1) ];\n\t      }\n\t    }\n\t    function code(λ, φ) {\n\t      var r = smallRadius ? radius : π - radius, code = 0;\n\t      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n\t      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n\t      return code;\n\t    }\n\t  }\n\t  function d3_geom_clipLine(x0, y0, x1, y1) {\n\t    return function(line) {\n\t      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n\t      r = x0 - ax;\n\t      if (!dx && r > 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dx > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = x1 - ax;\n\t      if (!dx && r < 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dx > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      r = y0 - ay;\n\t      if (!dy && r > 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dy > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = y1 - ay;\n\t      if (!dy && r < 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dy > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      if (t0 > 0) line.a = {\n\t        x: ax + t0 * dx,\n\t        y: ay + t0 * dy\n\t      };\n\t      if (t1 < 1) line.b = {\n\t        x: ax + t1 * dx,\n\t        y: ay + t1 * dy\n\t      };\n\t      return line;\n\t    };\n\t  }\n\t  var d3_geo_clipExtentMAX = 1e9;\n\t  d3.geo.clipExtent = function() {\n\t    var x0, y0, x1, y1, stream, clip, clipExtent = {\n\t      stream: function(output) {\n\t        if (stream) stream.valid = false;\n\t        stream = clip(output);\n\t        stream.valid = true;\n\t        return stream;\n\t      },\n\t      extent: function(_) {\n\t        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n\t        if (stream) stream.valid = false, stream = null;\n\t        return clipExtent;\n\t      }\n\t    };\n\t    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n\t  };\n\t  function d3_geo_clipExtent(x0, y0, x1, y1) {\n\t    return function(listener) {\n\t      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          listener = bufferListener;\n\t          segments = [];\n\t          polygon = [];\n\t          clean = true;\n\t        },\n\t        polygonEnd: function() {\n\t          listener = listener_;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n\t          if (inside || visible) {\n\t            listener.polygonStart();\n\t            if (inside) {\n\t              listener.lineStart();\n\t              interpolate(null, null, 1, listener);\n\t              listener.lineEnd();\n\t            }\n\t            if (visible) {\n\t              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n\t            }\n\t            listener.polygonEnd();\n\t          }\n\t          segments = polygon = ring = null;\n\t        }\n\t      };\n\t      function insidePolygon(p) {\n\t        var wn = 0, n = polygon.length, y = p[1];\n\t        for (var i = 0; i < n; ++i) {\n\t          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n\t            b = v[j];\n\t            if (a[1] <= y) {\n\t              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n\t            } else {\n\t              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n\t            }\n\t            a = b;\n\t          }\n\t        }\n\t        return wn !== 0;\n\t      }\n\t      function interpolate(from, to, direction, listener) {\n\t        var a = 0, a1 = 0;\n\t        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n\t          do {\n\t            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t          } while ((a = (a + direction + 4) % 4) !== a1);\n\t        } else {\n\t          listener.point(to[0], to[1]);\n\t        }\n\t      }\n\t      function pointVisible(x, y) {\n\t        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t      }\n\t      function point(x, y) {\n\t        if (pointVisible(x, y)) listener.point(x, y);\n\t      }\n\t      var x__, y__, v__, x_, y_, v_, first, clean;\n\t      function lineStart() {\n\t        clip.point = linePoint;\n\t        if (polygon) polygon.push(ring = []);\n\t        first = true;\n\t        v_ = false;\n\t        x_ = y_ = NaN;\n\t      }\n\t      function lineEnd() {\n\t        if (segments) {\n\t          linePoint(x__, y__);\n\t          if (v__ && v_) bufferListener.rejoin();\n\t          segments.push(bufferListener.buffer());\n\t        }\n\t        clip.point = point;\n\t        if (v_) listener.lineEnd();\n\t      }\n\t      function linePoint(x, y) {\n\t        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n\t        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n\t        var v = pointVisible(x, y);\n\t        if (polygon) ring.push([ x, y ]);\n\t        if (first) {\n\t          x__ = x, y__ = y, v__ = v;\n\t          first = false;\n\t          if (v) {\n\t            listener.lineStart();\n\t            listener.point(x, y);\n\t          }\n\t        } else {\n\t          if (v && v_) listener.point(x, y); else {\n\t            var l = {\n\t              a: {\n\t                x: x_,\n\t                y: y_\n\t              },\n\t              b: {\n\t                x: x,\n\t                y: y\n\t              }\n\t            };\n\t            if (clipLine(l)) {\n\t              if (!v_) {\n\t                listener.lineStart();\n\t                listener.point(l.a.x, l.a.y);\n\t              }\n\t              listener.point(l.b.x, l.b.y);\n\t              if (!v) listener.lineEnd();\n\t              clean = false;\n\t            } else if (v) {\n\t              listener.lineStart();\n\t              listener.point(x, y);\n\t              clean = false;\n\t            }\n\t          }\n\t        }\n\t        x_ = x, y_ = y, v_ = v;\n\t      }\n\t      return clip;\n\t    };\n\t    function corner(p, direction) {\n\t      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n\t    }\n\t    function compare(a, b) {\n\t      return comparePoints(a.x, b.x);\n\t    }\n\t    function comparePoints(a, b) {\n\t      var ca = corner(a, 1), cb = corner(b, 1);\n\t      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n\t    }\n\t  }\n\t  function d3_geo_conic(projectAt) {\n\t    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n\t    p.parallels = function(_) {\n\t      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n\t      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n\t    };\n\t    return p;\n\t  }\n\t  function d3_geo_conicEqualArea(φ0, φ1) {\n\t    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n\t    function forward(λ, φ) {\n\t      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n\t      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = ρ0 - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEqualArea = function() {\n\t    return d3_geo_conic(d3_geo_conicEqualArea);\n\t  }).raw = d3_geo_conicEqualArea;\n\t  d3.geo.albers = function() {\n\t    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n\t  };\n\t  d3.geo.albersUsa = function() {\n\t    var lower48 = d3.geo.albers();\n\t    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n\t    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n\t    var point, pointStream = {\n\t      point: function(x, y) {\n\t        point = [ x, y ];\n\t      }\n\t    }, lower48Point, alaskaPoint, hawaiiPoint;\n\t    function albersUsa(coordinates) {\n\t      var x = coordinates[0], y = coordinates[1];\n\t      point = null;\n\t      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n\t      return point;\n\t    }\n\t    albersUsa.invert = function(coordinates) {\n\t      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n\t      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n\t    };\n\t    albersUsa.stream = function(stream) {\n\t      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n\t      return {\n\t        point: function(x, y) {\n\t          lower48Stream.point(x, y);\n\t          alaskaStream.point(x, y);\n\t          hawaiiStream.point(x, y);\n\t        },\n\t        sphere: function() {\n\t          lower48Stream.sphere();\n\t          alaskaStream.sphere();\n\t          hawaiiStream.sphere();\n\t        },\n\t        lineStart: function() {\n\t          lower48Stream.lineStart();\n\t          alaskaStream.lineStart();\n\t          hawaiiStream.lineStart();\n\t        },\n\t        lineEnd: function() {\n\t          lower48Stream.lineEnd();\n\t          alaskaStream.lineEnd();\n\t          hawaiiStream.lineEnd();\n\t        },\n\t        polygonStart: function() {\n\t          lower48Stream.polygonStart();\n\t          alaskaStream.polygonStart();\n\t          hawaiiStream.polygonStart();\n\t        },\n\t        polygonEnd: function() {\n\t          lower48Stream.polygonEnd();\n\t          alaskaStream.polygonEnd();\n\t          hawaiiStream.polygonEnd();\n\t        }\n\t      };\n\t    };\n\t    albersUsa.precision = function(_) {\n\t      if (!arguments.length) return lower48.precision();\n\t      lower48.precision(_);\n\t      alaska.precision(_);\n\t      hawaii.precision(_);\n\t      return albersUsa;\n\t    };\n\t    albersUsa.scale = function(_) {\n\t      if (!arguments.length) return lower48.scale();\n\t      lower48.scale(_);\n\t      alaska.scale(_ * .35);\n\t      hawaii.scale(_);\n\t      return albersUsa.translate(lower48.translate());\n\t    };\n\t    albersUsa.translate = function(_) {\n\t      if (!arguments.length) return lower48.translate();\n\t      var k = lower48.scale(), x = +_[0], y = +_[1];\n\t      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n\t      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      return albersUsa;\n\t    };\n\t    return albersUsa.scale(1070);\n\t  };\n\t  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_pathAreaPolygon = 0;\n\t      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n\t      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n\t    }\n\t  };\n\t  function d3_geo_pathAreaRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathArea.point = function(x, y) {\n\t      d3_geo_pathArea.point = nextPoint;\n\t      x00 = x0 = x, y00 = y0 = y;\n\t    };\n\t    function nextPoint(x, y) {\n\t      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n\t      x0 = x, y0 = y;\n\t    }\n\t    d3_geo_pathArea.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n\t  var d3_geo_pathBounds = {\n\t    point: d3_geo_pathBoundsPoint,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_pathBoundsPoint(x, y) {\n\t    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n\t    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n\t    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n\t    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n\t  }\n\t  function d3_geo_pathBuffer() {\n\t    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointCircle = d3_geo_pathBufferCircle(_);\n\t        return stream;\n\t      },\n\t      result: function() {\n\t        if (buffer.length) {\n\t          var result = buffer.join(\"\");\n\t          buffer = [];\n\t          return result;\n\t        }\n\t      }\n\t    };\n\t    function point(x, y) {\n\t      buffer.push(\"M\", x, \",\", y, pointCircle);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      buffer.push(\"M\", x, \",\", y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      buffer.push(\"L\", x, \",\", y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      buffer.push(\"Z\");\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_pathBufferCircle(radius) {\n\t    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n\t  }\n\t  var d3_geo_pathCentroid = {\n\t    point: d3_geo_pathCentroidPoint,\n\t    lineStart: d3_geo_pathCentroidLineStart,\n\t    lineEnd: d3_geo_pathCentroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n\t      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n\t    }\n\t  };\n\t  function d3_geo_pathCentroidPoint(x, y) {\n\t    d3_geo_centroidX0 += x;\n\t    d3_geo_centroidY0 += y;\n\t    ++d3_geo_centroidZ0;\n\t  }\n\t  function d3_geo_pathCentroidLineStart() {\n\t    var x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t  }\n\t  function d3_geo_pathCentroidLineEnd() {\n\t    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t  }\n\t  function d3_geo_pathCentroidRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      z = y0 * x - x0 * y;\n\t      d3_geo_centroidX2 += z * (x0 + x);\n\t      d3_geo_centroidY2 += z * (y0 + y);\n\t      d3_geo_centroidZ2 += z * 3;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t    d3_geo_pathCentroid.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  function d3_geo_pathContext(context) {\n\t    var pointRadius = 4.5;\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointRadius = _;\n\t        return stream;\n\t      },\n\t      result: d3_noop\n\t    };\n\t    function point(x, y) {\n\t      context.moveTo(x + pointRadius, y);\n\t      context.arc(x, y, pointRadius, 0, τ);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      context.moveTo(x, y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      context.lineTo(x, y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      context.closePath();\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_resample(project) {\n\t    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n\t    function resample(stream) {\n\t      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n\t    }\n\t    function resampleNone(stream) {\n\t      return d3_geo_transformPoint(stream, function(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      });\n\t    }\n\t    function resampleRecursive(stream) {\n\t      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n\t      var resample = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          stream.polygonStart();\n\t          resample.lineStart = ringStart;\n\t        },\n\t        polygonEnd: function() {\n\t          stream.polygonEnd();\n\t          resample.lineStart = lineStart;\n\t        }\n\t      };\n\t      function point(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      }\n\t      function lineStart() {\n\t        x0 = NaN;\n\t        resample.point = linePoint;\n\t        stream.lineStart();\n\t      }\n\t      function linePoint(λ, φ) {\n\t        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t        stream.point(x0, y0);\n\t      }\n\t      function lineEnd() {\n\t        resample.point = point;\n\t        stream.lineEnd();\n\t      }\n\t      function ringStart() {\n\t        lineStart();\n\t        resample.point = ringPoint;\n\t        resample.lineEnd = ringEnd;\n\t      }\n\t      function ringPoint(λ, φ) {\n\t        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t        resample.point = linePoint;\n\t      }\n\t      function ringEnd() {\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n\t        resample.lineEnd = lineEnd;\n\t        lineEnd();\n\t      }\n\t      return resample;\n\t    }\n\t    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n\t      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n\t      if (d2 > 4 * δ2 && depth--) {\n\t        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n\t        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n\t          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n\t          stream.point(x2, y2);\n\t          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n\t        }\n\t      }\n\t    }\n\t    resample.precision = function(_) {\n\t      if (!arguments.length) return Math.sqrt(δ2);\n\t      maxDepth = (δ2 = _ * _) > 0 && 16;\n\t      return resample;\n\t    };\n\t    return resample;\n\t  }\n\t  d3.geo.path = function() {\n\t    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n\t    function path(object) {\n\t      if (object) {\n\t        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n\t        d3.geo.stream(object, cacheStream);\n\t      }\n\t      return contextStream.result();\n\t    }\n\t    path.area = function(object) {\n\t      d3_geo_pathAreaSum = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n\t      return d3_geo_pathAreaSum;\n\t    };\n\t    path.centroid = function(object) {\n\t      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n\t      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n\t    };\n\t    path.bounds = function(object) {\n\t      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n\t      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n\t      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n\t    };\n\t    path.projection = function(_) {\n\t      if (!arguments.length) return projection;\n\t      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n\t      return reset();\n\t    };\n\t    path.context = function(_) {\n\t      if (!arguments.length) return context;\n\t      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n\t      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t      return reset();\n\t    };\n\t    path.pointRadius = function(_) {\n\t      if (!arguments.length) return pointRadius;\n\t      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t      return path;\n\t    };\n\t    function reset() {\n\t      cacheStream = null;\n\t      return path;\n\t    }\n\t    return path.projection(d3.geo.albersUsa()).context(null);\n\t  };\n\t  function d3_geo_pathProjectStream(project) {\n\t    var resample = d3_geo_resample(function(x, y) {\n\t      return project([ x * d3_degrees, y * d3_degrees ]);\n\t    });\n\t    return function(stream) {\n\t      return d3_geo_projectionRadians(resample(stream));\n\t    };\n\t  }\n\t  d3.geo.transform = function(methods) {\n\t    return {\n\t      stream: function(stream) {\n\t        var transform = new d3_geo_transform(stream);\n\t        for (var k in methods) transform[k] = methods[k];\n\t        return transform;\n\t      }\n\t    };\n\t  };\n\t  function d3_geo_transform(stream) {\n\t    this.stream = stream;\n\t  }\n\t  d3_geo_transform.prototype = {\n\t    point: function(x, y) {\n\t      this.stream.point(x, y);\n\t    },\n\t    sphere: function() {\n\t      this.stream.sphere();\n\t    },\n\t    lineStart: function() {\n\t      this.stream.lineStart();\n\t    },\n\t    lineEnd: function() {\n\t      this.stream.lineEnd();\n\t    },\n\t    polygonStart: function() {\n\t      this.stream.polygonStart();\n\t    },\n\t    polygonEnd: function() {\n\t      this.stream.polygonEnd();\n\t    }\n\t  };\n\t  function d3_geo_transformPoint(stream, point) {\n\t    return {\n\t      point: point,\n\t      sphere: function() {\n\t        stream.sphere();\n\t      },\n\t      lineStart: function() {\n\t        stream.lineStart();\n\t      },\n\t      lineEnd: function() {\n\t        stream.lineEnd();\n\t      },\n\t      polygonStart: function() {\n\t        stream.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        stream.polygonEnd();\n\t      }\n\t    };\n\t  }\n\t  d3.geo.projection = d3_geo_projection;\n\t  d3.geo.projectionMutator = d3_geo_projectionMutator;\n\t  function d3_geo_projection(project) {\n\t    return d3_geo_projectionMutator(function() {\n\t      return project;\n\t    })();\n\t  }\n\t  function d3_geo_projectionMutator(projectAt) {\n\t    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n\t      x = project(x, y);\n\t      return [ x[0] * k + δx, δy - x[1] * k ];\n\t    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n\t    function projection(point) {\n\t      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n\t      return [ point[0] * k + δx, δy - point[1] * k ];\n\t    }\n\t    function invert(point) {\n\t      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n\t      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n\t    }\n\t    projection.stream = function(output) {\n\t      if (stream) stream.valid = false;\n\t      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n\t      stream.valid = true;\n\t      return stream;\n\t    };\n\t    projection.clipAngle = function(_) {\n\t      if (!arguments.length) return clipAngle;\n\t      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n\t      return invalidate();\n\t    };\n\t    projection.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent;\n\t      clipExtent = _;\n\t      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n\t      return invalidate();\n\t    };\n\t    projection.scale = function(_) {\n\t      if (!arguments.length) return k;\n\t      k = +_;\n\t      return reset();\n\t    };\n\t    projection.translate = function(_) {\n\t      if (!arguments.length) return [ x, y ];\n\t      x = +_[0];\n\t      y = +_[1];\n\t      return reset();\n\t    };\n\t    projection.center = function(_) {\n\t      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n\t      λ = _[0] % 360 * d3_radians;\n\t      φ = _[1] % 360 * d3_radians;\n\t      return reset();\n\t    };\n\t    projection.rotate = function(_) {\n\t      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n\t      δλ = _[0] % 360 * d3_radians;\n\t      δφ = _[1] % 360 * d3_radians;\n\t      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n\t      return reset();\n\t    };\n\t    d3.rebind(projection, projectResample, \"precision\");\n\t    function reset() {\n\t      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n\t      var center = project(λ, φ);\n\t      δx = x - center[0] * k;\n\t      δy = y + center[1] * k;\n\t      return invalidate();\n\t    }\n\t    function invalidate() {\n\t      if (stream) stream.valid = false, stream = null;\n\t      return projection;\n\t    }\n\t    return function() {\n\t      project = projectAt.apply(this, arguments);\n\t      projection.invert = project.invert && invert;\n\t      return reset();\n\t    };\n\t  }\n\t  function d3_geo_projectionRadians(stream) {\n\t    return d3_geo_transformPoint(stream, function(x, y) {\n\t      stream.point(x * d3_radians, y * d3_radians);\n\t    });\n\t  }\n\t  function d3_geo_equirectangular(λ, φ) {\n\t    return [ λ, φ ];\n\t  }\n\t  (d3.geo.equirectangular = function() {\n\t    return d3_geo_projection(d3_geo_equirectangular);\n\t  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n\t  d3.geo.rotation = function(rotate) {\n\t    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n\t    function forward(coordinates) {\n\t      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    }\n\t    forward.invert = function(coordinates) {\n\t      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    };\n\t    return forward;\n\t  };\n\t  function d3_geo_identityRotation(λ, φ) {\n\t    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t  }\n\t  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n\t  function d3_geo_rotation(δλ, δφ, δγ) {\n\t    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n\t  }\n\t  function d3_geo_forwardRotationλ(δλ) {\n\t    return function(λ, φ) {\n\t      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t    };\n\t  }\n\t  function d3_geo_rotationλ(δλ) {\n\t    var rotation = d3_geo_forwardRotationλ(δλ);\n\t    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n\t    return rotation;\n\t  }\n\t  function d3_geo_rotationφγ(δφ, δγ) {\n\t    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n\t    function rotation(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n\t      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n\t    }\n\t    rotation.invert = function(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n\t      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n\t    };\n\t    return rotation;\n\t  }\n\t  d3.geo.circle = function() {\n\t    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n\t    function circle() {\n\t      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n\t      interpolate(null, null, 1, {\n\t        point: function(x, y) {\n\t          ring.push(x = rotate(x, y));\n\t          x[0] *= d3_degrees, x[1] *= d3_degrees;\n\t        }\n\t      });\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ ring ]\n\t      };\n\t    }\n\t    circle.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return circle;\n\t    };\n\t    circle.angle = function(x) {\n\t      if (!arguments.length) return angle;\n\t      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n\t      return circle;\n\t    };\n\t    circle.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n\t      return circle;\n\t    };\n\t    return circle.angle(90);\n\t  };\n\t  function d3_geo_circleInterpolate(radius, precision) {\n\t    var cr = Math.cos(radius), sr = Math.sin(radius);\n\t    return function(from, to, direction, listener) {\n\t      var step = direction * precision;\n\t      if (from != null) {\n\t        from = d3_geo_circleAngle(cr, from);\n\t        to = d3_geo_circleAngle(cr, to);\n\t        if (direction > 0 ? from < to : from > to) from += direction * τ;\n\t      } else {\n\t        from = radius + direction * τ;\n\t        to = radius - .5 * step;\n\t      }\n\t      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n\t        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_circleAngle(cr, point) {\n\t    var a = d3_geo_cartesian(point);\n\t    a[0] -= cr;\n\t    d3_geo_cartesianNormalize(a);\n\t    var angle = d3_acos(-a[1]);\n\t    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n\t  }\n\t  d3.geo.distance = function(a, b) {\n\t    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n\t    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n\t  };\n\t  d3.geo.graticule = function() {\n\t    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n\t    function graticule() {\n\t      return {\n\t        type: \"MultiLineString\",\n\t        coordinates: lines()\n\t      };\n\t    }\n\t    function lines() {\n\t      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n\t        return abs(x % DX) > ε;\n\t      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n\t        return abs(y % DY) > ε;\n\t      }).map(y));\n\t    }\n\t    graticule.lines = function() {\n\t      return lines().map(function(coordinates) {\n\t        return {\n\t          type: \"LineString\",\n\t          coordinates: coordinates\n\t        };\n\t      });\n\t    };\n\t    graticule.outline = function() {\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n\t      };\n\t    };\n\t    graticule.extent = function(_) {\n\t      if (!arguments.length) return graticule.minorExtent();\n\t      return graticule.majorExtent(_).minorExtent(_);\n\t    };\n\t    graticule.majorExtent = function(_) {\n\t      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n\t      X0 = +_[0][0], X1 = +_[1][0];\n\t      Y0 = +_[0][1], Y1 = +_[1][1];\n\t      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.minorExtent = function(_) {\n\t      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t      x0 = +_[0][0], x1 = +_[1][0];\n\t      y0 = +_[0][1], y1 = +_[1][1];\n\t      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.step = function(_) {\n\t      if (!arguments.length) return graticule.minorStep();\n\t      return graticule.majorStep(_).minorStep(_);\n\t    };\n\t    graticule.majorStep = function(_) {\n\t      if (!arguments.length) return [ DX, DY ];\n\t      DX = +_[0], DY = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.minorStep = function(_) {\n\t      if (!arguments.length) return [ dx, dy ];\n\t      dx = +_[0], dy = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      precision = +_;\n\t      x = d3_geo_graticuleX(y0, y1, 90);\n\t      y = d3_geo_graticuleY(x0, x1, precision);\n\t      X = d3_geo_graticuleX(Y0, Y1, 90);\n\t      Y = d3_geo_graticuleY(X0, X1, precision);\n\t      return graticule;\n\t    };\n\t    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n\t  };\n\t  function d3_geo_graticuleX(y0, y1, dy) {\n\t    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n\t    return function(x) {\n\t      return y.map(function(y) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_geo_graticuleY(x0, x1, dx) {\n\t    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n\t    return function(y) {\n\t      return x.map(function(x) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_source(d) {\n\t    return d.source;\n\t  }\n\t  function d3_target(d) {\n\t    return d.target;\n\t  }\n\t  d3.geo.greatArc = function() {\n\t    var source = d3_source, source_, target = d3_target, target_;\n\t    function greatArc() {\n\t      return {\n\t        type: \"LineString\",\n\t        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n\t      };\n\t    }\n\t    greatArc.distance = function() {\n\t      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n\t    };\n\t    greatArc.source = function(_) {\n\t      if (!arguments.length) return source;\n\t      source = _, source_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.target = function(_) {\n\t      if (!arguments.length) return target;\n\t      target = _, target_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.precision = function() {\n\t      return arguments.length ? greatArc : 0;\n\t    };\n\t    return greatArc;\n\t  };\n\t  d3.geo.interpolate = function(source, target) {\n\t    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n\t  };\n\t  function d3_geo_interpolate(x0, y0, x1, y1) {\n\t    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n\t    var interpolate = d ? function(t) {\n\t      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n\t      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n\t    } : function() {\n\t      return [ x0 * d3_degrees, y0 * d3_degrees ];\n\t    };\n\t    interpolate.distance = d;\n\t    return interpolate;\n\t  }\n\t  d3.geo.length = function(object) {\n\t    d3_geo_lengthSum = 0;\n\t    d3.geo.stream(object, d3_geo_length);\n\t    return d3_geo_lengthSum;\n\t  };\n\t  var d3_geo_lengthSum;\n\t  var d3_geo_length = {\n\t    sphere: d3_noop,\n\t    point: d3_noop,\n\t    lineStart: d3_geo_lengthLineStart,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_lengthLineStart() {\n\t    var λ0, sinφ0, cosφ0;\n\t    d3_geo_length.point = function(λ, φ) {\n\t      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n\t      d3_geo_length.point = nextPoint;\n\t    };\n\t    d3_geo_length.lineEnd = function() {\n\t      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n\t      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n\t      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n\t    }\n\t  }\n\t  function d3_geo_azimuthal(scale, angle) {\n\t    function azimuthal(λ, φ) {\n\t      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n\t      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n\t    }\n\t    azimuthal.invert = function(x, y) {\n\t      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n\t      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n\t    };\n\t    return azimuthal;\n\t  }\n\t  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return Math.sqrt(2 / (1 + cosλcosφ));\n\t  }, function(ρ) {\n\t    return 2 * Math.asin(ρ / 2);\n\t  });\n\t  (d3.geo.azimuthalEqualArea = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n\t  }).raw = d3_geo_azimuthalEqualArea;\n\t  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n\t    var c = Math.acos(cosλcosφ);\n\t    return c && c / Math.sin(c);\n\t  }, d3_identity);\n\t  (d3.geo.azimuthalEquidistant = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n\t  }).raw = d3_geo_azimuthalEquidistant;\n\t  function d3_geo_conicConformal(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), t = function(φ) {\n\t      return Math.tan(π / 4 + φ / 2);\n\t    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n\t    if (!n) return d3_geo_mercator;\n\t    function forward(λ, φ) {\n\t      if (F > 0) {\n\t        if (φ < -halfπ + ε) φ = -halfπ + ε;\n\t      } else {\n\t        if (φ > halfπ - ε) φ = halfπ - ε;\n\t      }\n\t      var ρ = F / Math.pow(t(φ), n);\n\t      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n\t      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicConformal = function() {\n\t    return d3_geo_conic(d3_geo_conicConformal);\n\t  }).raw = d3_geo_conicConformal;\n\t  function d3_geo_conicEquidistant(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n\t    if (abs(n) < ε) return d3_geo_equirectangular;\n\t    function forward(λ, φ) {\n\t      var ρ = G - φ;\n\t      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = G - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEquidistant = function() {\n\t    return d3_geo_conic(d3_geo_conicEquidistant);\n\t  }).raw = d3_geo_conicEquidistant;\n\t  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / cosλcosφ;\n\t  }, Math.atan);\n\t  (d3.geo.gnomonic = function() {\n\t    return d3_geo_projection(d3_geo_gnomonic);\n\t  }).raw = d3_geo_gnomonic;\n\t  function d3_geo_mercator(λ, φ) {\n\t    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n\t  }\n\t  d3_geo_mercator.invert = function(x, y) {\n\t    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n\t  };\n\t  function d3_geo_mercatorProjection(project) {\n\t    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n\t    m.scale = function() {\n\t      var v = scale.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.translate = function() {\n\t      var v = translate.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.clipExtent = function(_) {\n\t      var v = clipExtent.apply(m, arguments);\n\t      if (v === m) {\n\t        if (clipAuto = _ == null) {\n\t          var k = π * scale(), t = translate();\n\t          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n\t        }\n\t      } else if (clipAuto) {\n\t        v = null;\n\t      }\n\t      return v;\n\t    };\n\t    return m.clipExtent(null);\n\t  }\n\t  (d3.geo.mercator = function() {\n\t    return d3_geo_mercatorProjection(d3_geo_mercator);\n\t  }).raw = d3_geo_mercator;\n\t  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n\t    return 1;\n\t  }, Math.asin);\n\t  (d3.geo.orthographic = function() {\n\t    return d3_geo_projection(d3_geo_orthographic);\n\t  }).raw = d3_geo_orthographic;\n\t  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / (1 + cosλcosφ);\n\t  }, function(ρ) {\n\t    return 2 * Math.atan(ρ);\n\t  });\n\t  (d3.geo.stereographic = function() {\n\t    return d3_geo_projection(d3_geo_stereographic);\n\t  }).raw = d3_geo_stereographic;\n\t  function d3_geo_transverseMercator(λ, φ) {\n\t    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n\t  }\n\t  d3_geo_transverseMercator.invert = function(x, y) {\n\t    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n\t  };\n\t  (d3.geo.transverseMercator = function() {\n\t    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n\t    projection.center = function(_) {\n\t      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n\t    };\n\t    projection.rotate = function(_) {\n\t      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n\t      [ _[0], _[1], _[2] - 90 ]);\n\t    };\n\t    return rotate([ 0, 0, 90 ]);\n\t  }).raw = d3_geo_transverseMercator;\n\t  d3.geom = {};\n\t  function d3_geom_pointX(d) {\n\t    return d[0];\n\t  }\n\t  function d3_geom_pointY(d) {\n\t    return d[1];\n\t  }\n\t  d3.geom.hull = function(vertices) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY;\n\t    if (arguments.length) return hull(vertices);\n\t    function hull(data) {\n\t      if (data.length < 3) return [];\n\t      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n\t      for (i = 0; i < n; i++) {\n\t        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n\t      }\n\t      points.sort(d3_geom_hullOrder);\n\t      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n\t      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n\t      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n\t      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n\t      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n\t      return polygon;\n\t    }\n\t    hull.x = function(_) {\n\t      return arguments.length ? (x = _, hull) : x;\n\t    };\n\t    hull.y = function(_) {\n\t      return arguments.length ? (y = _, hull) : y;\n\t    };\n\t    return hull;\n\t  };\n\t  function d3_geom_hullUpper(points) {\n\t    var n = points.length, hull = [ 0, 1 ], hs = 2;\n\t    for (var i = 2; i < n; i++) {\n\t      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n\t      hull[hs++] = i;\n\t    }\n\t    return hull.slice(0, hs);\n\t  }\n\t  function d3_geom_hullOrder(a, b) {\n\t    return a[0] - b[0] || a[1] - b[1];\n\t  }\n\t  d3.geom.polygon = function(coordinates) {\n\t    d3_subclass(coordinates, d3_geom_polygonPrototype);\n\t    return coordinates;\n\t  };\n\t  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n\t  d3_geom_polygonPrototype.area = function() {\n\t    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      area += a[1] * b[0] - a[0] * b[1];\n\t    }\n\t    return area * .5;\n\t  };\n\t  d3_geom_polygonPrototype.centroid = function(k) {\n\t    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n\t    if (!arguments.length) k = -1 / (6 * this.area());\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      c = a[0] * b[1] - b[0] * a[1];\n\t      x += (a[0] + b[0]) * c;\n\t      y += (a[1] + b[1]) * c;\n\t    }\n\t    return [ x * k, y * k ];\n\t  };\n\t  d3_geom_polygonPrototype.clip = function(subject) {\n\t    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n\t    while (++i < n) {\n\t      input = subject.slice();\n\t      subject.length = 0;\n\t      b = this[i];\n\t      c = input[(m = input.length - closed) - 1];\n\t      j = -1;\n\t      while (++j < m) {\n\t        d = input[j];\n\t        if (d3_geom_polygonInside(d, a, b)) {\n\t          if (!d3_geom_polygonInside(c, a, b)) {\n\t            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t          }\n\t          subject.push(d);\n\t        } else if (d3_geom_polygonInside(c, a, b)) {\n\t          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t        }\n\t        c = d;\n\t      }\n\t      if (closed) subject.push(subject[0]);\n\t      a = b;\n\t    }\n\t    return subject;\n\t  };\n\t  function d3_geom_polygonInside(p, a, b) {\n\t    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n\t  }\n\t  function d3_geom_polygonIntersect(c, d, a, b) {\n\t    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n\t    return [ x1 + ua * x21, y1 + ua * y21 ];\n\t  }\n\t  function d3_geom_polygonClosed(coordinates) {\n\t    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n\t    return !(a[0] - b[0] || a[1] - b[1]);\n\t  }\n\t  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n\t  function d3_geom_voronoiBeach() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.edge = this.site = this.circle = null;\n\t  }\n\t  function d3_geom_voronoiCreateBeach(site) {\n\t    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n\t    beach.site = site;\n\t    return beach;\n\t  }\n\t  function d3_geom_voronoiDetachBeach(beach) {\n\t    d3_geom_voronoiDetachCircle(beach);\n\t    d3_geom_voronoiBeaches.remove(beach);\n\t    d3_geom_voronoiBeachPool.push(beach);\n\t    d3_geom_voronoiRedBlackNode(beach);\n\t  }\n\t  function d3_geom_voronoiRemoveBeach(beach) {\n\t    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n\t      x: x,\n\t      y: y\n\t    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n\t    d3_geom_voronoiDetachBeach(beach);\n\t    var lArc = previous;\n\t    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n\t      previous = lArc.P;\n\t      disappearing.unshift(lArc);\n\t      d3_geom_voronoiDetachBeach(lArc);\n\t      lArc = previous;\n\t    }\n\t    disappearing.unshift(lArc);\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    var rArc = next;\n\t    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n\t      next = rArc.N;\n\t      disappearing.push(rArc);\n\t      d3_geom_voronoiDetachBeach(rArc);\n\t      rArc = next;\n\t    }\n\t    disappearing.push(rArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var nArcs = disappearing.length, iArc;\n\t    for (iArc = 1; iArc < nArcs; ++iArc) {\n\t      rArc = disappearing[iArc];\n\t      lArc = disappearing[iArc - 1];\n\t      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t    }\n\t    lArc = disappearing[0];\n\t    rArc = disappearing[nArcs - 1];\n\t    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiAddBeach(site) {\n\t    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n\t    while (node) {\n\t      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n\t      if (dxl > ε) node = node.L; else {\n\t        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n\t        if (dxr > ε) {\n\t          if (!node.R) {\n\t            lArc = node;\n\t            break;\n\t          }\n\t          node = node.R;\n\t        } else {\n\t          if (dxl > -ε) {\n\t            lArc = node.P;\n\t            rArc = node;\n\t          } else if (dxr > -ε) {\n\t            lArc = node;\n\t            rArc = node.N;\n\t          } else {\n\t            lArc = rArc = node;\n\t          }\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    var newArc = d3_geom_voronoiCreateBeach(site);\n\t    d3_geom_voronoiBeaches.insert(lArc, newArc);\n\t    if (!lArc && !rArc) return;\n\t    if (lArc === rArc) {\n\t      d3_geom_voronoiDetachCircle(lArc);\n\t      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n\t      d3_geom_voronoiBeaches.insert(newArc, rArc);\n\t      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      d3_geom_voronoiAttachCircle(lArc);\n\t      d3_geom_voronoiAttachCircle(rArc);\n\t      return;\n\t    }\n\t    if (!rArc) {\n\t      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      return;\n\t    }\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n\t      x: (cy * hb - by * hc) / d + ax,\n\t      y: (bx * hc - cx * hb) / d + ay\n\t    };\n\t    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n\t    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n\t    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n\t    if (!pby2) return rfocx;\n\t    var lArc = arc.P;\n\t    if (!lArc) return -Infinity;\n\t    site = lArc.site;\n\t    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n\t    if (!plby2) return lfocx;\n\t    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n\t    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t    return (rfocx + lfocx) / 2;\n\t  }\n\t  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n\t    var rArc = arc.N;\n\t    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n\t    var site = arc.site;\n\t    return site.y === directrix ? site.x : Infinity;\n\t  }\n\t  function d3_geom_voronoiCell(site) {\n\t    this.site = site;\n\t    this.edges = [];\n\t  }\n\t  d3_geom_voronoiCell.prototype.prepare = function() {\n\t    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n\t    while (iHalfEdge--) {\n\t      edge = halfEdges[iHalfEdge].edge;\n\t      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n\t    }\n\t    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n\t    return halfEdges.length;\n\t  };\n\t  function d3_geom_voronoiCloseCells(extent) {\n\t    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n\t    while (iCell--) {\n\t      cell = cells[iCell];\n\t      if (!cell || !cell.prepare()) continue;\n\t      halfEdges = cell.edges;\n\t      nHalfEdges = halfEdges.length;\n\t      iHalfEdge = 0;\n\t      while (iHalfEdge < nHalfEdges) {\n\t        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n\t        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n\t        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n\t          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n\t            x: x0,\n\t            y: abs(x2 - x0) < ε ? y2 : y1\n\t          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n\t            x: abs(y2 - y1) < ε ? x2 : x1,\n\t            y: y1\n\t          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n\t            x: x1,\n\t            y: abs(x2 - x1) < ε ? y2 : y0\n\t          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n\t            x: abs(y2 - y0) < ε ? x2 : x0,\n\t            y: y0\n\t          } : null), cell.site, null));\n\t          ++nHalfEdges;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n\t    return b.angle - a.angle;\n\t  }\n\t  function d3_geom_voronoiCircle() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.x = this.y = this.arc = this.site = this.cy = null;\n\t  }\n\t  function d3_geom_voronoiAttachCircle(arc) {\n\t    var lArc = arc.P, rArc = arc.N;\n\t    if (!lArc || !rArc) return;\n\t    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n\t    if (lSite === rSite) return;\n\t    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n\t    var d = 2 * (ax * cy - ay * cx);\n\t    if (d >= -ε2) return;\n\t    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n\t    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n\t    circle.arc = arc;\n\t    circle.site = cSite;\n\t    circle.x = x + bx;\n\t    circle.y = cy + Math.sqrt(x * x + y * y);\n\t    circle.cy = cy;\n\t    arc.circle = circle;\n\t    var before = null, node = d3_geom_voronoiCircles._;\n\t    while (node) {\n\t      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n\t        if (node.L) node = node.L; else {\n\t          before = node.P;\n\t          break;\n\t        }\n\t      } else {\n\t        if (node.R) node = node.R; else {\n\t          before = node;\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    d3_geom_voronoiCircles.insert(before, circle);\n\t    if (!before) d3_geom_voronoiFirstCircle = circle;\n\t  }\n\t  function d3_geom_voronoiDetachCircle(arc) {\n\t    var circle = arc.circle;\n\t    if (circle) {\n\t      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n\t      d3_geom_voronoiCircles.remove(circle);\n\t      d3_geom_voronoiCirclePool.push(circle);\n\t      d3_geom_voronoiRedBlackNode(circle);\n\t      arc.circle = null;\n\t    }\n\t  }\n\t  function d3_geom_voronoiClipEdges(extent) {\n\t    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n\t    while (i--) {\n\t      e = edges[i];\n\t      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n\t        e.a = e.b = null;\n\t        edges.splice(i, 1);\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiConnectEdge(edge, extent) {\n\t    var vb = edge.b;\n\t    if (vb) return true;\n\t    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n\t    if (ry === ly) {\n\t      if (fx < x0 || fx >= x1) return;\n\t      if (lx > rx) {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y0\n\t        }; else if (va.y >= y1) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y1\n\t        };\n\t      } else {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y1\n\t        }; else if (va.y < y0) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y0\n\t        };\n\t      }\n\t    } else {\n\t      fm = (lx - rx) / (ry - ly);\n\t      fb = fy - fm * fx;\n\t      if (fm < -1 || fm > 1) {\n\t        if (lx > rx) {\n\t          if (!va) va = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          }; else if (va.y >= y1) return;\n\t          vb = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          }; else if (va.y < y0) return;\n\t          vb = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          };\n\t        }\n\t      } else {\n\t        if (ly < ry) {\n\t          if (!va) va = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          }; else if (va.x >= x1) return;\n\t          vb = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          }; else if (va.x < x0) return;\n\t          vb = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          };\n\t        }\n\t      }\n\t    }\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    return true;\n\t  }\n\t  function d3_geom_voronoiEdge(lSite, rSite) {\n\t    this.l = lSite;\n\t    this.r = rSite;\n\t    this.a = this.b = null;\n\t  }\n\t  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n\t    d3_geom_voronoiEdges.push(edge);\n\t    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n\t    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n\t    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n\t    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, null);\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    d3_geom_voronoiEdges.push(edge);\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n\t    if (!edge.a && !edge.b) {\n\t      edge.a = vertex;\n\t      edge.l = lSite;\n\t      edge.r = rSite;\n\t    } else if (edge.l === rSite) {\n\t      edge.b = vertex;\n\t    } else {\n\t      edge.a = vertex;\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n\t    var va = edge.a, vb = edge.b;\n\t    this.edge = edge;\n\t    this.site = lSite;\n\t    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n\t  }\n\t  d3_geom_voronoiHalfEdge.prototype = {\n\t    start: function() {\n\t      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n\t    },\n\t    end: function() {\n\t      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackTree() {\n\t    this._ = null;\n\t  }\n\t  function d3_geom_voronoiRedBlackNode(node) {\n\t    node.U = node.C = node.L = node.R = node.P = node.N = null;\n\t  }\n\t  d3_geom_voronoiRedBlackTree.prototype = {\n\t    insert: function(after, node) {\n\t      var parent, grandpa, uncle;\n\t      if (after) {\n\t        node.P = after;\n\t        node.N = after.N;\n\t        if (after.N) after.N.P = node;\n\t        after.N = node;\n\t        if (after.R) {\n\t          after = after.R;\n\t          while (after.L) after = after.L;\n\t          after.L = node;\n\t        } else {\n\t          after.R = node;\n\t        }\n\t        parent = after;\n\t      } else if (this._) {\n\t        after = d3_geom_voronoiRedBlackFirst(this._);\n\t        node.P = null;\n\t        node.N = after;\n\t        after.P = after.L = node;\n\t        parent = after;\n\t      } else {\n\t        node.P = node.N = null;\n\t        this._ = node;\n\t        parent = null;\n\t      }\n\t      node.L = node.R = null;\n\t      node.U = parent;\n\t      node.C = true;\n\t      after = node;\n\t      while (parent && parent.C) {\n\t        grandpa = parent.U;\n\t        if (parent === grandpa.L) {\n\t          uncle = grandpa.R;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.R) {\n\t              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n\t          }\n\t        } else {\n\t          uncle = grandpa.L;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.L) {\n\t              d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n\t          }\n\t        }\n\t        parent = after.U;\n\t      }\n\t      this._.C = false;\n\t    },\n\t    remove: function(node) {\n\t      if (node.N) node.N.P = node.P;\n\t      if (node.P) node.P.N = node.N;\n\t      node.N = node.P = null;\n\t      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n\t      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n\t      if (parent) {\n\t        if (parent.L === node) parent.L = next; else parent.R = next;\n\t      } else {\n\t        this._ = next;\n\t      }\n\t      if (left && right) {\n\t        red = next.C;\n\t        next.C = node.C;\n\t        next.L = left;\n\t        left.U = next;\n\t        if (next !== right) {\n\t          parent = next.U;\n\t          next.U = node.U;\n\t          node = next.R;\n\t          parent.L = node;\n\t          next.R = right;\n\t          right.U = next;\n\t        } else {\n\t          next.U = parent;\n\t          parent = next;\n\t          node = next.R;\n\t        }\n\t      } else {\n\t        red = node.C;\n\t        node = next;\n\t      }\n\t      if (node) node.U = parent;\n\t      if (red) return;\n\t      if (node && node.C) {\n\t        node.C = false;\n\t        return;\n\t      }\n\t      do {\n\t        if (node === this._) break;\n\t        if (node === parent.L) {\n\t          sibling = parent.R;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            sibling = parent.R;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.R || !sibling.R.C) {\n\t              sibling.L.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n\t              sibling = parent.R;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.R.C = false;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        } else {\n\t          sibling = parent.L;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            sibling = parent.L;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.L || !sibling.L.C) {\n\t              sibling.R.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n\t              sibling = parent.L;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.L.C = false;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        }\n\t        sibling.C = true;\n\t        node = parent;\n\t        parent = parent.U;\n\t      } while (!node.C);\n\t      if (node) node.C = false;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n\t    var p = node, q = node.R, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.R = q.L;\n\t    if (p.R) p.R.U = p;\n\t    q.L = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n\t    var p = node, q = node.L, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.L = q.R;\n\t    if (p.L) p.L.U = p;\n\t    q.R = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackFirst(node) {\n\t    while (node.L) node = node.L;\n\t    return node;\n\t  }\n\t  function d3_geom_voronoi(sites, bbox) {\n\t    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n\t    d3_geom_voronoiEdges = [];\n\t    d3_geom_voronoiCells = new Array(sites.length);\n\t    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n\t    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n\t    while (true) {\n\t      circle = d3_geom_voronoiFirstCircle;\n\t      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n\t        if (site.x !== x0 || site.y !== y0) {\n\t          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n\t          d3_geom_voronoiAddBeach(site);\n\t          x0 = site.x, y0 = site.y;\n\t        }\n\t        site = sites.pop();\n\t      } else if (circle) {\n\t        d3_geom_voronoiRemoveBeach(circle.arc);\n\t      } else {\n\t        break;\n\t      }\n\t    }\n\t    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n\t    var diagram = {\n\t      cells: d3_geom_voronoiCells,\n\t      edges: d3_geom_voronoiEdges\n\t    };\n\t    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n\t    return diagram;\n\t  }\n\t  function d3_geom_voronoiVertexOrder(a, b) {\n\t    return b.y - a.y || b.x - a.x;\n\t  }\n\t  d3.geom.voronoi = function(points) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n\t    if (points) return voronoi(points);\n\t    function voronoi(data) {\n\t      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n\t      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n\t        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n\t          var s = e.start();\n\t          return [ s.x, s.y ];\n\t        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n\t        polygon.point = data[i];\n\t      });\n\t      return polygons;\n\t    }\n\t    function sites(data) {\n\t      return data.map(function(d, i) {\n\t        return {\n\t          x: Math.round(fx(d, i) / ε) * ε,\n\t          y: Math.round(fy(d, i) / ε) * ε,\n\t          i: i\n\t        };\n\t      });\n\t    }\n\t    voronoi.links = function(data) {\n\t      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n\t        return edge.l && edge.r;\n\t      }).map(function(edge) {\n\t        return {\n\t          source: data[edge.l.i],\n\t          target: data[edge.r.i]\n\t        };\n\t      });\n\t    };\n\t    voronoi.triangles = function(data) {\n\t      var triangles = [];\n\t      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n\t        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n\t        while (++j < m) {\n\t          e0 = e1;\n\t          s0 = s1;\n\t          e1 = edges[j].edge;\n\t          s1 = e1.l === site ? e1.r : e1.l;\n\t          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n\t            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n\t          }\n\t        }\n\t      });\n\t      return triangles;\n\t    };\n\t    voronoi.x = function(_) {\n\t      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n\t    };\n\t    voronoi.y = function(_) {\n\t      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n\t    };\n\t    voronoi.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n\t      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n\t      return voronoi;\n\t    };\n\t    voronoi.size = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n\t      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n\t    };\n\t    return voronoi;\n\t  };\n\t  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n\t  function d3_geom_voronoiTriangleArea(a, b, c) {\n\t    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n\t  }\n\t  d3.geom.delaunay = function(vertices) {\n\t    return d3.geom.voronoi().triangles(vertices);\n\t  };\n\t  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n\t    if (compat = arguments.length) {\n\t      x = d3_geom_quadtreeCompatX;\n\t      y = d3_geom_quadtreeCompatY;\n\t      if (compat === 3) {\n\t        y2 = y1;\n\t        x2 = x1;\n\t        y1 = x1 = 0;\n\t      }\n\t      return quadtree(points);\n\t    }\n\t    function quadtree(data) {\n\t      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n\t      if (x1 != null) {\n\t        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n\t      } else {\n\t        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n\t        xs = [], ys = [];\n\t        n = data.length;\n\t        if (compat) for (i = 0; i < n; ++i) {\n\t          d = data[i];\n\t          if (d.x < x1_) x1_ = d.x;\n\t          if (d.y < y1_) y1_ = d.y;\n\t          if (d.x > x2_) x2_ = d.x;\n\t          if (d.y > y2_) y2_ = d.y;\n\t          xs.push(d.x);\n\t          ys.push(d.y);\n\t        } else for (i = 0; i < n; ++i) {\n\t          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n\t          if (x_ < x1_) x1_ = x_;\n\t          if (y_ < y1_) y1_ = y_;\n\t          if (x_ > x2_) x2_ = x_;\n\t          if (y_ > y2_) y2_ = y_;\n\t          xs.push(x_);\n\t          ys.push(y_);\n\t        }\n\t      }\n\t      var dx = x2_ - x1_, dy = y2_ - y1_;\n\t      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n\t      function insert(n, d, x, y, x1, y1, x2, y2) {\n\t        if (isNaN(x) || isNaN(y)) return;\n\t        if (n.leaf) {\n\t          var nx = n.x, ny = n.y;\n\t          if (nx != null) {\n\t            if (abs(nx - x) + abs(ny - y) < .01) {\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            } else {\n\t              var nPoint = n.point;\n\t              n.x = n.y = n.point = null;\n\t              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            }\n\t          } else {\n\t            n.x = x, n.y = y, n.point = d;\n\t          }\n\t        } else {\n\t          insertChild(n, d, x, y, x1, y1, x2, y2);\n\t        }\n\t      }\n\t      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n\t        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n\t        n.leaf = false;\n\t        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n\t        if (right) x1 = xm; else x2 = xm;\n\t        if (below) y1 = ym; else y2 = ym;\n\t        insert(n, d, x, y, x1, y1, x2, y2);\n\t      }\n\t      var root = d3_geom_quadtreeNode();\n\t      root.add = function(d) {\n\t        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n\t      };\n\t      root.visit = function(f) {\n\t        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n\t      };\n\t      root.find = function(point) {\n\t        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n\t      };\n\t      i = -1;\n\t      if (x1 == null) {\n\t        while (++i < n) {\n\t          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n\t        }\n\t        --i;\n\t      } else data.forEach(root.add);\n\t      xs = ys = data = d = null;\n\t      return root;\n\t    }\n\t    quadtree.x = function(_) {\n\t      return arguments.length ? (x = _, quadtree) : x;\n\t    };\n\t    quadtree.y = function(_) {\n\t      return arguments.length ? (y = _, quadtree) : y;\n\t    };\n\t    quadtree.extent = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n\t      y2 = +_[1][1];\n\t      return quadtree;\n\t    };\n\t    quadtree.size = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n\t      return quadtree;\n\t    };\n\t    return quadtree;\n\t  };\n\t  function d3_geom_quadtreeCompatX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_geom_quadtreeCompatY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_geom_quadtreeNode() {\n\t    return {\n\t      leaf: true,\n\t      nodes: [],\n\t      point: null,\n\t      x: null,\n\t      y: null\n\t    };\n\t  }\n\t  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n\t    if (!f(node, x1, y1, x2, y2)) {\n\t      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n\t      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n\t      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n\t      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n\t      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n\t    }\n\t  }\n\t  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n\t    var minDistance2 = Infinity, closestPoint;\n\t    (function find(node, x1, y1, x2, y2) {\n\t      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n\t      if (point = node.point) {\n\t        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n\t        if (distance2 < minDistance2) {\n\t          var distance = Math.sqrt(minDistance2 = distance2);\n\t          x0 = x - distance, y0 = y - distance;\n\t          x3 = x + distance, y3 = y + distance;\n\t          closestPoint = point;\n\t        }\n\t      }\n\t      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n\t      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n\t        if (node = children[i & 3]) switch (i & 3) {\n\t         case 0:\n\t          find(node, x1, y1, xm, ym);\n\t          break;\n\t\n\t         case 1:\n\t          find(node, xm, y1, x2, ym);\n\t          break;\n\t\n\t         case 2:\n\t          find(node, x1, ym, xm, y2);\n\t          break;\n\t\n\t         case 3:\n\t          find(node, xm, ym, x2, y2);\n\t          break;\n\t        }\n\t      }\n\t    })(root, x0, y0, x3, y3);\n\t    return closestPoint;\n\t  }\n\t  d3.interpolateRgb = d3_interpolateRgb;\n\t  function d3_interpolateRgb(a, b) {\n\t    a = d3.rgb(a);\n\t    b = d3.rgb(b);\n\t    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n\t    return function(t) {\n\t      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n\t    };\n\t  }\n\t  d3.interpolateObject = d3_interpolateObject;\n\t  function d3_interpolateObject(a, b) {\n\t    var i = {}, c = {}, k;\n\t    for (k in a) {\n\t      if (k in b) {\n\t        i[k] = d3_interpolate(a[k], b[k]);\n\t      } else {\n\t        c[k] = a[k];\n\t      }\n\t    }\n\t    for (k in b) {\n\t      if (!(k in a)) {\n\t        c[k] = b[k];\n\t      }\n\t    }\n\t    return function(t) {\n\t      for (k in i) c[k] = i[k](t);\n\t      return c;\n\t    };\n\t  }\n\t  d3.interpolateNumber = d3_interpolateNumber;\n\t  function d3_interpolateNumber(a, b) {\n\t    a = +a, b = +b;\n\t    return function(t) {\n\t      return a * (1 - t) + b * t;\n\t    };\n\t  }\n\t  d3.interpolateString = d3_interpolateString;\n\t  function d3_interpolateString(a, b) {\n\t    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n\t    a = a + \"\", b = b + \"\";\n\t    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n\t      if ((bs = bm.index) > bi) {\n\t        bs = b.slice(bi, bs);\n\t        if (s[i]) s[i] += bs; else s[++i] = bs;\n\t      }\n\t      if ((am = am[0]) === (bm = bm[0])) {\n\t        if (s[i]) s[i] += bm; else s[++i] = bm;\n\t      } else {\n\t        s[++i] = null;\n\t        q.push({\n\t          i: i,\n\t          x: d3_interpolateNumber(am, bm)\n\t        });\n\t      }\n\t      bi = d3_interpolate_numberB.lastIndex;\n\t    }\n\t    if (bi < b.length) {\n\t      bs = b.slice(bi);\n\t      if (s[i]) s[i] += bs; else s[++i] = bs;\n\t    }\n\t    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n\t      return b(t) + \"\";\n\t    }) : function() {\n\t      return b;\n\t    } : (b = q.length, function(t) {\n\t      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    });\n\t  }\n\t  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n\t  d3.interpolate = d3_interpolate;\n\t  function d3_interpolate(a, b) {\n\t    var i = d3.interpolators.length, f;\n\t    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n\t    return f;\n\t  }\n\t  d3.interpolators = [ function(a, b) {\n\t    var t = typeof b;\n\t    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n\t  } ];\n\t  d3.interpolateArray = d3_interpolateArray;\n\t  function d3_interpolateArray(a, b) {\n\t    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n\t    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n\t    for (;i < na; ++i) c[i] = a[i];\n\t    for (;i < nb; ++i) c[i] = b[i];\n\t    return function(t) {\n\t      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n\t      return c;\n\t    };\n\t  }\n\t  var d3_ease_default = function() {\n\t    return d3_identity;\n\t  };\n\t  var d3_ease = d3.map({\n\t    linear: d3_ease_default,\n\t    poly: d3_ease_poly,\n\t    quad: function() {\n\t      return d3_ease_quad;\n\t    },\n\t    cubic: function() {\n\t      return d3_ease_cubic;\n\t    },\n\t    sin: function() {\n\t      return d3_ease_sin;\n\t    },\n\t    exp: function() {\n\t      return d3_ease_exp;\n\t    },\n\t    circle: function() {\n\t      return d3_ease_circle;\n\t    },\n\t    elastic: d3_ease_elastic,\n\t    back: d3_ease_back,\n\t    bounce: function() {\n\t      return d3_ease_bounce;\n\t    }\n\t  });\n\t  var d3_ease_mode = d3.map({\n\t    \"in\": d3_identity,\n\t    out: d3_ease_reverse,\n\t    \"in-out\": d3_ease_reflect,\n\t    \"out-in\": function(f) {\n\t      return d3_ease_reflect(d3_ease_reverse(f));\n\t    }\n\t  });\n\t  d3.ease = function(name) {\n\t    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n\t    t = d3_ease.get(t) || d3_ease_default;\n\t    m = d3_ease_mode.get(m) || d3_identity;\n\t    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n\t  };\n\t  function d3_ease_clamp(f) {\n\t    return function(t) {\n\t      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n\t    };\n\t  }\n\t  function d3_ease_reverse(f) {\n\t    return function(t) {\n\t      return 1 - f(1 - t);\n\t    };\n\t  }\n\t  function d3_ease_reflect(f) {\n\t    return function(t) {\n\t      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n\t    };\n\t  }\n\t  function d3_ease_quad(t) {\n\t    return t * t;\n\t  }\n\t  function d3_ease_cubic(t) {\n\t    return t * t * t;\n\t  }\n\t  function d3_ease_cubicInOut(t) {\n\t    if (t <= 0) return 0;\n\t    if (t >= 1) return 1;\n\t    var t2 = t * t, t3 = t2 * t;\n\t    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n\t  }\n\t  function d3_ease_poly(e) {\n\t    return function(t) {\n\t      return Math.pow(t, e);\n\t    };\n\t  }\n\t  function d3_ease_sin(t) {\n\t    return 1 - Math.cos(t * halfπ);\n\t  }\n\t  function d3_ease_exp(t) {\n\t    return Math.pow(2, 10 * (t - 1));\n\t  }\n\t  function d3_ease_circle(t) {\n\t    return 1 - Math.sqrt(1 - t * t);\n\t  }\n\t  function d3_ease_elastic(a, p) {\n\t    var s;\n\t    if (arguments.length < 2) p = .45;\n\t    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n\t    return function(t) {\n\t      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n\t    };\n\t  }\n\t  function d3_ease_back(s) {\n\t    if (!s) s = 1.70158;\n\t    return function(t) {\n\t      return t * t * ((s + 1) * t - s);\n\t    };\n\t  }\n\t  function d3_ease_bounce(t) {\n\t    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n\t  }\n\t  d3.interpolateHcl = d3_interpolateHcl;\n\t  function d3_interpolateHcl(a, b) {\n\t    a = d3.hcl(a);\n\t    b = d3.hcl(b);\n\t    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n\t    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateHsl = d3_interpolateHsl;\n\t  function d3_interpolateHsl(a, b) {\n\t    a = d3.hsl(a);\n\t    b = d3.hsl(b);\n\t    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n\t    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateLab = d3_interpolateLab;\n\t  function d3_interpolateLab(a, b) {\n\t    a = d3.lab(a);\n\t    b = d3.lab(b);\n\t    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n\t    return function(t) {\n\t      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateRound = d3_interpolateRound;\n\t  function d3_interpolateRound(a, b) {\n\t    b -= a;\n\t    return function(t) {\n\t      return Math.round(a + b * t);\n\t    };\n\t  }\n\t  d3.transform = function(string) {\n\t    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n\t    return (d3.transform = function(string) {\n\t      if (string != null) {\n\t        g.setAttribute(\"transform\", string);\n\t        var t = g.transform.baseVal.consolidate();\n\t      }\n\t      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n\t    })(string);\n\t  };\n\t  function d3_transform(m) {\n\t    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n\t    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n\t      r0[0] *= -1;\n\t      r0[1] *= -1;\n\t      kx *= -1;\n\t      kz *= -1;\n\t    }\n\t    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n\t    this.translate = [ m.e, m.f ];\n\t    this.scale = [ kx, ky ];\n\t    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n\t  }\n\t  d3_transform.prototype.toString = function() {\n\t    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n\t  };\n\t  function d3_transformDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1];\n\t  }\n\t  function d3_transformNormalize(a) {\n\t    var k = Math.sqrt(d3_transformDot(a, a));\n\t    if (k) {\n\t      a[0] /= k;\n\t      a[1] /= k;\n\t    }\n\t    return k;\n\t  }\n\t  function d3_transformCombine(a, b, k) {\n\t    a[0] += k * b[0];\n\t    a[1] += k * b[1];\n\t    return a;\n\t  }\n\t  var d3_transformIdentity = {\n\t    a: 1,\n\t    b: 0,\n\t    c: 0,\n\t    d: 1,\n\t    e: 0,\n\t    f: 0\n\t  };\n\t  d3.interpolateTransform = d3_interpolateTransform;\n\t  function d3_interpolateTransformPop(s) {\n\t    return s.length ? s.pop() + \",\" : \"\";\n\t  }\n\t  function d3_interpolateTranslate(ta, tb, s, q) {\n\t    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n\t      var i = s.push(\"translate(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: i - 4,\n\t        x: d3_interpolateNumber(ta[0], tb[0])\n\t      }, {\n\t        i: i - 2,\n\t        x: d3_interpolateNumber(ta[1], tb[1])\n\t      });\n\t    } else if (tb[0] || tb[1]) {\n\t      s.push(\"translate(\" + tb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateRotate(ra, rb, s, q) {\n\t    if (ra !== rb) {\n\t      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n\t      q.push({\n\t        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(ra, rb)\n\t      });\n\t    } else if (rb) {\n\t      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateSkew(wa, wb, s, q) {\n\t    if (wa !== wb) {\n\t      q.push({\n\t        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(wa, wb)\n\t      });\n\t    } else if (wb) {\n\t      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateScale(ka, kb, s, q) {\n\t    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n\t      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: i - 4,\n\t        x: d3_interpolateNumber(ka[0], kb[0])\n\t      }, {\n\t        i: i - 2,\n\t        x: d3_interpolateNumber(ka[1], kb[1])\n\t      });\n\t    } else if (kb[0] !== 1 || kb[1] !== 1) {\n\t      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateTransform(a, b) {\n\t    var s = [], q = [];\n\t    a = d3.transform(a), b = d3.transform(b);\n\t    d3_interpolateTranslate(a.translate, b.translate, s, q);\n\t    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n\t    d3_interpolateSkew(a.skew, b.skew, s, q);\n\t    d3_interpolateScale(a.scale, b.scale, s, q);\n\t    a = b = null;\n\t    return function(t) {\n\t      var i = -1, n = q.length, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  }\n\t  function d3_uninterpolateNumber(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return (x - a) / b;\n\t    };\n\t  }\n\t  function d3_uninterpolateClamp(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return Math.max(0, Math.min(1, (x - a) / b));\n\t    };\n\t  }\n\t  d3.layout = {};\n\t  d3.layout.bundle = function() {\n\t    return function(links) {\n\t      var paths = [], i = -1, n = links.length;\n\t      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n\t      return paths;\n\t    };\n\t  };\n\t  function d3_layout_bundlePath(link) {\n\t    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n\t    while (start !== lca) {\n\t      start = start.parent;\n\t      points.push(start);\n\t    }\n\t    var k = points.length;\n\t    while (end !== lca) {\n\t      points.splice(k, 0, end);\n\t      end = end.parent;\n\t    }\n\t    return points;\n\t  }\n\t  function d3_layout_bundleAncestors(node) {\n\t    var ancestors = [], parent = node.parent;\n\t    while (parent != null) {\n\t      ancestors.push(node);\n\t      node = parent;\n\t      parent = parent.parent;\n\t    }\n\t    ancestors.push(node);\n\t    return ancestors;\n\t  }\n\t  function d3_layout_bundleLeastCommonAncestor(a, b) {\n\t    if (a === b) return a;\n\t    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n\t    while (aNode === bNode) {\n\t      sharedNode = aNode;\n\t      aNode = aNodes.pop();\n\t      bNode = bNodes.pop();\n\t    }\n\t    return sharedNode;\n\t  }\n\t  d3.layout.chord = function() {\n\t    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n\t    function relayout() {\n\t      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n\t      chords = [];\n\t      groups = [];\n\t      k = 0, i = -1;\n\t      while (++i < n) {\n\t        x = 0, j = -1;\n\t        while (++j < n) {\n\t          x += matrix[i][j];\n\t        }\n\t        groupSums.push(x);\n\t        subgroupIndex.push(d3.range(n));\n\t        k += x;\n\t      }\n\t      if (sortGroups) {\n\t        groupIndex.sort(function(a, b) {\n\t          return sortGroups(groupSums[a], groupSums[b]);\n\t        });\n\t      }\n\t      if (sortSubgroups) {\n\t        subgroupIndex.forEach(function(d, i) {\n\t          d.sort(function(a, b) {\n\t            return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t          });\n\t        });\n\t      }\n\t      k = (τ - padding * n) / k;\n\t      x = 0, i = -1;\n\t      while (++i < n) {\n\t        x0 = x, j = -1;\n\t        while (++j < n) {\n\t          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n\t          subgroups[di + \"-\" + dj] = {\n\t            index: di,\n\t            subindex: dj,\n\t            startAngle: a0,\n\t            endAngle: a1,\n\t            value: v\n\t          };\n\t        }\n\t        groups[di] = {\n\t          index: di,\n\t          startAngle: x0,\n\t          endAngle: x,\n\t          value: groupSums[di]\n\t        };\n\t        x += padding;\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        j = i - 1;\n\t        while (++j < n) {\n\t          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n\t          if (source.value || target.value) {\n\t            chords.push(source.value < target.value ? {\n\t              source: target,\n\t              target: source\n\t            } : {\n\t              source: source,\n\t              target: target\n\t            });\n\t          }\n\t        }\n\t      }\n\t      if (sortChords) resort();\n\t    }\n\t    function resort() {\n\t      chords.sort(function(a, b) {\n\t        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n\t      });\n\t    }\n\t    chord.matrix = function(x) {\n\t      if (!arguments.length) return matrix;\n\t      n = (matrix = x) && matrix.length;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      padding = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortGroups = function(x) {\n\t      if (!arguments.length) return sortGroups;\n\t      sortGroups = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortSubgroups = function(x) {\n\t      if (!arguments.length) return sortSubgroups;\n\t      sortSubgroups = x;\n\t      chords = null;\n\t      return chord;\n\t    };\n\t    chord.sortChords = function(x) {\n\t      if (!arguments.length) return sortChords;\n\t      sortChords = x;\n\t      if (chords) resort();\n\t      return chord;\n\t    };\n\t    chord.chords = function() {\n\t      if (!chords) relayout();\n\t      return chords;\n\t    };\n\t    chord.groups = function() {\n\t      if (!groups) relayout();\n\t      return groups;\n\t    };\n\t    return chord;\n\t  };\n\t  d3.layout.force = function() {\n\t    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n\t    function repulse(node) {\n\t      return function(quad, x1, _, x2) {\n\t        if (quad.point !== node) {\n\t          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n\t          if (dw * dw / theta2 < dn) {\n\t            if (dn < chargeDistance2) {\n\t              var k = quad.charge / dn;\n\t              node.px -= dx * k;\n\t              node.py -= dy * k;\n\t            }\n\t            return true;\n\t          }\n\t          if (quad.point && dn && dn < chargeDistance2) {\n\t            var k = quad.pointCharge / dn;\n\t            node.px -= dx * k;\n\t            node.py -= dy * k;\n\t          }\n\t        }\n\t        return !quad.charge;\n\t      };\n\t    }\n\t    force.tick = function() {\n\t      if ((alpha *= .99) < .005) {\n\t        timer = null;\n\t        event.end({\n\t          type: \"end\",\n\t          alpha: alpha = 0\n\t        });\n\t        return true;\n\t      }\n\t      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        s = o.source;\n\t        t = o.target;\n\t        x = t.x - s.x;\n\t        y = t.y - s.y;\n\t        if (l = x * x + y * y) {\n\t          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n\t          x *= l;\n\t          y *= l;\n\t          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n\t          t.y -= y * k;\n\t          s.x += x * (k = 1 - k);\n\t          s.y += y * k;\n\t        }\n\t      }\n\t      if (k = alpha * gravity) {\n\t        x = size[0] / 2;\n\t        y = size[1] / 2;\n\t        i = -1;\n\t        if (k) while (++i < n) {\n\t          o = nodes[i];\n\t          o.x += (x - o.x) * k;\n\t          o.y += (y - o.y) * k;\n\t        }\n\t      }\n\t      if (charge) {\n\t        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n\t        i = -1;\n\t        while (++i < n) {\n\t          if (!(o = nodes[i]).fixed) {\n\t            q.visit(repulse(o));\n\t          }\n\t        }\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        o = nodes[i];\n\t        if (o.fixed) {\n\t          o.x = o.px;\n\t          o.y = o.py;\n\t        } else {\n\t          o.x -= (o.px - (o.px = o.x)) * friction;\n\t          o.y -= (o.py - (o.py = o.y)) * friction;\n\t        }\n\t      }\n\t      event.tick({\n\t        type: \"tick\",\n\t        alpha: alpha\n\t      });\n\t    };\n\t    force.nodes = function(x) {\n\t      if (!arguments.length) return nodes;\n\t      nodes = x;\n\t      return force;\n\t    };\n\t    force.links = function(x) {\n\t      if (!arguments.length) return links;\n\t      links = x;\n\t      return force;\n\t    };\n\t    force.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return force;\n\t    };\n\t    force.linkDistance = function(x) {\n\t      if (!arguments.length) return linkDistance;\n\t      linkDistance = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.distance = force.linkDistance;\n\t    force.linkStrength = function(x) {\n\t      if (!arguments.length) return linkStrength;\n\t      linkStrength = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.friction = function(x) {\n\t      if (!arguments.length) return friction;\n\t      friction = +x;\n\t      return force;\n\t    };\n\t    force.charge = function(x) {\n\t      if (!arguments.length) return charge;\n\t      charge = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.chargeDistance = function(x) {\n\t      if (!arguments.length) return Math.sqrt(chargeDistance2);\n\t      chargeDistance2 = x * x;\n\t      return force;\n\t    };\n\t    force.gravity = function(x) {\n\t      if (!arguments.length) return gravity;\n\t      gravity = +x;\n\t      return force;\n\t    };\n\t    force.theta = function(x) {\n\t      if (!arguments.length) return Math.sqrt(theta2);\n\t      theta2 = x * x;\n\t      return force;\n\t    };\n\t    force.alpha = function(x) {\n\t      if (!arguments.length) return alpha;\n\t      x = +x;\n\t      if (alpha) {\n\t        if (x > 0) {\n\t          alpha = x;\n\t        } else {\n\t          timer.c = null, timer.t = NaN, timer = null;\n\t          event.end({\n\t            type: \"end\",\n\t            alpha: alpha = 0\n\t          });\n\t        }\n\t      } else if (x > 0) {\n\t        event.start({\n\t          type: \"start\",\n\t          alpha: alpha = x\n\t        });\n\t        timer = d3_timer(force.tick);\n\t      }\n\t      return force;\n\t    };\n\t    force.start = function() {\n\t      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n\t      for (i = 0; i < n; ++i) {\n\t        (o = nodes[i]).index = i;\n\t        o.weight = 0;\n\t      }\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        if (typeof o.source == \"number\") o.source = nodes[o.source];\n\t        if (typeof o.target == \"number\") o.target = nodes[o.target];\n\t        ++o.source.weight;\n\t        ++o.target.weight;\n\t      }\n\t      for (i = 0; i < n; ++i) {\n\t        o = nodes[i];\n\t        if (isNaN(o.x)) o.x = position(\"x\", w);\n\t        if (isNaN(o.y)) o.y = position(\"y\", h);\n\t        if (isNaN(o.px)) o.px = o.x;\n\t        if (isNaN(o.py)) o.py = o.y;\n\t      }\n\t      distances = [];\n\t      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n\t      strengths = [];\n\t      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n\t      charges = [];\n\t      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n\t      function position(dimension, size) {\n\t        if (!neighbors) {\n\t          neighbors = new Array(n);\n\t          for (j = 0; j < n; ++j) {\n\t            neighbors[j] = [];\n\t          }\n\t          for (j = 0; j < m; ++j) {\n\t            var o = links[j];\n\t            neighbors[o.source.index].push(o.target);\n\t            neighbors[o.target.index].push(o.source);\n\t          }\n\t        }\n\t        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n\t        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n\t        return Math.random() * size;\n\t      }\n\t      return force.resume();\n\t    };\n\t    force.resume = function() {\n\t      return force.alpha(.1);\n\t    };\n\t    force.stop = function() {\n\t      return force.alpha(0);\n\t    };\n\t    force.drag = function() {\n\t      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n\t      if (!arguments.length) return drag;\n\t      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n\t    };\n\t    function dragmove(d) {\n\t      d.px = d3.event.x, d.py = d3.event.y;\n\t      force.resume();\n\t    }\n\t    return d3.rebind(force, event, \"on\");\n\t  };\n\t  function d3_layout_forceDragstart(d) {\n\t    d.fixed |= 2;\n\t  }\n\t  function d3_layout_forceDragend(d) {\n\t    d.fixed &= ~6;\n\t  }\n\t  function d3_layout_forceMouseover(d) {\n\t    d.fixed |= 4;\n\t    d.px = d.x, d.py = d.y;\n\t  }\n\t  function d3_layout_forceMouseout(d) {\n\t    d.fixed &= ~4;\n\t  }\n\t  function d3_layout_forceAccumulate(quad, alpha, charges) {\n\t    var cx = 0, cy = 0;\n\t    quad.charge = 0;\n\t    if (!quad.leaf) {\n\t      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n\t      while (++i < n) {\n\t        c = nodes[i];\n\t        if (c == null) continue;\n\t        d3_layout_forceAccumulate(c, alpha, charges);\n\t        quad.charge += c.charge;\n\t        cx += c.charge * c.cx;\n\t        cy += c.charge * c.cy;\n\t      }\n\t    }\n\t    if (quad.point) {\n\t      if (!quad.leaf) {\n\t        quad.point.x += Math.random() - .5;\n\t        quad.point.y += Math.random() - .5;\n\t      }\n\t      var k = alpha * charges[quad.point.index];\n\t      quad.charge += quad.pointCharge = k;\n\t      cx += k * quad.point.x;\n\t      cy += k * quad.point.y;\n\t    }\n\t    quad.cx = cx / quad.charge;\n\t    quad.cy = cy / quad.charge;\n\t  }\n\t  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n\t  d3.layout.hierarchy = function() {\n\t    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n\t    function hierarchy(root) {\n\t      var stack = [ root ], nodes = [], node;\n\t      root.depth = 0;\n\t      while ((node = stack.pop()) != null) {\n\t        nodes.push(node);\n\t        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n\t          var n, childs, child;\n\t          while (--n >= 0) {\n\t            stack.push(child = childs[n]);\n\t            child.parent = node;\n\t            child.depth = node.depth + 1;\n\t          }\n\t          if (value) node.value = 0;\n\t          node.children = childs;\n\t        } else {\n\t          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          delete node.children;\n\t        }\n\t      }\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var childs, parent;\n\t        if (sort && (childs = node.children)) childs.sort(sort);\n\t        if (value && (parent = node.parent)) parent.value += node.value;\n\t      });\n\t      return nodes;\n\t    }\n\t    hierarchy.sort = function(x) {\n\t      if (!arguments.length) return sort;\n\t      sort = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.children = function(x) {\n\t      if (!arguments.length) return children;\n\t      children = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.value = function(x) {\n\t      if (!arguments.length) return value;\n\t      value = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.revalue = function(root) {\n\t      if (value) {\n\t        d3_layout_hierarchyVisitBefore(root, function(node) {\n\t          if (node.children) node.value = 0;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, function(node) {\n\t          var parent;\n\t          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          if (parent = node.parent) parent.value += node.value;\n\t        });\n\t      }\n\t      return root;\n\t    };\n\t    return hierarchy;\n\t  };\n\t  function d3_layout_hierarchyRebind(object, hierarchy) {\n\t    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n\t    object.nodes = object;\n\t    object.links = d3_layout_hierarchyLinks;\n\t    return object;\n\t  }\n\t  function d3_layout_hierarchyVisitBefore(node, callback) {\n\t    var nodes = [ node ];\n\t    while ((node = nodes.pop()) != null) {\n\t      callback(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var n, children;\n\t        while (--n >= 0) nodes.push(children[n]);\n\t      }\n\t    }\n\t  }\n\t  function d3_layout_hierarchyVisitAfter(node, callback) {\n\t    var nodes = [ node ], nodes2 = [];\n\t    while ((node = nodes.pop()) != null) {\n\t      nodes2.push(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var i = -1, n, children;\n\t        while (++i < n) nodes.push(children[i]);\n\t      }\n\t    }\n\t    while ((node = nodes2.pop()) != null) {\n\t      callback(node);\n\t    }\n\t  }\n\t  function d3_layout_hierarchyChildren(d) {\n\t    return d.children;\n\t  }\n\t  function d3_layout_hierarchyValue(d) {\n\t    return d.value;\n\t  }\n\t  function d3_layout_hierarchySort(a, b) {\n\t    return b.value - a.value;\n\t  }\n\t  function d3_layout_hierarchyLinks(nodes) {\n\t    return d3.merge(nodes.map(function(parent) {\n\t      return (parent.children || []).map(function(child) {\n\t        return {\n\t          source: parent,\n\t          target: child\n\t        };\n\t      });\n\t    }));\n\t  }\n\t  d3.layout.partition = function() {\n\t    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n\t    function position(node, x, dx, dy) {\n\t      var children = node.children;\n\t      node.x = x;\n\t      node.y = node.depth * dy;\n\t      node.dx = dx;\n\t      node.dy = dy;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n, c, d;\n\t        dx = node.value ? dx / node.value : 0;\n\t        while (++i < n) {\n\t          position(c = children[i], x, d = c.value * dx, dy);\n\t          x += d;\n\t        }\n\t      }\n\t    }\n\t    function depth(node) {\n\t      var children = node.children, d = 0;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n;\n\t        while (++i < n) d = Math.max(d, depth(children[i]));\n\t      }\n\t      return 1 + d;\n\t    }\n\t    function partition(d, i) {\n\t      var nodes = hierarchy.call(this, d, i);\n\t      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n\t      return nodes;\n\t    }\n\t    partition.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return partition;\n\t    };\n\t    return d3_layout_hierarchyRebind(partition, hierarchy);\n\t  };\n\t  d3.layout.pie = function() {\n\t    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n\t    function pie(data) {\n\t      var n = data.length, values = data.map(function(d, i) {\n\t        return +value.call(pie, d, i);\n\t      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n\t      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n\t        return values[j] - values[i];\n\t      } : function(i, j) {\n\t        return sort(data[i], data[j]);\n\t      });\n\t      index.forEach(function(i) {\n\t        arcs[i] = {\n\t          data: data[i],\n\t          value: v = values[i],\n\t          startAngle: a,\n\t          endAngle: a += v * k + pa,\n\t          padAngle: p\n\t        };\n\t      });\n\t      return arcs;\n\t    }\n\t    pie.value = function(_) {\n\t      if (!arguments.length) return value;\n\t      value = _;\n\t      return pie;\n\t    };\n\t    pie.sort = function(_) {\n\t      if (!arguments.length) return sort;\n\t      sort = _;\n\t      return pie;\n\t    };\n\t    pie.startAngle = function(_) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = _;\n\t      return pie;\n\t    };\n\t    pie.endAngle = function(_) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = _;\n\t      return pie;\n\t    };\n\t    pie.padAngle = function(_) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = _;\n\t      return pie;\n\t    };\n\t    return pie;\n\t  };\n\t  var d3_layout_pieSortByValue = {};\n\t  d3.layout.stack = function() {\n\t    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n\t    function stack(data, index) {\n\t      if (!(n = data.length)) return data;\n\t      var series = data.map(function(d, i) {\n\t        return values.call(stack, d, i);\n\t      });\n\t      var points = series.map(function(d) {\n\t        return d.map(function(v, i) {\n\t          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n\t        });\n\t      });\n\t      var orders = order.call(stack, points, index);\n\t      series = d3.permute(series, orders);\n\t      points = d3.permute(points, orders);\n\t      var offsets = offset.call(stack, points, index);\n\t      var m = series[0].length, n, i, j, o;\n\t      for (j = 0; j < m; ++j) {\n\t        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n\t        for (i = 1; i < n; ++i) {\n\t          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n\t        }\n\t      }\n\t      return data;\n\t    }\n\t    stack.values = function(x) {\n\t      if (!arguments.length) return values;\n\t      values = x;\n\t      return stack;\n\t    };\n\t    stack.order = function(x) {\n\t      if (!arguments.length) return order;\n\t      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n\t      return stack;\n\t    };\n\t    stack.offset = function(x) {\n\t      if (!arguments.length) return offset;\n\t      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n\t      return stack;\n\t    };\n\t    stack.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      return stack;\n\t    };\n\t    stack.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      return stack;\n\t    };\n\t    stack.out = function(z) {\n\t      if (!arguments.length) return out;\n\t      out = z;\n\t      return stack;\n\t    };\n\t    return stack;\n\t  };\n\t  function d3_layout_stackX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_layout_stackY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_layout_stackOut(d, y0, y) {\n\t    d.y0 = y0;\n\t    d.y = y;\n\t  }\n\t  var d3_layout_stackOrders = d3.map({\n\t    \"inside-out\": function(data) {\n\t      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n\t        return max[a] - max[b];\n\t      }), top = 0, bottom = 0, tops = [], bottoms = [];\n\t      for (i = 0; i < n; ++i) {\n\t        j = index[i];\n\t        if (top < bottom) {\n\t          top += sums[j];\n\t          tops.push(j);\n\t        } else {\n\t          bottom += sums[j];\n\t          bottoms.push(j);\n\t        }\n\t      }\n\t      return bottoms.reverse().concat(tops);\n\t    },\n\t    reverse: function(data) {\n\t      return d3.range(data.length).reverse();\n\t    },\n\t    \"default\": d3_layout_stackOrderDefault\n\t  });\n\t  var d3_layout_stackOffsets = d3.map({\n\t    silhouette: function(data) {\n\t      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o > max) max = o;\n\t        sums.push(o);\n\t      }\n\t      for (j = 0; j < m; ++j) {\n\t        y0[j] = (max - sums[j]) / 2;\n\t      }\n\t      return y0;\n\t    },\n\t    wiggle: function(data) {\n\t      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n\t      y0[0] = o = o0 = 0;\n\t      for (j = 1; j < m; ++j) {\n\t        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n\t        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n\t          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n\t            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n\t          }\n\t          s2 += s3 * data[i][j][1];\n\t        }\n\t        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n\t        if (o < o0) o0 = o;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] -= o0;\n\t      return y0;\n\t    },\n\t    expand: function(data) {\n\t      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] = 0;\n\t      return y0;\n\t    },\n\t    zero: d3_layout_stackOffsetZero\n\t  });\n\t  function d3_layout_stackOrderDefault(data) {\n\t    return d3.range(data.length);\n\t  }\n\t  function d3_layout_stackOffsetZero(data) {\n\t    var j = -1, m = data[0].length, y0 = [];\n\t    while (++j < m) y0[j] = 0;\n\t    return y0;\n\t  }\n\t  function d3_layout_stackMaxIndex(array) {\n\t    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n\t    for (;i < n; ++i) {\n\t      if ((k = array[i][1]) > v) {\n\t        j = i;\n\t        v = k;\n\t      }\n\t    }\n\t    return j;\n\t  }\n\t  function d3_layout_stackReduceSum(d) {\n\t    return d.reduce(d3_layout_stackSum, 0);\n\t  }\n\t  function d3_layout_stackSum(p, d) {\n\t    return p + d[1];\n\t  }\n\t  d3.layout.histogram = function() {\n\t    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n\t    function histogram(data, i) {\n\t      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n\t      while (++i < m) {\n\t        bin = bins[i] = [];\n\t        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n\t        bin.y = 0;\n\t      }\n\t      if (m > 0) {\n\t        i = -1;\n\t        while (++i < n) {\n\t          x = values[i];\n\t          if (x >= range[0] && x <= range[1]) {\n\t            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n\t            bin.y += k;\n\t            bin.push(data[i]);\n\t          }\n\t        }\n\t      }\n\t      return bins;\n\t    }\n\t    histogram.value = function(x) {\n\t      if (!arguments.length) return valuer;\n\t      valuer = x;\n\t      return histogram;\n\t    };\n\t    histogram.range = function(x) {\n\t      if (!arguments.length) return ranger;\n\t      ranger = d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.bins = function(x) {\n\t      if (!arguments.length) return binner;\n\t      binner = typeof x === \"number\" ? function(range) {\n\t        return d3_layout_histogramBinFixed(range, x);\n\t      } : d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.frequency = function(x) {\n\t      if (!arguments.length) return frequency;\n\t      frequency = !!x;\n\t      return histogram;\n\t    };\n\t    return histogram;\n\t  };\n\t  function d3_layout_histogramBinSturges(range, values) {\n\t    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n\t  }\n\t  function d3_layout_histogramBinFixed(range, n) {\n\t    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n\t    while (++x <= n) f[x] = m * x + b;\n\t    return f;\n\t  }\n\t  function d3_layout_histogramRange(values) {\n\t    return [ d3.min(values), d3.max(values) ];\n\t  }\n\t  d3.layout.pack = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n\t    function pack(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n\t        return radius;\n\t      };\n\t      root.x = root.y = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(d) {\n\t        d.r = +r(d.value);\n\t      });\n\t      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t      if (padding) {\n\t        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r += dr;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r -= dr;\n\t        });\n\t      }\n\t      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n\t      return nodes;\n\t    }\n\t    pack.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _;\n\t      return pack;\n\t    };\n\t    pack.radius = function(_) {\n\t      if (!arguments.length) return radius;\n\t      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n\t      return pack;\n\t    };\n\t    pack.padding = function(_) {\n\t      if (!arguments.length) return padding;\n\t      padding = +_;\n\t      return pack;\n\t    };\n\t    return d3_layout_hierarchyRebind(pack, hierarchy);\n\t  };\n\t  function d3_layout_packSort(a, b) {\n\t    return a.value - b.value;\n\t  }\n\t  function d3_layout_packInsert(a, b) {\n\t    var c = a._pack_next;\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t    b._pack_next = c;\n\t    c._pack_prev = b;\n\t  }\n\t  function d3_layout_packSplice(a, b) {\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t  }\n\t  function d3_layout_packIntersects(a, b) {\n\t    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n\t    return .999 * dr * dr > dx * dx + dy * dy;\n\t  }\n\t  function d3_layout_packSiblings(node) {\n\t    if (!(nodes = node.children) || !(n = nodes.length)) return;\n\t    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n\t    function bound(node) {\n\t      xMin = Math.min(node.x - node.r, xMin);\n\t      xMax = Math.max(node.x + node.r, xMax);\n\t      yMin = Math.min(node.y - node.r, yMin);\n\t      yMax = Math.max(node.y + node.r, yMax);\n\t    }\n\t    nodes.forEach(d3_layout_packLink);\n\t    a = nodes[0];\n\t    a.x = -a.r;\n\t    a.y = 0;\n\t    bound(a);\n\t    if (n > 1) {\n\t      b = nodes[1];\n\t      b.x = b.r;\n\t      b.y = 0;\n\t      bound(b);\n\t      if (n > 2) {\n\t        c = nodes[2];\n\t        d3_layout_packPlace(a, b, c);\n\t        bound(c);\n\t        d3_layout_packInsert(a, c);\n\t        a._pack_prev = c;\n\t        d3_layout_packInsert(c, b);\n\t        b = a._pack_next;\n\t        for (i = 3; i < n; i++) {\n\t          d3_layout_packPlace(a, b, c = nodes[i]);\n\t          var isect = 0, s1 = 1, s2 = 1;\n\t          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n\t            if (d3_layout_packIntersects(j, c)) {\n\t              isect = 1;\n\t              break;\n\t            }\n\t          }\n\t          if (isect == 1) {\n\t            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n\t              if (d3_layout_packIntersects(k, c)) {\n\t                break;\n\t              }\n\t            }\n\t          }\n\t          if (isect) {\n\t            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n\t            i--;\n\t          } else {\n\t            d3_layout_packInsert(a, c);\n\t            b = c;\n\t            bound(c);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n\t    for (i = 0; i < n; i++) {\n\t      c = nodes[i];\n\t      c.x -= cx;\n\t      c.y -= cy;\n\t      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n\t    }\n\t    node.r = cr;\n\t    nodes.forEach(d3_layout_packUnlink);\n\t  }\n\t  function d3_layout_packLink(node) {\n\t    node._pack_next = node._pack_prev = node;\n\t  }\n\t  function d3_layout_packUnlink(node) {\n\t    delete node._pack_next;\n\t    delete node._pack_prev;\n\t  }\n\t  function d3_layout_packTransform(node, x, y, k) {\n\t    var children = node.children;\n\t    node.x = x += k * node.x;\n\t    node.y = y += k * node.y;\n\t    node.r *= k;\n\t    if (children) {\n\t      var i = -1, n = children.length;\n\t      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n\t    }\n\t  }\n\t  function d3_layout_packPlace(a, b, c) {\n\t    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n\t    if (db && (dx || dy)) {\n\t      var da = b.r + c.r, dc = dx * dx + dy * dy;\n\t      da *= da;\n\t      db *= db;\n\t      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t      c.x = a.x + x * dx + y * dy;\n\t      c.y = a.y + x * dy - y * dx;\n\t    } else {\n\t      c.x = a.x + db;\n\t      c.y = a.y;\n\t    }\n\t  }\n\t  d3.layout.tree = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n\t    function tree(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n\t      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n\t      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n\t      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n\t        var left = root0, right = root0, bottom = root0;\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          if (node.x < left.x) left = node;\n\t          if (node.x > right.x) right = node;\n\t          if (node.depth > bottom.depth) bottom = node;\n\t        });\n\t        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          node.x = (node.x + tx) * kx;\n\t          node.y = node.depth * ky;\n\t        });\n\t      }\n\t      return nodes;\n\t    }\n\t    function wrapTree(root0) {\n\t      var root1 = {\n\t        A: null,\n\t        children: [ root0 ]\n\t      }, queue = [ root1 ], node1;\n\t      while ((node1 = queue.pop()) != null) {\n\t        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n\t          queue.push((children[i] = child = {\n\t            _: children[i],\n\t            parent: node1,\n\t            children: (child = children[i].children) && child.slice() || [],\n\t            A: null,\n\t            a: null,\n\t            z: 0,\n\t            m: 0,\n\t            c: 0,\n\t            s: 0,\n\t            t: null,\n\t            i: i\n\t          }).a = child);\n\t        }\n\t      }\n\t      return root1.children[0];\n\t    }\n\t    function firstWalk(v) {\n\t      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n\t      if (children.length) {\n\t        d3_layout_treeShift(v);\n\t        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t        if (w) {\n\t          v.z = w.z + separation(v._, w._);\n\t          v.m = v.z - midpoint;\n\t        } else {\n\t          v.z = midpoint;\n\t        }\n\t      } else if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t      }\n\t      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t    }\n\t    function secondWalk(v) {\n\t      v._.x = v.z + v.parent.m;\n\t      v.m += v.parent.m;\n\t    }\n\t    function apportion(v, w, ancestor) {\n\t      if (w) {\n\t        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n\t        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n\t          vom = d3_layout_treeLeft(vom);\n\t          vop = d3_layout_treeRight(vop);\n\t          vop.a = v;\n\t          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t          if (shift > 0) {\n\t            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n\t            sip += shift;\n\t            sop += shift;\n\t          }\n\t          sim += vim.m;\n\t          sip += vip.m;\n\t          som += vom.m;\n\t          sop += vop.m;\n\t        }\n\t        if (vim && !d3_layout_treeRight(vop)) {\n\t          vop.t = vim;\n\t          vop.m += sim - sop;\n\t        }\n\t        if (vip && !d3_layout_treeLeft(vom)) {\n\t          vom.t = vip;\n\t          vom.m += sip - som;\n\t          ancestor = v;\n\t        }\n\t      }\n\t      return ancestor;\n\t    }\n\t    function sizeNode(node) {\n\t      node.x *= size[0];\n\t      node.y = node.depth * size[1];\n\t    }\n\t    tree.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return tree;\n\t    };\n\t    tree.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null ? sizeNode : null;\n\t      return tree;\n\t    };\n\t    tree.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) == null ? null : sizeNode;\n\t      return tree;\n\t    };\n\t    return d3_layout_hierarchyRebind(tree, hierarchy);\n\t  };\n\t  function d3_layout_treeSeparation(a, b) {\n\t    return a.parent == b.parent ? 1 : 2;\n\t  }\n\t  function d3_layout_treeLeft(v) {\n\t    var children = v.children;\n\t    return children.length ? children[0] : v.t;\n\t  }\n\t  function d3_layout_treeRight(v) {\n\t    var children = v.children, n;\n\t    return (n = children.length) ? children[n - 1] : v.t;\n\t  }\n\t  function d3_layout_treeMove(wm, wp, shift) {\n\t    var change = shift / (wp.i - wm.i);\n\t    wp.c -= change;\n\t    wp.s += shift;\n\t    wm.c += change;\n\t    wp.z += shift;\n\t    wp.m += shift;\n\t  }\n\t  function d3_layout_treeShift(v) {\n\t    var shift = 0, change = 0, children = v.children, i = children.length, w;\n\t    while (--i >= 0) {\n\t      w = children[i];\n\t      w.z += shift;\n\t      w.m += shift;\n\t      shift += w.s + (change += w.c);\n\t    }\n\t  }\n\t  function d3_layout_treeAncestor(vim, v, ancestor) {\n\t    return vim.a.parent === v.parent ? vim.a : ancestor;\n\t  }\n\t  d3.layout.cluster = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n\t    function cluster(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var children = node.children;\n\t        if (children && children.length) {\n\t          node.x = d3_layout_clusterX(children);\n\t          node.y = d3_layout_clusterY(children);\n\t        } else {\n\t          node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t          node.y = 0;\n\t          previousNode = node;\n\t        }\n\t      });\n\t      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n\t      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n\t        node.x = (node.x - root.x) * size[0];\n\t        node.y = (root.y - node.y) * size[1];\n\t      } : function(node) {\n\t        node.x = (node.x - x0) / (x1 - x0) * size[0];\n\t        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n\t      });\n\t      return nodes;\n\t    }\n\t    cluster.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return cluster;\n\t    };\n\t    cluster.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null;\n\t      return cluster;\n\t    };\n\t    cluster.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) != null;\n\t      return cluster;\n\t    };\n\t    return d3_layout_hierarchyRebind(cluster, hierarchy);\n\t  };\n\t  function d3_layout_clusterY(children) {\n\t    return 1 + d3.max(children, function(child) {\n\t      return child.y;\n\t    });\n\t  }\n\t  function d3_layout_clusterX(children) {\n\t    return children.reduce(function(x, child) {\n\t      return x + child.x;\n\t    }, 0) / children.length;\n\t  }\n\t  function d3_layout_clusterLeft(node) {\n\t    var children = node.children;\n\t    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n\t  }\n\t  function d3_layout_clusterRight(node) {\n\t    var children = node.children, n;\n\t    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n\t  }\n\t  d3.layout.treemap = function() {\n\t    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n\t    function scale(children, k) {\n\t      var i = -1, n = children.length, child, area;\n\t      while (++i < n) {\n\t        area = (child = children[i]).value * (k < 0 ? 0 : k);\n\t        child.area = isNaN(area) || area <= 0 ? 0 : area;\n\t      }\n\t    }\n\t    function squarify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while ((n = remaining.length) > 0) {\n\t          row.push(child = remaining[n - 1]);\n\t          row.area += child.area;\n\t          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n\t            remaining.pop();\n\t            best = score;\n\t          } else {\n\t            row.area -= row.pop().area;\n\t            position(row, u, rect, false);\n\t            u = Math.min(rect.dx, rect.dy);\n\t            row.length = row.area = 0;\n\t            best = Infinity;\n\t          }\n\t        }\n\t        if (row.length) {\n\t          position(row, u, rect, true);\n\t          row.length = row.area = 0;\n\t        }\n\t        children.forEach(squarify);\n\t      }\n\t    }\n\t    function stickify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), remaining = children.slice(), child, row = [];\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while (child = remaining.pop()) {\n\t          row.push(child);\n\t          row.area += child.area;\n\t          if (child.z != null) {\n\t            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n\t            row.length = row.area = 0;\n\t          }\n\t        }\n\t        children.forEach(stickify);\n\t      }\n\t    }\n\t    function worst(row, u) {\n\t      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n\t      while (++i < n) {\n\t        if (!(r = row[i].area)) continue;\n\t        if (r < rmin) rmin = r;\n\t        if (r > rmax) rmax = r;\n\t      }\n\t      s *= s;\n\t      u *= u;\n\t      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n\t    }\n\t    function position(row, u, rect, flush) {\n\t      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n\t      if (u == rect.dx) {\n\t        if (flush || v > rect.dy) v = rect.dy;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dy = v;\n\t          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = true;\n\t        o.dx += rect.x + rect.dx - x;\n\t        rect.y += v;\n\t        rect.dy -= v;\n\t      } else {\n\t        if (flush || v > rect.dx) v = rect.dx;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dx = v;\n\t          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = false;\n\t        o.dy += rect.y + rect.dy - y;\n\t        rect.x += v;\n\t        rect.dx -= v;\n\t      }\n\t    }\n\t    function treemap(d) {\n\t      var nodes = stickies || hierarchy(d), root = nodes[0];\n\t      root.x = root.y = 0;\n\t      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n\t      if (stickies) hierarchy.revalue(root);\n\t      scale([ root ], root.dx * root.dy / root.value);\n\t      (stickies ? stickify : squarify)(root);\n\t      if (sticky) stickies = nodes;\n\t      return nodes;\n\t    }\n\t    treemap.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return treemap;\n\t    };\n\t    treemap.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      function padFunction(node) {\n\t        var p = x.call(treemap, node, node.depth);\n\t        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n\t      }\n\t      function padConstant(node) {\n\t        return d3_layout_treemapPad(node, x);\n\t      }\n\t      var type;\n\t      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n\t      padConstant) : padConstant;\n\t      return treemap;\n\t    };\n\t    treemap.round = function(x) {\n\t      if (!arguments.length) return round != Number;\n\t      round = x ? Math.round : Number;\n\t      return treemap;\n\t    };\n\t    treemap.sticky = function(x) {\n\t      if (!arguments.length) return sticky;\n\t      sticky = x;\n\t      stickies = null;\n\t      return treemap;\n\t    };\n\t    treemap.ratio = function(x) {\n\t      if (!arguments.length) return ratio;\n\t      ratio = x;\n\t      return treemap;\n\t    };\n\t    treemap.mode = function(x) {\n\t      if (!arguments.length) return mode;\n\t      mode = x + \"\";\n\t      return treemap;\n\t    };\n\t    return d3_layout_hierarchyRebind(treemap, hierarchy);\n\t  };\n\t  function d3_layout_treemapPadNull(node) {\n\t    return {\n\t      x: node.x,\n\t      y: node.y,\n\t      dx: node.dx,\n\t      dy: node.dy\n\t    };\n\t  }\n\t  function d3_layout_treemapPad(node, padding) {\n\t    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n\t    if (dx < 0) {\n\t      x += dx / 2;\n\t      dx = 0;\n\t    }\n\t    if (dy < 0) {\n\t      y += dy / 2;\n\t      dy = 0;\n\t    }\n\t    return {\n\t      x: x,\n\t      y: y,\n\t      dx: dx,\n\t      dy: dy\n\t    };\n\t  }\n\t  d3.random = {\n\t    normal: function(µ, σ) {\n\t      var n = arguments.length;\n\t      if (n < 2) σ = 1;\n\t      if (n < 1) µ = 0;\n\t      return function() {\n\t        var x, y, r;\n\t        do {\n\t          x = Math.random() * 2 - 1;\n\t          y = Math.random() * 2 - 1;\n\t          r = x * x + y * y;\n\t        } while (!r || r > 1);\n\t        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n\t      };\n\t    },\n\t    logNormal: function() {\n\t      var random = d3.random.normal.apply(d3, arguments);\n\t      return function() {\n\t        return Math.exp(random());\n\t      };\n\t    },\n\t    bates: function(m) {\n\t      var random = d3.random.irwinHall(m);\n\t      return function() {\n\t        return random() / m;\n\t      };\n\t    },\n\t    irwinHall: function(m) {\n\t      return function() {\n\t        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n\t        return s;\n\t      };\n\t    }\n\t  };\n\t  d3.scale = {};\n\t  function d3_scaleExtent(domain) {\n\t    var start = domain[0], stop = domain[domain.length - 1];\n\t    return start < stop ? [ start, stop ] : [ stop, start ];\n\t  }\n\t  function d3_scaleRange(scale) {\n\t    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n\t  }\n\t  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n\t    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n\t    return function(x) {\n\t      return i(u(x));\n\t    };\n\t  }\n\t  function d3_scale_nice(domain, nice) {\n\t    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n\t    if (x1 < x0) {\n\t      dx = i0, i0 = i1, i1 = dx;\n\t      dx = x0, x0 = x1, x1 = dx;\n\t    }\n\t    domain[i0] = nice.floor(x0);\n\t    domain[i1] = nice.ceil(x1);\n\t    return domain;\n\t  }\n\t  function d3_scale_niceStep(step) {\n\t    return step ? {\n\t      floor: function(x) {\n\t        return Math.floor(x / step) * step;\n\t      },\n\t      ceil: function(x) {\n\t        return Math.ceil(x / step) * step;\n\t      }\n\t    } : d3_scale_niceIdentity;\n\t  }\n\t  var d3_scale_niceIdentity = {\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n\t    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n\t    if (domain[k] < domain[0]) {\n\t      domain = domain.slice().reverse();\n\t      range = range.slice().reverse();\n\t    }\n\t    while (++j <= k) {\n\t      u.push(uninterpolate(domain[j - 1], domain[j]));\n\t      i.push(interpolate(range[j - 1], range[j]));\n\t    }\n\t    return function(x) {\n\t      var j = d3.bisect(domain, x, 1, k) - 1;\n\t      return i[j](u[j](x));\n\t    };\n\t  }\n\t  d3.scale.linear = function() {\n\t    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n\t  };\n\t  function d3_scale_linear(domain, range, interpolate, clamp) {\n\t    var output, input;\n\t    function rescale() {\n\t      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n\t      output = linear(domain, range, uninterpolate, interpolate);\n\t      input = linear(range, domain, uninterpolate, d3_interpolate);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      return output(x);\n\t    }\n\t    scale.invert = function(y) {\n\t      return input(y);\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(Number);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.rangeRound = function(x) {\n\t      return scale.range(x).interpolate(d3_interpolateRound);\n\t    };\n\t    scale.clamp = function(x) {\n\t      if (!arguments.length) return clamp;\n\t      clamp = x;\n\t      return rescale();\n\t    };\n\t    scale.interpolate = function(x) {\n\t      if (!arguments.length) return interpolate;\n\t      interpolate = x;\n\t      return rescale();\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      d3_scale_linearNice(domain, m);\n\t      return rescale();\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_linear(domain, range, interpolate, clamp);\n\t    };\n\t    return rescale();\n\t  }\n\t  function d3_scale_linearRebind(scale, linear) {\n\t    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n\t  }\n\t  function d3_scale_linearNice(domain, m) {\n\t    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t    return domain;\n\t  }\n\t  function d3_scale_linearTickRange(domain, m) {\n\t    if (m == null) m = 10;\n\t    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n\t    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n\t    extent[0] = Math.ceil(extent[0] / step) * step;\n\t    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n\t    extent[2] = step;\n\t    return extent;\n\t  }\n\t  function d3_scale_linearTicks(domain, m) {\n\t    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n\t  }\n\t  function d3_scale_linearTickFormat(domain, m, format) {\n\t    var range = d3_scale_linearTickRange(domain, m);\n\t    if (format) {\n\t      var match = d3_format_re.exec(format);\n\t      match.shift();\n\t      if (match[8] === \"s\") {\n\t        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n\t        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n\t        match[8] = \"f\";\n\t        format = d3.format(match.join(\"\"));\n\t        return function(d) {\n\t          return format(prefix.scale(d)) + prefix.symbol;\n\t        };\n\t      }\n\t      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n\t      format = match.join(\"\");\n\t    } else {\n\t      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n\t    }\n\t    return d3.format(format);\n\t  }\n\t  var d3_scale_linearFormatSignificant = {\n\t    s: 1,\n\t    g: 1,\n\t    p: 1,\n\t    r: 1,\n\t    e: 1\n\t  };\n\t  function d3_scale_linearPrecision(value) {\n\t    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n\t  }\n\t  function d3_scale_linearFormatPrecision(type, range) {\n\t    var p = d3_scale_linearPrecision(range[2]);\n\t    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n\t  }\n\t  d3.scale.log = function() {\n\t    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n\t  };\n\t  function d3_scale_log(linear, base, positive, domain) {\n\t    function log(x) {\n\t      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n\t    }\n\t    function pow(x) {\n\t      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n\t    }\n\t    function scale(x) {\n\t      return linear(log(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return pow(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      positive = x[0] >= 0;\n\t      linear.domain((domain = x.map(Number)).map(log));\n\t      return scale;\n\t    };\n\t    scale.base = function(_) {\n\t      if (!arguments.length) return base;\n\t      base = +_;\n\t      linear.domain(domain.map(log));\n\t      return scale;\n\t    };\n\t    scale.nice = function() {\n\t      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n\t      linear.domain(niced);\n\t      domain = niced.map(pow);\n\t      return scale;\n\t    };\n\t    scale.ticks = function() {\n\t      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n\t      if (isFinite(j - i)) {\n\t        if (positive) {\n\t          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n\t          ticks.push(pow(i));\n\t        } else {\n\t          ticks.push(pow(i));\n\t          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n\t        }\n\t        for (i = 0; ticks[i] < u; i++) {}\n\t        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n\t        ticks = ticks.slice(i, j);\n\t      }\n\t      return ticks;\n\t    };\n\t    scale.tickFormat = function(n, format) {\n\t      if (!arguments.length) return d3_scale_logFormat;\n\t      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n\t      var k = Math.max(1, base * n / scale.ticks().length);\n\t      return function(d) {\n\t        var i = d / pow(Math.round(log(d)));\n\t        if (i * base < base - .5) i *= base;\n\t        return i <= k ? format(d) : \"\";\n\t      };\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_log(linear.copy(), base, positive, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n\t    floor: function(x) {\n\t      return -Math.ceil(-x);\n\t    },\n\t    ceil: function(x) {\n\t      return -Math.floor(-x);\n\t    }\n\t  };\n\t  d3.scale.pow = function() {\n\t    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_pow(linear, exponent, domain) {\n\t    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n\t    function scale(x) {\n\t      return linear(powp(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return powb(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      linear.domain((domain = x.map(Number)).map(powp));\n\t      return scale;\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      return scale.domain(d3_scale_linearNice(domain, m));\n\t    };\n\t    scale.exponent = function(x) {\n\t      if (!arguments.length) return exponent;\n\t      powp = d3_scale_powPow(exponent = x);\n\t      powb = d3_scale_powPow(1 / exponent);\n\t      linear.domain(domain.map(powp));\n\t      return scale;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_pow(linear.copy(), exponent, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_scale_powPow(e) {\n\t    return function(x) {\n\t      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n\t    };\n\t  }\n\t  d3.scale.sqrt = function() {\n\t    return d3.scale.pow().exponent(.5);\n\t  };\n\t  d3.scale.ordinal = function() {\n\t    return d3_scale_ordinal([], {\n\t      t: \"range\",\n\t      a: [ [] ]\n\t    });\n\t  };\n\t  function d3_scale_ordinal(domain, ranger) {\n\t    var index, range, rangeBand;\n\t    function scale(x) {\n\t      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n\t    }\n\t    function steps(start, step) {\n\t      return d3.range(domain.length).map(function(i) {\n\t        return start + step * i;\n\t      });\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = [];\n\t      index = new d3_Map();\n\t      var i = -1, n = x.length, xi;\n\t      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n\t      return scale[ranger.t].apply(scale, ranger.a);\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"range\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangePoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n\t      0) : (stop - start) / (domain.length - 1 + padding);\n\t      range = steps(start + step * padding / 2, step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangePoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundPoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n\t      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n\t      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangeRoundPoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n\t      range = steps(start + step * outerPadding, step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = step * (1 - padding);\n\t      ranger = {\n\t        t: \"rangeBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n\t      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = Math.round(step * (1 - padding));\n\t      ranger = {\n\t        t: \"rangeRoundBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBand = function() {\n\t      return rangeBand;\n\t    };\n\t    scale.rangeExtent = function() {\n\t      return d3_scaleExtent(ranger.a[0]);\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_ordinal(domain, ranger);\n\t    };\n\t    return scale.domain(domain);\n\t  }\n\t  d3.scale.category10 = function() {\n\t    return d3.scale.ordinal().range(d3_category10);\n\t  };\n\t  d3.scale.category20 = function() {\n\t    return d3.scale.ordinal().range(d3_category20);\n\t  };\n\t  d3.scale.category20b = function() {\n\t    return d3.scale.ordinal().range(d3_category20b);\n\t  };\n\t  d3.scale.category20c = function() {\n\t    return d3.scale.ordinal().range(d3_category20c);\n\t  };\n\t  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n\t  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n\t  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n\t  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n\t  d3.scale.quantile = function() {\n\t    return d3_scale_quantile([], []);\n\t  };\n\t  function d3_scale_quantile(domain, range) {\n\t    var thresholds;\n\t    function rescale() {\n\t      var k = 0, q = range.length;\n\t      thresholds = [];\n\t      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.quantiles = function() {\n\t      return thresholds;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantile(domain, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.quantize = function() {\n\t    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_quantize(x0, x1, range) {\n\t    var kx, i;\n\t    function scale(x) {\n\t      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n\t    }\n\t    function rescale() {\n\t      kx = range.length / (x1 - x0);\n\t      i = range.length - 1;\n\t      return scale;\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return [ x0, x1 ];\n\t      x0 = +x[0];\n\t      x1 = +x[x.length - 1];\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      y = y < 0 ? NaN : y / kx + x0;\n\t      return [ y, y + 1 / kx ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantize(x0, x1, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.threshold = function() {\n\t    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n\t  };\n\t  function d3_scale_threshold(domain, range) {\n\t    function scale(x) {\n\t      if (x <= x) return range[d3.bisect(domain, x)];\n\t    }\n\t    scale.domain = function(_) {\n\t      if (!arguments.length) return domain;\n\t      domain = _;\n\t      return scale;\n\t    };\n\t    scale.range = function(_) {\n\t      if (!arguments.length) return range;\n\t      range = _;\n\t      return scale;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return [ domain[y - 1], domain[y] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_threshold(domain, range);\n\t    };\n\t    return scale;\n\t  }\n\t  d3.scale.identity = function() {\n\t    return d3_scale_identity([ 0, 1 ]);\n\t  };\n\t  function d3_scale_identity(domain) {\n\t    function identity(x) {\n\t      return +x;\n\t    }\n\t    identity.invert = identity;\n\t    identity.domain = identity.range = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(identity);\n\t      return identity;\n\t    };\n\t    identity.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    identity.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    identity.copy = function() {\n\t      return d3_scale_identity(domain);\n\t    };\n\t    return identity;\n\t  }\n\t  d3.svg = {};\n\t  function d3_zero() {\n\t    return 0;\n\t  }\n\t  d3.svg.arc = function() {\n\t    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n\t    function arc() {\n\t      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n\t      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n\t      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n\t      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n\t      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n\t        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n\t        if (!cw) p1 *= -1;\n\t        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n\t        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n\t      }\n\t      if (r1) {\n\t        x0 = r1 * Math.cos(a0 + p1);\n\t        y0 = r1 * Math.sin(a0 + p1);\n\t        x1 = r1 * Math.cos(a1 - p1);\n\t        y1 = r1 * Math.sin(a1 - p1);\n\t        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n\t        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n\t          var h1 = (a0 + a1) / 2;\n\t          x0 = r1 * Math.cos(h1);\n\t          y0 = r1 * Math.sin(h1);\n\t          x1 = y1 = null;\n\t        }\n\t      } else {\n\t        x0 = y0 = 0;\n\t      }\n\t      if (r0) {\n\t        x2 = r0 * Math.cos(a1 - p0);\n\t        y2 = r0 * Math.sin(a1 - p0);\n\t        x3 = r0 * Math.cos(a0 + p0);\n\t        y3 = r0 * Math.sin(a0 + p0);\n\t        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n\t        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n\t          var h0 = (a0 + a1) / 2;\n\t          x2 = r0 * Math.cos(h0);\n\t          y2 = r0 * Math.sin(h0);\n\t          x3 = y3 = null;\n\t        }\n\t      } else {\n\t        x2 = y2 = 0;\n\t      }\n\t      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n\t        cr = r0 < r1 ^ cw ? 0 : 1;\n\t        var rc1 = rc, rc0 = rc;\n\t        if (da < π) {\n\t          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n\t          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n\t          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n\t        }\n\t        if (x1 != null) {\n\t          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n\t          if (rc === rc1) {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n\t          } else {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n\t          }\n\t        } else {\n\t          path.push(\"M\", x0, \",\", y0);\n\t        }\n\t        if (x3 != null) {\n\t          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n\t          if (rc === rc0) {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          } else {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          }\n\t        } else {\n\t          path.push(\"L\", x2, \",\", y2);\n\t        }\n\t      } else {\n\t        path.push(\"M\", x0, \",\", y0);\n\t        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n\t        path.push(\"L\", x2, \",\", y2);\n\t        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n\t      }\n\t      path.push(\"Z\");\n\t      return path.join(\"\");\n\t    }\n\t    function circleSegment(r1, cw) {\n\t      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n\t    }\n\t    arc.innerRadius = function(v) {\n\t      if (!arguments.length) return innerRadius;\n\t      innerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.outerRadius = function(v) {\n\t      if (!arguments.length) return outerRadius;\n\t      outerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.cornerRadius = function(v) {\n\t      if (!arguments.length) return cornerRadius;\n\t      cornerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padRadius = function(v) {\n\t      if (!arguments.length) return padRadius;\n\t      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padAngle = function(v) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.centroid = function() {\n\t      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n\t      return [ Math.cos(a) * r, Math.sin(a) * r ];\n\t    };\n\t    return arc;\n\t  };\n\t  var d3_svg_arcAuto = \"auto\";\n\t  function d3_svg_arcInnerRadius(d) {\n\t    return d.innerRadius;\n\t  }\n\t  function d3_svg_arcOuterRadius(d) {\n\t    return d.outerRadius;\n\t  }\n\t  function d3_svg_arcStartAngle(d) {\n\t    return d.startAngle;\n\t  }\n\t  function d3_svg_arcEndAngle(d) {\n\t    return d.endAngle;\n\t  }\n\t  function d3_svg_arcPadAngle(d) {\n\t    return d && d.padAngle;\n\t  }\n\t  function d3_svg_arcSweep(x0, y0, x1, y1) {\n\t    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n\t  }\n\t  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n\t    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n\t    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n\t  }\n\t  function d3_svg_line(projection) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n\t    function line(data) {\n\t      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points), tension));\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n\t        } else if (points.length) {\n\t          segment();\n\t          points = [];\n\t        }\n\t      }\n\t      if (points.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    line.x = function(_) {\n\t      if (!arguments.length) return x;\n\t      x = _;\n\t      return line;\n\t    };\n\t    line.y = function(_) {\n\t      if (!arguments.length) return y;\n\t      y = _;\n\t      return line;\n\t    };\n\t    line.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return line;\n\t    };\n\t    line.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      return line;\n\t    };\n\t    line.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return line;\n\t    };\n\t    return line;\n\t  }\n\t  d3.svg.line = function() {\n\t    return d3_svg_line(d3_identity);\n\t  };\n\t  var d3_svg_lineInterpolators = d3.map({\n\t    linear: d3_svg_lineLinear,\n\t    \"linear-closed\": d3_svg_lineLinearClosed,\n\t    step: d3_svg_lineStep,\n\t    \"step-before\": d3_svg_lineStepBefore,\n\t    \"step-after\": d3_svg_lineStepAfter,\n\t    basis: d3_svg_lineBasis,\n\t    \"basis-open\": d3_svg_lineBasisOpen,\n\t    \"basis-closed\": d3_svg_lineBasisClosed,\n\t    bundle: d3_svg_lineBundle,\n\t    cardinal: d3_svg_lineCardinal,\n\t    \"cardinal-open\": d3_svg_lineCardinalOpen,\n\t    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n\t    monotone: d3_svg_lineMonotone\n\t  });\n\t  d3_svg_lineInterpolators.forEach(function(key, value) {\n\t    value.key = key;\n\t    value.closed = /-closed$/.test(key);\n\t  });\n\t  function d3_svg_lineLinear(points) {\n\t    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n\t  }\n\t  function d3_svg_lineLinearClosed(points) {\n\t    return points.join(\"L\") + \"Z\";\n\t  }\n\t  function d3_svg_lineStep(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n\t    if (n > 1) path.push(\"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepBefore(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepAfter(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineCardinalOpen(points, tension) {\n\t    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineCardinalClosed(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n\t    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n\t  }\n\t  function d3_svg_lineCardinal(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineHermite(points, tangents) {\n\t    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n\t      return d3_svg_lineLinear(points);\n\t    }\n\t    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n\t    if (quad) {\n\t      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n\t      p0 = points[1];\n\t      pi = 2;\n\t    }\n\t    if (tangents.length > 1) {\n\t      t = tangents[1];\n\t      p = points[pi];\n\t      pi++;\n\t      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      for (var i = 2; i < tangents.length; i++, pi++) {\n\t        p = points[pi];\n\t        t = tangents[i];\n\t        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      }\n\t    }\n\t    if (quad) {\n\t      var lp = points[pi];\n\t      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n\t    }\n\t    return path;\n\t  }\n\t  function d3_svg_lineCardinalTangents(points, tension) {\n\t    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n\t    while (++i < n) {\n\t      p0 = p1;\n\t      p1 = p2;\n\t      p2 = points[i];\n\t      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineBasis(points) {\n\t    if (points.length < 3) return d3_svg_lineLinear(points);\n\t    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    points.push(points[n - 1]);\n\t    while (++i <= n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    points.pop();\n\t    path.push(\"L\", pi);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisOpen(points) {\n\t    if (points.length < 4) return d3_svg_lineLinear(points);\n\t    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n\t    while (++i < 3) {\n\t      pi = points[i];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n\t    --i;\n\t    while (++i < n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisClosed(points) {\n\t    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n\t    while (++i < 4) {\n\t      pi = points[i % n];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    --i;\n\t    while (++i < m) {\n\t      pi = points[i % n];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBundle(points, tension) {\n\t    var n = points.length - 1;\n\t    if (n) {\n\t      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n\t      while (++i <= n) {\n\t        p = points[i];\n\t        t = i / n;\n\t        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n\t        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n\t      }\n\t    }\n\t    return d3_svg_lineBasis(points);\n\t  }\n\t  function d3_svg_lineDot4(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n\t  }\n\t  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n\t  function d3_svg_lineBasisBezier(path, x, y) {\n\t    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n\t  }\n\t  function d3_svg_lineSlope(p0, p1) {\n\t    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n\t  }\n\t  function d3_svg_lineFiniteDifferences(points) {\n\t    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n\t    while (++i < j) {\n\t      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n\t    }\n\t    m[i] = d;\n\t    return m;\n\t  }\n\t  function d3_svg_lineMonotoneTangents(points) {\n\t    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n\t    while (++i < j) {\n\t      d = d3_svg_lineSlope(points[i], points[i + 1]);\n\t      if (abs(d) < ε) {\n\t        m[i] = m[i + 1] = 0;\n\t      } else {\n\t        a = m[i] / d;\n\t        b = m[i + 1] / d;\n\t        s = a * a + b * b;\n\t        if (s > 9) {\n\t          s = d * 3 / Math.sqrt(s);\n\t          m[i] = s * a;\n\t          m[i + 1] = s * b;\n\t        }\n\t      }\n\t    }\n\t    i = -1;\n\t    while (++i <= j) {\n\t      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n\t      tangents.push([ s || 0, m[i] * s || 0 ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineMonotone(points) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n\t  }\n\t  d3.svg.line.radial = function() {\n\t    var line = d3_svg_line(d3_svg_lineRadial);\n\t    line.radius = line.x, delete line.x;\n\t    line.angle = line.y, delete line.y;\n\t    return line;\n\t  };\n\t  function d3_svg_lineRadial(points) {\n\t    var point, i = -1, n = points.length, r, a;\n\t    while (++i < n) {\n\t      point = points[i];\n\t      r = point[0];\n\t      a = point[1] - halfπ;\n\t      point[0] = r * Math.cos(a);\n\t      point[1] = r * Math.sin(a);\n\t    }\n\t    return points;\n\t  }\n\t  function d3_svg_area(projection) {\n\t    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n\t    function area(data) {\n\t      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n\t        return x;\n\t      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n\t        return y;\n\t      } : d3_functor(y1), x, y;\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n\t          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n\t        } else if (points0.length) {\n\t          segment();\n\t          points0 = [];\n\t          points1 = [];\n\t        }\n\t      }\n\t      if (points0.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    area.x = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x0 = x1 = _;\n\t      return area;\n\t    };\n\t    area.x0 = function(_) {\n\t      if (!arguments.length) return x0;\n\t      x0 = _;\n\t      return area;\n\t    };\n\t    area.x1 = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x1 = _;\n\t      return area;\n\t    };\n\t    area.y = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y0 = y1 = _;\n\t      return area;\n\t    };\n\t    area.y0 = function(_) {\n\t      if (!arguments.length) return y0;\n\t      y0 = _;\n\t      return area;\n\t    };\n\t    area.y1 = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y1 = _;\n\t      return area;\n\t    };\n\t    area.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return area;\n\t    };\n\t    area.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      interpolateReverse = interpolate.reverse || interpolate;\n\t      L = interpolate.closed ? \"M\" : \"L\";\n\t      return area;\n\t    };\n\t    area.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return area;\n\t    };\n\t    return area;\n\t  }\n\t  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n\t  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n\t  d3.svg.area = function() {\n\t    return d3_svg_area(d3_identity);\n\t  };\n\t  d3.svg.area.radial = function() {\n\t    var area = d3_svg_area(d3_svg_lineRadial);\n\t    area.radius = area.x, delete area.x;\n\t    area.innerRadius = area.x0, delete area.x0;\n\t    area.outerRadius = area.x1, delete area.x1;\n\t    area.angle = area.y, delete area.y;\n\t    area.startAngle = area.y0, delete area.y0;\n\t    area.endAngle = area.y1, delete area.y1;\n\t    return area;\n\t  };\n\t  d3.svg.chord = function() {\n\t    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n\t    function chord(d, i) {\n\t      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n\t      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n\t    }\n\t    function subgroup(self, f, d, i) {\n\t      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n\t      return {\n\t        r: r,\n\t        a0: a0,\n\t        a1: a1,\n\t        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n\t        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n\t      };\n\t    }\n\t    function equals(a, b) {\n\t      return a.a0 == b.a0 && a.a1 == b.a1;\n\t    }\n\t    function arc(r, p, a) {\n\t      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n\t    }\n\t    function curve(r0, p0, r1, p1) {\n\t      return \"Q 0,0 \" + p1;\n\t    }\n\t    chord.radius = function(v) {\n\t      if (!arguments.length) return radius;\n\t      radius = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.source = function(v) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.target = function(v) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    return chord;\n\t  };\n\t  function d3_svg_chordRadius(d) {\n\t    return d.radius;\n\t  }\n\t  d3.svg.diagonal = function() {\n\t    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n\t    function diagonal(d, i) {\n\t      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n\t        x: p0.x,\n\t        y: m\n\t      }, {\n\t        x: p3.x,\n\t        y: m\n\t      }, p3 ];\n\t      p = p.map(projection);\n\t      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n\t    }\n\t    diagonal.source = function(x) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.target = function(x) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.projection = function(x) {\n\t      if (!arguments.length) return projection;\n\t      projection = x;\n\t      return diagonal;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalProjection(d) {\n\t    return [ d.x, d.y ];\n\t  }\n\t  d3.svg.diagonal.radial = function() {\n\t    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n\t    diagonal.projection = function(x) {\n\t      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalRadialProjection(projection) {\n\t    return function() {\n\t      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n\t      return [ r * Math.cos(a), r * Math.sin(a) ];\n\t    };\n\t  }\n\t  d3.svg.symbol = function() {\n\t    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n\t    function symbol(d, i) {\n\t      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n\t    }\n\t    symbol.type = function(x) {\n\t      if (!arguments.length) return type;\n\t      type = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    symbol.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    return symbol;\n\t  };\n\t  function d3_svg_symbolSize() {\n\t    return 64;\n\t  }\n\t  function d3_svg_symbolType() {\n\t    return \"circle\";\n\t  }\n\t  function d3_svg_symbolCircle(size) {\n\t    var r = Math.sqrt(size / π);\n\t    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n\t  }\n\t  var d3_svg_symbols = d3.map({\n\t    circle: d3_svg_symbolCircle,\n\t    cross: function(size) {\n\t      var r = Math.sqrt(size / 5) / 2;\n\t      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n\t    },\n\t    diamond: function(size) {\n\t      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n\t    },\n\t    square: function(size) {\n\t      var r = Math.sqrt(size) / 2;\n\t      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n\t    },\n\t    \"triangle-down\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n\t    },\n\t    \"triangle-up\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n\t    }\n\t  });\n\t  d3.svg.symbolTypes = d3_svg_symbols.keys();\n\t  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n\t  d3_selectionPrototype.transition = function(name) {\n\t    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n\t      time: Date.now(),\n\t      ease: d3_ease_cubicInOut,\n\t      delay: 0,\n\t      duration: 250\n\t    };\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_selectionPrototype.interrupt = function(name) {\n\t    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n\t  };\n\t  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n\t  function d3_selection_interruptNS(ns) {\n\t    return function() {\n\t      var lock, activeId, active;\n\t      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n\t        active.timer.c = null;\n\t        active.timer.t = NaN;\n\t        if (--lock.count) delete lock[activeId]; else delete this[ns];\n\t        lock.active += .5;\n\t        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n\t      }\n\t    };\n\t  }\n\t  function d3_transition(groups, ns, id) {\n\t    d3_subclass(groups, d3_transitionPrototype);\n\t    groups.namespace = ns;\n\t    groups.id = id;\n\t    return groups;\n\t  }\n\t  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n\t  d3_transitionPrototype.call = d3_selectionPrototype.call;\n\t  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_transitionPrototype.node = d3_selectionPrototype.node;\n\t  d3_transitionPrototype.size = d3_selectionPrototype.size;\n\t  d3.transition = function(selection, name) {\n\t    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n\t  };\n\t  d3.transition.prototype = d3_transitionPrototype;\n\t  d3_transitionPrototype.select = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n\t          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n\t          subgroup.push(subnode);\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.selectAll = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id];\n\t          subnodes = selector.call(node, node.__data__, i, j);\n\t          subgroups.push(subgroup = []);\n\t          for (var k = -1, o = subnodes.length; ++k < o; ) {\n\t            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n\t            subgroup.push(subnode);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, this.namespace, this.id);\n\t  };\n\t  d3_transitionPrototype.tween = function(name, tween) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n\t    return d3_selection_each(this, tween == null ? function(node) {\n\t      node[ns][id].tween.remove(name);\n\t    } : function(node) {\n\t      node[ns][id].tween.set(name, tween);\n\t    });\n\t  };\n\t  function d3_transition_tween(groups, name, value, tween) {\n\t    var id = groups.id, ns = groups.namespace;\n\t    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n\t    } : (value = tween(value), function(node) {\n\t      node[ns][id].tween.set(name, value);\n\t    }));\n\t  }\n\t  d3_transitionPrototype.attr = function(nameNS, value) {\n\t    if (arguments.length < 2) {\n\t      for (value in nameNS) this.attr(value, nameNS[value]);\n\t      return this;\n\t    }\n\t    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrTween(b) {\n\t      return b == null ? attrNull : (b += \"\", function() {\n\t        var a = this.getAttribute(name), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttribute(name, i(t));\n\t        });\n\t      });\n\t    }\n\t    function attrTweenNS(b) {\n\t      return b == null ? attrNullNS : (b += \"\", function() {\n\t        var a = this.getAttributeNS(name.space, name.local), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttributeNS(name.space, name.local, i(t));\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n\t    var name = d3.ns.qualify(nameNS);\n\t    function attrTween(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttribute(name));\n\t      return f && function(t) {\n\t        this.setAttribute(name, f(t));\n\t      };\n\t    }\n\t    function attrTweenNS(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n\t      return f && function(t) {\n\t        this.setAttributeNS(name.space, name.local, f(t));\n\t      };\n\t    }\n\t    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.style(priority, name[priority], value);\n\t        return this;\n\t      }\n\t      priority = \"\";\n\t    }\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleString(b) {\n\t      return b == null ? styleNull : (b += \"\", function() {\n\t        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n\t        return a !== b && (i = d3_interpolate(a, b), function(t) {\n\t          this.style.setProperty(name, i(t), priority);\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n\t  };\n\t  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n\t    if (arguments.length < 3) priority = \"\";\n\t    function styleTween(d, i) {\n\t      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n\t      return f && function(t) {\n\t        this.style.setProperty(name, f(t), priority);\n\t      };\n\t    }\n\t    return this.tween(\"style.\" + name, styleTween);\n\t  };\n\t  d3_transitionPrototype.text = function(value) {\n\t    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n\t  };\n\t  function d3_transition_text(b) {\n\t    if (b == null) b = \"\";\n\t    return function() {\n\t      this.textContent = b;\n\t    };\n\t  }\n\t  d3_transitionPrototype.remove = function() {\n\t    var ns = this.namespace;\n\t    return this.each(\"end.transition\", function() {\n\t      var p;\n\t      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n\t    });\n\t  };\n\t  d3_transitionPrototype.ease = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].ease;\n\t    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n\t    return d3_selection_each(this, function(node) {\n\t      node[ns][id].ease = value;\n\t    });\n\t  };\n\t  d3_transitionPrototype.delay = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].delay;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n\t    } : (value = +value, function(node) {\n\t      node[ns][id].delay = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.duration = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].duration;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n\t    } : (value = Math.max(1, value), function(node) {\n\t      node[ns][id].duration = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.each = function(type, listener) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) {\n\t      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n\t      try {\n\t        d3_transitionInheritId = id;\n\t        d3_selection_each(this, function(node, i, j) {\n\t          d3_transitionInherit = node[ns][id];\n\t          type.call(node, node.__data__, i, j);\n\t        });\n\t      } finally {\n\t        d3_transitionInherit = inherit;\n\t        d3_transitionInheritId = inheritId;\n\t      }\n\t    } else {\n\t      d3_selection_each(this, function(node) {\n\t        var transition = node[ns][id];\n\t        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n\t      });\n\t    }\n\t    return this;\n\t  };\n\t  d3_transitionPrototype.transition = function() {\n\t    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id0];\n\t          d3_transitionNode(node, i, ns, id1, {\n\t            time: transition.time,\n\t            ease: transition.ease,\n\t            delay: transition.delay + transition.duration,\n\t            duration: transition.duration\n\t          });\n\t        }\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id1);\n\t  };\n\t  function d3_transitionNamespace(name) {\n\t    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n\t  }\n\t  function d3_transitionNode(node, i, ns, id, inherit) {\n\t    var lock = node[ns] || (node[ns] = {\n\t      active: 0,\n\t      count: 0\n\t    }), transition = lock[id], time, timer, duration, ease, tweens;\n\t    function schedule(elapsed) {\n\t      var delay = transition.delay;\n\t      timer.t = delay + time;\n\t      if (delay <= elapsed) return start(elapsed - delay);\n\t      timer.c = start;\n\t    }\n\t    function start(elapsed) {\n\t      var activeId = lock.active, active = lock[activeId];\n\t      if (active) {\n\t        active.timer.c = null;\n\t        active.timer.t = NaN;\n\t        --lock.count;\n\t        delete lock[activeId];\n\t        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n\t      }\n\t      for (var cancelId in lock) {\n\t        if (+cancelId < id) {\n\t          var cancel = lock[cancelId];\n\t          cancel.timer.c = null;\n\t          cancel.timer.t = NaN;\n\t          --lock.count;\n\t          delete lock[cancelId];\n\t        }\n\t      }\n\t      timer.c = tick;\n\t      d3_timer(function() {\n\t        if (timer.c && tick(elapsed || 1)) {\n\t          timer.c = null;\n\t          timer.t = NaN;\n\t        }\n\t        return 1;\n\t      }, 0, time);\n\t      lock.active = id;\n\t      transition.event && transition.event.start.call(node, node.__data__, i);\n\t      tweens = [];\n\t      transition.tween.forEach(function(key, value) {\n\t        if (value = value.call(node, node.__data__, i)) {\n\t          tweens.push(value);\n\t        }\n\t      });\n\t      ease = transition.ease;\n\t      duration = transition.duration;\n\t    }\n\t    function tick(elapsed) {\n\t      var t = elapsed / duration, e = ease(t), n = tweens.length;\n\t      while (n > 0) {\n\t        tweens[--n].call(node, e);\n\t      }\n\t      if (t >= 1) {\n\t        transition.event && transition.event.end.call(node, node.__data__, i);\n\t        if (--lock.count) delete lock[id]; else delete node[ns];\n\t        return 1;\n\t      }\n\t    }\n\t    if (!transition) {\n\t      time = inherit.time;\n\t      timer = d3_timer(schedule, 0, time);\n\t      transition = lock[id] = {\n\t        tween: new d3_Map(),\n\t        time: time,\n\t        timer: timer,\n\t        delay: inherit.delay,\n\t        duration: inherit.duration,\n\t        ease: inherit.ease,\n\t        index: i\n\t      };\n\t      inherit = null;\n\t      ++lock.count;\n\t    }\n\t  }\n\t  d3.svg.axis = function() {\n\t    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n\t    function axis(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this);\n\t        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n\t        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n\t        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n\t        d3.transition(path));\n\t        tickEnter.append(\"line\");\n\t        tickEnter.append(\"text\");\n\t        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n\t        if (orient === \"bottom\" || orient === \"top\") {\n\t          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n\t          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n\t          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n\t        } else {\n\t          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n\t          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n\t          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n\t        }\n\t        lineEnter.attr(y2, sign * innerTickSize);\n\t        textEnter.attr(y1, sign * tickSpacing);\n\t        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n\t        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n\t        if (scale1.rangeBand) {\n\t          var x = scale1, dx = x.rangeBand() / 2;\n\t          scale0 = scale1 = function(d) {\n\t            return x(d) + dx;\n\t          };\n\t        } else if (scale0.rangeBand) {\n\t          scale0 = scale1;\n\t        } else {\n\t          tickExit.call(tickTransform, scale1, scale0);\n\t        }\n\t        tickEnter.call(tickTransform, scale0, scale1);\n\t        tickUpdate.call(tickTransform, scale1, scale1);\n\t      });\n\t    }\n\t    axis.scale = function(x) {\n\t      if (!arguments.length) return scale;\n\t      scale = x;\n\t      return axis;\n\t    };\n\t    axis.orient = function(x) {\n\t      if (!arguments.length) return orient;\n\t      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n\t      return axis;\n\t    };\n\t    axis.ticks = function() {\n\t      if (!arguments.length) return tickArguments_;\n\t      tickArguments_ = d3_array(arguments);\n\t      return axis;\n\t    };\n\t    axis.tickValues = function(x) {\n\t      if (!arguments.length) return tickValues;\n\t      tickValues = x;\n\t      return axis;\n\t    };\n\t    axis.tickFormat = function(x) {\n\t      if (!arguments.length) return tickFormat_;\n\t      tickFormat_ = x;\n\t      return axis;\n\t    };\n\t    axis.tickSize = function(x) {\n\t      var n = arguments.length;\n\t      if (!n) return innerTickSize;\n\t      innerTickSize = +x;\n\t      outerTickSize = +arguments[n - 1];\n\t      return axis;\n\t    };\n\t    axis.innerTickSize = function(x) {\n\t      if (!arguments.length) return innerTickSize;\n\t      innerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.outerTickSize = function(x) {\n\t      if (!arguments.length) return outerTickSize;\n\t      outerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.tickPadding = function(x) {\n\t      if (!arguments.length) return tickPadding;\n\t      tickPadding = +x;\n\t      return axis;\n\t    };\n\t    axis.tickSubdivide = function() {\n\t      return arguments.length && axis;\n\t    };\n\t    return axis;\n\t  };\n\t  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n\t    top: 1,\n\t    right: 1,\n\t    bottom: 1,\n\t    left: 1\n\t  };\n\t  function d3_svg_axisX(selection, x0, x1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = x0(d);\n\t      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n\t    });\n\t  }\n\t  function d3_svg_axisY(selection, y0, y1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = y0(d);\n\t      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n\t    });\n\t  }\n\t  d3.svg.brush = function() {\n\t    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n\t    function brush(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n\t        var background = g.selectAll(\".background\").data([ 0 ]);\n\t        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n\t        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n\t        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n\t        resize.exit().remove();\n\t        resize.enter().append(\"g\").attr(\"class\", function(d) {\n\t          return \"resize \" + d;\n\t        }).style(\"cursor\", function(d) {\n\t          return d3_svg_brushCursor[d];\n\t        }).append(\"rect\").attr(\"x\", function(d) {\n\t          return /[ew]$/.test(d) ? -3 : null;\n\t        }).attr(\"y\", function(d) {\n\t          return /^[ns]/.test(d) ? -3 : null;\n\t        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n\t        resize.style(\"display\", brush.empty() ? \"none\" : null);\n\t        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n\t        if (x) {\n\t          range = d3_scaleRange(x);\n\t          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n\t          redrawX(gUpdate);\n\t        }\n\t        if (y) {\n\t          range = d3_scaleRange(y);\n\t          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n\t          redrawY(gUpdate);\n\t        }\n\t        redraw(gUpdate);\n\t      });\n\t    }\n\t    brush.event = function(g) {\n\t      g.each(function() {\n\t        var event_ = event.of(this, arguments), extent1 = {\n\t          x: xExtent,\n\t          y: yExtent,\n\t          i: xExtentDomain,\n\t          j: yExtentDomain\n\t        }, extent0 = this.__chart__ || extent1;\n\t        this.__chart__ = extent1;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.brush\", function() {\n\t            xExtentDomain = extent0.i;\n\t            yExtentDomain = extent0.j;\n\t            xExtent = extent0.x;\n\t            yExtent = extent0.y;\n\t            event_({\n\t              type: \"brushstart\"\n\t            });\n\t          }).tween(\"brush:brush\", function() {\n\t            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n\t            xExtentDomain = yExtentDomain = null;\n\t            return function(t) {\n\t              xExtent = extent1.x = xi(t);\n\t              yExtent = extent1.y = yi(t);\n\t              event_({\n\t                type: \"brush\",\n\t                mode: \"resize\"\n\t              });\n\t            };\n\t          }).each(\"end.brush\", function() {\n\t            xExtentDomain = extent1.i;\n\t            yExtentDomain = extent1.j;\n\t            event_({\n\t              type: \"brush\",\n\t              mode: \"resize\"\n\t            });\n\t            event_({\n\t              type: \"brushend\"\n\t            });\n\t          });\n\t        } else {\n\t          event_({\n\t            type: \"brushstart\"\n\t          });\n\t          event_({\n\t            type: \"brush\",\n\t            mode: \"resize\"\n\t          });\n\t          event_({\n\t            type: \"brushend\"\n\t          });\n\t        }\n\t      });\n\t    };\n\t    function redraw(g) {\n\t      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n\t        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n\t      });\n\t    }\n\t    function redrawX(g) {\n\t      g.select(\".extent\").attr(\"x\", xExtent[0]);\n\t      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n\t    }\n\t    function redrawY(g) {\n\t      g.select(\".extent\").attr(\"y\", yExtent[0]);\n\t      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n\t    }\n\t    function brushstart() {\n\t      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n\t      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n\t      if (d3.event.changedTouches) {\n\t        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n\t      } else {\n\t        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n\t      }\n\t      g.interrupt().selectAll(\"*\").interrupt();\n\t      if (dragging) {\n\t        origin[0] = xExtent[0] - origin[0];\n\t        origin[1] = yExtent[0] - origin[1];\n\t      } else if (resizing) {\n\t        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n\t        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n\t        origin[0] = xExtent[ex];\n\t        origin[1] = yExtent[ey];\n\t      } else if (d3.event.altKey) center = origin.slice();\n\t      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n\t      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n\t      event_({\n\t        type: \"brushstart\"\n\t      });\n\t      brushmove();\n\t      function keydown() {\n\t        if (d3.event.keyCode == 32) {\n\t          if (!dragging) {\n\t            center = null;\n\t            origin[0] -= xExtent[1];\n\t            origin[1] -= yExtent[1];\n\t            dragging = 2;\n\t          }\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function keyup() {\n\t        if (d3.event.keyCode == 32 && dragging == 2) {\n\t          origin[0] += xExtent[1];\n\t          origin[1] += yExtent[1];\n\t          dragging = 0;\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function brushmove() {\n\t        var point = d3.mouse(target), moved = false;\n\t        if (offset) {\n\t          point[0] += offset[0];\n\t          point[1] += offset[1];\n\t        }\n\t        if (!dragging) {\n\t          if (d3.event.altKey) {\n\t            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n\t            origin[0] = xExtent[+(point[0] < center[0])];\n\t            origin[1] = yExtent[+(point[1] < center[1])];\n\t          } else center = null;\n\t        }\n\t        if (resizingX && move1(point, x, 0)) {\n\t          redrawX(g);\n\t          moved = true;\n\t        }\n\t        if (resizingY && move1(point, y, 1)) {\n\t          redrawY(g);\n\t          moved = true;\n\t        }\n\t        if (moved) {\n\t          redraw(g);\n\t          event_({\n\t            type: \"brush\",\n\t            mode: dragging ? \"move\" : \"resize\"\n\t          });\n\t        }\n\t      }\n\t      function move1(point, scale, i) {\n\t        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n\t        if (dragging) {\n\t          r0 -= position;\n\t          r1 -= size + position;\n\t        }\n\t        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n\t        if (dragging) {\n\t          max = (min += position) + size;\n\t        } else {\n\t          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n\t          if (position < min) {\n\t            max = min;\n\t            min = position;\n\t          } else {\n\t            max = position;\n\t          }\n\t        }\n\t        if (extent[0] != min || extent[1] != max) {\n\t          if (i) yExtentDomain = null; else xExtentDomain = null;\n\t          extent[0] = min;\n\t          extent[1] = max;\n\t          return true;\n\t        }\n\t      }\n\t      function brushend() {\n\t        brushmove();\n\t        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n\t        d3.select(\"body\").style(\"cursor\", null);\n\t        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n\t        dragRestore();\n\t        event_({\n\t          type: \"brushend\"\n\t        });\n\t      }\n\t    }\n\t    brush.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.clamp = function(z) {\n\t      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n\t      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n\t      return brush;\n\t    };\n\t    brush.extent = function(z) {\n\t      var x0, x1, y0, y1, t;\n\t      if (!arguments.length) {\n\t        if (x) {\n\t          if (xExtentDomain) {\n\t            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n\t          } else {\n\t            x0 = xExtent[0], x1 = xExtent[1];\n\t            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n\t            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t          }\n\t        }\n\t        if (y) {\n\t          if (yExtentDomain) {\n\t            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n\t          } else {\n\t            y0 = yExtent[0], y1 = yExtent[1];\n\t            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n\t            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t          }\n\t        }\n\t        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n\t      }\n\t      if (x) {\n\t        x0 = z[0], x1 = z[1];\n\t        if (y) x0 = x0[0], x1 = x1[0];\n\t        xExtentDomain = [ x0, x1 ];\n\t        if (x.invert) x0 = x(x0), x1 = x(x1);\n\t        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n\t      }\n\t      if (y) {\n\t        y0 = z[0], y1 = z[1];\n\t        if (x) y0 = y0[1], y1 = y1[1];\n\t        yExtentDomain = [ y0, y1 ];\n\t        if (y.invert) y0 = y(y0), y1 = y(y1);\n\t        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n\t      }\n\t      return brush;\n\t    };\n\t    brush.clear = function() {\n\t      if (!brush.empty()) {\n\t        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n\t        xExtentDomain = yExtentDomain = null;\n\t      }\n\t      return brush;\n\t    };\n\t    brush.empty = function() {\n\t      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n\t    };\n\t    return d3.rebind(brush, event, \"on\");\n\t  };\n\t  var d3_svg_brushCursor = {\n\t    n: \"ns-resize\",\n\t    e: \"ew-resize\",\n\t    s: \"ns-resize\",\n\t    w: \"ew-resize\",\n\t    nw: \"nwse-resize\",\n\t    ne: \"nesw-resize\",\n\t    se: \"nwse-resize\",\n\t    sw: \"nesw-resize\"\n\t  };\n\t  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n\t  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n\t  var d3_time_formatUtc = d3_time_format.utc;\n\t  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n\t  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n\t  function d3_time_formatIsoNative(date) {\n\t    return date.toISOString();\n\t  }\n\t  d3_time_formatIsoNative.parse = function(string) {\n\t    var date = new Date(string);\n\t    return isNaN(date) ? null : date;\n\t  };\n\t  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n\t  d3_time.second = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 1e3) * 1e3);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n\t  }, function(date) {\n\t    return date.getSeconds();\n\t  });\n\t  d3_time.seconds = d3_time.second.range;\n\t  d3_time.seconds.utc = d3_time.second.utc.range;\n\t  d3_time.minute = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 6e4) * 6e4);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n\t  }, function(date) {\n\t    return date.getMinutes();\n\t  });\n\t  d3_time.minutes = d3_time.minute.range;\n\t  d3_time.minutes.utc = d3_time.minute.utc.range;\n\t  d3_time.hour = d3_time_interval(function(date) {\n\t    var timezone = date.getTimezoneOffset() / 60;\n\t    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n\t  }, function(date) {\n\t    return date.getHours();\n\t  });\n\t  d3_time.hours = d3_time.hour.range;\n\t  d3_time.hours.utc = d3_time.hour.utc.range;\n\t  d3_time.month = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setDate(1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setMonth(date.getMonth() + offset);\n\t  }, function(date) {\n\t    return date.getMonth();\n\t  });\n\t  d3_time.months = d3_time.month.range;\n\t  d3_time.months.utc = d3_time.month.utc.range;\n\t  function d3_time_scale(linear, methods, format) {\n\t    function scale(x) {\n\t      return linear(x);\n\t    }\n\t    scale.invert = function(x) {\n\t      return d3_time_scaleDate(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n\t      linear.domain(x);\n\t      return scale;\n\t    };\n\t    function tickMethod(extent, count) {\n\t      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n\t      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n\t        return d / 31536e6;\n\t      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n\t    }\n\t    scale.nice = function(interval, skip) {\n\t      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n\t      if (method) interval = method[0], skip = method[1];\n\t      function skipped(date) {\n\t        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n\t      }\n\t      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n\t        floor: function(date) {\n\t          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n\t          return date;\n\t        },\n\t        ceil: function(date) {\n\t          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n\t          return date;\n\t        }\n\t      } : interval));\n\t    };\n\t    scale.ticks = function(interval, skip) {\n\t      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n\t        range: interval\n\t      }, skip ];\n\t      if (method) interval = method[0], skip = method[1];\n\t      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n\t    };\n\t    scale.tickFormat = function() {\n\t      return format;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_time_scale(linear.copy(), methods, format);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_time_scaleDate(t) {\n\t    return new Date(t);\n\t  }\n\t  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n\t  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n\t  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n\t    return d.getMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getDay() && d.getDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  var d3_time_scaleMilliseconds = {\n\t    range: function(start, stop, step) {\n\t      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n\t    },\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  d3_time_scaleLocalMethods.year = d3_time.year;\n\t  d3_time.scale = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n\t  };\n\t  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n\t    return [ m[0].utc, m[1] ];\n\t  });\n\t  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n\t    return d.getUTCMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getUTCSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getUTCMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getUTCHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getUTCDay() && d.getUTCDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getUTCDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getUTCMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n\t  d3_time.scale.utc = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n\t  };\n\t  d3.text = d3_xhrType(function(request) {\n\t    return request.responseText;\n\t  });\n\t  d3.json = function(url, callback) {\n\t    return d3_xhr(url, \"application/json\", d3_json, callback);\n\t  };\n\t  function d3_json(request) {\n\t    return JSON.parse(request.responseText);\n\t  }\n\t  d3.html = function(url, callback) {\n\t    return d3_xhr(url, \"text/html\", d3_html, callback);\n\t  };\n\t  function d3_html(request) {\n\t    var range = d3_document.createRange();\n\t    range.selectNode(d3_document.body);\n\t    return range.createContextualFragment(request.responseText);\n\t  }\n\t  d3.xml = d3_xhrType(function(request) {\n\t    return request.responseXML;\n\t  });\n\t  if (true) this.d3 = d3, !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n\t}();\n\n/***/ },\n\n/***/ 122:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.shouldSetupYDomain = shouldSetupYDomain;\n\texports.default = applyYDomain;\n\t\n\tvar _reactAddonsUpdate = __webpack_require__(13);\n\t\n\tvar _reactAddonsUpdate2 = _interopRequireDefault(_reactAddonsUpdate);\n\t\n\tvar _getNiceDomain = __webpack_require__(123);\n\t\n\tvar _getNiceDomain2 = _interopRequireDefault(_getNiceDomain);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * Need to setup yDomain for NVD3 chart that requires YAXis\n\t * @param object typeConfig Chart type config\n\t * @return bool\n\t */\n\tfunction shouldSetupYDomain(typeConfig) {\n\t  return 0 === typeConfig.dataFormat.indexOf('nvd3') && -1 !== typeConfig.modules.settings.indexOf('YAxis');\n\t}\n\t\n\t/**\n\t * add nicely rounded yDomain to chart options, if chart has a yAxis\n\t * @param obj chartOptions\n\t * @param obj typeConfig\n\t * @param array chartData\n\t * @return obj Cloned chart options object with new yDomain\n\t */\n\tfunction applyYDomain(chartOptions, typeConfig, chartData) {\n\t  if (!shouldSetupYDomain(typeConfig)) {\n\t    return chartOptions;\n\t  }\n\t\n\t  /**\n\t   * @todo Recalculate yDomain when series visibility is toggled by clicking on dots in the legend\n\t   */\n\t  return (0, _reactAddonsUpdate2.default)(chartOptions, { yDomain: {\n\t      $set: (0, _getNiceDomain2.default)(typeConfig.dataFormat, chartData)\n\t    } });\n\t}\n\t;\n\t\n\tvar _temp = function () {\n\t  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n\t    return;\n\t  }\n\t\n\t  __REACT_HOT_LOADER__.register(shouldSetupYDomain, 'shouldSetupYDomain', '/Users/joshkadis/Repos/simplechart/app/middleware/utils/applyYDomain.js');\n\t\n\t  __REACT_HOT_LOADER__.register(applyYDomain, 'applyYDomain', '/Users/joshkadis/Repos/simplechart/app/middleware/utils/applyYDomain.js');\n\t}();\n\n\t;\n\n/***/ },\n\n/***/ 123:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = getNiceDomain;\n\t\n\tvar _d = __webpack_require__(78);\n\t\n\t/**\n\t * Get [min, max] array for data series in nvd3SingleSeries or nvd3MultiSeries format\n\t *\n\t * @param array series Data series\n\t * @param string format Data format\n\t * @return array Range of [min, max] for series\n\t */\n\tfunction _getSeriesDomain(series, format) {\n\t  var key = 'nvd3SingleSeries' === format ? 'value' : 'y';\n\t  var values = series.map(function (point) {\n\t    return point[key];\n\t  });\n\t  return [(0, _d.min)(values), (0, _d.max)(values)];\n\t}\n\t\n\tfunction _getMultiSeriesDomain(series, format) {\n\t  var mins = [];\n\t  var maxs = [];\n\t  series.forEach(function (singleSeries) {\n\t    var domain = _getSeriesDomain(singleSeries.values, format);\n\t    mins.push(domain[0]);\n\t    maxs.push(domain[1]);\n\t  });\n\t  return [(0, _d.min)(mins), (0, _d.max)(maxs)];\n\t}\n\t\n\tfunction _makeNice(range) {\n\t  return _d.scale.linear().domain(range).nice().domain();\n\t}\n\t\n\t/**\n\t * Get \"nice\" rounded domain from dataset\n\t *\n\t * @param string format Data format from chart config object\n\t * @param array data Chart data transformed for data format\n\t * @return array Domain array of [min, max] values\n\t */\n\tfunction getNiceDomain(format, data) {\n\t  var domain = 'nvd3SingleSeries' === format ? _getSeriesDomain(data, format) : _getMultiSeriesDomain(data, format);\n\t  return _makeNice(domain);\n\t}\n\t;\n\t\n\tvar _temp = function () {\n\t  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n\t    return;\n\t  }\n\t\n\t  __REACT_HOT_LOADER__.register(_getSeriesDomain, '_getSeriesDomain', '/Users/joshkadis/Repos/simplechart/app/utils/dataFormats/getNiceDomain.js');\n\t\n\t  __REACT_HOT_LOADER__.register(_getMultiSeriesDomain, '_getMultiSeriesDomain', '/Users/joshkadis/Repos/simplechart/app/utils/dataFormats/getNiceDomain.js');\n\t\n\t  __REACT_HOT_LOADER__.register(_makeNice, '_makeNice', '/Users/joshkadis/Repos/simplechart/app/utils/dataFormats/getNiceDomain.js');\n\t\n\t  __REACT_HOT_LOADER__.register(getNiceDomain, 'getNiceDomain', '/Users/joshkadis/Repos/simplechart/app/utils/dataFormats/getNiceDomain.js');\n\t}();\n\n\t;\n\n/***/ },\n\n/***/ 246:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar map = {\n\t\t\"./NVD3Adapter/index\": 267\n\t};\n\tfunction webpackContext(req) {\n\t\treturn __webpack_require__(webpackContextResolve(req));\n\t};\n\tfunction webpackContextResolve(req) {\n\t\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n\t};\n\twebpackContext.keys = function webpackContextKeys() {\n\t\treturn Object.keys(map);\n\t};\n\twebpackContext.resolve = webpackContextResolve;\n\tmodule.exports = webpackContext;\n\twebpackContext.id = 246;\n\n\n/***/ },\n\n/***/ 267:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactNvd = __webpack_require__(354);\n\t\n\tvar _reactNvd2 = _interopRequireDefault(_reactNvd);\n\t\n\tvar _reactAddonsUpdate = __webpack_require__(13);\n\t\n\tvar _reactAddonsUpdate2 = _interopRequireDefault(_reactAddonsUpdate);\n\t\n\tvar _reactRedux = __webpack_require__(23);\n\t\n\tvar _actions = __webpack_require__(16);\n\t\n\tvar _actions2 = _interopRequireDefault(_actions);\n\t\n\tvar _constants = __webpack_require__(11);\n\t\n\tvar _chartTypeUtils = __webpack_require__(47);\n\t\n\tvar _chartTypes = __webpack_require__(37);\n\t\n\tvar _applyDataFormatters = __webpack_require__(73);\n\t\n\tvar _applyDataFormatters2 = _interopRequireDefault(_applyDataFormatters);\n\t\n\tvar _applyYDomain = __webpack_require__(122);\n\t\n\tvar _getNiceDomain = __webpack_require__(123);\n\t\n\tvar _getNiceDomain2 = _interopRequireDefault(_getNiceDomain);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar NVD3Adapter = function (_Component) {\n\t  _inherits(NVD3Adapter, _Component);\n\t\n\t  function NVD3Adapter() {\n\t    _classCallCheck(this, NVD3Adapter);\n\t\n\t    return _possibleConstructorReturn(this, (NVD3Adapter.__proto__ || Object.getPrototypeOf(NVD3Adapter)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(NVD3Adapter, [{\n\t    key: 'componentWillMount',\n\t    value: function componentWillMount() {\n\t      this.setState(this._buildStateFromProps(this.props));\n\t    }\n\t  }, {\n\t    key: 'componentWillReceiveProps',\n\t    value: function componentWillReceiveProps(nextProps) {\n\t      this.setState(this._buildStateFromProps(nextProps));\n\t\n\t      try {\n\t        // Force the react-nvd3 to re-render the chart, when new props are received\n\t        this.refs.chartNode.rendering = true;\n\t        var wrapEl = this.refs.chartNode.refs.root.querySelector('g.nv-wrap');\n\t        if (wrapEl) {\n\t          wrapEl.parentNode.removeChild(wrapEl);\n\t        }\n\t      } catch (err) {\n\t        this.props.dispatch((0, _actions2.default)(_constants.RECEIVE_ERROR, 'e004'));\n\t        console.log(err.message); // eslint-disable-line no-console\n\t      }\n\t    }\n\t\n\t    /**\n\t     * In editor, merge data into options and add a ref\n\t     * In widget, also recreate funciton-based options that can't be sent as JSON\n\t     */\n\t\n\t  }, {\n\t    key: '_buildStateFromProps',\n\t    value: function _buildStateFromProps(props) {\n\t      var nextState = (0, _reactAddonsUpdate2.default)(props.options, {\n\t        datum: { $set: this._dataTransform(props.options.type, props.data) },\n\t        ref: { $set: 'chartNode' }\n\t      });\n\t\n\t      if (!this.props.widget) {\n\t        return nextState;\n\t      }\n\t\n\t      // Widgets need to recreate function-based options\n\t      var typeConfig = (0, _chartTypeUtils.getChartTypeObject)(props.options.type).config;\n\t\n\t      nextState = (0, _reactAddonsUpdate2.default)(nextState, {\n\t        x: { $set: _chartTypes.nvd3Defaults[typeConfig.dataFormat].x },\n\t        y: { $set: _chartTypes.nvd3Defaults[typeConfig.dataFormat].y },\n\t        yDomain: { $apply: function $apply(oldYDomain) {\n\t            // eslint-disable-line arrow-body-style\n\t            return (0, _applyYDomain.shouldSetupYDomain)(typeConfig) && undefined === oldYDomain ? (0, _getNiceDomain2.default)(typeConfig.dataFormat, props.data) : oldYDomain;\n\t          } }\n\t      });\n\t\n\t      // tickFormatSettings -> tick formatting functions\n\t      // applyDataFormatters() returns a cloned object\n\t      return (0, _applyDataFormatters2.default)(nextState, typeConfig);\n\t    }\n\t\n\t    /**\n\t     * Apply any special formatting specfic to a chart type\n\t     */\n\t\n\t  }, {\n\t    key: '_dataTransform',\n\t    value: function _dataTransform(chartType, data) {\n\t      switch (chartType) {\n\t        case 'discreteBarChart':\n\t          return [{\n\t            key: '',\n\t            values: data\n\t          }];\n\t\n\t        default:\n\t          return data;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return _react2.default.createElement(_reactNvd2.default, this.state);\n\t    }\n\t  }]);\n\t\n\t  return NVD3Adapter;\n\t}(_react.Component);\n\t\n\tNVD3Adapter.propTypes = {\n\t  data: _react2.default.PropTypes.array,\n\t  options: _react2.default.PropTypes.object,\n\t  widget: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.string, _react2.default.PropTypes.bool]),\n\t  dispatch: _react2.default.PropTypes.func\n\t};\n\t\n\tvar _default = (0, _reactRedux.connect)()(NVD3Adapter);\n\t\n\texports.default = _default;\n\t;\n\t\n\tvar _temp = function () {\n\t  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n\t    return;\n\t  }\n\t\n\t  __REACT_HOT_LOADER__.register(NVD3Adapter, 'NVD3Adapter', '/Users/joshkadis/Repos/simplechart/app/components/Chart/ChartTypes/NVD3Adapter/index.js');\n\t\n\t  __REACT_HOT_LOADER__.register(_default, 'default', '/Users/joshkadis/Repos/simplechart/app/components/Chart/ChartTypes/NVD3Adapter/index.js');\n\t}();\n\n\t;\n\n/***/ },\n\n/***/ 329:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* nvd3 version 1.8.4 (https://github.com/novus/nvd3) 2016-07-03 */\n\t(function(){\n\t\n\t// set up main nv object\n\tvar nv = {};\n\t\n\t// the major global objects under the nv namespace\n\tnv.dev = false; //set false when in production\n\tnv.tooltip = nv.tooltip || {}; // For the tooltip system\n\tnv.utils = nv.utils || {}; // Utility subsystem\n\tnv.models = nv.models || {}; //stores all the possible models/components\n\tnv.charts = {}; //stores all the ready to use charts\n\tnv.logs = {}; //stores some statistics and potential error messages\n\tnv.dom = {}; //DOM manipulation functions\n\t\n\t// Node/CommonJS - require D3\n\tif (typeof(module) !== 'undefined' && typeof(exports) !== 'undefined' && typeof(d3) == 'undefined') {\n\t    d3 = __webpack_require__(78);\n\t}\n\t\n\tnv.dispatch = d3.dispatch('render_start', 'render_end');\n\t\n\t// Function bind polyfill\n\t// Needed ONLY for phantomJS as it's missing until version 2.0 which is unreleased as of this comment\n\t// https://github.com/ariya/phantomjs/issues/10522\n\t// http://kangax.github.io/compat-table/es5/#Function.prototype.bind\n\t// phantomJS is used for running the test suite\n\tif (!Function.prototype.bind) {\n\t    Function.prototype.bind = function (oThis) {\n\t        if (typeof this !== \"function\") {\n\t            // closest thing possible to the ECMAScript 5 internal IsCallable function\n\t            throw new TypeError(\"Function.prototype.bind - what is trying to be bound is not callable\");\n\t        }\n\t\n\t        var aArgs = Array.prototype.slice.call(arguments, 1),\n\t            fToBind = this,\n\t            fNOP = function () {},\n\t            fBound = function () {\n\t                return fToBind.apply(this instanceof fNOP && oThis\n\t                        ? this\n\t                        : oThis,\n\t                    aArgs.concat(Array.prototype.slice.call(arguments)));\n\t            };\n\t\n\t        fNOP.prototype = this.prototype;\n\t        fBound.prototype = new fNOP();\n\t        return fBound;\n\t    };\n\t}\n\t\n\t//  Development render timers - disabled if dev = false\n\tif (nv.dev) {\n\t    nv.dispatch.on('render_start', function(e) {\n\t        nv.logs.startTime = +new Date();\n\t    });\n\t\n\t    nv.dispatch.on('render_end', function(e) {\n\t        nv.logs.endTime = +new Date();\n\t        nv.logs.totalTime = nv.logs.endTime - nv.logs.startTime;\n\t        nv.log('total', nv.logs.totalTime); // used for development, to keep track of graph generation times\n\t    });\n\t}\n\t\n\t// Logs all arguments, and returns the last so you can test things in place\n\t// Note: in IE8 console.log is an object not a function, and if modernizr is used\n\t// then calling Function.prototype.bind with with anything other than a function\n\t// causes a TypeError to be thrown.\n\tnv.log = function() {\n\t    if (nv.dev && window.console && console.log && console.log.apply)\n\t        console.log.apply(console, arguments);\n\t    else if (nv.dev && window.console && typeof console.log == \"function\" && Function.prototype.bind) {\n\t        var log = Function.prototype.bind.call(console.log, console);\n\t        log.apply(console, arguments);\n\t    }\n\t    return arguments[arguments.length - 1];\n\t};\n\t\n\t// print console warning, should be used by deprecated functions\n\tnv.deprecated = function(name, info) {\n\t    if (console && console.warn) {\n\t        console.warn('nvd3 warning: `' + name + '` has been deprecated. ', info || '');\n\t    }\n\t};\n\t\n\t// The nv.render function is used to queue up chart rendering\n\t// in non-blocking async functions.\n\t// When all queued charts are done rendering, nv.dispatch.render_end is invoked.\n\tnv.render = function render(step) {\n\t    // number of graphs to generate in each timeout loop\n\t    step = step || 1;\n\t\n\t    nv.render.active = true;\n\t    nv.dispatch.render_start();\n\t\n\t    var renderLoop = function() {\n\t        var chart, graph;\n\t\n\t        for (var i = 0; i < step && (graph = nv.render.queue[i]); i++) {\n\t            chart = graph.generate();\n\t            if (typeof graph.callback == typeof(Function)) graph.callback(chart);\n\t        }\n\t\n\t        nv.render.queue.splice(0, i);\n\t\n\t        if (nv.render.queue.length) {\n\t            setTimeout(renderLoop);\n\t        }\n\t        else {\n\t            nv.dispatch.render_end();\n\t            nv.render.active = false;\n\t        }\n\t    };\n\t\n\t    setTimeout(renderLoop);\n\t};\n\t\n\tnv.render.active = false;\n\tnv.render.queue = [];\n\t\n\t/*\n\tAdds a chart to the async rendering queue. This method can take arguments in two forms:\n\tnv.addGraph({\n\t    generate: <Function>\n\t    callback: <Function>\n\t})\n\t\n\tor\n\t\n\tnv.addGraph(<generate Function>, <callback Function>)\n\t\n\tThe generate function should contain code that creates the NVD3 model, sets options\n\ton it, adds data to an SVG element, and invokes the chart model. The generate function\n\tshould return the chart model.  See examples/lineChart.html for a usage example.\n\t\n\tThe callback function is optional, and it is called when the generate function completes.\n\t*/\n\tnv.addGraph = function(obj) {\n\t    if (typeof arguments[0] === typeof(Function)) {\n\t        obj = {generate: arguments[0], callback: arguments[1]};\n\t    }\n\t\n\t    nv.render.queue.push(obj);\n\t\n\t    if (!nv.render.active) {\n\t        nv.render();\n\t    }\n\t};\n\t\n\t// Node/CommonJS exports\n\tif (true) {\n\t  module.exports = nv;\n\t}\n\t\n\tif (typeof(window) !== 'undefined') {\n\t  window.nv = nv;\n\t}\n\t/* Facade for queueing DOM write operations\r\n\t * with Fastdom (https://github.com/wilsonpage/fastdom)\r\n\t * if available.\r\n\t * This could easily be extended to support alternate\r\n\t * implementations in the future.\r\n\t */\r\n\tnv.dom.write = function(callback) {\r\n\t\tif (window.fastdom !== undefined) {\r\n\t\t\treturn fastdom.mutate(callback);\r\n\t\t}\r\n\t\treturn callback();\r\n\t};\r\n\t\r\n\t/* Facade for queueing DOM read operations\r\n\t * with Fastdom (https://github.com/wilsonpage/fastdom)\r\n\t * if available.\r\n\t * This could easily be extended to support alternate\r\n\t * implementations in the future.\r\n\t */\r\n\tnv.dom.read = function(callback) {\r\n\t\tif (window.fastdom !== undefined) {\r\n\t\t\treturn fastdom.measure(callback);\r\n\t\t}\r\n\t\treturn callback();\r\n\t};\r\n\t/* Utility class to handle creation of an interactive layer.\n\t This places a rectangle on top of the chart. When you mouse move over it, it sends a dispatch\n\t containing the X-coordinate. It can also render a vertical line where the mouse is located.\n\t\n\t dispatch.elementMousemove is the important event to latch onto.  It is fired whenever the mouse moves over\n\t the rectangle. The dispatch is given one object which contains the mouseX/Y location.\n\t It also has 'pointXValue', which is the conversion of mouseX to the x-axis scale.\n\t */\n\tnv.interactiveGuideline = function() {\n\t    \"use strict\";\n\t\n\t    var margin = { left: 0, top: 0 } //Pass the chart's top and left magins. Used to calculate the mouseX/Y.\n\t        ,   width = null\n\t        ,   height = null\n\t        ,   xScale = d3.scale.linear()\n\t        ,   dispatch = d3.dispatch('elementMousemove', 'elementMouseout', 'elementClick', 'elementDblclick', 'elementMouseDown', 'elementMouseUp')\n\t        ,   showGuideLine = true\n\t        ,   svgContainer = null // Must pass the chart's svg, we'll use its mousemove event.\n\t        ,   tooltip = nv.models.tooltip()\n\t        ,   isMSIE =  window.ActiveXObject// Checkt if IE by looking for activeX. (excludes IE11)\n\t    ;\n\t\n\t    tooltip\n\t        .duration(0)\n\t        .hideDelay(0)\n\t        .hidden(false);\n\t\n\t    function layer(selection) {\n\t        selection.each(function(data) {\n\t            var container = d3.select(this);\n\t            var availableWidth = (width || 960), availableHeight = (height || 400);\n\t            var wrap = container.selectAll(\"g.nv-wrap.nv-interactiveLineLayer\")\n\t                .data([data]);\n\t            var wrapEnter = wrap.enter()\n\t                .append(\"g\").attr(\"class\", \" nv-wrap nv-interactiveLineLayer\");\n\t            wrapEnter.append(\"g\").attr(\"class\",\"nv-interactiveGuideLine\");\n\t\n\t            if (!svgContainer) {\n\t                return;\n\t            }\n\t\n\t            function mouseHandler() {\n\t                var d3mouse = d3.mouse(this);\n\t                var mouseX = d3mouse[0];\n\t                var mouseY = d3mouse[1];\n\t                var subtractMargin = true;\n\t                var mouseOutAnyReason = false;\n\t                if (isMSIE) {\n\t                    /*\n\t                     D3.js (or maybe SVG.getScreenCTM) has a nasty bug in Internet Explorer 10.\n\t                     d3.mouse() returns incorrect X,Y mouse coordinates when mouse moving\n\t                     over a rect in IE 10.\n\t                     However, d3.event.offsetX/Y also returns the mouse coordinates\n\t                     relative to the triggering <rect>. So we use offsetX/Y on IE.\n\t                     */\n\t                    mouseX = d3.event.offsetX;\n\t                    mouseY = d3.event.offsetY;\n\t\n\t                    /*\n\t                     On IE, if you attach a mouse event listener to the <svg> container,\n\t                     it will actually trigger it for all the child elements (like <path>, <circle>, etc).\n\t                     When this happens on IE, the offsetX/Y is set to where ever the child element\n\t                     is located.\n\t                     As a result, we do NOT need to subtract margins to figure out the mouse X/Y\n\t                     position under this scenario. Removing the line below *will* cause\n\t                     the interactive layer to not work right on IE.\n\t                     */\n\t                    if(d3.event.target.tagName !== \"svg\") {\n\t                        subtractMargin = false;\n\t                    }\n\t\n\t                    if (d3.event.target.className.baseVal.match(\"nv-legend\")) {\n\t                        mouseOutAnyReason = true;\n\t                    }\n\t\n\t                }\n\t\n\t                if(subtractMargin) {\n\t                    mouseX -= margin.left;\n\t                    mouseY -= margin.top;\n\t                }\n\t\n\t                /* If mouseX/Y is outside of the chart's bounds,\n\t                 trigger a mouseOut event.\n\t                 */\n\t                if (d3.event.type === 'mouseout'\n\t                    || mouseX < 0 || mouseY < 0\n\t                    || mouseX > availableWidth || mouseY > availableHeight\n\t                    || (d3.event.relatedTarget && d3.event.relatedTarget.ownerSVGElement === undefined)\n\t                    || mouseOutAnyReason\n\t                    ) {\n\t\n\t                    if (isMSIE) {\n\t                        if (d3.event.relatedTarget\n\t                            && d3.event.relatedTarget.ownerSVGElement === undefined\n\t                            && (d3.event.relatedTarget.className === undefined\n\t                                || d3.event.relatedTarget.className.match(tooltip.nvPointerEventsClass))) {\n\t\n\t                            return;\n\t                        }\n\t                    }\n\t                    dispatch.elementMouseout({\n\t                        mouseX: mouseX,\n\t                        mouseY: mouseY\n\t                    });\n\t                    layer.renderGuideLine(null); //hide the guideline\n\t                    tooltip.hidden(true);\n\t                    return;\n\t                } else {\n\t                    tooltip.hidden(false);\n\t                }\n\t\n\t\n\t                var scaleIsOrdinal = typeof xScale.rangeBands === 'function';\n\t                var pointXValue = undefined;\n\t\n\t                // Ordinal scale has no invert method\n\t                if (scaleIsOrdinal) {\n\t                    var elementIndex = d3.bisect(xScale.range(), mouseX) - 1;\n\t                    // Check if mouseX is in the range band\n\t                    if (xScale.range()[elementIndex] + xScale.rangeBand() >= mouseX) {\n\t                        pointXValue = xScale.domain()[d3.bisect(xScale.range(), mouseX) - 1];\n\t                    }\n\t                    else {\n\t                        dispatch.elementMouseout({\n\t                            mouseX: mouseX,\n\t                            mouseY: mouseY\n\t                        });\n\t                        layer.renderGuideLine(null); //hide the guideline\n\t                        tooltip.hidden(true);\n\t                        return;\n\t                    }\n\t                }\n\t                else {\n\t                    pointXValue = xScale.invert(mouseX);\n\t                }\n\t\n\t                dispatch.elementMousemove({\n\t                    mouseX: mouseX,\n\t                    mouseY: mouseY,\n\t                    pointXValue: pointXValue\n\t                });\n\t\n\t                //If user double clicks the layer, fire a elementDblclick\n\t                if (d3.event.type === \"dblclick\") {\n\t                    dispatch.elementDblclick({\n\t                        mouseX: mouseX,\n\t                        mouseY: mouseY,\n\t                        pointXValue: pointXValue\n\t                    });\n\t                }\n\t\n\t                // if user single clicks the layer, fire elementClick\n\t                if (d3.event.type === 'click') {\n\t                    dispatch.elementClick({\n\t                        mouseX: mouseX,\n\t                        mouseY: mouseY,\n\t                        pointXValue: pointXValue\n\t                    });\n\t                }\n\t\n\t                // if user presses mouse down the layer, fire elementMouseDown\n\t                if (d3.event.type === 'mousedown') {\n\t                \tdispatch.elementMouseDown({\n\t                \t\tmouseX: mouseX,\n\t                \t\tmouseY: mouseY,\n\t                \t\tpointXValue: pointXValue\n\t                \t});\n\t                }\n\t\n\t                // if user presses mouse down the layer, fire elementMouseUp\n\t                if (d3.event.type === 'mouseup') {\n\t                \tdispatch.elementMouseUp({\n\t                \t\tmouseX: mouseX,\n\t                \t\tmouseY: mouseY,\n\t                \t\tpointXValue: pointXValue\n\t                \t});\n\t                }\n\t            }\n\t\n\t            svgContainer\n\t                .on(\"touchmove\",mouseHandler)\n\t                .on(\"mousemove\",mouseHandler, true)\n\t                .on(\"mouseout\" ,mouseHandler,true)\n\t                .on(\"mousedown\" ,mouseHandler,true)\n\t                .on(\"mouseup\" ,mouseHandler,true)\n\t                .on(\"dblclick\" ,mouseHandler)\n\t                .on(\"click\", mouseHandler)\n\t            ;\n\t\n\t            layer.guideLine = null;\n\t            //Draws a vertical guideline at the given X postion.\n\t            layer.renderGuideLine = function(x) {\n\t                if (!showGuideLine) return;\n\t                if (layer.guideLine && layer.guideLine.attr(\"x1\") === x) return;\n\t                nv.dom.write(function() {\n\t                    var line = wrap.select(\".nv-interactiveGuideLine\")\n\t                        .selectAll(\"line\")\n\t                        .data((x != null) ? [nv.utils.NaNtoZero(x)] : [], String);\n\t                    line.enter()\n\t                        .append(\"line\")\n\t                        .attr(\"class\", \"nv-guideline\")\n\t                        .attr(\"x1\", function(d) { return d;})\n\t                        .attr(\"x2\", function(d) { return d;})\n\t                        .attr(\"y1\", availableHeight)\n\t                        .attr(\"y2\",0);\n\t                    line.exit().remove();\n\t                });\n\t            }\n\t        });\n\t    }\n\t\n\t    layer.dispatch = dispatch;\n\t    layer.tooltip = tooltip;\n\t\n\t    layer.margin = function(_) {\n\t        if (!arguments.length) return margin;\n\t        margin.top    = typeof _.top    != 'undefined' ? _.top    : margin.top;\n\t        margin.left   = typeof _.left   != 'undefined' ? _.left   : margin.left;\n\t        return layer;\n\t    };\n\t\n\t    layer.width = function(_) {\n\t        if (!arguments.length) return width;\n\t        width = _;\n\t        return layer;\n\t    };\n\t\n\t    layer.height = function(_) {\n\t        if (!arguments.length) return height;\n\t        height = _;\n\t        return layer;\n\t    };\n\t\n\t    layer.xScale = function(_) {\n\t        if (!arguments.length) return xScale;\n\t        xScale = _;\n\t        return layer;\n\t    };\n\t\n\t    layer.showGuideLine = function(_) {\n\t        if (!arguments.length) return showGuideLine;\n\t        showGuideLine = _;\n\t        return layer;\n\t    };\n\t\n\t    layer.svgContainer = function(_) {\n\t        if (!arguments.length) return svgContainer;\n\t        svgContainer = _;\n\t        return layer;\n\t    };\n\t\n\t    return layer;\n\t};\n\t\n\t/* Utility class that uses d3.bisect to find the index in a given array, where a search value can be inserted.\n\t This is different from normal bisectLeft; this function finds the nearest index to insert the search value.\n\t\n\t For instance, lets say your array is [1,2,3,5,10,30], and you search for 28.\n\t Normal d3.bisectLeft will return 4, because 28 is inserted after the number 10.  But interactiveBisect will return 5\n\t because 28 is closer to 30 than 10.\n\t\n\t Unit tests can be found in: interactiveBisectTest.html\n\t\n\t Has the following known issues:\n\t * Will not work if the data points move backwards (ie, 10,9,8,7, etc) or if the data points are in random order.\n\t * Won't work if there are duplicate x coordinate values.\n\t */\n\tnv.interactiveBisect = function (values, searchVal, xAccessor) {\n\t    \"use strict\";\n\t    if (! (values instanceof Array)) {\n\t        return null;\n\t    }\n\t    var _xAccessor;\n\t    if (typeof xAccessor !== 'function') {\n\t        _xAccessor = function(d) {\n\t            return d.x;\n\t        }\n\t    } else {\n\t        _xAccessor = xAccessor;\n\t    }\n\t    var _cmp = function(d, v) {\n\t        // Accessors are no longer passed the index of the element along with\n\t        // the element itself when invoked by d3.bisector.\n\t        //\n\t        // Starting at D3 v3.4.4, d3.bisector() started inspecting the\n\t        // function passed to determine if it should consider it an accessor\n\t        // or a comparator. This meant that accessors that take two arguments\n\t        // (expecting an index as the second parameter) are treated as\n\t        // comparators where the second argument is the search value against\n\t        // which the first argument is compared.\n\t        return _xAccessor(d) - v;\n\t    };\n\t\n\t    var bisect = d3.bisector(_cmp).left;\n\t    var index = d3.max([0, bisect(values,searchVal) - 1]);\n\t    var currentValue = _xAccessor(values[index]);\n\t\n\t    if (typeof currentValue === 'undefined') {\n\t        currentValue = index;\n\t    }\n\t\n\t    if (currentValue === searchVal) {\n\t        return index; //found exact match\n\t    }\n\t\n\t    var nextIndex = d3.min([index+1, values.length - 1]);\n\t    var nextValue = _xAccessor(values[nextIndex]);\n\t\n\t    if (typeof nextValue === 'undefined') {\n\t        nextValue = nextIndex;\n\t    }\n\t\n\t    if (Math.abs(nextValue - searchVal) >= Math.abs(currentValue - searchVal)) {\n\t        return index;\n\t    } else {\n\t        return nextIndex\n\t    }\n\t};\n\t\n\t/*\n\t Returns the index in the array \"values\" that is closest to searchVal.\n\t Only returns an index if searchVal is within some \"threshold\".\n\t Otherwise, returns null.\n\t */\n\tnv.nearestValueIndex = function (values, searchVal, threshold) {\n\t    \"use strict\";\n\t    var yDistMax = Infinity, indexToHighlight = null;\n\t    values.forEach(function(d,i) {\n\t        var delta = Math.abs(searchVal - d);\n\t        if ( d != null && delta <= yDistMax && delta < threshold) {\n\t            yDistMax = delta;\n\t            indexToHighlight = i;\n\t        }\n\t    });\n\t    return indexToHighlight;\n\t};\n\t\n\t/* Model which can be instantiated to handle tooltip rendering.\n\t Example usage:\n\t var tip = nv.models.tooltip().gravity('w').distance(23)\n\t .data(myDataObject);\n\t\n\t tip();    //just invoke the returned function to render tooltip.\n\t */\n\tnv.models.tooltip = function() {\n\t    \"use strict\";\n\t\n\t    /*\n\t    Tooltip data. If data is given in the proper format, a consistent tooltip is generated.\n\t    Example Format of data:\n\t    {\n\t        key: \"Date\",\n\t        value: \"August 2009\",\n\t        series: [\n\t            {key: \"Series 1\", value: \"Value 1\", color: \"#000\"},\n\t            {key: \"Series 2\", value: \"Value 2\", color: \"#00f\"}\n\t        ]\n\t    }\n\t    */\n\t    var id = \"nvtooltip-\" + Math.floor(Math.random() * 100000) // Generates a unique id when you create a new tooltip() object.\n\t        ,   data = null\n\t        ,   gravity = 'w'   // Can be 'n','s','e','w'. Determines how tooltip is positioned.\n\t        ,   distance = 25 // Distance to offset tooltip from the mouse location.\n\t        ,   snapDistance = 0   // Tolerance allowed before tooltip is moved from its current position (creates 'snapping' effect)\n\t        ,   classes = null  // Attaches additional CSS classes to the tooltip DIV that is created.\n\t        ,   hidden = true  // Start off hidden, toggle with hide/show functions below.\n\t        ,   hideDelay = 200  // Delay (in ms) before the tooltip hides after calling hide().\n\t        ,   tooltip = null // d3 select of the tooltip div.\n\t        ,   lastPosition = { left: null, top: null } // Last position the tooltip was in.\n\t        ,   enabled = true  // True -> tooltips are rendered. False -> don't render tooltips.\n\t        ,   duration = 100 // Tooltip movement duration, in ms.\n\t        ,   headerEnabled = true // If is to show the tooltip header.\n\t        ,   nvPointerEventsClass = \"nv-pointer-events-none\" // CSS class to specify whether element should not have mouse events.\n\t    ;\n\t\n\t    // Format function for the tooltip values column.\n\t    var valueFormatter = function(d, i) {\n\t        return d;\n\t    };\n\t\n\t    // Format function for the tooltip header value.\n\t    var headerFormatter = function(d) {\n\t        return d;\n\t    };\n\t\n\t    var keyFormatter = function(d, i) {\n\t        return d;\n\t    };\n\t\n\t    // By default, the tooltip model renders a beautiful table inside a DIV.\n\t    // You can override this function if a custom tooltip is desired.\n\t    var contentGenerator = function(d) {\n\t        if (d === null) {\n\t            return '';\n\t        }\n\t\n\t        var table = d3.select(document.createElement(\"table\"));\n\t        if (headerEnabled) {\n\t            var theadEnter = table.selectAll(\"thead\")\n\t                .data([d])\n\t                .enter().append(\"thead\");\n\t\n\t            theadEnter.append(\"tr\")\n\t                .append(\"td\")\n\t                .attr(\"colspan\", 3)\n\t                .append(\"strong\")\n\t                .classed(\"x-value\", true)\n\t                .html(headerFormatter(d.value));\n\t        }\n\t\n\t        var tbodyEnter = table.selectAll(\"tbody\")\n\t            .data([d])\n\t            .enter().append(\"tbody\");\n\t\n\t        var trowEnter = tbodyEnter.selectAll(\"tr\")\n\t                .data(function(p) { return p.series})\n\t                .enter()\n\t                .append(\"tr\")\n\t                .classed(\"highlight\", function(p) { return p.highlight});\n\t\n\t        trowEnter.append(\"td\")\n\t            .classed(\"legend-color-guide\",true)\n\t            .append(\"div\")\n\t            .style(\"background-color\", function(p) { return p.color});\n\t\n\t        trowEnter.append(\"td\")\n\t            .classed(\"key\",true)\n\t            .classed(\"total\",function(p) { return !!p.total})\n\t            .html(function(p, i) { return keyFormatter(p.key, i)});\n\t\n\t        trowEnter.append(\"td\")\n\t            .classed(\"value\",true)\n\t            .html(function(p, i) { return valueFormatter(p.value, i) });\n\t\n\t        trowEnter.filter(function (p,i) { return p.percent !== undefined }).append(\"td\")\n\t            .classed(\"percent\", true)\n\t            .html(function(p, i) { return \"(\" + d3.format('%')(p.percent) + \")\" });\n\t\n\t        trowEnter.selectAll(\"td\").each(function(p) {\n\t            if (p.highlight) {\n\t                var opacityScale = d3.scale.linear().domain([0,1]).range([\"#fff\",p.color]);\n\t                var opacity = 0.6;\n\t                d3.select(this)\n\t                    .style(\"border-bottom-color\", opacityScale(opacity))\n\t                    .style(\"border-top-color\", opacityScale(opacity))\n\t                ;\n\t            }\n\t        });\n\t\n\t        var html = table.node().outerHTML;\n\t        if (d.footer !== undefined)\n\t            html += \"<div class='footer'>\" + d.footer + \"</div>\";\n\t        return html;\n\t\n\t    };\n\t\n\t    /*\n\t     Function that returns the position (relative to the viewport/document.body)\n\t     the tooltip should be placed in.\n\t     Should return: {\n\t        left: <leftPos>,\n\t        top: <topPos>\n\t     }\n\t     */\n\t    var position = function() {\n\t        var pos = {\n\t            left: d3.event !== null ? d3.event.clientX : 0,\n\t            top: d3.event !== null ? d3.event.clientY : 0\n\t        };\n\t\n\t        if(getComputedStyle(document.body).transform != 'none') {\n\t            // Take the offset into account, as now the tooltip is relative\n\t            // to document.body.\n\t            var client = document.body.getBoundingClientRect();\n\t            pos.left -= client.left;\n\t            pos.top -= client.top;\n\t        }\n\t\n\t        return pos;\n\t    };\n\t\n\t    var dataSeriesExists = function(d) {\n\t        if (d && d.series) {\n\t            if (nv.utils.isArray(d.series)) {\n\t                return true;\n\t            }\n\t            // if object, it's okay just convert to array of the object\n\t            if (nv.utils.isObject(d.series)) {\n\t                d.series = [d.series];\n\t                return true;\n\t            }\n\t        }\n\t        return false;\n\t    };\n\t\n\t    // Calculates the gravity offset of the tooltip. Parameter is position of tooltip\n\t    // relative to the viewport.\n\t    var calcGravityOffset = function(pos) {\n\t        var height = tooltip.node().offsetHeight,\n\t            width = tooltip.node().offsetWidth,\n\t            clientWidth = document.documentElement.clientWidth, // Don't want scrollbars.\n\t            clientHeight = document.documentElement.clientHeight, // Don't want scrollbars.\n\t            left, top, tmp;\n\t\n\t        // calculate position based on gravity\n\t        switch (gravity) {\n\t            case 'e':\n\t                left = - width - distance;\n\t                top = - (height / 2);\n\t                if(pos.left + left < 0) left = distance;\n\t                if((tmp = pos.top + top) < 0) top -= tmp;\n\t                if((tmp = pos.top + top + height) > clientHeight) top -= tmp - clientHeight;\n\t                break;\n\t            case 'w':\n\t                left = distance;\n\t                top = - (height / 2);\n\t                if (pos.left + left + width > clientWidth) left = - width - distance;\n\t                if ((tmp = pos.top + top) < 0) top -= tmp;\n\t                if ((tmp = pos.top + top + height) > clientHeight) top -= tmp - clientHeight;\n\t                break;\n\t            case 'n':\n\t                left = - (width / 2) - 5; // - 5 is an approximation of the mouse's height.\n\t                top = distance;\n\t                if (pos.top + top + height > clientHeight) top = - height - distance;\n\t                if ((tmp = pos.left + left) < 0) left -= tmp;\n\t                if ((tmp = pos.left + left + width) > clientWidth) left -= tmp - clientWidth;\n\t                break;\n\t            case 's':\n\t                left = - (width / 2);\n\t                top = - height - distance;\n\t                if (pos.top + top < 0) top = distance;\n\t                if ((tmp = pos.left + left) < 0) left -= tmp;\n\t                if ((tmp = pos.left + left + width) > clientWidth) left -= tmp - clientWidth;\n\t                break;\n\t            case 'center':\n\t                left = - (width / 2);\n\t                top = - (height / 2);\n\t                break;\n\t            default:\n\t                left = 0;\n\t                top = 0;\n\t                break;\n\t        }\n\t\n\t        return { 'left': left, 'top': top };\n\t    };\n\t\n\t    /*\n\t     Positions the tooltip in the correct place, as given by the position() function.\n\t     */\n\t    var positionTooltip = function() {\n\t        nv.dom.read(function() {\n\t            var pos = position(),\n\t                gravityOffset = calcGravityOffset(pos),\n\t                left = pos.left + gravityOffset.left,\n\t                top = pos.top + gravityOffset.top;\n\t\n\t            // delay hiding a bit to avoid flickering\n\t            if (hidden) {\n\t                tooltip\n\t                    .interrupt()\n\t                    .transition()\n\t                    .delay(hideDelay)\n\t                    .duration(0)\n\t                    .style('opacity', 0);\n\t            } else {\n\t                // using tooltip.style('transform') returns values un-usable for tween\n\t                var old_translate = 'translate(' + lastPosition.left + 'px, ' + lastPosition.top + 'px)';\n\t                var new_translate = 'translate(' + Math.round(left) + 'px, ' + Math.round(top) + 'px)';\n\t                var translateInterpolator = d3.interpolateString(old_translate, new_translate);\n\t                var is_hidden = tooltip.style('opacity') < 0.1;\n\t\n\t                tooltip\n\t                    .interrupt() // cancel running transitions\n\t                    .transition()\n\t                    .duration(is_hidden ? 0 : duration)\n\t                    // using tween since some versions of d3 can't auto-tween a translate on a div\n\t                    .styleTween('transform', function (d) {\n\t                        return translateInterpolator;\n\t                    }, 'important')\n\t                    // Safari has its own `-webkit-transform` and does not support `transform`\n\t                    .styleTween('-webkit-transform', function (d) {\n\t                        return translateInterpolator;\n\t                    })\n\t                    .style('-ms-transform', new_translate)\n\t                    .style('opacity', 1);\n\t            }\n\t\n\t            lastPosition.left = left;\n\t            lastPosition.top = top;\n\t        });\n\t    };\n\t\n\t    // Creates new tooltip container, or uses existing one on DOM.\n\t    function initTooltip() {\n\t        if (!tooltip || !tooltip.node()) {\n\t            // Create new tooltip div if it doesn't exist on DOM.\n\t\n\t            var data = [1];\n\t            tooltip = d3.select(document.body).selectAll('.nvtooltip').data(data);\n\t\n\t            tooltip.enter().append('div')\n\t                   .attr(\"class\", \"nvtooltip \" + (classes ? classes : \"xy-tooltip\"))\n\t                   .attr(\"id\", id)\n\t                   .style(\"top\", 0).style(\"left\", 0)\n\t                   .style('opacity', 0)\n\t                   .style('position', 'fixed')\n\t                   .selectAll(\"div, table, td, tr\").classed(nvPointerEventsClass, true)\n\t                   .classed(nvPointerEventsClass, true);\n\t\n\t            tooltip.exit().remove()\n\t        }\n\t    }\n\t\n\t    // Draw the tooltip onto the DOM.\n\t    function nvtooltip() {\n\t        if (!enabled) return;\n\t        if (!dataSeriesExists(data)) return;\n\t\n\t        nv.dom.write(function () {\n\t            initTooltip();\n\t            // Generate data and set it into tooltip.\n\t            // Bonus - If you override contentGenerator and return falsey you can use something like\n\t            //         React or Knockout to bind the data for your tooltip.\n\t            var newContent = contentGenerator(data);\n\t            if (newContent) {\n\t                tooltip.node().innerHTML = newContent;\n\t            }\n\t\n\t            positionTooltip();\n\t        });\n\t\n\t        return nvtooltip;\n\t    }\n\t\n\t    nvtooltip.nvPointerEventsClass = nvPointerEventsClass;\n\t    nvtooltip.options = nv.utils.optionsFunc.bind(nvtooltip);\n\t\n\t    nvtooltip._options = Object.create({}, {\n\t        // simple read/write options\n\t        duration: {get: function(){return duration;}, set: function(_){duration=_;}},\n\t        gravity: {get: function(){return gravity;}, set: function(_){gravity=_;}},\n\t        distance: {get: function(){return distance;}, set: function(_){distance=_;}},\n\t        snapDistance: {get: function(){return snapDistance;}, set: function(_){snapDistance=_;}},\n\t        classes: {get: function(){return classes;}, set: function(_){classes=_;}},\n\t        enabled: {get: function(){return enabled;}, set: function(_){enabled=_;}},\n\t        hideDelay: {get: function(){return hideDelay;}, set: function(_){hideDelay=_;}},\n\t        contentGenerator: {get: function(){return contentGenerator;}, set: function(_){contentGenerator=_;}},\n\t        valueFormatter: {get: function(){return valueFormatter;}, set: function(_){valueFormatter=_;}},\n\t        headerFormatter: {get: function(){return headerFormatter;}, set: function(_){headerFormatter=_;}},\n\t        keyFormatter: {get: function(){return keyFormatter;}, set: function(_){keyFormatter=_;}},\n\t        headerEnabled: {get: function(){return headerEnabled;}, set: function(_){headerEnabled=_;}},\n\t        position: {get: function(){return position;}, set: function(_){position=_;}},\n\t\n\t        // Deprecated options\n\t        chartContainer: {get: function(){return document.body;}, set: function(_){\n\t            // deprecated after 1.8.3\n\t            nv.deprecated('chartContainer', 'feature removed after 1.8.3');\n\t        }},\n\t        fixedTop: {get: function(){return null;}, set: function(_){\n\t            // deprecated after 1.8.1\n\t            nv.deprecated('fixedTop', 'feature removed after 1.8.1');\n\t        }},\n\t        offset: {get: function(){return {left: 0, top: 0};}, set: function(_){\n\t            // deprecated after 1.8.1\n\t            nv.deprecated('offset', 'use chart.tooltip.distance() instead');\n\t        }},\n\t\n\t        // options with extra logic\n\t        hidden: {get: function(){return hidden;}, set: function(_){\n\t            if (hidden != _) {\n\t                hidden = !!_;\n\t                nvtooltip();\n\t            }\n\t        }},\n\t        data: {get: function(){return data;}, set: function(_){\n\t            // if showing a single data point, adjust data format with that\n\t            if (_.point) {\n\t                _.value = _.point.x;\n\t                _.series = _.series || {};\n\t                _.series.value = _.point.y;\n\t                _.series.color = _.point.color || _.series.color;\n\t            }\n\t            data = _;\n\t        }},\n\t\n\t        // read only properties\n\t        node: {get: function(){return tooltip.node();}, set: function(_){}},\n\t        id: {get: function(){return id;}, set: function(_){}}\n\t    });\n\t\n\t    nv.utils.initOptions(nvtooltip);\n\t    return nvtooltip;\n\t};\n\t\n\t\n\t/*\n\tGets the browser window size\n\t\n\tReturns object with height and width properties\n\t */\n\tnv.utils.windowSize = function() {\n\t    // Sane defaults\n\t    var size = {width: 640, height: 480};\n\t\n\t    // Most recent browsers use\n\t    if (window.innerWidth && window.innerHeight) {\n\t        size.width = window.innerWidth;\n\t        size.height = window.innerHeight;\n\t        return (size);\n\t    }\n\t\n\t    // IE can use depending on mode it is in\n\t    if (document.compatMode=='CSS1Compat' &&\n\t        document.documentElement &&\n\t        document.documentElement.offsetWidth ) {\n\t\n\t        size.width = document.documentElement.offsetWidth;\n\t        size.height = document.documentElement.offsetHeight;\n\t        return (size);\n\t    }\n\t\n\t    // Earlier IE uses Doc.body\n\t    if (document.body && document.body.offsetWidth) {\n\t        size.width = document.body.offsetWidth;\n\t        size.height = document.body.offsetHeight;\n\t        return (size);\n\t    }\n\t\n\t    return (size);\n\t};\n\t\n\t\n\t/* handle dumb browser quirks...  isinstance breaks if you use frames\n\ttypeof returns 'object' for null, NaN is a number, etc.\n\t */\n\tnv.utils.isArray = Array.isArray;\n\tnv.utils.isObject = function(a) {\n\t    return a !== null && typeof a === 'object';\n\t};\n\tnv.utils.isFunction = function(a) {\n\t    return typeof a === 'function';\n\t};\n\tnv.utils.isDate = function(a) {\n\t    return toString.call(a) === '[object Date]';\n\t};\n\tnv.utils.isNumber = function(a) {\n\t    return !isNaN(a) && typeof a === 'number';\n\t};\n\t\n\t\n\t/*\n\tBinds callback function to run when window is resized\n\t */\n\tnv.utils.windowResize = function(handler) {\n\t    if (window.addEventListener) {\n\t        window.addEventListener('resize', handler);\n\t    } else {\n\t        nv.log(\"ERROR: Failed to bind to window.resize with: \", handler);\n\t    }\n\t    // return object with clear function to remove the single added callback.\n\t    return {\n\t        callback: handler,\n\t        clear: function() {\n\t            window.removeEventListener('resize', handler);\n\t        }\n\t    }\n\t};\n\t\n\t\n\t/*\n\tBackwards compatible way to implement more d3-like coloring of graphs.\n\tCan take in nothing, an array, or a function/scale\n\tTo use a normal scale, get the range and pass that because we must be able\n\tto take two arguments and use the index to keep backward compatibility\n\t*/\n\tnv.utils.getColor = function(color) {\n\t    //if you pass in nothing, get default colors back\n\t    if (color === undefined) {\n\t        return nv.utils.defaultColor();\n\t\n\t    //if passed an array, turn it into a color scale\n\t    } else if(nv.utils.isArray(color)) {\n\t        var color_scale = d3.scale.ordinal().range(color);\n\t        return function(d, i) {\n\t            var key = i === undefined ? d : i;\n\t            return d.color || color_scale(key);\n\t        };\n\t\n\t    //if passed a function or scale, return it, or whatever it may be\n\t    //external libs, such as angularjs-nvd3-directives use this\n\t    } else {\n\t        //can't really help it if someone passes rubbish as color\n\t        return color;\n\t    }\n\t};\n\t\n\t\n\t/*\n\tDefault color chooser uses a color scale of 20 colors from D3\n\t https://github.com/mbostock/d3/wiki/Ordinal-Scales#categorical-colors\n\t */\n\tnv.utils.defaultColor = function() {\n\t    // get range of the scale so we'll turn it into our own function.\n\t    return nv.utils.getColor(d3.scale.category20().range());\n\t};\n\t\n\t\n\t/*\n\tReturns a color function that takes the result of 'getKey' for each series and\n\tlooks for a corresponding color from the dictionary\n\t*/\n\tnv.utils.customTheme = function(dictionary, getKey, defaultColors) {\n\t    // use default series.key if getKey is undefined\n\t    getKey = getKey || function(series) { return series.key };\n\t    defaultColors = defaultColors || d3.scale.category20().range();\n\t\n\t    // start at end of default color list and walk back to index 0\n\t    var defIndex = defaultColors.length;\n\t\n\t    return function(series, index) {\n\t        var key = getKey(series);\n\t        if (nv.utils.isFunction(dictionary[key])) {\n\t            return dictionary[key]();\n\t        } else if (dictionary[key] !== undefined) {\n\t            return dictionary[key];\n\t        } else {\n\t            // no match in dictionary, use a default color\n\t            if (!defIndex) {\n\t                // used all the default colors, start over\n\t                defIndex = defaultColors.length;\n\t            }\n\t            defIndex = defIndex - 1;\n\t            return defaultColors[defIndex];\n\t        }\n\t    };\n\t};\n\t\n\t\n\t/*\n\tFrom the PJAX example on d3js.org, while this is not really directly needed\n\tit's a very cool method for doing pjax, I may expand upon it a little bit,\n\topen to suggestions on anything that may be useful\n\t*/\n\tnv.utils.pjax = function(links, content) {\n\t\n\t    var load = function(href) {\n\t        d3.html(href, function(fragment) {\n\t            var target = d3.select(content).node();\n\t            target.parentNode.replaceChild(\n\t                d3.select(fragment).select(content).node(),\n\t                target);\n\t            nv.utils.pjax(links, content);\n\t        });\n\t    };\n\t\n\t    d3.selectAll(links).on(\"click\", function() {\n\t        history.pushState(this.href, this.textContent, this.href);\n\t        load(this.href);\n\t        d3.event.preventDefault();\n\t    });\n\t\n\t    d3.select(window).on(\"popstate\", function() {\n\t        if (d3.event.state) {\n\t            load(d3.event.state);\n\t        }\n\t    });\n\t};\n\t\n\t\n\t/*\n\tFor when we want to approximate the width in pixels for an SVG:text element.\n\tMost common instance is when the element is in a display:none; container.\n\tForumla is : text.length * font-size * constant_factor\n\t*/\n\tnv.utils.calcApproxTextWidth = function (svgTextElem) {\n\t    if (nv.utils.isFunction(svgTextElem.style) && nv.utils.isFunction(svgTextElem.text)) {\n\t        var fontSize = parseInt(svgTextElem.style(\"font-size\").replace(\"px\",\"\"), 10);\n\t        var textLength = svgTextElem.text().length;\n\t        return nv.utils.NaNtoZero(textLength * fontSize * 0.5);\n\t    }\n\t    return 0;\n\t};\n\t\n\t\n\t/*\n\tNumbers that are undefined, null or NaN, convert them to zeros.\n\t*/\n\tnv.utils.NaNtoZero = function(n) {\n\t    if (!nv.utils.isNumber(n)\n\t        || isNaN(n)\n\t        || n === null\n\t        || n === Infinity\n\t        || n === -Infinity) {\n\t\n\t        return 0;\n\t    }\n\t    return n;\n\t};\n\t\n\t/*\n\tAdd a way to watch for d3 transition ends to d3\n\t*/\n\td3.selection.prototype.watchTransition = function(renderWatch){\n\t    var args = [this].concat([].slice.call(arguments, 1));\n\t    return renderWatch.transition.apply(renderWatch, args);\n\t};\n\t\n\t\n\t/*\n\tHelper object to watch when d3 has rendered something\n\t*/\n\tnv.utils.renderWatch = function(dispatch, duration) {\n\t    if (!(this instanceof nv.utils.renderWatch)) {\n\t        return new nv.utils.renderWatch(dispatch, duration);\n\t    }\n\t\n\t    var _duration = duration !== undefined ? duration : 250;\n\t    var renderStack = [];\n\t    var self = this;\n\t\n\t    this.models = function(models) {\n\t        models = [].slice.call(arguments, 0);\n\t        models.forEach(function(model){\n\t            model.__rendered = false;\n\t            (function(m){\n\t                m.dispatch.on('renderEnd', function(arg){\n\t                    m.__rendered = true;\n\t                    self.renderEnd('model');\n\t                });\n\t            })(model);\n\t\n\t            if (renderStack.indexOf(model) < 0) {\n\t                renderStack.push(model);\n\t            }\n\t        });\n\t    return this;\n\t    };\n\t\n\t    this.reset = function(duration) {\n\t        if (duration !== undefined) {\n\t            _duration = duration;\n\t        }\n\t        renderStack = [];\n\t    };\n\t\n\t    this.transition = function(selection, args, duration) {\n\t        args = arguments.length > 1 ? [].slice.call(arguments, 1) : [];\n\t\n\t        if (args.length > 1) {\n\t            duration = args.pop();\n\t        } else {\n\t            duration = _duration !== undefined ? _duration : 250;\n\t        }\n\t        selection.__rendered = false;\n\t\n\t        if (renderStack.indexOf(selection) < 0) {\n\t            renderStack.push(selection);\n\t        }\n\t\n\t        if (duration === 0) {\n\t            selection.__rendered = true;\n\t            selection.delay = function() { return this; };\n\t            selection.duration = function() { return this; };\n\t            return selection;\n\t        } else {\n\t            if (selection.length === 0) {\n\t                selection.__rendered = true;\n\t            } else if (selection.every( function(d){ return !d.length; } )) {\n\t                selection.__rendered = true;\n\t            } else {\n\t                selection.__rendered = false;\n\t            }\n\t\n\t            var n = 0;\n\t            return selection\n\t                .transition()\n\t                .duration(duration)\n\t                .each(function(){ ++n; })\n\t                .each('end', function(d, i) {\n\t                    if (--n === 0) {\n\t                        selection.__rendered = true;\n\t                        self.renderEnd.apply(this, args);\n\t                    }\n\t                });\n\t        }\n\t    };\n\t\n\t    this.renderEnd = function() {\n\t        if (renderStack.every( function(d){ return d.__rendered; } )) {\n\t            renderStack.forEach( function(d){ d.__rendered = false; });\n\t            dispatch.renderEnd.apply(this, arguments);\n\t        }\n\t    }\n\t\n\t};\n\t\n\t\n\t/*\n\tTakes multiple objects and combines them into the first one (dst)\n\texample:  nv.utils.deepExtend({a: 1}, {a: 2, b: 3}, {c: 4});\n\tgives:  {a: 2, b: 3, c: 4}\n\t*/\n\tnv.utils.deepExtend = function(dst){\n\t    var sources = arguments.length > 1 ? [].slice.call(arguments, 1) : [];\n\t    sources.forEach(function(source) {\n\t        for (var key in source) {\n\t            var isArray = nv.utils.isArray(dst[key]);\n\t            var isObject = nv.utils.isObject(dst[key]);\n\t            var srcObj = nv.utils.isObject(source[key]);\n\t\n\t            if (isObject && !isArray && srcObj) {\n\t                nv.utils.deepExtend(dst[key], source[key]);\n\t            } else {\n\t                dst[key] = source[key];\n\t            }\n\t        }\n\t    });\n\t};\n\t\n\t\n\t/*\n\tstate utility object, used to track d3 states in the models\n\t*/\n\tnv.utils.state = function(){\n\t    if (!(this instanceof nv.utils.state)) {\n\t        return new nv.utils.state();\n\t    }\n\t    var state = {};\n\t    var _self = this;\n\t    var _setState = function(){};\n\t    var _getState = function(){ return {}; };\n\t    var init = null;\n\t    var changed = null;\n\t\n\t    this.dispatch = d3.dispatch('change', 'set');\n\t\n\t    this.dispatch.on('set', function(state){\n\t        _setState(state, true);\n\t    });\n\t\n\t    this.getter = function(fn){\n\t        _getState = fn;\n\t        return this;\n\t    };\n\t\n\t    this.setter = function(fn, callback) {\n\t        if (!callback) {\n\t            callback = function(){};\n\t        }\n\t        _setState = function(state, update){\n\t            fn(state);\n\t            if (update) {\n\t                callback();\n\t            }\n\t        };\n\t        return this;\n\t    };\n\t\n\t    this.init = function(state){\n\t        init = init || {};\n\t        nv.utils.deepExtend(init, state);\n\t    };\n\t\n\t    var _set = function(){\n\t        var settings = _getState();\n\t\n\t        if (JSON.stringify(settings) === JSON.stringify(state)) {\n\t            return false;\n\t        }\n\t\n\t        for (var key in settings) {\n\t            if (state[key] === undefined) {\n\t                state[key] = {};\n\t            }\n\t            state[key] = settings[key];\n\t            changed = true;\n\t        }\n\t        return true;\n\t    };\n\t\n\t    this.update = function(){\n\t        if (init) {\n\t            _setState(init, false);\n\t            init = null;\n\t        }\n\t        if (_set.call(this)) {\n\t            this.dispatch.change(state);\n\t        }\n\t    };\n\t\n\t};\n\t\n\t\n\t/*\n\tSnippet of code you can insert into each nv.models.* to give you the ability to\n\tdo things like:\n\tchart.options({\n\t  showXAxis: true,\n\t  tooltips: true\n\t});\n\t\n\tTo enable in the chart:\n\tchart.options = nv.utils.optionsFunc.bind(chart);\n\t*/\n\tnv.utils.optionsFunc = function(args) {\n\t    if (args) {\n\t        d3.map(args).forEach((function(key,value) {\n\t            if (nv.utils.isFunction(this[key])) {\n\t                this[key](value);\n\t            }\n\t        }).bind(this));\n\t    }\n\t    return this;\n\t};\n\t\n\t\n\t/*\n\tnumTicks:  requested number of ticks\n\tdata:  the chart data\n\t\n\treturns the number of ticks to actually use on X axis, based on chart data\n\tto avoid duplicate ticks with the same value\n\t*/\n\tnv.utils.calcTicksX = function(numTicks, data) {\n\t    // find max number of values from all data streams\n\t    var numValues = 1;\n\t    var i = 0;\n\t    for (i; i < data.length; i += 1) {\n\t        var stream_len = data[i] && data[i].values ? data[i].values.length : 0;\n\t        numValues = stream_len > numValues ? stream_len : numValues;\n\t    }\n\t    nv.log(\"Requested number of ticks: \", numTicks);\n\t    nv.log(\"Calculated max values to be: \", numValues);\n\t    // make sure we don't have more ticks than values to avoid duplicates\n\t    numTicks = numTicks > numValues ? numTicks = numValues - 1 : numTicks;\n\t    // make sure we have at least one tick\n\t    numTicks = numTicks < 1 ? 1 : numTicks;\n\t    // make sure it's an integer\n\t    numTicks = Math.floor(numTicks);\n\t    nv.log(\"Calculating tick count as: \", numTicks);\n\t    return numTicks;\n\t};\n\t\n\t\n\t/*\n\treturns number of ticks to actually use on Y axis, based on chart data\n\t*/\n\tnv.utils.calcTicksY = function(numTicks, data) {\n\t    // currently uses the same logic but we can adjust here if needed later\n\t    return nv.utils.calcTicksX(numTicks, data);\n\t};\n\t\n\t\n\t/*\n\tAdd a particular option from an options object onto chart\n\tOptions exposed on a chart are a getter/setter function that returns chart\n\ton set to mimic typical d3 option chaining, e.g. svg.option1('a').option2('b');\n\t\n\toption objects should be generated via Object.create() to provide\n\tthe option of manipulating data via get/set functions.\n\t*/\n\tnv.utils.initOption = function(chart, name) {\n\t    // if it's a call option, just call it directly, otherwise do get/set\n\t    if (chart._calls && chart._calls[name]) {\n\t        chart[name] = chart._calls[name];\n\t    } else {\n\t        chart[name] = function (_) {\n\t            if (!arguments.length) return chart._options[name];\n\t            chart._overrides[name] = true;\n\t            chart._options[name] = _;\n\t            return chart;\n\t        };\n\t        // calling the option as _option will ignore if set by option already\n\t        // so nvd3 can set options internally but the stop if set manually\n\t        chart['_' + name] = function(_) {\n\t            if (!arguments.length) return chart._options[name];\n\t            if (!chart._overrides[name]) {\n\t                chart._options[name] = _;\n\t            }\n\t            return chart;\n\t        }\n\t    }\n\t};\n\t\n\t\n\t/*\n\tAdd all options in an options object to the chart\n\t*/\n\tnv.utils.initOptions = function(chart) {\n\t    chart._overrides = chart._overrides || {};\n\t    var ops = Object.getOwnPropertyNames(chart._options || {});\n\t    var calls = Object.getOwnPropertyNames(chart._calls || {});\n\t    ops = ops.concat(calls);\n\t    for (var i in ops) {\n\t        nv.utils.initOption(chart, ops[i]);\n\t    }\n\t};\n\t\n\t\n\t/*\n\tInherit options from a D3 object\n\td3.rebind makes calling the function on target actually call it on source\n\tAlso use _d3options so we can track what we inherit for documentation and chained inheritance\n\t*/\n\tnv.utils.inheritOptionsD3 = function(target, d3_source, oplist) {\n\t    target._d3options = oplist.concat(target._d3options || []);\n\t    oplist.unshift(d3_source);\n\t    oplist.unshift(target);\n\t    d3.rebind.apply(this, oplist);\n\t};\n\t\n\t\n\t/*\n\tRemove duplicates from an array\n\t*/\n\tnv.utils.arrayUnique = function(a) {\n\t    return a.sort().filter(function(item, pos) {\n\t        return !pos || item != a[pos - 1];\n\t    });\n\t};\n\t\n\t\n\t/*\n\tKeeps a list of custom symbols to draw from in addition to d3.svg.symbol\n\tNecessary since d3 doesn't let you extend its list -_-\n\tAdd new symbols by doing nv.utils.symbols.set('name', function(size){...});\n\t*/\n\tnv.utils.symbolMap = d3.map();\n\t\n\t\n\t/*\n\tReplaces d3.svg.symbol so that we can look both there and our own map\n\t */\n\tnv.utils.symbol = function() {\n\t    var type,\n\t        size = 64;\n\t    function symbol(d,i) {\n\t        var t = type.call(this,d,i);\n\t        var s = size.call(this,d,i);\n\t        if (d3.svg.symbolTypes.indexOf(t) !== -1) {\n\t            return d3.svg.symbol().type(t).size(s)();\n\t        } else {\n\t            return nv.utils.symbolMap.get(t)(s);\n\t        }\n\t    }\n\t    symbol.type = function(_) {\n\t        if (!arguments.length) return type;\n\t        type = d3.functor(_);\n\t        return symbol;\n\t    };\n\t    symbol.size = function(_) {\n\t        if (!arguments.length) return size;\n\t        size = d3.functor(_);\n\t        return symbol;\n\t    };\n\t    return symbol;\n\t};\n\t\n\t\n\t/*\n\tInherit option getter/setter functions from source to target\n\td3.rebind makes calling the function on target actually call it on source\n\tAlso track via _inherited and _d3options so we can track what we inherit\n\tfor documentation generation purposes and chained inheritance\n\t*/\n\tnv.utils.inheritOptions = function(target, source) {\n\t    // inherit all the things\n\t    var ops = Object.getOwnPropertyNames(source._options || {});\n\t    var calls = Object.getOwnPropertyNames(source._calls || {});\n\t    var inherited = source._inherited || [];\n\t    var d3ops = source._d3options || [];\n\t    var args = ops.concat(calls).concat(inherited).concat(d3ops);\n\t    args.unshift(source);\n\t    args.unshift(target);\n\t    d3.rebind.apply(this, args);\n\t    // pass along the lists to keep track of them, don't allow duplicates\n\t    target._inherited = nv.utils.arrayUnique(ops.concat(calls).concat(inherited).concat(ops).concat(target._inherited || []));\n\t    target._d3options = nv.utils.arrayUnique(d3ops.concat(target._d3options || []));\n\t};\n\t\n\t\n\t/*\n\tRuns common initialize code on the svg before the chart builds\n\t*/\n\tnv.utils.initSVG = function(svg) {\n\t    svg.classed({'nvd3-svg':true});\n\t};\n\t\n\t\n\t/*\n\tSanitize and provide default for the container height.\n\t*/\n\tnv.utils.sanitizeHeight = function(height, container) {\n\t    return (height || parseInt(container.style('height'), 10) || 400);\n\t};\n\t\n\t\n\t/*\n\tSanitize and provide default for the container width.\n\t*/\n\tnv.utils.sanitizeWidth = function(width, container) {\n\t    return (width || parseInt(container.style('width'), 10) || 960);\n\t};\n\t\n\t\n\t/*\n\tCalculate the available height for a chart.\n\t*/\n\tnv.utils.availableHeight = function(height, container, margin) {\n\t    return Math.max(0,nv.utils.sanitizeHeight(height, container) - margin.top - margin.bottom);\n\t};\n\t\n\t/*\n\tCalculate the available width for a chart.\n\t*/\n\tnv.utils.availableWidth = function(width, container, margin) {\n\t    return Math.max(0,nv.utils.sanitizeWidth(width, container) - margin.left - margin.right);\n\t};\n\t\n\t/*\n\tClear any rendered chart components and display a chart's 'noData' message\n\t*/\n\tnv.utils.noData = function(chart, container) {\n\t    var opt = chart.options(),\n\t        margin = opt.margin(),\n\t        noData = opt.noData(),\n\t        data = (noData == null) ? [\"No Data Available.\"] : [noData],\n\t        height = nv.utils.availableHeight(null, container, margin),\n\t        width = nv.utils.availableWidth(null, container, margin),\n\t        x = margin.left + width/2,\n\t        y = margin.top + height/2;\n\t\n\t    //Remove any previously created chart components\n\t    container.selectAll('g').remove();\n\t\n\t    var noDataText = container.selectAll('.nv-noData').data(data);\n\t\n\t    noDataText.enter().append('text')\n\t        .attr('class', 'nvd3 nv-noData')\n\t        .attr('dy', '-.7em')\n\t        .style('text-anchor', 'middle');\n\t\n\t    noDataText\n\t        .attr('x', x)\n\t        .attr('y', y)\n\t        .text(function(t){ return t; });\n\t};\n\t\n\t/*\n\t Wrap long labels.\n\t */\n\tnv.utils.wrapTicks = function (text, width) {\n\t    text.each(function() {\n\t        var text = d3.select(this),\n\t            words = text.text().split(/\\s+/).reverse(),\n\t            word,\n\t            line = [],\n\t            lineNumber = 0,\n\t            lineHeight = 1.1,\n\t            y = text.attr(\"y\"),\n\t            dy = parseFloat(text.attr(\"dy\")),\n\t            tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n\t        while (word = words.pop()) {\n\t            line.push(word);\n\t            tspan.text(line.join(\" \"));\n\t            if (tspan.node().getComputedTextLength() > width) {\n\t                line.pop();\n\t                tspan.text(line.join(\" \"));\n\t                line = [word];\n\t                tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word);\n\t            }\n\t        }\n\t    });\n\t};\n\t\n\t/*\n\tCheck equality of 2 array\n\t*/\n\tnv.utils.arrayEquals = function (array1, array2) {\n\t    if (array1 === array2)\n\t        return true;\n\t\n\t    if (!array1 || !array2)\n\t        return false;\n\t\n\t    // compare lengths - can save a lot of time\n\t    if (array1.length != array2.length)\n\t        return false;\n\t\n\t    for (var i = 0,\n\t        l = array1.length; i < l; i++) {\n\t        // Check if we have nested arrays\n\t        if (array1[i] instanceof Array && array2[i] instanceof Array) {\n\t            // recurse into the nested arrays\n\t            if (!nv.arrayEquals(array1[i], array2[i]))\n\t                return false;\n\t        } else if (array1[i] != array2[i]) {\n\t            // Warning - two different object instances will never be equal: {x:20} != {x:20}\n\t            return false;\n\t        }\n\t    }\n\t    return true;\n\t};\n\tnv.models.axis = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var axis = d3.svg.axis();\n\t    var scale = d3.scale.linear();\n\t\n\t    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n\t        , width = 75 //only used for tickLabel currently\n\t        , height = 60 //only used for tickLabel currently\n\t        , axisLabelText = null\n\t        , showMaxMin = true //TODO: showMaxMin should be disabled on all ordinal scaled axes\n\t        , rotateLabels = 0\n\t        , rotateYLabel = true\n\t        , staggerLabels = false\n\t        , isOrdinal = false\n\t        , ticks = null\n\t        , axisLabelDistance = 0\n\t        , fontSize = undefined\n\t        , duration = 250\n\t        , dispatch = d3.dispatch('renderEnd')\n\t        ;\n\t    axis\n\t        .scale(scale)\n\t        .orient('bottom')\n\t        .tickFormat(function(d) { return d })\n\t    ;\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var scale0;\n\t    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        selection.each(function(data) {\n\t            var container = d3.select(this);\n\t            nv.utils.initSVG(container);\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-axis').data([data]);\n\t            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-axis');\n\t            var gEnter = wrapEnter.append('g');\n\t            var g = wrap.select('g');\n\t\n\t            if (ticks !== null)\n\t                axis.ticks(ticks);\n\t            else if (axis.orient() == 'top' || axis.orient() == 'bottom')\n\t                axis.ticks(Math.abs(scale.range()[1] - scale.range()[0]) / 100);\n\t\n\t            //TODO: consider calculating width/height based on whether or not label is added, for reference in charts using this component\n\t            g.watchTransition(renderWatch, 'axis').call(axis);\n\t\n\t            scale0 = scale0 || axis.scale();\n\t\n\t            var fmt = axis.tickFormat();\n\t            if (fmt == null) {\n\t                fmt = scale0.tickFormat();\n\t            }\n\t\n\t            var axisLabel = g.selectAll('text.nv-axislabel')\n\t                .data([axisLabelText || null]);\n\t            axisLabel.exit().remove();\n\t\n\t            //only skip when fontSize is undefined so it can be cleared with a null or blank string\n\t            if (fontSize !== undefined) {\n\t                g.selectAll('g').select(\"text\").style('font-size', fontSize);\n\t            }\n\t\n\t            var xLabelMargin;\n\t            var axisMaxMin;\n\t            var w;\n\t            switch (axis.orient()) {\n\t                case 'top':\n\t                    axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n\t                  w = 0;\n\t                  if (scale.range().length === 1) {\n\t                    w = isOrdinal ? scale.range()[0] * 2 + scale.rangeBand() : 0;\n\t                  } else if (scale.range().length === 2) {\n\t                    w = isOrdinal ? scale.range()[0] + scale.range()[1] + scale.rangeBand() : scale.range()[1];\n\t                  } else if ( scale.range().length > 2){\n\t                    w = scale.range()[scale.range().length-1]+(scale.range()[1]-scale.range()[0]);\n\t                  };\n\t                    axisLabel\n\t                        .attr('text-anchor', 'middle')\n\t                        .attr('y', 0)\n\t                        .attr('x', w/2);\n\t                    if (showMaxMin) {\n\t                        axisMaxMin = wrap.selectAll('g.nv-axisMaxMin')\n\t                            .data(scale.domain());\n\t                        axisMaxMin.enter().append('g').attr('class',function(d,i){\n\t                                return ['nv-axisMaxMin','nv-axisMaxMin-x',(i == 0 ? 'nv-axisMin-x':'nv-axisMax-x')].join(' ')\n\t                        }).append('text');\n\t                        axisMaxMin.exit().remove();\n\t                        axisMaxMin\n\t                            .attr('transform', function(d,i) {\n\t                                return 'translate(' + nv.utils.NaNtoZero(scale(d)) + ',0)'\n\t                            })\n\t                            .select('text')\n\t                            .attr('dy', '-0.5em')\n\t                            .attr('y', -axis.tickPadding())\n\t                            .attr('text-anchor', 'middle')\n\t                            .text(function(d,i) {\n\t                                var v = fmt(d);\n\t                                return ('' + v).match('NaN') ? '' : v;\n\t                            });\n\t                        axisMaxMin.watchTransition(renderWatch, 'min-max top')\n\t                            .attr('transform', function(d,i) {\n\t                                return 'translate(' + nv.utils.NaNtoZero(scale.range()[i]) + ',0)'\n\t                            });\n\t                    }\n\t                    break;\n\t                case 'bottom':\n\t                    xLabelMargin = axisLabelDistance + 36;\n\t                    var maxTextWidth = 30;\n\t                    var textHeight = 0;\n\t                    var xTicks = g.selectAll('g').select(\"text\");\n\t                    var rotateLabelsRule = '';\n\t                    if (rotateLabels%360) {\n\t                        //Reset transform on ticks so textHeight can be calculated correctly\n\t                        xTicks.attr('transform', ''); \n\t                        //Calculate the longest xTick width\n\t                        xTicks.each(function(d,i){\n\t                            var box = this.getBoundingClientRect();\n\t                            var width = box.width;\n\t                            textHeight = box.height;\n\t                            if(width > maxTextWidth) maxTextWidth = width;\n\t                        });\n\t                        rotateLabelsRule = 'rotate(' + rotateLabels + ' 0,' + (textHeight/2 + axis.tickPadding()) + ')';\n\t                        //Convert to radians before calculating sin. Add 30 to margin for healthy padding.\n\t                        var sin = Math.abs(Math.sin(rotateLabels*Math.PI/180));\n\t                        xLabelMargin = (sin ? sin*maxTextWidth : maxTextWidth)+30;\n\t                        //Rotate all xTicks\n\t                        xTicks\n\t                            .attr('transform', rotateLabelsRule)\n\t                            .style('text-anchor', rotateLabels%360 > 0 ? 'start' : 'end');\n\t                    } else {\n\t                        if (staggerLabels) {\n\t                            xTicks\n\t                                .attr('transform', function(d,i) {\n\t                                    return 'translate(0,' + (i % 2 == 0 ? '0' : '12') + ')'\n\t                                });\n\t                        } else {\n\t                            xTicks.attr('transform', \"translate(0,0)\");\n\t                        }\n\t                    }\n\t                    axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n\t                    w = 0;\n\t                    if (scale.range().length === 1) {\n\t                        w = isOrdinal ? scale.range()[0] * 2 + scale.rangeBand() : 0;\n\t                    } else if (scale.range().length === 2) {\n\t                        w = isOrdinal ? scale.range()[0] + scale.range()[1] + scale.rangeBand() : scale.range()[1];\n\t                    } else if ( scale.range().length > 2){\n\t                        w = scale.range()[scale.range().length-1]+(scale.range()[1]-scale.range()[0]);\n\t                    };\n\t                    axisLabel\n\t                        .attr('text-anchor', 'middle')\n\t                        .attr('y', xLabelMargin)\n\t                        .attr('x', w/2);\n\t                    if (showMaxMin) {\n\t                        //if (showMaxMin && !isOrdinal) {\n\t                        axisMaxMin = wrap.selectAll('g.nv-axisMaxMin')\n\t                            //.data(scale.domain())\n\t                            .data([scale.domain()[0], scale.domain()[scale.domain().length - 1]]);\n\t                        axisMaxMin.enter().append('g').attr('class',function(d,i){\n\t                                return ['nv-axisMaxMin','nv-axisMaxMin-x',(i == 0 ? 'nv-axisMin-x':'nv-axisMax-x')].join(' ')\n\t                        }).append('text');\n\t                        axisMaxMin.exit().remove();\n\t                        axisMaxMin\n\t                            .attr('transform', function(d,i) {\n\t                                return 'translate(' + nv.utils.NaNtoZero((scale(d) + (isOrdinal ? scale.rangeBand() / 2 : 0))) + ',0)'\n\t                            })\n\t                            .select('text')\n\t                            .attr('dy', '.71em')\n\t                            .attr('y', axis.tickPadding())\n\t                            .attr('transform', rotateLabelsRule)\n\t                            .style('text-anchor', rotateLabels ? (rotateLabels%360 > 0 ? 'start' : 'end') : 'middle')\n\t                            .text(function(d,i) {\n\t                                var v = fmt(d);\n\t                                return ('' + v).match('NaN') ? '' : v;\n\t                            });\n\t                        axisMaxMin.watchTransition(renderWatch, 'min-max bottom')\n\t                            .attr('transform', function(d,i) {\n\t                                return 'translate(' + nv.utils.NaNtoZero((scale(d) + (isOrdinal ? scale.rangeBand() / 2 : 0))) + ',0)'\n\t                            });\n\t                    }\n\t\n\t                    break;\n\t                case 'right':\n\t                    axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n\t                    axisLabel\n\t                        .style('text-anchor', rotateYLabel ? 'middle' : 'begin')\n\t                        .attr('transform', rotateYLabel ? 'rotate(90)' : '')\n\t                        .attr('y', rotateYLabel ? (-Math.max(margin.right, width) + 12 - (axisLabelDistance || 0)) : -10) //TODO: consider calculating this based on largest tick width... OR at least expose this on chart\n\t                        .attr('x', rotateYLabel ? (d3.max(scale.range()) / 2) : axis.tickPadding());\n\t                    if (showMaxMin) {\n\t                        axisMaxMin = wrap.selectAll('g.nv-axisMaxMin')\n\t                            .data(scale.domain());\n\t                       \taxisMaxMin.enter().append('g').attr('class',function(d,i){\n\t                                return ['nv-axisMaxMin','nv-axisMaxMin-y',(i == 0 ? 'nv-axisMin-y':'nv-axisMax-y')].join(' ')\n\t                        }).append('text')\n\t                            .style('opacity', 0);\n\t                        axisMaxMin.exit().remove();\n\t                        axisMaxMin\n\t                            .attr('transform', function(d,i) {\n\t                                return 'translate(0,' + nv.utils.NaNtoZero(scale(d)) + ')'\n\t                            })\n\t                            .select('text')\n\t                            .attr('dy', '.32em')\n\t                            .attr('y', 0)\n\t                            .attr('x', axis.tickPadding())\n\t                            .style('text-anchor', 'start')\n\t                            .text(function(d, i) {\n\t                                var v = fmt(d);\n\t                                return ('' + v).match('NaN') ? '' : v;\n\t                            });\n\t                        axisMaxMin.watchTransition(renderWatch, 'min-max right')\n\t                            .attr('transform', function(d,i) {\n\t                                return 'translate(0,' + nv.utils.NaNtoZero(scale.range()[i]) + ')'\n\t                            })\n\t                            .select('text')\n\t                            .style('opacity', 1);\n\t                    }\n\t                    break;\n\t                case 'left':\n\t                    /*\n\t                     //For dynamically placing the label. Can be used with dynamically-sized chart axis margins\n\t                     var yTicks = g.selectAll('g').select(\"text\");\n\t                     yTicks.each(function(d,i){\n\t                     var labelPadding = this.getBoundingClientRect().width + axis.tickPadding() + 16;\n\t                     if(labelPadding > width) width = labelPadding;\n\t                     });\n\t                     */\n\t                    axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n\t                    axisLabel\n\t                        .style('text-anchor', rotateYLabel ? 'middle' : 'end')\n\t                        .attr('transform', rotateYLabel ? 'rotate(-90)' : '')\n\t                        .attr('y', rotateYLabel ? (-Math.max(margin.left, width) + 25 - (axisLabelDistance || 0)) : -10)\n\t                        .attr('x', rotateYLabel ? (-d3.max(scale.range()) / 2) : -axis.tickPadding());\n\t                    if (showMaxMin) {\n\t                        axisMaxMin = wrap.selectAll('g.nv-axisMaxMin')\n\t                            .data(scale.domain());\n\t                        axisMaxMin.enter().append('g').attr('class',function(d,i){\n\t                                return ['nv-axisMaxMin','nv-axisMaxMin-y',(i == 0 ? 'nv-axisMin-y':'nv-axisMax-y')].join(' ')\n\t                        }).append('text')\n\t                            .style('opacity', 0);\n\t                        axisMaxMin.exit().remove();\n\t                        axisMaxMin\n\t                            .attr('transform', function(d,i) {\n\t                                return 'translate(0,' + nv.utils.NaNtoZero(scale0(d)) + ')'\n\t                            })\n\t                            .select('text')\n\t                            .attr('dy', '.32em')\n\t                            .attr('y', 0)\n\t                            .attr('x', -axis.tickPadding())\n\t                            .attr('text-anchor', 'end')\n\t                            .text(function(d,i) {\n\t                                var v = fmt(d);\n\t                                return ('' + v).match('NaN') ? '' : v;\n\t                            });\n\t                        axisMaxMin.watchTransition(renderWatch, 'min-max right')\n\t                            .attr('transform', function(d,i) {\n\t                                return 'translate(0,' + nv.utils.NaNtoZero(scale.range()[i]) + ')'\n\t                            })\n\t                            .select('text')\n\t                            .style('opacity', 1);\n\t                    }\n\t                    break;\n\t            }\n\t            axisLabel.text(function(d) { return d });\n\t\n\t            if (showMaxMin && (axis.orient() === 'left' || axis.orient() === 'right')) {\n\t                //check if max and min overlap other values, if so, hide the values that overlap\n\t                g.selectAll('g') // the g's wrapping each tick\n\t                    .each(function(d,i) {\n\t                        d3.select(this).select('text').attr('opacity', 1);\n\t                        if (scale(d) < scale.range()[1] + 10 || scale(d) > scale.range()[0] - 10) { // 10 is assuming text height is 16... if d is 0, leave it!\n\t                            if (d > 1e-10 || d < -1e-10) // accounts for minor floating point errors... though could be problematic if the scale is EXTREMELY SMALL\n\t                                d3.select(this).attr('opacity', 0);\n\t\n\t                            d3.select(this).select('text').attr('opacity', 0); // Don't remove the ZERO line!!\n\t                        }\n\t                    });\n\t\n\t                //if Max and Min = 0 only show min, Issue #281\n\t                if (scale.domain()[0] == scale.domain()[1] && scale.domain()[0] == 0) {\n\t                    wrap.selectAll('g.nv-axisMaxMin').style('opacity', function (d, i) {\n\t                        return !i ? 1 : 0\n\t                    });\n\t                }\n\t            }\n\t\n\t            if (showMaxMin && (axis.orient() === 'top' || axis.orient() === 'bottom')) {\n\t                var maxMinRange = [];\n\t                wrap.selectAll('g.nv-axisMaxMin')\n\t                    .each(function(d,i) {\n\t                        try {\n\t                            if (i) // i== 1, max position\n\t                                maxMinRange.push(scale(d) - this.getBoundingClientRect().width - 4);  //assuming the max and min labels are as wide as the next tick (with an extra 4 pixels just in case)\n\t                            else // i==0, min position\n\t                                maxMinRange.push(scale(d) + this.getBoundingClientRect().width + 4)\n\t                        }catch (err) {\n\t                            if (i) // i== 1, max position\n\t                                maxMinRange.push(scale(d) - 4);  //assuming the max and min labels are as wide as the next tick (with an extra 4 pixels just in case)\n\t                            else // i==0, min position\n\t                                maxMinRange.push(scale(d) + 4);\n\t                        }\n\t                    });\n\t                // the g's wrapping each tick\n\t                g.selectAll('g').each(function(d, i) {\n\t                    if (scale(d) < maxMinRange[0] || scale(d) > maxMinRange[1]) {\n\t                        if (d > 1e-10 || d < -1e-10) // accounts for minor floating point errors... though could be problematic if the scale is EXTREMELY SMALL\n\t                            d3.select(this).remove();\n\t                        else\n\t                            d3.select(this).select('text').remove(); // Don't remove the ZERO line!!\n\t                    }\n\t                });\n\t            }\n\t\n\t            //Highlight zero tick line\n\t            g.selectAll('.tick')\n\t                .filter(function (d) {\n\t                    /*\n\t                    The filter needs to return only ticks at or near zero.\n\t                    Numbers like 0.00001 need to count as zero as well,\n\t                    and the arithmetic trick below solves that.\n\t                    */\n\t                    return !parseFloat(Math.round(d * 100000) / 1000000) && (d !== undefined)\n\t                }) \n\t                .classed('zero', true);\n\t            \n\t            //store old scales for use in transitions on update\n\t            scale0 = scale.copy();\n\t\n\t        });\n\t\n\t        renderWatch.renderEnd('axis immediate');\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    // expose chart's sub-components\n\t    chart.axis = axis;\n\t    chart.dispatch = dispatch;\n\t\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        axisLabelDistance: {get: function(){return axisLabelDistance;}, set: function(_){axisLabelDistance=_;}},\n\t        staggerLabels:     {get: function(){return staggerLabels;}, set: function(_){staggerLabels=_;}},\n\t        rotateLabels:      {get: function(){return rotateLabels;}, set: function(_){rotateLabels=_;}},\n\t        rotateYLabel:      {get: function(){return rotateYLabel;}, set: function(_){rotateYLabel=_;}},\n\t        showMaxMin:        {get: function(){return showMaxMin;}, set: function(_){showMaxMin=_;}},\n\t        axisLabel:         {get: function(){return axisLabelText;}, set: function(_){axisLabelText=_;}},\n\t        height:            {get: function(){return height;}, set: function(_){height=_;}},\n\t        ticks:             {get: function(){return ticks;}, set: function(_){ticks=_;}},\n\t        width:             {get: function(){return width;}, set: function(_){width=_;}},\n\t        fontSize:          {get: function(){return fontSize;}, set: function(_){fontSize=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top !== undefined    ? _.top    : margin.top;\n\t            margin.right  = _.right !== undefined  ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left !== undefined   ? _.left   : margin.left;\n\t        }},\n\t        duration: {get: function(){return duration;}, set: function(_){\n\t            duration=_;\n\t            renderWatch.reset(duration);\n\t        }},\n\t        scale: {get: function(){return scale;}, set: function(_){\n\t            scale = _;\n\t            axis.scale(scale);\n\t            isOrdinal = typeof scale.rangeBands === 'function';\n\t            nv.utils.inheritOptionsD3(chart, scale, ['domain', 'range', 'rangeBand', 'rangeBands']);\n\t        }}\n\t    });\n\t\n\t    nv.utils.initOptions(chart);\n\t    nv.utils.inheritOptionsD3(chart, axis, ['orient', 'tickValues', 'tickSubdivide', 'tickSize', 'tickPadding', 'tickFormat']);\n\t    nv.utils.inheritOptionsD3(chart, scale, ['domain', 'range', 'rangeBand', 'rangeBands']);\n\t\n\t    return chart;\n\t};\n\tnv.models.boxPlot = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var margin = {top: 0, right: 0, bottom: 0, left: 0},\n\t        width = 960,\n\t        height = 500,\n\t        id = Math.floor(Math.random() * 10000), // Create semi-unique ID in case user doesn't select one\n\t        xScale = d3.scale.ordinal(),\n\t        yScale = d3.scale.linear(),\n\t        getX  = function(d) { return d.label }, // Default data model selectors.\n\t        getQ1 = function(d) { return d.values.Q1 },\n\t        getQ2 = function(d) { return d.values.Q2 },\n\t        getQ3 = function(d) { return d.values.Q3 },\n\t        getWl = function(d) { return d.values.whisker_low },\n\t        getWh = function(d) { return d.values.whisker_high },\n\t        getColor = function(d) { return d.color },\n\t        getOlItems  = function(d) { return d.values.outliers },\n\t        getOlValue = function(d, i, j) { return d },\n\t        getOlLabel = function(d, i, j) { return d },\n\t        getOlColor = function(d, i, j) { return undefined },\n\t        color = nv.utils.defaultColor(),\n\t        container = null,\n\t        xDomain, xRange,\n\t        yDomain, yRange,\n\t        dispatch = d3.dispatch('elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd'),\n\t        duration = 250,\n\t        maxBoxWidth = null;\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var xScale0, yScale0;\n\t    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        selection.each(function(data) {\n\t            var availableWidth = width - margin.left - margin.right,\n\t                availableHeight = height - margin.top - margin.bottom;\n\t\n\t            container = d3.select(this);\n\t            nv.utils.initSVG(container);\n\t\n\t            // Setup Scales\n\t            xScale.domain(xDomain || data.map(function(d,i) { return getX(d,i); }))\n\t                .rangeBands(xRange || [0, availableWidth], 0.1);\n\t\n\t            // if we know yDomain, no need to calculate\n\t            var yData = []\n\t            if (!yDomain) {\n\t                // (y-range is based on quartiles, whiskers and outliers)\n\t                var values = [], yMin, yMax;\n\t                data.forEach(function (d, i) {\n\t                    var q1 = getQ1(d), q3 = getQ3(d), wl = getWl(d), wh = getWh(d);\n\t                    var olItems = getOlItems(d);\n\t                    if (olItems) {\n\t                        olItems.forEach(function (e, i) {\n\t                            values.push(getOlValue(e, i, undefined));\n\t                        });\n\t                    }\n\t                    if (wl) { values.push(wl) }\n\t                    if (q1) { values.push(q1) }\n\t                    if (q3) { values.push(q3) }\n\t                    if (wh) { values.push(wh) }\n\t                });\n\t                yMin = d3.min(values);\n\t                yMax = d3.max(values);\n\t                yData = [ yMin, yMax ] ;\n\t            }\n\t\n\t            yScale.domain(yDomain || yData);\n\t            yScale.range(yRange || [availableHeight, 0]);\n\t\n\t            //store old scales if they exist\n\t            xScale0 = xScale0 || xScale;\n\t            yScale0 = yScale0 || yScale.copy().range([yScale(0),yScale(0)]);\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap').data([data]);\n\t            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap');\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            var boxplots = wrap.selectAll('.nv-boxplot').data(function(d) { return d });\n\t            var boxEnter = boxplots.enter().append('g').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6);\n\t            boxplots\n\t                .attr('class', 'nv-boxplot')\n\t                .attr('transform', function(d,i,j) { return 'translate(' + (xScale(getX(d,i)) + xScale.rangeBand() * 0.05) + ', 0)'; })\n\t                .classed('hover', function(d) { return d.hover });\n\t            boxplots\n\t                .watchTransition(renderWatch, 'nv-boxplot: boxplots')\n\t                .style('stroke-opacity', 1)\n\t                .style('fill-opacity', 0.75)\n\t                .delay(function(d,i) { return i * duration / data.length })\n\t                .attr('transform', function(d,i) {\n\t                    return 'translate(' + (xScale(getX(d,i)) + xScale.rangeBand() * 0.05) + ', 0)';\n\t                });\n\t            boxplots.exit().remove();\n\t\n\t            // ----- add the SVG elements for each boxPlot -----\n\t\n\t            // conditionally append whisker lines\n\t            boxEnter.each(function(d,i) {\n\t                var box = d3.select(this);\n\t                [getWl, getWh].forEach(function (f) {\n\t                    if (f(d)) {\n\t                        var key = (f === getWl) ? 'low' : 'high';\n\t                        box.append('line')\n\t                          .style('stroke', getColor(d) || color(d,i))\n\t                          .attr('class', 'nv-boxplot-whisker nv-boxplot-' + key);\n\t                        box.append('line')\n\t                          .style('stroke', getColor(d) || color(d,i))\n\t                          .attr('class', 'nv-boxplot-tick nv-boxplot-' + key);\n\t                    }\n\t                });\n\t            });\n\t\n\t            var box_width = function() { return (maxBoxWidth === null ? xScale.rangeBand() * 0.9 : Math.min(75, xScale.rangeBand() * 0.9)); };\n\t            var box_left  = function() { return xScale.rangeBand() * 0.45 - box_width()/2; };\n\t            var box_right = function() { return xScale.rangeBand() * 0.45 + box_width()/2; };\n\t\n\t            // update whisker lines and ticks\n\t            [getWl, getWh].forEach(function (f) {\n\t                var key = (f === getWl) ? 'low' : 'high';\n\t                var endpoint = (f === getWl) ? getQ1 : getQ3;\n\t                boxplots.select('line.nv-boxplot-whisker.nv-boxplot-' + key)\n\t                  .watchTransition(renderWatch, 'nv-boxplot: boxplots')\n\t                    .attr('x1', xScale.rangeBand() * 0.45 )\n\t                    .attr('y1', function(d,i) { return yScale(f(d)); })\n\t                    .attr('x2', xScale.rangeBand() * 0.45 )\n\t                    .attr('y2', function(d,i) { return yScale(endpoint(d)); });\n\t                boxplots.select('line.nv-boxplot-tick.nv-boxplot-' + key)\n\t                  .watchTransition(renderWatch, 'nv-boxplot: boxplots')\n\t                    .attr('x1', box_left )\n\t                    .attr('y1', function(d,i) { return yScale(f(d)); })\n\t                    .attr('x2', box_right )\n\t                    .attr('y2', function(d,i) { return yScale(f(d)); });\n\t            });\n\t\n\t            [getWl, getWh].forEach(function (f) {\n\t                var key = (f === getWl) ? 'low' : 'high';\n\t                boxEnter.selectAll('.nv-boxplot-' + key)\n\t                  .on('mouseover', function(d,i,j) {\n\t                      d3.select(this).classed('hover', true);\n\t                      dispatch.elementMouseover({\n\t                          series: { key: f(d), color: getColor(d) || color(d,j) },\n\t                          e: d3.event\n\t                      });\n\t                  })\n\t                  .on('mouseout', function(d,i,j) {\n\t                      d3.select(this).classed('hover', false);\n\t                      dispatch.elementMouseout({\n\t                          series: { key: f(d), color: getColor(d) || color(d,j) },\n\t                          e: d3.event\n\t                      });\n\t                  })\n\t                  .on('mousemove', function(d,i) {\n\t                      dispatch.elementMousemove({e: d3.event});\n\t                  });\n\t            });\n\t\n\t            // boxes\n\t            boxEnter.append('rect')\n\t                .attr('class', 'nv-boxplot-box')\n\t                // tooltip events\n\t                .on('mouseover', function(d,i) {\n\t                    d3.select(this).classed('hover', true);\n\t                    dispatch.elementMouseover({\n\t                        key: getX(d),\n\t                        value: getX(d),\n\t                        series: [\n\t                            { key: 'Q3', value: getQ3(d), color: getColor(d) || color(d,i) },\n\t                            { key: 'Q2', value: getQ2(d), color: getColor(d) || color(d,i) },\n\t                            { key: 'Q1', value: getQ1(d), color: getColor(d) || color(d,i) }\n\t                        ],\n\t                        data: d,\n\t                        index: i,\n\t                        e: d3.event\n\t                    });\n\t                })\n\t                .on('mouseout', function(d,i) {\n\t                    d3.select(this).classed('hover', false);\n\t                    dispatch.elementMouseout({\n\t                        key: getX(d),\n\t                        value: getX(d),\n\t                        series: [\n\t                            { key: 'Q3', value: getQ3(d), color: getColor(d) || color(d,i) },\n\t                            { key: 'Q2', value: getQ2(d), color: getColor(d) || color(d,i) },\n\t                            { key: 'Q1', value: getQ1(d), color: getColor(d) || color(d,i) }\n\t                        ],\n\t                        data: d,\n\t                        index: i,\n\t                        e: d3.event\n\t                    });\n\t                })\n\t                .on('mousemove', function(d,i) {\n\t                    dispatch.elementMousemove({e: d3.event});\n\t                });\n\t\n\t            // box transitions\n\t            boxplots.select('rect.nv-boxplot-box')\n\t              .watchTransition(renderWatch, 'nv-boxplot: boxes')\n\t                .attr('y', function(d,i) { return yScale(getQ3(d)); })\n\t                .attr('width', box_width)\n\t                .attr('x', box_left )\n\t                .attr('height', function(d,i) { return Math.abs(yScale(getQ3(d)) - yScale(getQ1(d))) || 1 })\n\t                .style('fill', function(d,i) { return getColor(d) || color(d,i) })\n\t                .style('stroke', function(d,i) { return getColor(d) || color(d,i) });\n\t\n\t            // median line\n\t            boxEnter.append('line').attr('class', 'nv-boxplot-median');\n\t\n\t            boxplots.select('line.nv-boxplot-median')\n\t              .watchTransition(renderWatch, 'nv-boxplot: boxplots line')\n\t                .attr('x1', box_left)\n\t                .attr('y1', function(d,i) { return yScale(getQ2(d)); })\n\t                .attr('x2', box_right)\n\t                .attr('y2', function(d,i) { return yScale(getQ2(d)); });\n\t\n\t            // outliers\n\t            var outliers = boxplots.selectAll('.nv-boxplot-outlier').data(function(d) {\n\t                return getOlItems(d) || [];\n\t            });\n\t            outliers.enter().append('circle')\n\t                .style('fill', function(d,i,j) { return getOlColor(d,i,j) || color(d,j) })\n\t                .style('stroke', function(d,i,j) { return getOlColor(d,i,j) || color(d,j) })\n\t                .style('z-index', 9000)\n\t                .on('mouseover', function(d,i,j) {\n\t                    d3.select(this).classed('hover', true);\n\t                    dispatch.elementMouseover({\n\t                        series: { key: getOlLabel(d,i,j), color: getOlColor(d,i,j) || color(d,j) },\n\t                        e: d3.event\n\t                    });\n\t                })\n\t                .on('mouseout', function(d,i,j) {\n\t                    d3.select(this).classed('hover', false);\n\t                    dispatch.elementMouseout({\n\t                        series: { key: getOlLabel(d,i,j), color: getOlColor(d,i,j) || color(d,j) },\n\t                        e: d3.event\n\t                    });\n\t                })\n\t                .on('mousemove', function(d,i) {\n\t                    dispatch.elementMousemove({e: d3.event});\n\t                });\n\t            outliers.attr('class', 'nv-boxplot-outlier');\n\t            outliers\n\t              .watchTransition(renderWatch, 'nv-boxplot: nv-boxplot-outlier')\n\t                .attr('cx', xScale.rangeBand() * 0.45)\n\t                .attr('cy', function(d,i,j) { return yScale(getOlValue(d,i,j)); })\n\t                .attr('r', '3');\n\t            outliers.exit().remove();\n\t\n\t            //store old scales for use in transitions on update\n\t            xScale0 = xScale.copy();\n\t            yScale0 = yScale.copy();\n\t        });\n\t\n\t        renderWatch.renderEnd('nv-boxplot immediate');\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:       {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:      {get: function(){return height;}, set: function(_){height=_;}},\n\t        maxBoxWidth: {get: function(){return maxBoxWidth;}, set: function(_){maxBoxWidth=_;}},\n\t        x:           {get: function(){return getX;}, set: function(_){getX=_;}},\n\t        q1: {get: function(){return getQ1;}, set: function(_){getQ1=_;}},\n\t        q2: {get: function(){return getQ2;}, set: function(_){getQ2=_;}},\n\t        q3: {get: function(){return getQ3;}, set: function(_){getQ3=_;}},\n\t        wl: {get: function(){return getWl;}, set: function(_){getWl=_;}},\n\t        wh: {get: function(){return getWh;}, set: function(_){getWh=_;}},\n\t        itemColor:    {get: function(){return getColor;}, set: function(_){getColor=_;}},\n\t        outliers:     {get: function(){return getOlItems;}, set: function(_){getOlItems=_;}},\n\t        outlierValue: {get: function(){return getOlValue;}, set: function(_){getOlValue=_;}},\n\t        outlierLabel: {get: function(){return getOlLabel;}, set: function(_){getOlLabel=_;}},\n\t        outlierColor: {get: function(){return getOlColor;}, set: function(_){getOlColor=_;}},\n\t        xScale:  {get: function(){return xScale;}, set: function(_){xScale=_;}},\n\t        yScale:  {get: function(){return yScale;}, set: function(_){yScale=_;}},\n\t        xDomain: {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n\t        yDomain: {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n\t        xRange:  {get: function(){return xRange;}, set: function(_){xRange=_;}},\n\t        yRange:  {get: function(){return yRange;}, set: function(_){yRange=_;}},\n\t        id:          {get: function(){return id;}, set: function(_){id=_;}},\n\t        // rectClass: {get: function(){return rectClass;}, set: function(_){rectClass=_;}},\n\t        y: {\n\t            get: function() {\n\t                console.warn('BoxPlot \\'y\\' chart option is deprecated. Please use model overrides instead.');\n\t                return {};\n\t            },\n\t            set: function(_) {\n\t                console.warn('BoxPlot \\'y\\' chart option is deprecated. Please use model overrides instead.');\n\t            }\n\t        },\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t        }},\n\t        duration: {get: function(){return duration;}, set: function(_){\n\t            duration = _;\n\t            renderWatch.reset(duration);\n\t        }}\n\t    });\n\t\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\tnv.models.boxPlotChart = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var boxplot = nv.models.boxPlot(),\n\t        xAxis = nv.models.axis(),\n\t        yAxis = nv.models.axis();\n\t\n\t    var margin = {top: 15, right: 10, bottom: 50, left: 60},\n\t        width = null,\n\t        height = null,\n\t        color = nv.utils.getColor(),\n\t        showXAxis = true,\n\t        showYAxis = true,\n\t        rightAlignYAxis = false,\n\t        staggerLabels = false,\n\t        tooltip = nv.models.tooltip(),\n\t        x, y,\n\t        noData = 'No Data Available.',\n\t        dispatch = d3.dispatch('beforeUpdate', 'renderEnd'),\n\t        duration = 250;\n\t\n\t    xAxis\n\t        .orient('bottom')\n\t        .showMaxMin(false)\n\t        .tickFormat(function(d) { return d })\n\t    ;\n\t    yAxis\n\t        .orient((rightAlignYAxis) ? 'right' : 'left')\n\t        .tickFormat(d3.format(',.1f'))\n\t    ;\n\t\n\t    tooltip.duration(0);\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        renderWatch.models(boxplot);\n\t        if (showXAxis) renderWatch.models(xAxis);\n\t        if (showYAxis) renderWatch.models(yAxis);\n\t\n\t        selection.each(function(data) {\n\t            var container = d3.select(this), that = this;\n\t            nv.utils.initSVG(container);\n\t            var availableWidth = (width  || parseInt(container.style('width')) || 960) - margin.left - margin.right;\n\t            var availableHeight = (height || parseInt(container.style('height')) || 400) - margin.top - margin.bottom;\n\t\n\t            chart.update = function() {\n\t                dispatch.beforeUpdate();\n\t                container.transition().duration(duration).call(chart);\n\t            };\n\t            chart.container = this;\n\t\n\t            // TODO still need to find a way to validate quartile data presence using boxPlot callbacks.\n\t            // Display No Data message if there's nothing to show. (quartiles required at minimum).\n\t            if (!data || !data.length) {\n\t                var noDataText = container.selectAll('.nv-noData').data([noData]);\n\t\n\t                noDataText.enter().append('text')\n\t                    .attr('class', 'nvd3 nv-noData')\n\t                    .attr('dy', '-.7em')\n\t                    .style('text-anchor', 'middle');\n\t\n\t                noDataText\n\t                    .attr('x', margin.left + availableWidth / 2)\n\t                    .attr('y', margin.top + availableHeight / 2)\n\t                    .text(function(d) { return d });\n\t\n\t                return chart;\n\t            } else {\n\t                container.selectAll('.nv-noData').remove();\n\t            }\n\t\n\t            // Setup Scales\n\t            x = boxplot.xScale();\n\t            y = boxplot.yScale().clamp(true);\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-boxPlotWithAxes').data([data]);\n\t            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-boxPlotWithAxes').append('g');\n\t            var defsEnter = gEnter.append('defs');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-x nv-axis');\n\t            gEnter.append('g').attr('class', 'nv-y nv-axis')\n\t                .append('g').attr('class', 'nv-zeroLine')\n\t                .append('line');\n\t\n\t            gEnter.append('g').attr('class', 'nv-barsWrap');\n\t            g.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            if (rightAlignYAxis) {\n\t                g.select('.nv-y.nv-axis')\n\t                    .attr('transform', 'translate(' + availableWidth + ',0)');\n\t            }\n\t\n\t            // Main Chart Component(s)\n\t            boxplot.width(availableWidth).height(availableHeight);\n\t\n\t            var barsWrap = g.select('.nv-barsWrap')\n\t                .datum(data.filter(function(d) { return !d.disabled }))\n\t\n\t            barsWrap.transition().call(boxplot);\n\t\n\t            defsEnter.append('clipPath')\n\t                .attr('id', 'nv-x-label-clip-' + boxplot.id())\n\t                .append('rect');\n\t\n\t            g.select('#nv-x-label-clip-' + boxplot.id() + ' rect')\n\t                .attr('width', x.rangeBand() * (staggerLabels ? 2 : 1))\n\t                .attr('height', 16)\n\t                .attr('x', -x.rangeBand() / (staggerLabels ? 1 : 2 ));\n\t\n\t            // Setup Axes\n\t            if (showXAxis) {\n\t                xAxis\n\t                    .scale(x)\n\t                    .ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n\t                    .tickSize(-availableHeight, 0);\n\t\n\t                g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')');\n\t                g.select('.nv-x.nv-axis').call(xAxis);\n\t\n\t                var xTicks = g.select('.nv-x.nv-axis').selectAll('g');\n\t                if (staggerLabels) {\n\t                    xTicks\n\t                        .selectAll('text')\n\t                        .attr('transform', function(d,i,j) { return 'translate(0,' + (j % 2 === 0 ? '5' : '17') + ')' })\n\t                }\n\t            }\n\t\n\t            if (showYAxis) {\n\t                yAxis\n\t                    .scale(y)\n\t                    .ticks( Math.floor(availableHeight/36) ) // can't use nv.utils.calcTicksY with Object data\n\t                    .tickSize( -availableWidth, 0);\n\t\n\t                g.select('.nv-y.nv-axis').call(yAxis);\n\t            }\n\t\n\t            // Zero line\n\t            g.select('.nv-zeroLine line')\n\t                .attr('x1',0)\n\t                .attr('x2',availableWidth)\n\t                .attr('y1', y(0))\n\t                .attr('y2', y(0))\n\t            ;\n\t\n\t            //============================================================\n\t            // Event Handling/Dispatching (in chart's scope)\n\t            //------------------------------------------------------------\n\t        });\n\t\n\t        renderWatch.renderEnd('nv-boxplot chart immediate');\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Event Handling/Dispatching (out of chart's scope)\n\t    //------------------------------------------------------------\n\t\n\t    boxplot.dispatch.on('elementMouseover.tooltip', function(evt) {\n\t        tooltip.data(evt).hidden(false);\n\t    });\n\t\n\t    boxplot.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t        tooltip.data(evt).hidden(true);\n\t    });\n\t\n\t    boxplot.dispatch.on('elementMousemove.tooltip', function(evt) {\n\t        tooltip();\n\t    });\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.boxplot = boxplot;\n\t    chart.xAxis = xAxis;\n\t    chart.yAxis = yAxis;\n\t    chart.tooltip = tooltip;\n\t\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:      {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:     {get: function(){return height;}, set: function(_){height=_;}},\n\t        staggerLabels: {get: function(){return staggerLabels;}, set: function(_){staggerLabels=_;}},\n\t        showXAxis: {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n\t        showYAxis: {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n\t        tooltipContent:    {get: function(){return tooltip;}, set: function(_){tooltip=_;}},\n\t        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        duration: {get: function(){return duration;}, set: function(_){\n\t            duration = _;\n\t            renderWatch.reset(duration);\n\t            boxplot.duration(duration);\n\t            xAxis.duration(duration);\n\t            yAxis.duration(duration);\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t            boxplot.color(color);\n\t        }},\n\t        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n\t            rightAlignYAxis = _;\n\t            yAxis.orient( (_) ? 'right' : 'left');\n\t        }}\n\t    });\n\t\n\t    nv.utils.inheritOptions(chart, boxplot);\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t}\n\t\n\t// Chart design based on the recommendations of Stephen Few. Implementation\n\t// based on the work of Clint Ivy, Jamie Love, and Jason Davies.\n\t// http://projects.instantcognition.com/protovis/bulletchart/\n\t\n\tnv.models.bullet = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n\t        , orient = 'left' // TODO top & bottom\n\t        , reverse = false\n\t        , ranges = function(d) { return d.ranges }\n\t        , markers = function(d) { return d.markers ? d.markers : [] }\n\t        , markerLines = function(d) { return d.markerLines ? d.markerLines : [0] }\n\t        , measures = function(d) { return d.measures }\n\t        , rangeLabels = function(d) { return d.rangeLabels ? d.rangeLabels : [] }\n\t        , markerLabels = function(d) { return d.markerLabels ? d.markerLabels : []  }\n\t        , markerLineLabels = function(d) { return d.markerLineLabels ? d.markerLineLabels : []  }\n\t        , measureLabels = function(d) { return d.measureLabels ? d.measureLabels : []  }\n\t        , forceX = [0] // List of numbers to Force into the X scale (ie. 0, or a max / min, etc.)\n\t        , width = 380\n\t        , height = 30\n\t        , container = null\n\t        , tickFormat = null\n\t        , color = nv.utils.getColor(['#1f77b4'])\n\t        , dispatch = d3.dispatch('elementMouseover', 'elementMouseout', 'elementMousemove')\n\t        , defaultRangeLabels = [\"Maximum\", \"Mean\", \"Minimum\"]\n\t        , legacyRangeClassNames = [\"Max\", \"Avg\", \"Min\"]\n\t        ;\n\t\n\t    function sortLabels(labels, values){\n\t        var lz = labels.slice();\n\t        labels.sort(function(a, b){\n\t            var iA = lz.indexOf(a);\n\t            var iB = lz.indexOf(b);\n\t            return d3.descending(values[iA], values[iB]);\n\t        });\n\t    };\n\t\n\t    function chart(selection) {\n\t        selection.each(function(d, i) {\n\t            var availableWidth = width - margin.left - margin.right,\n\t                availableHeight = height - margin.top - margin.bottom;\n\t\n\t            container = d3.select(this);\n\t            nv.utils.initSVG(container);\n\t\n\t            var rangez = ranges.call(this, d, i).slice(),\n\t                markerz = markers.call(this, d, i).slice(),\n\t                markerLinez = markerLines.call(this, d, i).slice().sort(d3.descending),\n\t                measurez = measures.call(this, d, i).slice(),\n\t                rangeLabelz = rangeLabels.call(this, d, i).slice(),\n\t                markerLabelz = markerLabels.call(this, d, i).slice(),\n\t                markerLineLabelz = markerLineLabels.call(this, d, i).slice(),\n\t                measureLabelz = measureLabels.call(this, d, i).slice();\n\t\n\t            // Sort labels according to their sorted values\n\t            sortLabels(rangeLabelz, rangez);\n\t            sortLabels(markerLabelz, markerz);\n\t            sortLabels(markerLineLabelz, markerLinez);\n\t            sortLabels(measureLabelz, measurez);\n\t\n\t            // sort values descending\n\t            rangez.sort(d3.descending);\n\t            markerz.sort(d3.descending);\n\t            measurez.sort(d3.descending);\n\t\n\t            // Setup Scales\n\t            // Compute the new x-scale.\n\t            var x1 = d3.scale.linear()\n\t                .domain( d3.extent(d3.merge([forceX, rangez])) )\n\t                .range(reverse ? [availableWidth, 0] : [0, availableWidth]);\n\t\n\t            // Retrieve the old x-scale, if this is an update.\n\t            var x0 = this.__chart__ || d3.scale.linear()\n\t                .domain([0, Infinity])\n\t                .range(x1.range());\n\t\n\t            // Stash the new scale.\n\t            this.__chart__ = x1;\n\t\n\t            var rangeMin = d3.min(rangez), //rangez[2]\n\t                rangeMax = d3.max(rangez), //rangez[0]\n\t                rangeAvg = rangez[1];\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-bullet').data([d]);\n\t            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-bullet');\n\t            var gEnter = wrapEnter.append('g');\n\t            var g = wrap.select('g');\n\t\n\t            for(var i=0,il=rangez.length; i<il; i++){\n\t                var rangeClassNames = 'nv-range nv-range'+i;\n\t                if(i <= 2){\n\t                    rangeClassNames = rangeClassNames + ' nv-range'+legacyRangeClassNames[i];\n\t                }\n\t                gEnter.append('rect').attr('class', rangeClassNames);\n\t            }\n\t\n\t            gEnter.append('rect').attr('class', 'nv-measure');\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            var w0 = function(d) { return Math.abs(x0(d) - x0(0)) }, // TODO: could optimize by precalculating x0(0) and x1(0)\n\t                w1 = function(d) { return Math.abs(x1(d) - x1(0)) };\n\t            var xp0 = function(d) { return d < 0 ? x0(d) : x0(0) },\n\t                xp1 = function(d) { return d < 0 ? x1(d) : x1(0) };\n\t\n\t            for(var i=0,il=rangez.length; i<il; i++){\n\t                var range = rangez[i];\n\t                g.select('rect.nv-range'+i)\n\t                    .attr('height', availableHeight)\n\t                    .attr('width', w1(range))\n\t                    .attr('x', xp1(range))\n\t                    .datum(range)\n\t            }\n\t\n\t            g.select('rect.nv-measure')\n\t                .style('fill', color)\n\t                .attr('height', availableHeight / 3)\n\t                .attr('y', availableHeight / 3)\n\t                .attr('width', measurez < 0 ?\n\t                    x1(0) - x1(measurez[0])\n\t                    : x1(measurez[0]) - x1(0))\n\t                .attr('x', xp1(measurez))\n\t                .on('mouseover', function() {\n\t                    dispatch.elementMouseover({\n\t                        value: measurez[0],\n\t                        label: measureLabelz[0] || 'Current',\n\t                        color: d3.select(this).style(\"fill\")\n\t                    })\n\t                })\n\t                .on('mousemove', function() {\n\t                    dispatch.elementMousemove({\n\t                        value: measurez[0],\n\t                        label: measureLabelz[0] || 'Current',\n\t                        color: d3.select(this).style(\"fill\")\n\t                    })\n\t                })\n\t                .on('mouseout', function() {\n\t                    dispatch.elementMouseout({\n\t                        value: measurez[0],\n\t                        label: measureLabelz[0] || 'Current',\n\t                        color: d3.select(this).style(\"fill\")\n\t                    })\n\t                });\n\t\n\t            var h3 =  availableHeight / 6;\n\t\n\t            var markerData = markerz.map( function(marker, index) {\n\t                return {value: marker, label: markerLabelz[index]}\n\t            });\n\t            gEnter\n\t              .selectAll(\"path.nv-markerTriangle\")\n\t              .data(markerData)\n\t              .enter()\n\t              .append('path')\n\t              .attr('class', 'nv-markerTriangle')\n\t              .attr('d', 'M0,' + h3 + 'L' + h3 + ',' + (-h3) + ' ' + (-h3) + ',' + (-h3) + 'Z')\n\t              .on('mouseover', function(d) {\n\t                dispatch.elementMouseover({\n\t                  value: d.value,\n\t                  label: d.label || 'Previous',\n\t                  color: d3.select(this).style(\"fill\"),\n\t                  pos: [x1(d.value), availableHeight/2]\n\t                })\n\t\n\t              })\n\t              .on('mousemove', function(d) {\n\t                  dispatch.elementMousemove({\n\t                      value: d.value,\n\t                      label: d.label || 'Previous',\n\t                      color: d3.select(this).style(\"fill\")\n\t                  })\n\t              })\n\t              .on('mouseout', function(d, i) {\n\t                  dispatch.elementMouseout({\n\t                      value: d.value,\n\t                      label: d.label || 'Previous',\n\t                      color: d3.select(this).style(\"fill\")\n\t                  })\n\t              });\n\t\n\t            g.selectAll(\"path.nv-markerTriangle\")\n\t              .data(markerData)\n\t              .attr('transform', function(d) { return 'translate(' + x1(d.value) + ',' + (availableHeight / 2) + ')' });\n\t\n\t            var markerLinesData = markerLinez.map( function(marker, index) {\n\t                return {value: marker, label: markerLineLabelz[index]}\n\t            });\n\t            gEnter\n\t              .selectAll(\"path.nv-markerLine\")\n\t              .data(markerLinesData)\n\t              .enter()\n\t              .append('line')\n\t              .attr('cursor', '')\n\t              .attr('class', 'nv-markerLine')\n\t              .attr('x1', function(d) { return x1(d.value) })\n\t              .attr('y1', '2')\n\t              .attr('x2', function(d) { return x1(d.value) })\n\t              .attr('y2', availableHeight - 2)\n\t              .on('mouseover', function(d) {\n\t                dispatch.elementMouseover({\n\t                  value: d.value,\n\t                  label: d.label || 'Previous',\n\t                  color: d3.select(this).style(\"fill\"),\n\t                  pos: [x1(d.value), availableHeight/2]\n\t                })\n\t\n\t              })\n\t              .on('mousemove', function(d) {\n\t                  dispatch.elementMousemove({\n\t                      value: d.value,\n\t                      label: d.label || 'Previous',\n\t                      color: d3.select(this).style(\"fill\")\n\t                  })\n\t              })\n\t              .on('mouseout', function(d, i) {\n\t                  dispatch.elementMouseout({\n\t                      value: d.value,\n\t                      label: d.label || 'Previous',\n\t                      color: d3.select(this).style(\"fill\")\n\t                  })\n\t              });\n\t\n\t            g.selectAll(\"path.nv-markerLines\")\n\t              .data(markerLinesData)\n\t              .attr('transform', function(d) { return 'translate(' + x1(d.value) + ',' + (availableHeight / 2) + ')' });\n\t\n\t            wrap.selectAll('.nv-range')\n\t                .on('mouseover', function(d,i) {\n\t                    var label = rangeLabelz[i] || defaultRangeLabels[i];\n\t                    dispatch.elementMouseover({\n\t                        value: d,\n\t                        label: label,\n\t                        color: d3.select(this).style(\"fill\")\n\t                    })\n\t                })\n\t                .on('mousemove', function() {\n\t                    dispatch.elementMousemove({\n\t                        value: measurez[0],\n\t                        label: measureLabelz[0] || 'Previous',\n\t                        color: d3.select(this).style(\"fill\")\n\t                    })\n\t                })\n\t                .on('mouseout', function(d,i) {\n\t                    var label = rangeLabelz[i] || defaultRangeLabels[i];\n\t                    dispatch.elementMouseout({\n\t                        value: d,\n\t                        label: label,\n\t                        color: d3.select(this).style(\"fill\")\n\t                    })\n\t                });\n\t        });\n\t\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        ranges:      {get: function(){return ranges;}, set: function(_){ranges=_;}}, // ranges (bad, satisfactory, good)\n\t        markers:     {get: function(){return markers;}, set: function(_){markers=_;}}, // markers (previous, goal)\n\t        measures: {get: function(){return measures;}, set: function(_){measures=_;}}, // measures (actual, forecast)\n\t        forceX:      {get: function(){return forceX;}, set: function(_){forceX=_;}},\n\t        width:    {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:    {get: function(){return height;}, set: function(_){height=_;}},\n\t        tickFormat:    {get: function(){return tickFormat;}, set: function(_){tickFormat=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        orient: {get: function(){return orient;}, set: function(_){ // left, right, top, bottom\n\t            orient = _;\n\t            reverse = orient == 'right' || orient == 'bottom';\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t        }}\n\t    });\n\t\n\t    nv.utils.initOptions(chart);\n\t    return chart;\n\t};\n\t\n\t\n\t\n\t// Chart design based on the recommendations of Stephen Few. Implementation\n\t// based on the work of Clint Ivy, Jamie Love, and Jason Davies.\n\t// http://projects.instantcognition.com/protovis/bulletchart/\n\tnv.models.bulletChart = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var bullet = nv.models.bullet();\n\t    var tooltip = nv.models.tooltip();\n\t\n\t    var orient = 'left' // TODO top & bottom\n\t        , reverse = false\n\t        , margin = {top: 5, right: 40, bottom: 20, left: 120}\n\t        , ranges = function(d) { return d.ranges }\n\t        , markers = function(d) { return d.markers ? d.markers : [] }\n\t        , measures = function(d) { return d.measures }\n\t        , width = null\n\t        , height = 55\n\t        , tickFormat = null\n\t\t, ticks = null\n\t        , noData = null\n\t        , dispatch = d3.dispatch()\n\t        ;\n\t\n\t    tooltip\n\t        .duration(0)\n\t        .headerEnabled(false);\n\t\n\t    function chart(selection) {\n\t        selection.each(function(d, i) {\n\t            var container = d3.select(this);\n\t            nv.utils.initSVG(container);\n\t\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                availableHeight = height - margin.top - margin.bottom,\n\t                that = this;\n\t\n\t            chart.update = function() { chart(selection) };\n\t            chart.container = this;\n\t\n\t            // Display No Data message if there's nothing to show.\n\t            if (!d || !ranges.call(this, d, i)) {\n\t                nv.utils.noData(chart, container)\n\t                return chart;\n\t            } else {\n\t                container.selectAll('.nv-noData').remove();\n\t            }\n\t\n\t            var rangez = ranges.call(this, d, i).slice().sort(d3.descending),\n\t                markerz = markers.call(this, d, i).slice().sort(d3.descending),\n\t                measurez = measures.call(this, d, i).slice().sort(d3.descending);\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-bulletChart').data([d]);\n\t            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-bulletChart');\n\t            var gEnter = wrapEnter.append('g');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-bulletWrap');\n\t            gEnter.append('g').attr('class', 'nv-titles');\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            // Compute the new x-scale.\n\t            var x1 = d3.scale.linear()\n\t                .domain([0, Math.max(rangez[0], (markerz[0] || 0), measurez[0])])  // TODO: need to allow forceX and forceY, and xDomain, yDomain\n\t                .range(reverse ? [availableWidth, 0] : [0, availableWidth]);\n\t\n\t            // Retrieve the old x-scale, if this is an update.\n\t            var x0 = this.__chart__ || d3.scale.linear()\n\t                .domain([0, Infinity])\n\t                .range(x1.range());\n\t\n\t            // Stash the new scale.\n\t            this.__chart__ = x1;\n\t\n\t            var w0 = function(d) { return Math.abs(x0(d) - x0(0)) }, // TODO: could optimize by precalculating x0(0) and x1(0)\n\t                w1 = function(d) { return Math.abs(x1(d) - x1(0)) };\n\t\n\t            var title = gEnter.select('.nv-titles').append('g')\n\t                .attr('text-anchor', 'end')\n\t                .attr('transform', 'translate(-6,' + (height - margin.top - margin.bottom) / 2 + ')');\n\t            title.append('text')\n\t                .attr('class', 'nv-title')\n\t                .text(function(d) { return d.title; });\n\t\n\t            title.append('text')\n\t                .attr('class', 'nv-subtitle')\n\t                .attr('dy', '1em')\n\t                .text(function(d) { return d.subtitle; });\n\t\n\t            bullet\n\t                .width(availableWidth)\n\t                .height(availableHeight)\n\t\n\t            var bulletWrap = g.select('.nv-bulletWrap');\n\t            d3.transition(bulletWrap).call(bullet);\n\t\n\t            // Compute the tick format.\n\t            var format = tickFormat || x1.tickFormat( availableWidth / 100 );\n\t\n\t            // Update the tick groups.\n\t            var tick = g.selectAll('g.nv-tick')\n\t                .data(x1.ticks( ticks ? ticks : (availableWidth / 50) ), function(d) {\n\t                    return this.textContent || format(d);\n\t                });\n\t\n\t            // Initialize the ticks with the old scale, x0.\n\t            var tickEnter = tick.enter().append('g')\n\t                .attr('class', 'nv-tick')\n\t                .attr('transform', function(d) { return 'translate(' + x0(d) + ',0)' })\n\t                .style('opacity', 1e-6);\n\t\n\t            tickEnter.append('line')\n\t                .attr('y1', availableHeight)\n\t                .attr('y2', availableHeight * 7 / 6);\n\t\n\t            tickEnter.append('text')\n\t                .attr('text-anchor', 'middle')\n\t                .attr('dy', '1em')\n\t                .attr('y', availableHeight * 7 / 6)\n\t                .text(format);\n\t\n\t            // Transition the updating ticks to the new scale, x1.\n\t            var tickUpdate = d3.transition(tick)\n\t                .attr('transform', function(d) { return 'translate(' + x1(d) + ',0)' })\n\t                .style('opacity', 1);\n\t\n\t            tickUpdate.select('line')\n\t                .attr('y1', availableHeight)\n\t                .attr('y2', availableHeight * 7 / 6);\n\t\n\t            tickUpdate.select('text')\n\t                .attr('y', availableHeight * 7 / 6);\n\t\n\t            // Transition the exiting ticks to the new scale, x1.\n\t            d3.transition(tick.exit())\n\t                .attr('transform', function(d) { return 'translate(' + x1(d) + ',0)' })\n\t                .style('opacity', 1e-6)\n\t                .remove();\n\t        });\n\t\n\t        d3.timer.flush();\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Event Handling/Dispatching (out of chart's scope)\n\t    //------------------------------------------------------------\n\t\n\t    bullet.dispatch.on('elementMouseover.tooltip', function(evt) {\n\t        evt['series'] = {\n\t            key: evt.label,\n\t            value: evt.value,\n\t            color: evt.color\n\t        };\n\t        tooltip.data(evt).hidden(false);\n\t    });\n\t\n\t    bullet.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t        tooltip.hidden(true);\n\t    });\n\t\n\t    bullet.dispatch.on('elementMousemove.tooltip', function(evt) {\n\t        tooltip();\n\t    });\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.bullet = bullet;\n\t    chart.dispatch = dispatch;\n\t    chart.tooltip = tooltip;\n\t\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        ranges:      {get: function(){return ranges;}, set: function(_){ranges=_;}}, // ranges (bad, satisfactory, good)\n\t        markers:     {get: function(){return markers;}, set: function(_){markers=_;}}, // markers (previous, goal)\n\t        measures: {get: function(){return measures;}, set: function(_){measures=_;}}, // measures (actual, forecast)\n\t        width:    {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:    {get: function(){return height;}, set: function(_){height=_;}},\n\t        tickFormat:    {get: function(){return tickFormat;}, set: function(_){tickFormat=_;}},\n\t        ticks:    {get: function(){return ticks;}, set: function(_){ticks=_;}},\n\t        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        orient: {get: function(){return orient;}, set: function(_){ // left, right, top, bottom\n\t            orient = _;\n\t            reverse = orient == 'right' || orient == 'bottom';\n\t        }}\n\t    });\n\t\n\t    nv.utils.inheritOptions(chart, bullet);\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\t\n\t\n\t\n\tnv.models.candlestickBar = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n\t        , width = null\n\t        , height = null\n\t        , id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n\t        , container\n\t        , x = d3.scale.linear()\n\t        , y = d3.scale.linear()\n\t        , getX = function(d) { return d.x }\n\t        , getY = function(d) { return d.y }\n\t        , getOpen = function(d) { return d.open }\n\t        , getClose = function(d) { return d.close }\n\t        , getHigh = function(d) { return d.high }\n\t        , getLow = function(d) { return d.low }\n\t        , forceX = []\n\t        , forceY = []\n\t        , padData     = false // If true, adds half a data points width to front and back, for lining up a line chart with a bar chart\n\t        , clipEdge = true\n\t        , color = nv.utils.defaultColor()\n\t        , interactive = false\n\t        , xDomain\n\t        , yDomain\n\t        , xRange\n\t        , yRange\n\t        , dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd', 'chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove')\n\t        ;\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    function chart(selection) {\n\t        selection.each(function(data) {\n\t            container = d3.select(this);\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                availableHeight = nv.utils.availableHeight(height, container, margin);\n\t\n\t            nv.utils.initSVG(container);\n\t\n\t            // Width of the candlestick bars.\n\t            var barWidth = (availableWidth / data[0].values.length) * .45;\n\t\n\t            // Setup Scales\n\t            x.domain(xDomain || d3.extent(data[0].values.map(getX).concat(forceX) ));\n\t\n\t            if (padData)\n\t                x.range(xRange || [availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5)  / data[0].values.length ]);\n\t            else\n\t                x.range(xRange || [5 + barWidth / 2, availableWidth - barWidth / 2 - 5]);\n\t\n\t            y.domain(yDomain || [\n\t                    d3.min(data[0].values.map(getLow).concat(forceY)),\n\t                    d3.max(data[0].values.map(getHigh).concat(forceY))\n\t                ]\n\t            ).range(yRange || [availableHeight, 0]);\n\t\n\t            // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n\t            if (x.domain()[0] === x.domain()[1])\n\t                x.domain()[0] ?\n\t                    x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01])\n\t                    : x.domain([-1,1]);\n\t\n\t            if (y.domain()[0] === y.domain()[1])\n\t                y.domain()[0] ?\n\t                    y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01])\n\t                    : y.domain([-1,1]);\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = d3.select(this).selectAll('g.nv-wrap.nv-candlestickBar').data([data[0].values]);\n\t            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-candlestickBar');\n\t            var defsEnter = wrapEnter.append('defs');\n\t            var gEnter = wrapEnter.append('g');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-ticks');\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            container\n\t                .on('click', function(d,i) {\n\t                    dispatch.chartClick({\n\t                        data: d,\n\t                        index: i,\n\t                        pos: d3.event,\n\t                        id: id\n\t                    });\n\t                });\n\t\n\t            defsEnter.append('clipPath')\n\t                .attr('id', 'nv-chart-clip-path-' + id)\n\t                .append('rect');\n\t\n\t            wrap.select('#nv-chart-clip-path-' + id + ' rect')\n\t                .attr('width', availableWidth)\n\t                .attr('height', availableHeight);\n\t\n\t            g   .attr('clip-path', clipEdge ? 'url(#nv-chart-clip-path-' + id + ')' : '');\n\t\n\t            var ticks = wrap.select('.nv-ticks').selectAll('.nv-tick')\n\t                .data(function(d) { return d });\n\t            ticks.exit().remove();\n\t\n\t            var tickGroups = ticks.enter().append('g');\n\t\n\t            // The colors are currently controlled by CSS.\n\t            ticks\n\t                .attr('class', function(d, i, j) { return (getOpen(d, i) > getClose(d, i) ? 'nv-tick negative' : 'nv-tick positive') + ' nv-tick-' + j + '-' + i});\n\t\n\t            var lines = tickGroups.append('line')\n\t                .attr('class', 'nv-candlestick-lines')\n\t                .attr('transform', function(d, i) { return 'translate(' + x(getX(d, i)) + ',0)'; })\n\t                .attr('x1', 0)\n\t                .attr('y1', function(d, i) { return y(getHigh(d, i)); })\n\t                .attr('x2', 0)\n\t                .attr('y2', function(d, i) { return y(getLow(d, i)); });\n\t\n\t            var rects = tickGroups.append('rect')\n\t                .attr('class', 'nv-candlestick-rects nv-bars')\n\t                .attr('transform', function(d, i) {\n\t                    return 'translate(' + (x(getX(d, i)) - barWidth/2) + ','\n\t                    + (y(getY(d, i)) - (getOpen(d, i) > getClose(d, i) ? (y(getClose(d, i)) - y(getOpen(d, i))) : 0))\n\t                    + ')';\n\t                })\n\t                .attr('x', 0)\n\t                .attr('y', 0)\n\t                .attr('width', barWidth)\n\t                .attr('height', function(d, i) {\n\t                    var open = getOpen(d, i);\n\t                    var close = getClose(d, i);\n\t                    return open > close ? y(close) - y(open) : y(open) - y(close);\n\t                });\n\t\n\t            ticks.select('.nv-candlestick-lines').transition()\n\t                .attr('transform', function(d, i) { return 'translate(' + x(getX(d, i)) + ',0)'; })\n\t                .attr('x1', 0)\n\t                .attr('y1', function(d, i) { return y(getHigh(d, i)); })\n\t                .attr('x2', 0)\n\t                .attr('y2', function(d, i) { return y(getLow(d, i)); });\n\t\n\t            ticks.select('.nv-candlestick-rects').transition()\n\t                .attr('transform', function(d, i) {\n\t                    return 'translate(' + (x(getX(d, i)) - barWidth/2) + ','\n\t                    + (y(getY(d, i)) - (getOpen(d, i) > getClose(d, i) ? (y(getClose(d, i)) - y(getOpen(d, i))) : 0))\n\t                    + ')';\n\t                })\n\t                .attr('x', 0)\n\t                .attr('y', 0)\n\t                .attr('width', barWidth)\n\t                .attr('height', function(d, i) {\n\t                    var open = getOpen(d, i);\n\t                    var close = getClose(d, i);\n\t                    return open > close ? y(close) - y(open) : y(open) - y(close);\n\t                });\n\t        });\n\t\n\t        return chart;\n\t    }\n\t\n\t\n\t    //Create methods to allow outside functions to highlight a specific bar.\n\t    chart.highlightPoint = function(pointIndex, isHoverOver) {\n\t        chart.clearHighlights();\n\t        container.select(\".nv-candlestickBar .nv-tick-0-\" + pointIndex)\n\t            .classed(\"hover\", isHoverOver)\n\t        ;\n\t    };\n\t\n\t    chart.clearHighlights = function() {\n\t        container.select(\".nv-candlestickBar .nv-tick.hover\")\n\t            .classed(\"hover\", false)\n\t        ;\n\t    };\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:    {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:   {get: function(){return height;}, set: function(_){height=_;}},\n\t        xScale:   {get: function(){return x;}, set: function(_){x=_;}},\n\t        yScale:   {get: function(){return y;}, set: function(_){y=_;}},\n\t        xDomain:  {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n\t        yDomain:  {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n\t        xRange:   {get: function(){return xRange;}, set: function(_){xRange=_;}},\n\t        yRange:   {get: function(){return yRange;}, set: function(_){yRange=_;}},\n\t        forceX:   {get: function(){return forceX;}, set: function(_){forceX=_;}},\n\t        forceY:   {get: function(){return forceY;}, set: function(_){forceY=_;}},\n\t        padData:  {get: function(){return padData;}, set: function(_){padData=_;}},\n\t        clipEdge: {get: function(){return clipEdge;}, set: function(_){clipEdge=_;}},\n\t        id:       {get: function(){return id;}, set: function(_){id=_;}},\n\t        interactive: {get: function(){return interactive;}, set: function(_){interactive=_;}},\n\t\n\t        x:     {get: function(){return getX;}, set: function(_){getX=_;}},\n\t        y:     {get: function(){return getY;}, set: function(_){getY=_;}},\n\t        open:  {get: function(){return getOpen();}, set: function(_){getOpen=_;}},\n\t        close: {get: function(){return getClose();}, set: function(_){getClose=_;}},\n\t        high:  {get: function(){return getHigh;}, set: function(_){getHigh=_;}},\n\t        low:   {get: function(){return getLow;}, set: function(_){getLow=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    != undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  != undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom != undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   != undefined ? _.left   : margin.left;\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t        }}\n\t    });\n\t\n\t    nv.utils.initOptions(chart);\n\t    return chart;\n\t};\n\t\n\tnv.models.cumulativeLineChart = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var lines = nv.models.line()\n\t        , xAxis = nv.models.axis()\n\t        , yAxis = nv.models.axis()\n\t        , legend = nv.models.legend()\n\t        , controls = nv.models.legend()\n\t        , interactiveLayer = nv.interactiveGuideline()\n\t        , tooltip = nv.models.tooltip()\n\t        ;\n\t\n\t    var margin = {top: 30, right: 30, bottom: 50, left: 60}\n\t        , color = nv.utils.defaultColor()\n\t        , width = null\n\t        , height = null\n\t        , showLegend = true\n\t        , showXAxis = true\n\t        , showYAxis = true\n\t        , rightAlignYAxis = false\n\t        , showControls = true\n\t        , useInteractiveGuideline = false\n\t        , rescaleY = true\n\t        , x //can be accessed via chart.xScale()\n\t        , y //can be accessed via chart.yScale()\n\t        , id = lines.id()\n\t        , state = nv.utils.state()\n\t        , defaultState = null\n\t        , noData = null\n\t        , average = function(d) { return d.average }\n\t        , dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd')\n\t        , transitionDuration = 250\n\t        , duration = 250\n\t        , noErrorCheck = false  //if set to TRUE, will bypass an error check in the indexify function.\n\t        ;\n\t\n\t    state.index = 0;\n\t    state.rescaleY = rescaleY;\n\t\n\t    xAxis.orient('bottom').tickPadding(7);\n\t    yAxis.orient((rightAlignYAxis) ? 'right' : 'left');\n\t\n\t    tooltip.valueFormatter(function(d, i) {\n\t        return yAxis.tickFormat()(d, i);\n\t    }).headerFormatter(function(d, i) {\n\t        return xAxis.tickFormat()(d, i);\n\t    });\n\t\n\t    controls.updateState(false);\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var dx = d3.scale.linear()\n\t        , index = {i: 0, x: 0}\n\t        , renderWatch = nv.utils.renderWatch(dispatch, duration)\n\t        ;\n\t\n\t    var stateGetter = function(data) {\n\t        return function(){\n\t            return {\n\t                active: data.map(function(d) { return !d.disabled }),\n\t                index: index.i,\n\t                rescaleY: rescaleY\n\t            };\n\t        }\n\t    };\n\t\n\t    var stateSetter = function(data) {\n\t        return function(state) {\n\t            if (state.index !== undefined)\n\t                index.i = state.index;\n\t            if (state.rescaleY !== undefined)\n\t                rescaleY = state.rescaleY;\n\t            if (state.active !== undefined)\n\t                data.forEach(function(series,i) {\n\t                    series.disabled = !state.active[i];\n\t                });\n\t        }\n\t    };\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        renderWatch.models(lines);\n\t        if (showXAxis) renderWatch.models(xAxis);\n\t        if (showYAxis) renderWatch.models(yAxis);\n\t        selection.each(function(data) {\n\t            var container = d3.select(this);\n\t            nv.utils.initSVG(container);\n\t            container.classed('nv-chart-' + id, true);\n\t            var that = this;\n\t\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                availableHeight = nv.utils.availableHeight(height, container, margin);\n\t\n\t            chart.update = function() {\n\t                if (duration === 0)\n\t                    container.call(chart);\n\t                else\n\t                    container.transition().duration(duration).call(chart)\n\t            };\n\t            chart.container = this;\n\t\n\t            state\n\t                .setter(stateSetter(data), chart.update)\n\t                .getter(stateGetter(data))\n\t                .update();\n\t\n\t            // DEPRECATED set state.disableddisabled\n\t            state.disabled = data.map(function(d) { return !!d.disabled });\n\t\n\t            if (!defaultState) {\n\t                var key;\n\t                defaultState = {};\n\t                for (key in state) {\n\t                    if (state[key] instanceof Array)\n\t                        defaultState[key] = state[key].slice(0);\n\t                    else\n\t                        defaultState[key] = state[key];\n\t                }\n\t            }\n\t\n\t            var indexDrag = d3.behavior.drag()\n\t                .on('dragstart', dragStart)\n\t                .on('drag', dragMove)\n\t                .on('dragend', dragEnd);\n\t\n\t\n\t            function dragStart(d,i) {\n\t                d3.select(chart.container)\n\t                    .style('cursor', 'ew-resize');\n\t            }\n\t\n\t            function dragMove(d,i) {\n\t                index.x = d3.event.x;\n\t                index.i = Math.round(dx.invert(index.x));\n\t                updateZero();\n\t            }\n\t\n\t            function dragEnd(d,i) {\n\t                d3.select(chart.container)\n\t                    .style('cursor', 'auto');\n\t\n\t                // update state and send stateChange with new index\n\t                state.index = index.i;\n\t                dispatch.stateChange(state);\n\t            }\n\t\n\t            // Display No Data message if there's nothing to show.\n\t            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n\t                nv.utils.noData(chart, container)\n\t                return chart;\n\t            } else {\n\t                container.selectAll('.nv-noData').remove();\n\t            }\n\t\n\t            // Setup Scales\n\t            x = lines.xScale();\n\t            y = lines.yScale();\n\t\n\t            if (!rescaleY) {\n\t                var seriesDomains = data\n\t                    .filter(function(series) { return !series.disabled })\n\t                    .map(function(series,i) {\n\t                        var initialDomain = d3.extent(series.values, lines.y());\n\t\n\t                        //account for series being disabled when losing 95% or more\n\t                        if (initialDomain[0] < -.95) initialDomain[0] = -.95;\n\t\n\t                        return [\n\t                                (initialDomain[0] - initialDomain[1]) / (1 + initialDomain[1]),\n\t                                (initialDomain[1] - initialDomain[0]) / (1 + initialDomain[0])\n\t                        ];\n\t                    });\n\t\n\t                var completeDomain = [\n\t                    d3.min(seriesDomains, function(d) { return d[0] }),\n\t                    d3.max(seriesDomains, function(d) { return d[1] })\n\t                ];\n\t\n\t                lines.yDomain(completeDomain);\n\t            } else {\n\t                lines.yDomain(null);\n\t            }\n\t\n\t            dx.domain([0, data[0].values.length - 1]) //Assumes all series have same length\n\t                .range([0, availableWidth])\n\t                .clamp(true);\n\t\n\t            var data = indexify(index.i, data);\n\t\n\t            // Setup containers and skeleton of chart\n\t            var interactivePointerEvents = (useInteractiveGuideline) ? \"none\" : \"all\";\n\t            var wrap = container.selectAll('g.nv-wrap.nv-cumulativeLine').data([data]);\n\t            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-cumulativeLine').append('g');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-interactive');\n\t            gEnter.append('g').attr('class', 'nv-x nv-axis').style(\"pointer-events\",\"none\");\n\t            gEnter.append('g').attr('class', 'nv-y nv-axis');\n\t            gEnter.append('g').attr('class', 'nv-background');\n\t            gEnter.append('g').attr('class', 'nv-linesWrap').style(\"pointer-events\",interactivePointerEvents);\n\t            gEnter.append('g').attr('class', 'nv-avgLinesWrap').style(\"pointer-events\",\"none\");\n\t            gEnter.append('g').attr('class', 'nv-legendWrap');\n\t            gEnter.append('g').attr('class', 'nv-controlsWrap');\n\t\n\t            // Legend\n\t            if (!showLegend) {\n\t                g.select('.nv-legendWrap').selectAll('*').remove();\n\t            } else {\n\t                legend.width(availableWidth);\n\t\n\t                g.select('.nv-legendWrap')\n\t                    .datum(data)\n\t                    .call(legend);\n\t\n\t                if (legend.height() > margin.top) {\n\t                    margin.top = legend.height();\n\t                    availableHeight = nv.utils.availableHeight(height, container, margin);\n\t                }\n\t\n\t                g.select('.nv-legendWrap')\n\t                    .attr('transform', 'translate(0,' + (-margin.top) +')')\n\t            }\n\t\n\t            // Controls\n\t            if (!showControls) {\n\t                 g.select('.nv-controlsWrap').selectAll('*').remove();\n\t            } else {\n\t                var controlsData = [\n\t                    { key: 'Re-scale y-axis', disabled: !rescaleY }\n\t                ];\n\t\n\t                controls\n\t                    .width(140)\n\t                    .color(['#444', '#444', '#444'])\n\t                    .rightAlign(false)\n\t                    .margin({top: 5, right: 0, bottom: 5, left: 20})\n\t                ;\n\t\n\t                g.select('.nv-controlsWrap')\n\t                    .datum(controlsData)\n\t                    .attr('transform', 'translate(0,' + (-margin.top) +')')\n\t                    .call(controls);\n\t            }\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            if (rightAlignYAxis) {\n\t                g.select(\".nv-y.nv-axis\")\n\t                    .attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n\t            }\n\t\n\t            // Show error if series goes below 100%\n\t            var tempDisabled = data.filter(function(d) { return d.tempDisabled });\n\t\n\t            wrap.select('.tempDisabled').remove(); //clean-up and prevent duplicates\n\t            if (tempDisabled.length) {\n\t                wrap.append('text').attr('class', 'tempDisabled')\n\t                    .attr('x', availableWidth / 2)\n\t                    .attr('y', '-.71em')\n\t                    .style('text-anchor', 'end')\n\t                    .text(tempDisabled.map(function(d) { return d.key }).join(', ') + ' values cannot be calculated for this time period.');\n\t            }\n\t\n\t            //Set up interactive layer\n\t            if (useInteractiveGuideline) {\n\t                interactiveLayer\n\t                    .width(availableWidth)\n\t                    .height(availableHeight)\n\t                    .margin({left:margin.left,top:margin.top})\n\t                    .svgContainer(container)\n\t                    .xScale(x);\n\t                wrap.select(\".nv-interactive\").call(interactiveLayer);\n\t            }\n\t\n\t            gEnter.select('.nv-background')\n\t                .append('rect');\n\t\n\t            g.select('.nv-background rect')\n\t                .attr('width', availableWidth)\n\t                .attr('height', availableHeight);\n\t\n\t            lines\n\t                //.x(function(d) { return d.x })\n\t                .y(function(d) { return d.display.y })\n\t                .width(availableWidth)\n\t                .height(availableHeight)\n\t                .color(data.map(function(d,i) {\n\t                    return d.color || color(d, i);\n\t                }).filter(function(d,i) { return !data[i].disabled && !data[i].tempDisabled; }));\n\t\n\t            var linesWrap = g.select('.nv-linesWrap')\n\t                .datum(data.filter(function(d) { return  !d.disabled && !d.tempDisabled }));\n\t\n\t            linesWrap.call(lines);\n\t\n\t            //Store a series index number in the data array.\n\t            data.forEach(function(d,i) {\n\t                d.seriesIndex = i;\n\t            });\n\t\n\t            var avgLineData = data.filter(function(d) {\n\t                return !d.disabled && !!average(d);\n\t            });\n\t\n\t            var avgLines = g.select(\".nv-avgLinesWrap\").selectAll(\"line\")\n\t                .data(avgLineData, function(d) { return d.key; });\n\t\n\t            var getAvgLineY = function(d) {\n\t                //If average lines go off the svg element, clamp them to the svg bounds.\n\t                var yVal = y(average(d));\n\t                if (yVal < 0) return 0;\n\t                if (yVal > availableHeight) return availableHeight;\n\t                return yVal;\n\t            };\n\t\n\t            avgLines.enter()\n\t                .append('line')\n\t                .style('stroke-width',2)\n\t                .style('stroke-dasharray','10,10')\n\t                .style('stroke',function (d,i) {\n\t                    return lines.color()(d,d.seriesIndex);\n\t                })\n\t                .attr('x1',0)\n\t                .attr('x2',availableWidth)\n\t                .attr('y1', getAvgLineY)\n\t                .attr('y2', getAvgLineY);\n\t\n\t            avgLines\n\t                .style('stroke-opacity',function(d){\n\t                    //If average lines go offscreen, make them transparent\n\t                    var yVal = y(average(d));\n\t                    if (yVal < 0 || yVal > availableHeight) return 0;\n\t                    return 1;\n\t                })\n\t                .attr('x1',0)\n\t                .attr('x2',availableWidth)\n\t                .attr('y1', getAvgLineY)\n\t                .attr('y2', getAvgLineY);\n\t\n\t            avgLines.exit().remove();\n\t\n\t            //Create index line\n\t            var indexLine = linesWrap.selectAll('.nv-indexLine')\n\t                .data([index]);\n\t            indexLine.enter().append('rect').attr('class', 'nv-indexLine')\n\t                .attr('width', 3)\n\t                .attr('x', -2)\n\t                .attr('fill', 'red')\n\t                .attr('fill-opacity', .5)\n\t                .style(\"pointer-events\",\"all\")\n\t                .call(indexDrag);\n\t\n\t            indexLine\n\t                .attr('transform', function(d) { return 'translate(' + dx(d.i) + ',0)' })\n\t                .attr('height', availableHeight);\n\t\n\t            // Setup Axes\n\t            if (showXAxis) {\n\t                xAxis\n\t                    .scale(x)\n\t                    ._ticks( nv.utils.calcTicksX(availableWidth/70, data) )\n\t                    .tickSize(-availableHeight, 0);\n\t\n\t                g.select('.nv-x.nv-axis')\n\t                    .attr('transform', 'translate(0,' + y.range()[0] + ')');\n\t                g.select('.nv-x.nv-axis')\n\t                    .call(xAxis);\n\t            }\n\t\n\t            if (showYAxis) {\n\t                yAxis\n\t                    .scale(y)\n\t                    ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n\t                    .tickSize( -availableWidth, 0);\n\t\n\t                g.select('.nv-y.nv-axis')\n\t                    .call(yAxis);\n\t            }\n\t\n\t            //============================================================\n\t            // Event Handling/Dispatching (in chart's scope)\n\t            //------------------------------------------------------------\n\t\n\t            function updateZero() {\n\t                indexLine\n\t                    .data([index]);\n\t\n\t                //When dragging the index line, turn off line transitions.\n\t                // Then turn them back on when done dragging.\n\t                var oldDuration = chart.duration();\n\t                chart.duration(0);\n\t                chart.update();\n\t                chart.duration(oldDuration);\n\t            }\n\t\n\t            g.select('.nv-background rect')\n\t                .on('click', function() {\n\t                    index.x = d3.mouse(this)[0];\n\t                    index.i = Math.round(dx.invert(index.x));\n\t\n\t                    // update state and send stateChange with new index\n\t                    state.index = index.i;\n\t                    dispatch.stateChange(state);\n\t\n\t                    updateZero();\n\t                });\n\t\n\t            lines.dispatch.on('elementClick', function(e) {\n\t                index.i = e.pointIndex;\n\t                index.x = dx(index.i);\n\t\n\t                // update state and send stateChange with new index\n\t                state.index = index.i;\n\t                dispatch.stateChange(state);\n\t\n\t                updateZero();\n\t            });\n\t\n\t            controls.dispatch.on('legendClick', function(d,i) {\n\t                d.disabled = !d.disabled;\n\t                rescaleY = !d.disabled;\n\t\n\t                state.rescaleY = rescaleY;\n\t                dispatch.stateChange(state);\n\t                chart.update();\n\t            });\n\t\n\t            legend.dispatch.on('stateChange', function(newState) {\n\t                for (var key in newState)\n\t                    state[key] = newState[key];\n\t                dispatch.stateChange(state);\n\t                chart.update();\n\t            });\n\t\n\t            interactiveLayer.dispatch.on('elementMousemove', function(e) {\n\t                lines.clearHighlights();\n\t                var singlePoint, pointIndex, pointXLocation, allData = [];\n\t\n\t                data\n\t                    .filter(function(series, i) {\n\t                        series.seriesIndex = i;\n\t                        return !series.disabled;\n\t                    })\n\t                    .forEach(function(series,i) {\n\t                        pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n\t                        lines.highlightPoint(i, pointIndex, true);\n\t                        var point = series.values[pointIndex];\n\t                        if (typeof point === 'undefined') return;\n\t                        if (typeof singlePoint === 'undefined') singlePoint = point;\n\t                        if (typeof pointXLocation === 'undefined') pointXLocation = chart.xScale()(chart.x()(point,pointIndex));\n\t                        allData.push({\n\t                            key: series.key,\n\t                            value: chart.y()(point, pointIndex),\n\t                            color: color(series,series.seriesIndex)\n\t                        });\n\t                    });\n\t\n\t                //Highlight the tooltip entry based on which point the mouse is closest to.\n\t                if (allData.length > 2) {\n\t                    var yValue = chart.yScale().invert(e.mouseY);\n\t                    var domainExtent = Math.abs(chart.yScale().domain()[0] - chart.yScale().domain()[1]);\n\t                    var threshold = 0.03 * domainExtent;\n\t                    var indexToHighlight = nv.nearestValueIndex(allData.map(function(d){return d.value}),yValue,threshold);\n\t                    if (indexToHighlight !== null)\n\t                        allData[indexToHighlight].highlight = true;\n\t                }\n\t\n\t                var xValue = xAxis.tickFormat()(chart.x()(singlePoint,pointIndex), pointIndex);\n\t                interactiveLayer.tooltip\n\t                    .valueFormatter(function(d,i) {\n\t                        return yAxis.tickFormat()(d);\n\t                    })\n\t                    .data(\n\t                    {\n\t                        value: xValue,\n\t                        series: allData\n\t                    }\n\t                )();\n\t\n\t                interactiveLayer.renderGuideLine(pointXLocation);\n\t            });\n\t\n\t            interactiveLayer.dispatch.on(\"elementMouseout\",function(e) {\n\t                lines.clearHighlights();\n\t            });\n\t\n\t            // Update chart from a state object passed to event handler\n\t            dispatch.on('changeState', function(e) {\n\t                if (typeof e.disabled !== 'undefined') {\n\t                    data.forEach(function(series,i) {\n\t                        series.disabled = e.disabled[i];\n\t                    });\n\t\n\t                    state.disabled = e.disabled;\n\t                }\n\t\n\t                if (typeof e.index !== 'undefined') {\n\t                    index.i = e.index;\n\t                    index.x = dx(index.i);\n\t\n\t                    state.index = e.index;\n\t\n\t                    indexLine\n\t                        .data([index]);\n\t                }\n\t\n\t                if (typeof e.rescaleY !== 'undefined') {\n\t                    rescaleY = e.rescaleY;\n\t                }\n\t\n\t                chart.update();\n\t            });\n\t\n\t        });\n\t\n\t        renderWatch.renderEnd('cumulativeLineChart immediate');\n\t\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Event Handling/Dispatching (out of chart's scope)\n\t    //------------------------------------------------------------\n\t\n\t    lines.dispatch.on('elementMouseover.tooltip', function(evt) {\n\t        var point = {\n\t            x: chart.x()(evt.point),\n\t            y: chart.y()(evt.point),\n\t            color: evt.point.color\n\t        };\n\t        evt.point = point;\n\t        tooltip.data(evt).hidden(false);\n\t    });\n\t\n\t    lines.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t        tooltip.hidden(true)\n\t    });\n\t\n\t    //============================================================\n\t    // Functions\n\t    //------------------------------------------------------------\n\t\n\t    var indexifyYGetter = null;\n\t    /* Normalize the data according to an index point. */\n\t    function indexify(idx, data) {\n\t        if (!indexifyYGetter) indexifyYGetter = lines.y();\n\t        return data.map(function(line, i) {\n\t            if (!line.values) {\n\t                return line;\n\t            }\n\t            var indexValue = line.values[idx];\n\t            if (indexValue == null) {\n\t                return line;\n\t            }\n\t            var v = indexifyYGetter(indexValue, idx);\n\t\n\t            //TODO: implement check below, and disable series if series loses 100% or more cause divide by 0 issue\n\t            if (v < -.95 && !noErrorCheck) {\n\t                //if a series loses more than 100%, calculations fail.. anything close can cause major distortion (but is mathematically correct till it hits 100)\n\t\n\t                line.tempDisabled = true;\n\t                return line;\n\t            }\n\t\n\t            line.tempDisabled = false;\n\t\n\t            line.values = line.values.map(function(point, pointIndex) {\n\t                point.display = {'y': (indexifyYGetter(point, pointIndex) - v) / (1 + v) };\n\t                return point;\n\t            });\n\t\n\t            return line;\n\t        })\n\t    }\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    // expose chart's sub-components\n\t    chart.dispatch = dispatch;\n\t    chart.lines = lines;\n\t    chart.legend = legend;\n\t    chart.controls = controls;\n\t    chart.xAxis = xAxis;\n\t    chart.yAxis = yAxis;\n\t    chart.interactiveLayer = interactiveLayer;\n\t    chart.state = state;\n\t    chart.tooltip = tooltip;\n\t\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:      {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:     {get: function(){return height;}, set: function(_){height=_;}},\n\t        rescaleY:     {get: function(){return rescaleY;}, set: function(_){rescaleY=_;}},\n\t        showControls:     {get: function(){return showControls;}, set: function(_){showControls=_;}},\n\t        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n\t        average: {get: function(){return average;}, set: function(_){average=_;}},\n\t        defaultState:    {get: function(){return defaultState;}, set: function(_){defaultState=_;}},\n\t        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n\t        showXAxis:    {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n\t        showYAxis:    {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n\t        noErrorCheck:    {get: function(){return noErrorCheck;}, set: function(_){noErrorCheck=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t            legend.color(color);\n\t        }},\n\t        useInteractiveGuideline: {get: function(){return useInteractiveGuideline;}, set: function(_){\n\t            useInteractiveGuideline = _;\n\t            if (_ === true) {\n\t                chart.interactive(false);\n\t                chart.useVoronoi(false);\n\t            }\n\t        }},\n\t        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n\t            rightAlignYAxis = _;\n\t            yAxis.orient( (_) ? 'right' : 'left');\n\t        }},\n\t        duration:    {get: function(){return duration;}, set: function(_){\n\t            duration = _;\n\t            lines.duration(duration);\n\t            xAxis.duration(duration);\n\t            yAxis.duration(duration);\n\t            renderWatch.reset(duration);\n\t        }}\n\t    });\n\t\n\t    nv.utils.inheritOptions(chart, lines);\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\t//TODO: consider deprecating by adding necessary features to multiBar model\n\tnv.models.discreteBar = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n\t        , width = 960\n\t        , height = 500\n\t        , id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n\t        , container\n\t        , x = d3.scale.ordinal()\n\t        , y = d3.scale.linear()\n\t        , getX = function(d) { return d.x }\n\t        , getY = function(d) { return d.y }\n\t        , forceY = [0] // 0 is forced by default.. this makes sense for the majority of bar graphs... user can always do chart.forceY([]) to remove\n\t        , color = nv.utils.defaultColor()\n\t        , showValues = false\n\t        , valueFormat = d3.format(',.2f')\n\t        , xDomain\n\t        , yDomain\n\t        , xRange\n\t        , yRange\n\t        , dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd')\n\t        , rectClass = 'discreteBar'\n\t        , duration = 250\n\t        ;\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var x0, y0;\n\t    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        selection.each(function(data) {\n\t            var availableWidth = width - margin.left - margin.right,\n\t                availableHeight = height - margin.top - margin.bottom;\n\t\n\t            container = d3.select(this);\n\t            nv.utils.initSVG(container);\n\t\n\t            //add series index to each data point for reference\n\t            data.forEach(function(series, i) {\n\t                series.values.forEach(function(point) {\n\t                    point.series = i;\n\t                });\n\t            });\n\t\n\t            // Setup Scales\n\t            // remap and flatten the data for use in calculating the scales' domains\n\t            var seriesData = (xDomain && yDomain) ? [] : // if we know xDomain and yDomain, no need to calculate\n\t                data.map(function(d) {\n\t                    return d.values.map(function(d,i) {\n\t                        return { x: getX(d,i), y: getY(d,i), y0: d.y0 }\n\t                    })\n\t                });\n\t\n\t            x   .domain(xDomain || d3.merge(seriesData).map(function(d) { return d.x }))\n\t                .rangeBands(xRange || [0, availableWidth], .1);\n\t            y   .domain(yDomain || d3.extent(d3.merge(seriesData).map(function(d) { return d.y }).concat(forceY)));\n\t\n\t            // If showValues, pad the Y axis range to account for label height\n\t            if (showValues) y.range(yRange || [availableHeight - (y.domain()[0] < 0 ? 12 : 0), y.domain()[1] > 0 ? 12 : 0]);\n\t            else y.range(yRange || [availableHeight, 0]);\n\t\n\t            //store old scales if they exist\n\t            x0 = x0 || x;\n\t            y0 = y0 || y.copy().range([y(0),y(0)]);\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-discretebar').data([data]);\n\t            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-discretebar');\n\t            var gEnter = wrapEnter.append('g');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-groups');\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            //TODO: by definition, the discrete bar should not have multiple groups, will modify/remove later\n\t            var groups = wrap.select('.nv-groups').selectAll('.nv-group')\n\t                .data(function(d) { return d }, function(d) { return d.key });\n\t            groups.enter().append('g')\n\t                .style('stroke-opacity', 1e-6)\n\t                .style('fill-opacity', 1e-6);\n\t            groups.exit()\n\t                .watchTransition(renderWatch, 'discreteBar: exit groups')\n\t                .style('stroke-opacity', 1e-6)\n\t                .style('fill-opacity', 1e-6)\n\t                .remove();\n\t            groups\n\t                .attr('class', function(d,i) { return 'nv-group nv-series-' + i })\n\t                .classed('hover', function(d) { return d.hover });\n\t            groups\n\t                .watchTransition(renderWatch, 'discreteBar: groups')\n\t                .style('stroke-opacity', 1)\n\t                .style('fill-opacity', .75);\n\t\n\t            var bars = groups.selectAll('g.nv-bar')\n\t                .data(function(d) { return d.values });\n\t            bars.exit().remove();\n\t\n\t            var barsEnter = bars.enter().append('g')\n\t                .attr('transform', function(d,i,j) {\n\t                    return 'translate(' + (x(getX(d,i)) + x.rangeBand() * .05 ) + ', ' + y(0) + ')'\n\t                })\n\t                .on('mouseover', function(d,i) { //TODO: figure out why j works above, but not here\n\t                    d3.select(this).classed('hover', true);\n\t                    dispatch.elementMouseover({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\")\n\t                    });\n\t                })\n\t                .on('mouseout', function(d,i) {\n\t                    d3.select(this).classed('hover', false);\n\t                    dispatch.elementMouseout({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\")\n\t                    });\n\t                })\n\t                .on('mousemove', function(d,i) {\n\t                    dispatch.elementMousemove({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\")\n\t                    });\n\t                })\n\t                .on('click', function(d,i) {\n\t                    var element = this;\n\t                    dispatch.elementClick({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\"),\n\t                        event: d3.event,\n\t                        element: element\n\t                    });\n\t                    d3.event.stopPropagation();\n\t                })\n\t                .on('dblclick', function(d,i) {\n\t                    dispatch.elementDblClick({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\")\n\t                    });\n\t                    d3.event.stopPropagation();\n\t                });\n\t\n\t            barsEnter.append('rect')\n\t                .attr('height', 0)\n\t                .attr('width', x.rangeBand() * .9 / data.length )\n\t\n\t            if (showValues) {\n\t                barsEnter.append('text')\n\t                    .attr('text-anchor', 'middle')\n\t                ;\n\t\n\t                bars.select('text')\n\t                    .text(function(d,i) { return valueFormat(getY(d,i)) })\n\t                    .watchTransition(renderWatch, 'discreteBar: bars text')\n\t                    .attr('x', x.rangeBand() * .9 / 2)\n\t                    .attr('y', function(d,i) { return getY(d,i) < 0 ? y(getY(d,i)) - y(0) + 12 : -4 })\n\t\n\t                ;\n\t            } else {\n\t                bars.selectAll('text').remove();\n\t            }\n\t\n\t            bars\n\t                .attr('class', function(d,i) { return getY(d,i) < 0 ? 'nv-bar negative' : 'nv-bar positive' })\n\t                .style('fill', function(d,i) { return d.color || color(d,i) })\n\t                .style('stroke', function(d,i) { return d.color || color(d,i) })\n\t                .select('rect')\n\t                .attr('class', rectClass)\n\t                .watchTransition(renderWatch, 'discreteBar: bars rect')\n\t                .attr('width', x.rangeBand() * .9 / data.length);\n\t            bars.watchTransition(renderWatch, 'discreteBar: bars')\n\t                //.delay(function(d,i) { return i * 1200 / data[0].values.length })\n\t                .attr('transform', function(d,i) {\n\t                    var left = x(getX(d,i)) + x.rangeBand() * .05,\n\t                        top = getY(d,i) < 0 ?\n\t                            y(0) :\n\t                                y(0) - y(getY(d,i)) < 1 ?\n\t                            y(0) - 1 : //make 1 px positive bars show up above y=0\n\t                            y(getY(d,i));\n\t\n\t                    return 'translate(' + left + ', ' + top + ')'\n\t                })\n\t                .select('rect')\n\t                .attr('height', function(d,i) {\n\t                    return  Math.max(Math.abs(y(getY(d,i)) - y(0)), 1)\n\t                });\n\t\n\t\n\t            //store old scales for use in transitions on update\n\t            x0 = x.copy();\n\t            y0 = y.copy();\n\t\n\t        });\n\t\n\t        renderWatch.renderEnd('discreteBar immediate');\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:   {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:  {get: function(){return height;}, set: function(_){height=_;}},\n\t        forceY:  {get: function(){return forceY;}, set: function(_){forceY=_;}},\n\t        showValues: {get: function(){return showValues;}, set: function(_){showValues=_;}},\n\t        x:       {get: function(){return getX;}, set: function(_){getX=_;}},\n\t        y:       {get: function(){return getY;}, set: function(_){getY=_;}},\n\t        xScale:  {get: function(){return x;}, set: function(_){x=_;}},\n\t        yScale:  {get: function(){return y;}, set: function(_){y=_;}},\n\t        xDomain: {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n\t        yDomain: {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n\t        xRange:  {get: function(){return xRange;}, set: function(_){xRange=_;}},\n\t        yRange:  {get: function(){return yRange;}, set: function(_){yRange=_;}},\n\t        valueFormat:    {get: function(){return valueFormat;}, set: function(_){valueFormat=_;}},\n\t        id:          {get: function(){return id;}, set: function(_){id=_;}},\n\t        rectClass: {get: function(){return rectClass;}, set: function(_){rectClass=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t        }},\n\t        duration: {get: function(){return duration;}, set: function(_){\n\t            duration = _;\n\t            renderWatch.reset(duration);\n\t        }}\n\t    });\n\t\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\t\n\tnv.models.discreteBarChart = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var discretebar = nv.models.discreteBar()\n\t        , xAxis = nv.models.axis()\n\t        , yAxis = nv.models.axis()\n\t\t, legend = nv.models.legend()\n\t        , tooltip = nv.models.tooltip()\n\t        ;\n\t\n\t    var margin = {top: 15, right: 10, bottom: 50, left: 60}\n\t        , width = null\n\t        , height = null\n\t        , color = nv.utils.getColor()\n\t\t, showLegend = false\n\t        , showXAxis = true\n\t        , showYAxis = true\n\t        , rightAlignYAxis = false\n\t        , staggerLabels = false\n\t        , wrapLabels = false\n\t        , rotateLabels = 0\n\t        , x\n\t        , y\n\t        , noData = null\n\t        , dispatch = d3.dispatch('beforeUpdate','renderEnd')\n\t        , duration = 250\n\t        ;\n\t\n\t    xAxis\n\t        .orient('bottom')\n\t        .showMaxMin(false)\n\t        .tickFormat(function(d) { return d })\n\t    ;\n\t    yAxis\n\t        .orient((rightAlignYAxis) ? 'right' : 'left')\n\t        .tickFormat(d3.format(',.1f'))\n\t    ;\n\t\n\t    tooltip\n\t        .duration(0)\n\t        .headerEnabled(false)\n\t        .valueFormatter(function(d, i) {\n\t            return yAxis.tickFormat()(d, i);\n\t        })\n\t        .keyFormatter(function(d, i) {\n\t            return xAxis.tickFormat()(d, i);\n\t        });\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        renderWatch.models(discretebar);\n\t        if (showXAxis) renderWatch.models(xAxis);\n\t        if (showYAxis) renderWatch.models(yAxis);\n\t\n\t        selection.each(function(data) {\n\t            var container = d3.select(this),\n\t                that = this;\n\t            nv.utils.initSVG(container);\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                availableHeight = nv.utils.availableHeight(height, container, margin);\n\t\n\t            chart.update = function() {\n\t                dispatch.beforeUpdate();\n\t                container.transition().duration(duration).call(chart);\n\t            };\n\t            chart.container = this;\n\t\n\t            // Display No Data message if there's nothing to show.\n\t            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n\t                nv.utils.noData(chart, container);\n\t                return chart;\n\t            } else {\n\t                container.selectAll('.nv-noData').remove();\n\t            }\n\t\n\t            // Setup Scales\n\t            x = discretebar.xScale();\n\t            y = discretebar.yScale().clamp(true);\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-discreteBarWithAxes').data([data]);\n\t            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-discreteBarWithAxes').append('g');\n\t            var defsEnter = gEnter.append('defs');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-x nv-axis');\n\t            gEnter.append('g').attr('class', 'nv-y nv-axis')\n\t                .append('g').attr('class', 'nv-zeroLine')\n\t                .append('line');\n\t\n\t            gEnter.append('g').attr('class', 'nv-barsWrap');\n\t\t    gEnter.append('g').attr('class', 'nv-legendWrap');\n\t\n\t            g.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            // Legend\n\t            if (!showLegend) {\n\t                g.select('.nv-legendWrap').selectAll('*').remove();\n\t            } else {\n\t                legend.width(availableWidth);\n\t\n\t                g.select('.nv-legendWrap')\n\t                    .datum(data)\n\t                    .call(legend);\n\t\n\t                if (legend.height() > margin.top) {\n\t                    margin.top = legend.height();\n\t                    availableHeight = nv.utils.availableHeight(height, container, margin);\n\t                }\n\t\n\t                wrap.select('.nv-legendWrap')\n\t                    .attr('transform', 'translate(0,' + (-margin.top) +')')\n\t            }\n\t\n\t            if (rightAlignYAxis) {\n\t                g.select(\".nv-y.nv-axis\")\n\t                    .attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n\t            }\n\t\n\t            // Main Chart Component(s)\n\t            discretebar\n\t                .width(availableWidth)\n\t                .height(availableHeight);\n\t\n\t            var barsWrap = g.select('.nv-barsWrap')\n\t                .datum(data.filter(function(d) { return !d.disabled }));\n\t\n\t            barsWrap.transition().call(discretebar);\n\t\n\t\n\t            defsEnter.append('clipPath')\n\t                .attr('id', 'nv-x-label-clip-' + discretebar.id())\n\t                .append('rect');\n\t\n\t            g.select('#nv-x-label-clip-' + discretebar.id() + ' rect')\n\t                .attr('width', x.rangeBand() * (staggerLabels ? 2 : 1))\n\t                .attr('height', 16)\n\t                .attr('x', -x.rangeBand() / (staggerLabels ? 1 : 2 ));\n\t\n\t            // Setup Axes\n\t            if (showXAxis) {\n\t                xAxis\n\t                    .scale(x)\n\t                    ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n\t                    .tickSize(-availableHeight, 0);\n\t\n\t                g.select('.nv-x.nv-axis')\n\t                    .attr('transform', 'translate(0,' + (y.range()[0] + ((discretebar.showValues() && y.domain()[0] < 0) ? 16 : 0)) + ')');\n\t                g.select('.nv-x.nv-axis').call(xAxis);\n\t\n\t                var xTicks = g.select('.nv-x.nv-axis').selectAll('g');\n\t                if (staggerLabels) {\n\t                    xTicks\n\t                        .selectAll('text')\n\t                        .attr('transform', function(d,i,j) { return 'translate(0,' + (j % 2 == 0 ? '5' : '17') + ')' })\n\t                }\n\t\n\t                if (rotateLabels) {\n\t                    xTicks\n\t                        .selectAll('.tick text')\n\t                        .attr('transform', 'rotate(' + rotateLabels + ' 0,0)')\n\t                        .style('text-anchor', rotateLabels > 0 ? 'start' : 'end');\n\t                }\n\t\n\t                if (wrapLabels) {\n\t                    g.selectAll('.tick text')\n\t                        .call(nv.utils.wrapTicks, chart.xAxis.rangeBand())\n\t                }\n\t            }\n\t\n\t            if (showYAxis) {\n\t                yAxis\n\t                    .scale(y)\n\t                    ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n\t                    .tickSize( -availableWidth, 0);\n\t\n\t                g.select('.nv-y.nv-axis').call(yAxis);\n\t            }\n\t\n\t            // Zero line\n\t            g.select(\".nv-zeroLine line\")\n\t                .attr(\"x1\",0)\n\t                .attr(\"x2\",(rightAlignYAxis) ? -availableWidth : availableWidth)\n\t                .attr(\"y1\", y(0))\n\t                .attr(\"y2\", y(0))\n\t            ;\n\t        });\n\t\n\t        renderWatch.renderEnd('discreteBar chart immediate');\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Event Handling/Dispatching (out of chart's scope)\n\t    //------------------------------------------------------------\n\t\n\t    discretebar.dispatch.on('elementMouseover.tooltip', function(evt) {\n\t        evt['series'] = {\n\t            key: chart.x()(evt.data),\n\t            value: chart.y()(evt.data),\n\t            color: evt.color\n\t        };\n\t        tooltip.data(evt).hidden(false);\n\t    });\n\t\n\t    discretebar.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t        tooltip.hidden(true);\n\t    });\n\t\n\t    discretebar.dispatch.on('elementMousemove.tooltip', function(evt) {\n\t        tooltip();\n\t    });\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.discretebar = discretebar;\n\t    chart.legend = legend;\n\t    chart.xAxis = xAxis;\n\t    chart.yAxis = yAxis;\n\t    chart.tooltip = tooltip;\n\t\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:      {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:     {get: function(){return height;}, set: function(_){height=_;}},\n\t\tshowLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n\t        staggerLabels: {get: function(){return staggerLabels;}, set: function(_){staggerLabels=_;}},\n\t        rotateLabels:  {get: function(){return rotateLabels;}, set: function(_){rotateLabels=_;}},\n\t        wrapLabels:  {get: function(){return wrapLabels;}, set: function(_){wrapLabels=!!_;}},\n\t        showXAxis: {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n\t        showYAxis: {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n\t        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        duration: {get: function(){return duration;}, set: function(_){\n\t            duration = _;\n\t            renderWatch.reset(duration);\n\t            discretebar.duration(duration);\n\t            xAxis.duration(duration);\n\t            yAxis.duration(duration);\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t            discretebar.color(color);\n\t\t    legend.color(color);\n\t        }},\n\t        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n\t            rightAlignYAxis = _;\n\t            yAxis.orient( (_) ? 'right' : 'left');\n\t        }}\n\t    });\n\t\n\t    nv.utils.inheritOptions(chart, discretebar);\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t}\n\t\n\tnv.models.distribution = function() {\n\t    \"use strict\";\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n\t        , width = 400 //technically width or height depending on x or y....\n\t        , size = 8\n\t        , axis = 'x' // 'x' or 'y'... horizontal or vertical\n\t        , getData = function(d) { return d[axis] }  // defaults d.x or d.y\n\t        , color = nv.utils.defaultColor()\n\t        , scale = d3.scale.linear()\n\t        , domain\n\t        , duration = 250\n\t        , dispatch = d3.dispatch('renderEnd')\n\t        ;\n\t\n\t    //============================================================\n\t\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var scale0;\n\t    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\t\n\t    //============================================================\n\t\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        selection.each(function(data) {\n\t            var availableLength = width - (axis === 'x' ? margin.left + margin.right : margin.top + margin.bottom),\n\t                naxis = axis == 'x' ? 'y' : 'x',\n\t                container = d3.select(this);\n\t            nv.utils.initSVG(container);\n\t\n\t            //------------------------------------------------------------\n\t            // Setup Scales\n\t\n\t            scale0 = scale0 || scale;\n\t\n\t            //------------------------------------------------------------\n\t\n\t\n\t            //------------------------------------------------------------\n\t            // Setup containers and skeleton of chart\n\t\n\t            var wrap = container.selectAll('g.nv-distribution').data([data]);\n\t            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-distribution');\n\t            var gEnter = wrapEnter.append('g');\n\t            var g = wrap.select('g');\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')\n\t\n\t            //------------------------------------------------------------\n\t\n\t\n\t            var distWrap = g.selectAll('g.nv-dist')\n\t                .data(function(d) { return d }, function(d) { return d.key });\n\t\n\t            distWrap.enter().append('g');\n\t            distWrap\n\t                .attr('class', function(d,i) { return 'nv-dist nv-series-' + i })\n\t                .style('stroke', function(d,i) { return color(d, i) });\n\t\n\t            var dist = distWrap.selectAll('line.nv-dist' + axis)\n\t                .data(function(d) { return d.values })\n\t            dist.enter().append('line')\n\t                .attr(axis + '1', function(d,i) { return scale0(getData(d,i)) })\n\t                .attr(axis + '2', function(d,i) { return scale0(getData(d,i)) })\n\t            renderWatch.transition(distWrap.exit().selectAll('line.nv-dist' + axis), 'dist exit')\n\t                // .transition()\n\t                .attr(axis + '1', function(d,i) { return scale(getData(d,i)) })\n\t                .attr(axis + '2', function(d,i) { return scale(getData(d,i)) })\n\t                .style('stroke-opacity', 0)\n\t                .remove();\n\t            dist\n\t                .attr('class', function(d,i) { return 'nv-dist' + axis + ' nv-dist' + axis + '-' + i })\n\t                .attr(naxis + '1', 0)\n\t                .attr(naxis + '2', size);\n\t            renderWatch.transition(dist, 'dist')\n\t                // .transition()\n\t                .attr(axis + '1', function(d,i) { return scale(getData(d,i)) })\n\t                .attr(axis + '2', function(d,i) { return scale(getData(d,i)) })\n\t\n\t\n\t            scale0 = scale.copy();\n\t\n\t        });\n\t        renderWatch.renderEnd('distribution immediate');\n\t        return chart;\n\t    }\n\t\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t    chart.dispatch = dispatch;\n\t\n\t    chart.margin = function(_) {\n\t        if (!arguments.length) return margin;\n\t        margin.top    = typeof _.top    != 'undefined' ? _.top    : margin.top;\n\t        margin.right  = typeof _.right  != 'undefined' ? _.right  : margin.right;\n\t        margin.bottom = typeof _.bottom != 'undefined' ? _.bottom : margin.bottom;\n\t        margin.left   = typeof _.left   != 'undefined' ? _.left   : margin.left;\n\t        return chart;\n\t    };\n\t\n\t    chart.width = function(_) {\n\t        if (!arguments.length) return width;\n\t        width = _;\n\t        return chart;\n\t    };\n\t\n\t    chart.axis = function(_) {\n\t        if (!arguments.length) return axis;\n\t        axis = _;\n\t        return chart;\n\t    };\n\t\n\t    chart.size = function(_) {\n\t        if (!arguments.length) return size;\n\t        size = _;\n\t        return chart;\n\t    };\n\t\n\t    chart.getData = function(_) {\n\t        if (!arguments.length) return getData;\n\t        getData = d3.functor(_);\n\t        return chart;\n\t    };\n\t\n\t    chart.scale = function(_) {\n\t        if (!arguments.length) return scale;\n\t        scale = _;\n\t        return chart;\n\t    };\n\t\n\t    chart.color = function(_) {\n\t        if (!arguments.length) return color;\n\t        color = nv.utils.getColor(_);\n\t        return chart;\n\t    };\n\t\n\t    chart.duration = function(_) {\n\t        if (!arguments.length) return duration;\n\t        duration = _;\n\t        renderWatch.reset(duration);\n\t        return chart;\n\t    };\n\t    //============================================================\n\t\n\t\n\t    return chart;\n\t}\n\tnv.models.focus = function(content) {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var content = content || nv.models.line()\n\t        , xAxis = nv.models.axis()\n\t        , yAxis = nv.models.axis()\n\t        , brush = d3.svg.brush()\n\t        ;\n\t\n\t    var margin = {top: 10, right: 0, bottom: 30, left: 0}\n\t        , color = nv.utils.defaultColor()\n\t        , width = null\n\t        , height = 70\n\t        , showXAxis = true\n\t        , showYAxis = false\n\t        , rightAlignYAxis = false\n\t        , ticks = null\n\t        , x\n\t        , y\n\t        , brushExtent = null\n\t        , duration = 250\n\t        , dispatch = d3.dispatch('brush', 'onBrush', 'renderEnd')\n\t        ;\n\t\n\t    content.interactive(false);\n\t    content.pointActive(function(d) { return false; });\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        renderWatch.models(content);\n\t        if (showXAxis) renderWatch.models(xAxis);\n\t        if (showYAxis) renderWatch.models(yAxis);\n\t\n\t        selection.each(function(data) {\n\t            var container = d3.select(this);\n\t            nv.utils.initSVG(container);\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                availableHeight = height - margin.top - margin.bottom;\n\t\n\t            chart.update = function() { \n\t                if( duration === 0 ) {\n\t                    container.call( chart );\n\t                } else {\n\t                    container.transition().duration(duration).call(chart);\n\t                }\n\t            };\n\t            chart.container = this;\n\t\n\t            // Setup Scales\n\t            x = content.xScale();\n\t            y = content.yScale();\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-focus').data([data]);\n\t            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-focus').append('g');\n\t            var g = wrap.select('g');\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            gEnter.append('g').attr('class', 'nv-background').append('rect');\n\t            gEnter.append('g').attr('class', 'nv-x nv-axis');\n\t            gEnter.append('g').attr('class', 'nv-y nv-axis');\n\t            gEnter.append('g').attr('class', 'nv-contentWrap');\n\t            gEnter.append('g').attr('class', 'nv-brushBackground');\n\t            gEnter.append('g').attr('class', 'nv-x nv-brush');\n\t\n\t            if (rightAlignYAxis) {\n\t                g.select(\".nv-y.nv-axis\")\n\t                    .attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n\t            }\n\t\n\t            g.select('.nv-background rect')\n\t                .attr('width', availableWidth)\n\t                .attr('height', availableHeight);\n\t                \n\t            content\n\t                .width(availableWidth)\n\t                .height(availableHeight)\n\t                .color(data.map(function(d,i) {\n\t                    return d.color || color(d, i);\n\t                }).filter(function(d,i) { return !data[i].disabled; }));\n\t\n\t            var contentWrap = g.select('.nv-contentWrap')\n\t                .datum(data.filter(function(d) { return !d.disabled; }));\n\t\n\t            d3.transition(contentWrap).call(content);\n\t            \n\t            // Setup Brush\n\t            brush\n\t                .x(x)\n\t                .on('brush', function() {\n\t                    onBrush();\n\t                });\n\t\n\t            if (brushExtent) brush.extent(brushExtent);\n\t\n\t            var brushBG = g.select('.nv-brushBackground').selectAll('g')\n\t                .data([brushExtent || brush.extent()]);\n\t    \n\t            var brushBGenter = brushBG.enter()\n\t                .append('g');\n\t\n\t            brushBGenter.append('rect')\n\t                .attr('class', 'left')\n\t                .attr('x', 0)\n\t                .attr('y', 0)\n\t                .attr('height', availableHeight);\n\t\n\t            brushBGenter.append('rect')\n\t                .attr('class', 'right')\n\t                .attr('x', 0)\n\t                .attr('y', 0)\n\t                .attr('height', availableHeight);\n\t\n\t            var gBrush = g.select('.nv-x.nv-brush')\n\t                .call(brush);\n\t            gBrush.selectAll('rect')\n\t                .attr('height', availableHeight);\n\t            gBrush.selectAll('.resize').append('path').attr('d', resizePath);\n\t\n\t            onBrush();\n\t\n\t            g.select('.nv-background rect')\n\t                .attr('width', availableWidth)\n\t                .attr('height', availableHeight);\n\t\n\t            if (showXAxis) {\n\t                xAxis.scale(x)\n\t                    ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n\t                    .tickSize(-availableHeight, 0);\n\t  \n\t                g.select('.nv-x.nv-axis')\n\t                    .attr('transform', 'translate(0,' + y.range()[0] + ')');\n\t                d3.transition(g.select('.nv-x.nv-axis'))\n\t                    .call(xAxis);\n\t            }\n\t\n\t            if (showYAxis) {\n\t                yAxis\n\t                    .scale(y)\n\t                    ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n\t                    .tickSize( -availableWidth, 0);\n\t\n\t                d3.transition(g.select('.nv-y.nv-axis'))\n\t                    .call(yAxis);\n\t            }\n\t            \n\t            g.select('.nv-x.nv-axis')\n\t                .attr('transform', 'translate(0,' + y.range()[0] + ')');\n\t\n\t            //============================================================\n\t            // Event Handling/Dispatching (in chart's scope)\n\t            //------------------------------------------------------------\n\t\n\t            //============================================================\n\t            // Functions\n\t            //------------------------------------------------------------\n\t    \n\t            // Taken from crossfilter (http://square.github.com/crossfilter/)\n\t            function resizePath(d) {\n\t                var e = +(d == 'e'),\n\t                    x = e ? 1 : -1,\n\t                    y = availableHeight / 3;\n\t                return 'M' + (0.5 * x) + ',' + y\n\t                    + 'A6,6 0 0 ' + e + ' ' + (6.5 * x) + ',' + (y + 6)\n\t                    + 'V' + (2 * y - 6)\n\t                    + 'A6,6 0 0 ' + e + ' ' + (0.5 * x) + ',' + (2 * y)\n\t                    + 'Z'\n\t                    + 'M' + (2.5 * x) + ',' + (y + 8)\n\t                    + 'V' + (2 * y - 8)\n\t                    + 'M' + (4.5 * x) + ',' + (y + 8)\n\t                    + 'V' + (2 * y - 8);\n\t            }\n\t    \n\t    \n\t            function updateBrushBG() {\n\t                if (!brush.empty()) brush.extent(brushExtent);\n\t                brushBG\n\t                    .data([brush.empty() ? x.domain() : brushExtent])\n\t                    .each(function(d,i) {\n\t                        var leftWidth = x(d[0]) - x.range()[0],\n\t                            rightWidth = availableWidth - x(d[1]);\n\t                        d3.select(this).select('.left')\n\t                            .attr('width',  leftWidth < 0 ? 0 : leftWidth);\n\t    \n\t                        d3.select(this).select('.right')\n\t                            .attr('x', x(d[1]))\n\t                            .attr('width', rightWidth < 0 ? 0 : rightWidth);\n\t                    });\n\t            }\n\t    \n\t    \n\t            function onBrush() {\n\t                brushExtent = brush.empty() ? null : brush.extent();\n\t                var extent = brush.empty() ? x.domain() : brush.extent();\n\t    \n\t                //The brush extent cannot be less than one.  If it is, don't update the line chart.\n\t                if (Math.abs(extent[0] - extent[1]) <= 1) {\n\t                    return;\n\t                }\n\t    \n\t                dispatch.brush({extent: extent, brush: brush});\n\t \n\t                updateBrushBG();\n\t                dispatch.onBrush(extent);\n\t            }\n\t\n\t\n\t        });\n\t\n\t        renderWatch.renderEnd('focus immediate');\n\t        return chart;\n\t    }\n\t\n\t\n\t    //============================================================\n\t    // Event Handling/Dispatching (out of chart's scope)\n\t    //------------------------------------------------------------\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    // expose chart's sub-components\n\t    chart.dispatch = dispatch;\n\t    chart.content = content;\n\t    chart.brush = brush;\n\t    chart.xAxis = xAxis;\n\t    chart.yAxis = yAxis;\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:      {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:     {get: function(){return height;}, set: function(_){height=_;}},\n\t        showXAxis:      {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n\t        showYAxis:    {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n\t        brushExtent: {get: function(){return brushExtent;}, set: function(_){brushExtent=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        duration: {get: function(){return duration;}, set: function(_){\n\t            duration = _;\n\t            renderWatch.reset(duration);\n\t            content.duration(duration);\n\t            xAxis.duration(duration);\n\t            yAxis.duration(duration);\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t            content.color(color);\n\t        }},\n\t        interpolate: {get: function(){return content.interpolate();}, set: function(_){\n\t            content.interpolate(_);\n\t        }},\n\t        xTickFormat: {get: function(){return xAxis.tickFormat();}, set: function(_){\n\t            xAxis.tickFormat(_);\n\t        }},\n\t        yTickFormat: {get: function(){return yAxis.tickFormat();}, set: function(_){\n\t            yAxis.tickFormat(_);\n\t        }},\n\t        x: {get: function(){return content.x();}, set: function(_){\n\t            content.x(_);\n\t        }},\n\t        y: {get: function(){return content.y();}, set: function(_){\n\t            content.y(_);\n\t        }},\n\t        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n\t            rightAlignYAxis = _;\n\t            yAxis.orient( rightAlignYAxis ? 'right' : 'left');\n\t        }},\n\t    });\n\t\n\t    nv.utils.inheritOptions(chart, content);\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\tnv.models.forceDirectedGraph = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t    var margin = {top: 2, right: 0, bottom: 2, left: 0}\n\t        , width = 400\n\t        , height = 32\n\t        , container = null\n\t        , dispatch = d3.dispatch('renderEnd')\n\t        , color = nv.utils.getColor(['#000'])\n\t        , tooltip      = nv.models.tooltip()\n\t        , noData = null\n\t        // Force directed graph specific parameters [default values]\n\t        , linkStrength = 0.1\n\t        , friction = 0.9\n\t        , linkDist = 30\n\t        , charge = -120\n\t        , gravity = 0.1\n\t        , theta = 0.8\n\t        , alpha = 0.1\n\t        , radius = 5\n\t        // These functions allow to add extra attributes to ndes and links\n\t        ,nodeExtras = function(nodes) { /* Do nothing */ }\n\t        ,linkExtras = function(links) { /* Do nothing */ }\n\t        ;\n\t\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var renderWatch = nv.utils.renderWatch(dispatch);\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t\n\t        selection.each(function(data) {\n\t          container = d3.select(this);\n\t          nv.utils.initSVG(container);\n\t\n\t          var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t              availableHeight = nv.utils.availableHeight(height, container, margin);\n\t\n\t          container\n\t                  .attr(\"width\", availableWidth)\n\t                  .attr(\"height\", availableHeight);\n\t\n\t          // Display No Data message if there's nothing to show.\n\t          if (!data || !data.links || !data.nodes) {\n\t              nv.utils.noData(chart, container)\n\t              return chart;\n\t          } else {\n\t              container.selectAll('.nv-noData').remove();\n\t          }\n\t          container.selectAll('*').remove();\n\t\n\t          // Collect names of all fields in the nodes\n\t          var nodeFieldSet = new Set();\n\t          data.nodes.forEach(function(node) {\n\t            var keys = Object.keys(node);\n\t            keys.forEach(function(key) {\n\t              nodeFieldSet.add(key);\n\t            });\n\t          });\n\t\n\t          var force = d3.layout.force()\n\t                .nodes(data.nodes)\n\t                .links(data.links)\n\t                .size([availableWidth, availableHeight])\n\t                .linkStrength(linkStrength)\n\t                .friction(friction)\n\t                .linkDistance(linkDist)\n\t                .charge(charge)\n\t                .gravity(gravity)\n\t                .theta(theta)\n\t                .alpha(alpha)\n\t                .start();\n\t\n\t          var link = container.selectAll(\".link\")\n\t                .data(data.links)\n\t                .enter().append(\"line\")\n\t                .attr(\"class\", \"nv-force-link\")\n\t                .style(\"stroke-width\", function(d) { return Math.sqrt(d.value); });\n\t\n\t          var node = container.selectAll(\".node\")\n\t                .data(data.nodes)\n\t                .enter()\n\t                .append(\"g\")\n\t                .attr(\"class\", \"nv-force-node\")\n\t                .call(force.drag);\n\t\n\t          node\n\t            .append(\"circle\")\n\t            .attr(\"r\", radius)\n\t            .style(\"fill\", function(d) { return color(d) } )\n\t            .on(\"mouseover\", function(evt) {\n\t              container.select('.nv-series-' + evt.seriesIndex + ' .nv-distx-' + evt.pointIndex)\n\t                  .attr('y1', evt.py);\n\t              container.select('.nv-series-' + evt.seriesIndex + ' .nv-disty-' + evt.pointIndex)\n\t                  .attr('x2', evt.px);\n\t\n\t              // Add 'series' object to\n\t              var nodeColor = color(evt);\n\t              evt.series = [];\n\t              nodeFieldSet.forEach(function(field) {\n\t                evt.series.push({\n\t                  color: nodeColor,\n\t                  key:   field,\n\t                  value: evt[field]\n\t                });\n\t              });\n\t              tooltip.data(evt).hidden(false);\n\t            })\n\t            .on(\"mouseout\",  function(d) {\n\t              tooltip.hidden(true);\n\t            });\n\t\n\t          tooltip.headerFormatter(function(d) {return \"Node\";});\n\t\n\t          // Apply extra attributes to nodes and links (if any)\n\t          linkExtras(link);\n\t          nodeExtras(node);\n\t\n\t          force.on(\"tick\", function() {\n\t              link.attr(\"x1\", function(d) { return d.source.x; })\n\t                  .attr(\"y1\", function(d) { return d.source.y; })\n\t                  .attr(\"x2\", function(d) { return d.target.x; })\n\t                  .attr(\"y2\", function(d) { return d.target.y; });\n\t\n\t              node.attr(\"transform\", function(d) {\n\t                return \"translate(\" + d.x + \", \" + d.y + \")\";\n\t              });\n\t            });\n\t        });\n\t\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:     {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:    {get: function(){return height;}, set: function(_){height=_;}},\n\t\n\t        // Force directed graph specific parameters\n\t        linkStrength:{get: function(){return linkStrength;}, set: function(_){linkStrength=_;}},\n\t        friction:    {get: function(){return friction;}, set: function(_){friction=_;}},\n\t        linkDist:    {get: function(){return linkDist;}, set: function(_){linkDist=_;}},\n\t        charge:      {get: function(){return charge;}, set: function(_){charge=_;}},\n\t        gravity:     {get: function(){return gravity;}, set: function(_){gravity=_;}},\n\t        theta:       {get: function(){return theta;}, set: function(_){theta=_;}},\n\t        alpha:       {get: function(){return alpha;}, set: function(_){alpha=_;}},\n\t        radius:      {get: function(){return radius;}, set: function(_){radius=_;}},\n\t\n\t        //functor options\n\t        x: {get: function(){return getX;}, set: function(_){getX=d3.functor(_);}},\n\t        y: {get: function(){return getY;}, set: function(_){getY=d3.functor(_);}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t        }},\n\t        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n\t        nodeExtras: {get: function(){return nodeExtras;}, set: function(_){\n\t            nodeExtras = _;\n\t        }},\n\t        linkExtras: {get: function(){return linkExtras;}, set: function(_){\n\t            linkExtras = _;\n\t        }}\n\t    });\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.tooltip = tooltip;\n\t    nv.utils.initOptions(chart);\n\t    return chart;\n\t};\n\tnv.models.furiousLegend = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var margin = {top: 5, right: 0, bottom: 5, left: 0}\n\t        , width = 400\n\t        , height = 20\n\t        , getKey = function(d) { return d.key }\n\t        , keyFormatter = function (d) { return d }\n\t        , color = nv.utils.getColor()\n\t        , maxKeyLength = 20 //default value for key lengths\n\t        , align = true\n\t        , padding = 28 //define how much space between legend items. - recommend 32 for furious version\n\t        , rightAlign = true\n\t        , updateState = true   //If true, legend will update data.disabled and trigger a 'stateChange' dispatch.\n\t        , radioButtonMode = false   //If true, clicking legend items will cause it to behave like a radio button. (only one can be selected at a time)\n\t        , expanded = false\n\t        , dispatch = d3.dispatch('legendClick', 'legendDblclick', 'legendMouseover', 'legendMouseout', 'stateChange')\n\t        , vers = 'classic' //Options are \"classic\" and \"furious\"\n\t        ;\n\t\n\t    function chart(selection) {\n\t        selection.each(function(data) {\n\t            var availableWidth = width - margin.left - margin.right,\n\t                container = d3.select(this);\n\t            nv.utils.initSVG(container);\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-legend').data([data]);\n\t            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-legend').append('g');\n\t            var g = wrap.select('g');\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            var series = g.selectAll('.nv-series')\n\t                .data(function(d) {\n\t                    if(vers != 'furious') return d;\n\t\n\t                    return d.filter(function(n) {\n\t                        return expanded ? true : !n.disengaged;\n\t                    });\n\t                });\n\t            var seriesEnter = series.enter().append('g').attr('class', 'nv-series')\n\t\n\t            var seriesShape;\n\t\n\t            if(vers == 'classic') {\n\t                seriesEnter.append('circle')\n\t                    .style('stroke-width', 2)\n\t                    .attr('class','nv-legend-symbol')\n\t                    .attr('r', 5);\n\t\n\t                seriesShape = series.select('circle');\n\t            } else if (vers == 'furious') {\n\t                seriesEnter.append('rect')\n\t                    .style('stroke-width', 2)\n\t                    .attr('class','nv-legend-symbol')\n\t                    .attr('rx', 3)\n\t                    .attr('ry', 3);\n\t\n\t                seriesShape = series.select('rect');\n\t\n\t                seriesEnter.append('g')\n\t                    .attr('class', 'nv-check-box')\n\t                    .property('innerHTML','<path d=\"M0.5,5 L22.5,5 L22.5,26.5 L0.5,26.5 L0.5,5 Z\" class=\"nv-box\"></path><path d=\"M5.5,12.8618467 L11.9185089,19.2803556 L31,0.198864511\" class=\"nv-check\"></path>')\n\t                    .attr('transform', 'translate(-10,-8)scale(0.5)');\n\t\n\t                var seriesCheckbox = series.select('.nv-check-box');\n\t\n\t                seriesCheckbox.each(function(d,i) {\n\t                    d3.select(this).selectAll('path')\n\t                        .attr('stroke', setTextColor(d,i));\n\t                });\n\t            }\n\t\n\t            seriesEnter.append('text')\n\t                .attr('text-anchor', 'start')\n\t                .attr('class','nv-legend-text')\n\t                .attr('dy', '.32em')\n\t                .attr('dx', '8');\n\t\n\t            var seriesText = series.select('text.nv-legend-text');\n\t\n\t            series\n\t                .on('mouseover', function(d,i) {\n\t                    dispatch.legendMouseover(d,i);  //TODO: Make consistent with other event objects\n\t                })\n\t                .on('mouseout', function(d,i) {\n\t                    dispatch.legendMouseout(d,i);\n\t                })\n\t                .on('click', function(d,i) {\n\t                    dispatch.legendClick(d,i);\n\t                    // make sure we re-get data in case it was modified\n\t                    var data = series.data();\n\t                    if (updateState) {\n\t                        if(vers =='classic') {\n\t                            if (radioButtonMode) {\n\t                                //Radio button mode: set every series to disabled,\n\t                                //  and enable the clicked series.\n\t                                data.forEach(function(series) { series.disabled = true});\n\t                                d.disabled = false;\n\t                            }\n\t                            else {\n\t                                d.disabled = !d.disabled;\n\t                                if (data.every(function(series) { return series.disabled})) {\n\t                                    //the default behavior of NVD3 legends is, if every single series\n\t                                    // is disabled, turn all series' back on.\n\t                                    data.forEach(function(series) { series.disabled = false});\n\t                                }\n\t                            }\n\t                        } else if(vers == 'furious') {\n\t                            if(expanded) {\n\t                                d.disengaged = !d.disengaged;\n\t                                d.userDisabled = d.userDisabled == undefined ? !!d.disabled : d.userDisabled;\n\t                                d.disabled = d.disengaged || d.userDisabled;\n\t                            } else if (!expanded) {\n\t                                d.disabled = !d.disabled;\n\t                                d.userDisabled = d.disabled;\n\t                                var engaged = data.filter(function(d) { return !d.disengaged; });\n\t                                if (engaged.every(function(series) { return series.userDisabled })) {\n\t                                    //the default behavior of NVD3 legends is, if every single series\n\t                                    // is disabled, turn all series' back on.\n\t                                    data.forEach(function(series) {\n\t                                        series.disabled = series.userDisabled = false;\n\t                                    });\n\t                                }\n\t                            }\n\t                        }\n\t                        dispatch.stateChange({\n\t                            disabled: data.map(function(d) { return !!d.disabled }),\n\t                            disengaged: data.map(function(d) { return !!d.disengaged })\n\t                        });\n\t\n\t                    }\n\t                })\n\t                .on('dblclick', function(d,i) {\n\t                    if(vers == 'furious' && expanded) return;\n\t                    dispatch.legendDblclick(d,i);\n\t                    if (updateState) {\n\t                        // make sure we re-get data in case it was modified\n\t                        var data = series.data();\n\t                        //the default behavior of NVD3 legends, when double clicking one,\n\t                        // is to set all other series' to false, and make the double clicked series enabled.\n\t                        data.forEach(function(series) {\n\t                            series.disabled = true;\n\t                            if(vers == 'furious') series.userDisabled = series.disabled;\n\t                        });\n\t                        d.disabled = false;\n\t                        if(vers == 'furious') d.userDisabled = d.disabled;\n\t                        dispatch.stateChange({\n\t                            disabled: data.map(function(d) { return !!d.disabled })\n\t                        });\n\t                    }\n\t                });\n\t\n\t            series.classed('nv-disabled', function(d) { return d.userDisabled });\n\t            series.exit().remove();\n\t\n\t            seriesText\n\t                .attr('fill', setTextColor)\n\t                .text(function (d) { return keyFormatter(getKey(d)) });\n\t\n\t            //TODO: implement fixed-width and max-width options (max-width is especially useful with the align option)\n\t            // NEW ALIGNING CODE, TODO: clean up\n\t\n\t            var versPadding;\n\t            switch(vers) {\n\t                case 'furious' :\n\t                    versPadding = 23;\n\t                    break;\n\t                case 'classic' :\n\t                    versPadding = 20;\n\t            }\n\t\n\t            if (align) {\n\t\n\t                var seriesWidths = [];\n\t                series.each(function(d,i) {\n\t                    var legendText;\n\t                    if (keyFormatter(getKey(d)) && keyFormatter(getKey(d)).length > maxKeyLength) {\n\t                        var trimmedKey = keyFormatter(getKey(d)).substring(0, maxKeyLength);\n\t                        legendText = d3.select(this).select('text').text(trimmedKey + \"...\");\n\t                        d3.select(this).append(\"svg:title\").text(keyFormatter(getKey(d)));\n\t                    } else {\n\t                        legendText = d3.select(this).select('text');\n\t                    }\n\t                    var nodeTextLength;\n\t                    try {\n\t                        nodeTextLength = legendText.node().getComputedTextLength();\n\t                        // If the legendText is display:none'd (nodeTextLength == 0), simulate an error so we approximate, instead\n\t                        if(nodeTextLength <= 0) throw Error();\n\t                    }\n\t                    catch(e) {\n\t                        nodeTextLength = nv.utils.calcApproxTextWidth(legendText);\n\t                    }\n\t\n\t                    seriesWidths.push(nodeTextLength + padding);\n\t                });\n\t\n\t                var seriesPerRow = 0;\n\t                var legendWidth = 0;\n\t                var columnWidths = [];\n\t\n\t                while ( legendWidth < availableWidth && seriesPerRow < seriesWidths.length) {\n\t                    columnWidths[seriesPerRow] = seriesWidths[seriesPerRow];\n\t                    legendWidth += seriesWidths[seriesPerRow++];\n\t                }\n\t                if (seriesPerRow === 0) seriesPerRow = 1; //minimum of one series per row\n\t\n\t                while ( legendWidth > availableWidth && seriesPerRow > 1 ) {\n\t                    columnWidths = [];\n\t                    seriesPerRow--;\n\t\n\t                    for (var k = 0; k < seriesWidths.length; k++) {\n\t                        if (seriesWidths[k] > (columnWidths[k % seriesPerRow] || 0) )\n\t                            columnWidths[k % seriesPerRow] = seriesWidths[k];\n\t                    }\n\t\n\t                    legendWidth = columnWidths.reduce(function(prev, cur, index, array) {\n\t                        return prev + cur;\n\t                    });\n\t                }\n\t\n\t                var xPositions = [];\n\t                for (var i = 0, curX = 0; i < seriesPerRow; i++) {\n\t                    xPositions[i] = curX;\n\t                    curX += columnWidths[i];\n\t                }\n\t\n\t                series\n\t                    .attr('transform', function(d, i) {\n\t                        return 'translate(' + xPositions[i % seriesPerRow] + ',' + (5 + Math.floor(i / seriesPerRow) * versPadding) + ')';\n\t                    });\n\t\n\t                //position legend as far right as possible within the total width\n\t                if (rightAlign) {\n\t                    g.attr('transform', 'translate(' + (width - margin.right - legendWidth) + ',' + margin.top + ')');\n\t                }\n\t                else {\n\t                    g.attr('transform', 'translate(0' + ',' + margin.top + ')');\n\t                }\n\t\n\t                height = margin.top + margin.bottom + (Math.ceil(seriesWidths.length / seriesPerRow) * versPadding);\n\t\n\t            } else {\n\t\n\t                var ypos = 5,\n\t                    newxpos = 5,\n\t                    maxwidth = 0,\n\t                    xpos;\n\t                series\n\t                    .attr('transform', function(d, i) {\n\t                        var length = d3.select(this).select('text').node().getComputedTextLength() + padding;\n\t                        xpos = newxpos;\n\t\n\t                        if (width < margin.left + margin.right + xpos + length) {\n\t                            newxpos = xpos = 5;\n\t                            ypos += versPadding;\n\t                        }\n\t\n\t                        newxpos += length;\n\t                        if (newxpos > maxwidth) maxwidth = newxpos;\n\t\n\t                        return 'translate(' + xpos + ',' + ypos + ')';\n\t                    });\n\t\n\t                //position legend as far right as possible within the total width\n\t                g.attr('transform', 'translate(' + (width - margin.right - maxwidth) + ',' + margin.top + ')');\n\t\n\t                height = margin.top + margin.bottom + ypos + 15;\n\t            }\n\t\n\t            if(vers == 'furious') {\n\t                // Size rectangles after text is placed\n\t                seriesShape\n\t                    .attr('width', function(d,i) {\n\t                        return seriesText[0][i].getComputedTextLength() + 27;\n\t                    })\n\t                    .attr('height', 18)\n\t                    .attr('y', -9)\n\t                    .attr('x', -15)\n\t            }\n\t\n\t            seriesShape\n\t                .style('fill', setBGColor)\n\t                .style('stroke', function(d,i) { return d.color || color(d, i) });\n\t        });\n\t\n\t        function setTextColor(d,i) {\n\t            if(vers != 'furious') return '#000';\n\t            if(expanded) {\n\t                return d.disengaged ? color(d,i) : '#fff';\n\t            } else if (!expanded) {\n\t                return !!d.disabled ? color(d,i) : '#fff';\n\t            }\n\t        }\n\t\n\t        function setBGColor(d,i) {\n\t            if(expanded && vers == 'furious') {\n\t                return d.disengaged ? '#fff' : color(d,i);\n\t            } else {\n\t                return !!d.disabled ? '#fff' : color(d,i);\n\t            }\n\t        }\n\t\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:          {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:         {get: function(){return height;}, set: function(_){height=_;}},\n\t        key:            {get: function(){return getKey;}, set: function(_){getKey=_;}},\n\t        keyFormatter:   {get: function(){return keyFormatter;}, set: function(_){keyFormatter=_;}},\n\t        align:          {get: function(){return align;}, set: function(_){align=_;}},\n\t        rightAlign:     {get: function(){return rightAlign;}, set: function(_){rightAlign=_;}},\n\t        maxKeyLength:   {get: function(){return maxKeyLength;}, set: function(_){maxKeyLength=_;}},\n\t        padding:        {get: function(){return padding;}, set: function(_){padding=_;}},\n\t        updateState:    {get: function(){return updateState;}, set: function(_){updateState=_;}},\n\t        radioButtonMode:{get: function(){return radioButtonMode;}, set: function(_){radioButtonMode=_;}},\n\t        expanded:       {get: function(){return expanded;}, set: function(_){expanded=_;}},\n\t        vers:           {get: function(){return vers;}, set: function(_){vers=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t        }}\n\t    });\n\t\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\t//TODO: consider deprecating and using multibar with single series for this\n\tnv.models.historicalBar = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n\t        , width = null\n\t        , height = null\n\t        , id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n\t        , container = null\n\t        , x = d3.scale.linear()\n\t        , y = d3.scale.linear()\n\t        , getX = function(d) { return d.x }\n\t        , getY = function(d) { return d.y }\n\t        , forceX = []\n\t        , forceY = [0]\n\t        , padData = false\n\t        , clipEdge = true\n\t        , color = nv.utils.defaultColor()\n\t        , xDomain\n\t        , yDomain\n\t        , xRange\n\t        , yRange\n\t        , dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd')\n\t        , interactive = true\n\t        ;\n\t\n\t    var renderWatch = nv.utils.renderWatch(dispatch, 0);\n\t\n\t    function chart(selection) {\n\t        selection.each(function(data) {\n\t            renderWatch.reset();\n\t\n\t            container = d3.select(this);\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                availableHeight = nv.utils.availableHeight(height, container, margin);\n\t\n\t            nv.utils.initSVG(container);\n\t\n\t            // Setup Scales\n\t            x.domain(xDomain || d3.extent(data[0].values.map(getX).concat(forceX) ));\n\t\n\t            if (padData)\n\t                x.range(xRange || [availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5)  / data[0].values.length ]);\n\t            else\n\t                x.range(xRange || [0, availableWidth]);\n\t\n\t            y.domain(yDomain || d3.extent(data[0].values.map(getY).concat(forceY) ))\n\t                .range(yRange || [availableHeight, 0]);\n\t\n\t            // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n\t            if (x.domain()[0] === x.domain()[1])\n\t                x.domain()[0] ?\n\t                    x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01])\n\t                    : x.domain([-1,1]);\n\t\n\t            if (y.domain()[0] === y.domain()[1])\n\t                y.domain()[0] ?\n\t                    y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01])\n\t                    : y.domain([-1,1]);\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-historicalBar-' + id).data([data[0].values]);\n\t            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-historicalBar-' + id);\n\t            var defsEnter = wrapEnter.append('defs');\n\t            var gEnter = wrapEnter.append('g');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-bars');\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            container\n\t                .on('click', function(d,i) {\n\t                    dispatch.chartClick({\n\t                        data: d,\n\t                        index: i,\n\t                        pos: d3.event,\n\t                        id: id\n\t                    });\n\t                });\n\t\n\t            defsEnter.append('clipPath')\n\t                .attr('id', 'nv-chart-clip-path-' + id)\n\t                .append('rect');\n\t\n\t            wrap.select('#nv-chart-clip-path-' + id + ' rect')\n\t                .attr('width', availableWidth)\n\t                .attr('height', availableHeight);\n\t\n\t            g.attr('clip-path', clipEdge ? 'url(#nv-chart-clip-path-' + id + ')' : '');\n\t\n\t            var bars = wrap.select('.nv-bars').selectAll('.nv-bar')\n\t                .data(function(d) { return d }, function(d,i) {return getX(d,i)});\n\t            bars.exit().remove();\n\t\n\t            bars.enter().append('rect')\n\t                .attr('x', 0 )\n\t                .attr('y', function(d,i) {  return nv.utils.NaNtoZero(y(Math.max(0, getY(d,i)))) })\n\t                .attr('height', function(d,i) { return nv.utils.NaNtoZero(Math.abs(y(getY(d,i)) - y(0))) })\n\t                .attr('transform', function(d,i) { return 'translate(' + (x(getX(d,i)) - availableWidth / data[0].values.length * .45) + ',0)'; })\n\t                .on('mouseover', function(d,i) {\n\t                    if (!interactive) return;\n\t                    d3.select(this).classed('hover', true);\n\t                    dispatch.elementMouseover({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\")\n\t                    });\n\t\n\t                })\n\t                .on('mouseout', function(d,i) {\n\t                    if (!interactive) return;\n\t                    d3.select(this).classed('hover', false);\n\t                    dispatch.elementMouseout({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\")\n\t                    });\n\t                })\n\t                .on('mousemove', function(d,i) {\n\t                    if (!interactive) return;\n\t                    dispatch.elementMousemove({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\")\n\t                    });\n\t                })\n\t                .on('click', function(d,i) {\n\t                    if (!interactive) return;\n\t                    dispatch.elementClick({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\")\n\t                    });\n\t                    d3.event.stopPropagation();\n\t                })\n\t                .on('dblclick', function(d,i) {\n\t                    if (!interactive) return;\n\t                    dispatch.elementDblClick({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\")\n\t                    });\n\t                    d3.event.stopPropagation();\n\t                });\n\t\n\t            bars\n\t                .attr('fill', function(d,i) { return color(d, i); })\n\t                .attr('class', function(d,i,j) { return (getY(d,i) < 0 ? 'nv-bar negative' : 'nv-bar positive') + ' nv-bar-' + j + '-' + i })\n\t                .watchTransition(renderWatch, 'bars')\n\t                .attr('transform', function(d,i) { return 'translate(' + (x(getX(d,i)) - availableWidth / data[0].values.length * .45) + ',0)'; })\n\t                //TODO: better width calculations that don't assume always uniform data spacing;w\n\t                .attr('width', (availableWidth / data[0].values.length) * .9 );\n\t\n\t            bars.watchTransition(renderWatch, 'bars')\n\t                .attr('y', function(d,i) {\n\t                    var rval = getY(d,i) < 0 ?\n\t                        y(0) :\n\t                            y(0) - y(getY(d,i)) < 1 ?\n\t                        y(0) - 1 :\n\t                        y(getY(d,i));\n\t                    return nv.utils.NaNtoZero(rval);\n\t                })\n\t                .attr('height', function(d,i) { return nv.utils.NaNtoZero(Math.max(Math.abs(y(getY(d,i)) - y(0)),1)) });\n\t\n\t        });\n\t\n\t        renderWatch.renderEnd('historicalBar immediate');\n\t        return chart;\n\t    }\n\t\n\t    //Create methods to allow outside functions to highlight a specific bar.\n\t    chart.highlightPoint = function(pointIndex, isHoverOver) {\n\t        container\n\t            .select(\".nv-bars .nv-bar-0-\" + pointIndex)\n\t            .classed(\"hover\", isHoverOver)\n\t        ;\n\t    };\n\t\n\t    chart.clearHighlights = function() {\n\t        container\n\t            .select(\".nv-bars .nv-bar.hover\")\n\t            .classed(\"hover\", false)\n\t        ;\n\t    };\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:   {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:  {get: function(){return height;}, set: function(_){height=_;}},\n\t        forceX:  {get: function(){return forceX;}, set: function(_){forceX=_;}},\n\t        forceY:  {get: function(){return forceY;}, set: function(_){forceY=_;}},\n\t        padData: {get: function(){return padData;}, set: function(_){padData=_;}},\n\t        x:       {get: function(){return getX;}, set: function(_){getX=_;}},\n\t        y:       {get: function(){return getY;}, set: function(_){getY=_;}},\n\t        xScale:  {get: function(){return x;}, set: function(_){x=_;}},\n\t        yScale:  {get: function(){return y;}, set: function(_){y=_;}},\n\t        xDomain: {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n\t        yDomain: {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n\t        xRange:  {get: function(){return xRange;}, set: function(_){xRange=_;}},\n\t        yRange:  {get: function(){return yRange;}, set: function(_){yRange=_;}},\n\t        clipEdge:    {get: function(){return clipEdge;}, set: function(_){clipEdge=_;}},\n\t        id:          {get: function(){return id;}, set: function(_){id=_;}},\n\t        interactive: {get: function(){return interactive;}, set: function(_){interactive=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t        }}\n\t    });\n\t\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\t\n\tnv.models.historicalBarChart = function(bar_model) {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var bars = bar_model || nv.models.historicalBar()\n\t        , xAxis = nv.models.axis()\n\t        , yAxis = nv.models.axis()\n\t        , legend = nv.models.legend()\n\t        , interactiveLayer = nv.interactiveGuideline()\n\t        , tooltip = nv.models.tooltip()\n\t        ;\n\t\n\t\n\t    var margin = {top: 30, right: 90, bottom: 50, left: 90}\n\t        , color = nv.utils.defaultColor()\n\t        , width = null\n\t        , height = null\n\t        , showLegend = false\n\t        , showXAxis = true\n\t        , showYAxis = true\n\t        , rightAlignYAxis = false\n\t        , useInteractiveGuideline = false\n\t        , x\n\t        , y\n\t        , state = {}\n\t        , defaultState = null\n\t        , noData = null\n\t        , dispatch = d3.dispatch('tooltipHide', 'stateChange', 'changeState', 'renderEnd')\n\t        , transitionDuration = 250\n\t        ;\n\t\n\t    xAxis.orient('bottom').tickPadding(7);\n\t    yAxis.orient( (rightAlignYAxis) ? 'right' : 'left');\n\t    tooltip\n\t        .duration(0)\n\t        .headerEnabled(false)\n\t        .valueFormatter(function(d, i) {\n\t            return yAxis.tickFormat()(d, i);\n\t        })\n\t        .headerFormatter(function(d, i) {\n\t            return xAxis.tickFormat()(d, i);\n\t        });\n\t\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var renderWatch = nv.utils.renderWatch(dispatch, 0);\n\t\n\t    function chart(selection) {\n\t        selection.each(function(data) {\n\t            renderWatch.reset();\n\t            renderWatch.models(bars);\n\t            if (showXAxis) renderWatch.models(xAxis);\n\t            if (showYAxis) renderWatch.models(yAxis);\n\t\n\t            var container = d3.select(this),\n\t                that = this;\n\t            nv.utils.initSVG(container);\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                availableHeight = nv.utils.availableHeight(height, container, margin);\n\t\n\t            chart.update = function() { container.transition().duration(transitionDuration).call(chart) };\n\t            chart.container = this;\n\t\n\t            //set state.disabled\n\t            state.disabled = data.map(function(d) { return !!d.disabled });\n\t\n\t            if (!defaultState) {\n\t                var key;\n\t                defaultState = {};\n\t                for (key in state) {\n\t                    if (state[key] instanceof Array)\n\t                        defaultState[key] = state[key].slice(0);\n\t                    else\n\t                        defaultState[key] = state[key];\n\t                }\n\t            }\n\t\n\t            // Display noData message if there's nothing to show.\n\t            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n\t                nv.utils.noData(chart, container)\n\t                return chart;\n\t            } else {\n\t                container.selectAll('.nv-noData').remove();\n\t            }\n\t\n\t            // Setup Scales\n\t            x = bars.xScale();\n\t            y = bars.yScale();\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-historicalBarChart').data([data]);\n\t            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-historicalBarChart').append('g');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-x nv-axis');\n\t            gEnter.append('g').attr('class', 'nv-y nv-axis');\n\t            gEnter.append('g').attr('class', 'nv-barsWrap');\n\t            gEnter.append('g').attr('class', 'nv-legendWrap');\n\t            gEnter.append('g').attr('class', 'nv-interactive');\n\t\n\t            // Legend\n\t            if (!showLegend) {\n\t                g.select('.nv-legendWrap').selectAll('*').remove();\n\t            } else {\n\t                legend.width(availableWidth);\n\t\n\t                g.select('.nv-legendWrap')\n\t                    .datum(data)\n\t                    .call(legend);\n\t\n\t                if (legend.height() > margin.top) {\n\t                    margin.top = legend.height();\n\t                    availableHeight = nv.utils.availableHeight(height, container, margin);\n\t                }\n\t\n\t                wrap.select('.nv-legendWrap')\n\t                    .attr('transform', 'translate(0,' + (-margin.top) +')')\n\t            }\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            if (rightAlignYAxis) {\n\t                g.select(\".nv-y.nv-axis\")\n\t                    .attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n\t            }\n\t\n\t            //Set up interactive layer\n\t            if (useInteractiveGuideline) {\n\t                interactiveLayer\n\t                    .width(availableWidth)\n\t                    .height(availableHeight)\n\t                    .margin({left:margin.left, top:margin.top})\n\t                    .svgContainer(container)\n\t                    .xScale(x);\n\t                wrap.select(\".nv-interactive\").call(interactiveLayer);\n\t            }\n\t            bars\n\t                .width(availableWidth)\n\t                .height(availableHeight)\n\t                .color(data.map(function(d,i) {\n\t                    return d.color || color(d, i);\n\t                }).filter(function(d,i) { return !data[i].disabled }));\n\t\n\t            var barsWrap = g.select('.nv-barsWrap')\n\t                .datum(data.filter(function(d) { return !d.disabled }));\n\t            barsWrap.transition().call(bars);\n\t\n\t            // Setup Axes\n\t            if (showXAxis) {\n\t                xAxis\n\t                    .scale(x)\n\t                    ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n\t                    .tickSize(-availableHeight, 0);\n\t\n\t                g.select('.nv-x.nv-axis')\n\t                    .attr('transform', 'translate(0,' + y.range()[0] + ')');\n\t                g.select('.nv-x.nv-axis')\n\t                    .transition()\n\t                    .call(xAxis);\n\t            }\n\t\n\t            if (showYAxis) {\n\t                yAxis\n\t                    .scale(y)\n\t                    ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n\t                    .tickSize( -availableWidth, 0);\n\t\n\t                g.select('.nv-y.nv-axis')\n\t                    .transition()\n\t                    .call(yAxis);\n\t            }\n\t\n\t            //============================================================\n\t            // Event Handling/Dispatching (in chart's scope)\n\t            //------------------------------------------------------------\n\t\n\t            interactiveLayer.dispatch.on('elementMousemove', function(e) {\n\t                bars.clearHighlights();\n\t\n\t                var singlePoint, pointIndex, pointXLocation, allData = [];\n\t                data\n\t                    .filter(function(series, i) {\n\t                        series.seriesIndex = i;\n\t                        return !series.disabled;\n\t                    })\n\t                    .forEach(function(series,i) {\n\t                        pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n\t                        bars.highlightPoint(pointIndex,true);\n\t                        var point = series.values[pointIndex];\n\t                        if (point === undefined) return;\n\t                        if (singlePoint === undefined) singlePoint = point;\n\t                        if (pointXLocation === undefined) pointXLocation = chart.xScale()(chart.x()(point,pointIndex));\n\t                        allData.push({\n\t                            key: series.key,\n\t                            value: chart.y()(point, pointIndex),\n\t                            color: color(series,series.seriesIndex),\n\t                            data: series.values[pointIndex]\n\t                        });\n\t                    });\n\t\n\t                var xValue = xAxis.tickFormat()(chart.x()(singlePoint,pointIndex));\n\t                interactiveLayer.tooltip\n\t                    .valueFormatter(function(d,i) {\n\t                        return yAxis.tickFormat()(d);\n\t                    })\n\t                    .data({\n\t                        value: xValue,\n\t                        index: pointIndex,\n\t                        series: allData\n\t                    })();\n\t\n\t                interactiveLayer.renderGuideLine(pointXLocation);\n\t\n\t            });\n\t\n\t            interactiveLayer.dispatch.on(\"elementMouseout\",function(e) {\n\t                dispatch.tooltipHide();\n\t                bars.clearHighlights();\n\t            });\n\t\n\t            legend.dispatch.on('legendClick', function(d,i) {\n\t                d.disabled = !d.disabled;\n\t\n\t                if (!data.filter(function(d) { return !d.disabled }).length) {\n\t                    data.map(function(d) {\n\t                        d.disabled = false;\n\t                        wrap.selectAll('.nv-series').classed('disabled', false);\n\t                        return d;\n\t                    });\n\t                }\n\t\n\t                state.disabled = data.map(function(d) { return !!d.disabled });\n\t                dispatch.stateChange(state);\n\t\n\t                selection.transition().call(chart);\n\t            });\n\t\n\t            legend.dispatch.on('legendDblclick', function(d) {\n\t                //Double clicking should always enable current series, and disabled all others.\n\t                data.forEach(function(d) {\n\t                    d.disabled = true;\n\t                });\n\t                d.disabled = false;\n\t\n\t                state.disabled = data.map(function(d) { return !!d.disabled });\n\t                dispatch.stateChange(state);\n\t                chart.update();\n\t            });\n\t\n\t            dispatch.on('changeState', function(e) {\n\t                if (typeof e.disabled !== 'undefined') {\n\t                    data.forEach(function(series,i) {\n\t                        series.disabled = e.disabled[i];\n\t                    });\n\t\n\t                    state.disabled = e.disabled;\n\t                }\n\t\n\t                chart.update();\n\t            });\n\t        });\n\t\n\t        renderWatch.renderEnd('historicalBarChart immediate');\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Event Handling/Dispatching (out of chart's scope)\n\t    //------------------------------------------------------------\n\t\n\t    bars.dispatch.on('elementMouseover.tooltip', function(evt) {\n\t        evt['series'] = {\n\t            key: chart.x()(evt.data),\n\t            value: chart.y()(evt.data),\n\t            color: evt.color\n\t        };\n\t        tooltip.data(evt).hidden(false);\n\t    });\n\t\n\t    bars.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t        tooltip.hidden(true);\n\t    });\n\t\n\t    bars.dispatch.on('elementMousemove.tooltip', function(evt) {\n\t        tooltip();\n\t    });\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    // expose chart's sub-components\n\t    chart.dispatch = dispatch;\n\t    chart.bars = bars;\n\t    chart.legend = legend;\n\t    chart.xAxis = xAxis;\n\t    chart.yAxis = yAxis;\n\t    chart.interactiveLayer = interactiveLayer;\n\t    chart.tooltip = tooltip;\n\t\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:      {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:     {get: function(){return height;}, set: function(_){height=_;}},\n\t        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n\t        showXAxis: {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n\t        showYAxis: {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n\t        defaultState:    {get: function(){return defaultState;}, set: function(_){defaultState=_;}},\n\t        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t            legend.color(color);\n\t            bars.color(color);\n\t        }},\n\t        duration:    {get: function(){return transitionDuration;}, set: function(_){\n\t            transitionDuration=_;\n\t            renderWatch.reset(transitionDuration);\n\t            yAxis.duration(transitionDuration);\n\t            xAxis.duration(transitionDuration);\n\t        }},\n\t        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n\t            rightAlignYAxis = _;\n\t            yAxis.orient( (_) ? 'right' : 'left');\n\t        }},\n\t        useInteractiveGuideline: {get: function(){return useInteractiveGuideline;}, set: function(_){\n\t            useInteractiveGuideline = _;\n\t            if (_ === true) {\n\t                chart.interactive(false);\n\t            }\n\t        }}\n\t    });\n\t\n\t    nv.utils.inheritOptions(chart, bars);\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\t\n\t\n\t// ohlcChart is just a historical chart with ohlc bars and some tweaks\n\tnv.models.ohlcBarChart = function() {\n\t    var chart = nv.models.historicalBarChart(nv.models.ohlcBar());\n\t\n\t    // special default tooltip since we show multiple values per x\n\t    chart.useInteractiveGuideline(true);\n\t    chart.interactiveLayer.tooltip.contentGenerator(function(data) {\n\t        // we assume only one series exists for this chart\n\t        var d = data.series[0].data;\n\t        // match line colors as defined in nv.d3.css\n\t        var color = d.open < d.close ? \"2ca02c\" : \"d62728\";\n\t        return '' +\n\t            '<h3 style=\"color: #' + color + '\">' + data.value + '</h3>' +\n\t            '<table>' +\n\t            '<tr><td>open:</td><td>' + chart.yAxis.tickFormat()(d.open) + '</td></tr>' +\n\t            '<tr><td>close:</td><td>' + chart.yAxis.tickFormat()(d.close) + '</td></tr>' +\n\t            '<tr><td>high</td><td>' + chart.yAxis.tickFormat()(d.high) + '</td></tr>' +\n\t            '<tr><td>low:</td><td>' + chart.yAxis.tickFormat()(d.low) + '</td></tr>' +\n\t            '</table>';\n\t    });\n\t    return chart;\n\t};\n\t\n\t// candlestickChart is just a historical chart with candlestick bars and some tweaks\n\tnv.models.candlestickBarChart = function() {\n\t    var chart = nv.models.historicalBarChart(nv.models.candlestickBar());\n\t\n\t    // special default tooltip since we show multiple values per x\n\t    chart.useInteractiveGuideline(true);\n\t    chart.interactiveLayer.tooltip.contentGenerator(function(data) {\n\t        // we assume only one series exists for this chart\n\t        var d = data.series[0].data;\n\t        // match line colors as defined in nv.d3.css\n\t        var color = d.open < d.close ? \"2ca02c\" : \"d62728\";\n\t        return '' +\n\t            '<h3 style=\"color: #' + color + '\">' + data.value + '</h3>' +\n\t            '<table>' +\n\t            '<tr><td>open:</td><td>' + chart.yAxis.tickFormat()(d.open) + '</td></tr>' +\n\t            '<tr><td>close:</td><td>' + chart.yAxis.tickFormat()(d.close) + '</td></tr>' +\n\t            '<tr><td>high</td><td>' + chart.yAxis.tickFormat()(d.high) + '</td></tr>' +\n\t            '<tr><td>low:</td><td>' + chart.yAxis.tickFormat()(d.low) + '</td></tr>' +\n\t            '</table>';\n\t    });\n\t    return chart;\n\t};\n\tnv.models.legend = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var margin = {top: 5, right: 0, bottom: 5, left: 0}\n\t        , width = 400\n\t        , height = 20\n\t        , getKey = function(d) { return d.key }\n\t        , keyFormatter = function (d) { return d }\n\t        , color = nv.utils.getColor()\n\t        , maxKeyLength = 20 //default value for key lengths\n\t        , align = true\n\t        , padding = 32 //define how much space between legend items. - recommend 32 for furious version\n\t        , rightAlign = true\n\t        , updateState = true   //If true, legend will update data.disabled and trigger a 'stateChange' dispatch.\n\t        , radioButtonMode = false   //If true, clicking legend items will cause it to behave like a radio button. (only one can be selected at a time)\n\t        , expanded = false\n\t        , dispatch = d3.dispatch('legendClick', 'legendDblclick', 'legendMouseover', 'legendMouseout', 'stateChange')\n\t        , vers = 'classic' //Options are \"classic\" and \"furious\"\n\t        ;\n\t\n\t    function chart(selection) {\n\t        selection.each(function(data) {\n\t            var availableWidth = width - margin.left - margin.right,\n\t                container = d3.select(this);\n\t            nv.utils.initSVG(container);\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-legend').data([data]);\n\t            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-legend').append('g');\n\t            var g = wrap.select('g');\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            var series = g.selectAll('.nv-series')\n\t                .data(function(d) {\n\t                    if(vers != 'furious') return d;\n\t\n\t                    return d.filter(function(n) {\n\t                        return expanded ? true : !n.disengaged;\n\t                    });\n\t                });\n\t\n\t            var seriesEnter = series.enter().append('g').attr('class', 'nv-series');\n\t            var seriesShape;\n\t\n\t            var versPadding;\n\t            switch(vers) {\n\t                case 'furious' :\n\t                    versPadding = 23;\n\t                    break;\n\t                case 'classic' :\n\t                    versPadding = 20;\n\t            }\n\t\n\t            if(vers == 'classic') {\n\t                seriesEnter.append('circle')\n\t                    .style('stroke-width', 2)\n\t                    .attr('class','nv-legend-symbol')\n\t                    .attr('r', 5);\n\t\n\t                seriesShape = series.select('.nv-legend-symbol');\n\t            } else if (vers == 'furious') {\n\t                seriesEnter.append('rect')\n\t                    .style('stroke-width', 2)\n\t                    .attr('class','nv-legend-symbol')\n\t                    .attr('rx', 3)\n\t                    .attr('ry', 3);\n\t                seriesShape = series.select('.nv-legend-symbol');\n\t\n\t                seriesEnter.append('g')\n\t                    .attr('class', 'nv-check-box')\n\t                    .property('innerHTML','<path d=\"M0.5,5 L22.5,5 L22.5,26.5 L0.5,26.5 L0.5,5 Z\" class=\"nv-box\"></path><path d=\"M5.5,12.8618467 L11.9185089,19.2803556 L31,0.198864511\" class=\"nv-check\"></path>')\n\t                    .attr('transform', 'translate(-10,-8)scale(0.5)');\n\t\n\t                var seriesCheckbox = series.select('.nv-check-box');\n\t\n\t                seriesCheckbox.each(function(d,i) {\n\t                    d3.select(this).selectAll('path')\n\t                        .attr('stroke', setTextColor(d,i));\n\t                });\n\t            }\n\t\n\t            seriesEnter.append('text')\n\t                .attr('text-anchor', 'start')\n\t                .attr('class','nv-legend-text')\n\t                .attr('dy', '.32em')\n\t                .attr('dx', '8');\n\t\n\t            var seriesText = series.select('text.nv-legend-text');\n\t\n\t            series\n\t                .on('mouseover', function(d,i) {\n\t                    dispatch.legendMouseover(d,i);  //TODO: Make consistent with other event objects\n\t                })\n\t                .on('mouseout', function(d,i) {\n\t                    dispatch.legendMouseout(d,i);\n\t                })\n\t                .on('click', function(d,i) {\n\t                    dispatch.legendClick(d,i);\n\t                    // make sure we re-get data in case it was modified\n\t                    var data = series.data();\n\t                    if (updateState) {\n\t                        if(vers =='classic') {\n\t                            if (radioButtonMode) {\n\t                                //Radio button mode: set every series to disabled,\n\t                                //  and enable the clicked series.\n\t                                data.forEach(function(series) { series.disabled = true});\n\t                                d.disabled = false;\n\t                            }\n\t                            else {\n\t                                d.disabled = !d.disabled;\n\t                                if (data.every(function(series) { return series.disabled})) {\n\t                                    //the default behavior of NVD3 legends is, if every single series\n\t                                    // is disabled, turn all series' back on.\n\t                                    data.forEach(function(series) { series.disabled = false});\n\t                                }\n\t                            }\n\t                        } else if(vers == 'furious') {\n\t                            if(expanded) {\n\t                                d.disengaged = !d.disengaged;\n\t                                d.userDisabled = d.userDisabled == undefined ? !!d.disabled : d.userDisabled;\n\t                                d.disabled = d.disengaged || d.userDisabled;\n\t                            } else if (!expanded) {\n\t                                d.disabled = !d.disabled;\n\t                                d.userDisabled = d.disabled;\n\t                                var engaged = data.filter(function(d) { return !d.disengaged; });\n\t                                if (engaged.every(function(series) { return series.userDisabled })) {\n\t                                    //the default behavior of NVD3 legends is, if every single series\n\t                                    // is disabled, turn all series' back on.\n\t                                    data.forEach(function(series) {\n\t                                        series.disabled = series.userDisabled = false;\n\t                                    });\n\t                                }\n\t                            }\n\t                        }\n\t                        dispatch.stateChange({\n\t                            disabled: data.map(function(d) { return !!d.disabled }),\n\t                            disengaged: data.map(function(d) { return !!d.disengaged })\n\t                        });\n\t\n\t                    }\n\t                })\n\t                .on('dblclick', function(d,i) {\n\t                    if(vers == 'furious' && expanded) return;\n\t                    dispatch.legendDblclick(d,i);\n\t                    if (updateState) {\n\t                        // make sure we re-get data in case it was modified\n\t                        var data = series.data();\n\t                        //the default behavior of NVD3 legends, when double clicking one,\n\t                        // is to set all other series' to false, and make the double clicked series enabled.\n\t                        data.forEach(function(series) {\n\t                            series.disabled = true;\n\t                            if(vers == 'furious') series.userDisabled = series.disabled;\n\t                        });\n\t                        d.disabled = false;\n\t                        if(vers == 'furious') d.userDisabled = d.disabled;\n\t                        dispatch.stateChange({\n\t                            disabled: data.map(function(d) { return !!d.disabled })\n\t                        });\n\t                    }\n\t                });\n\t\n\t            series.classed('nv-disabled', function(d) { return d.userDisabled });\n\t            series.exit().remove();\n\t\n\t            seriesText\n\t                .attr('fill', setTextColor)\n\t                .text(function (d) { return keyFormatter(getKey(d)) });\n\t\n\t            //TODO: implement fixed-width and max-width options (max-width is especially useful with the align option)\n\t            // NEW ALIGNING CODE, TODO: clean up\n\t            var legendWidth = 0;\n\t            if (align) {\n\t\n\t                var seriesWidths = [];\n\t                series.each(function(d,i) {\n\t                    var legendText;\n\t                    if (keyFormatter(getKey(d)) && keyFormatter(getKey(d)).length > maxKeyLength) {\n\t                        var trimmedKey = keyFormatter(getKey(d)).substring(0, maxKeyLength);\n\t                        legendText = d3.select(this).select('text').text(trimmedKey + \"...\");\n\t                        d3.select(this).append(\"svg:title\").text(keyFormatter(getKey(d)));\n\t                    } else {\n\t                        legendText = d3.select(this).select('text');\n\t                    }\n\t                    var nodeTextLength;\n\t                    try {\n\t                        nodeTextLength = legendText.node().getComputedTextLength();\n\t                        // If the legendText is display:none'd (nodeTextLength == 0), simulate an error so we approximate, instead\n\t                        if(nodeTextLength <= 0) throw Error();\n\t                    }\n\t                    catch(e) {\n\t                        nodeTextLength = nv.utils.calcApproxTextWidth(legendText);\n\t                    }\n\t\n\t                    seriesWidths.push(nodeTextLength + padding);\n\t                });\n\t\n\t                var seriesPerRow = 0;\n\t                var columnWidths = [];\n\t                legendWidth = 0;\n\t\n\t                while ( legendWidth < availableWidth && seriesPerRow < seriesWidths.length) {\n\t                    columnWidths[seriesPerRow] = seriesWidths[seriesPerRow];\n\t                    legendWidth += seriesWidths[seriesPerRow++];\n\t                }\n\t                if (seriesPerRow === 0) seriesPerRow = 1; //minimum of one series per row\n\t\n\t                while ( legendWidth > availableWidth && seriesPerRow > 1 ) {\n\t                    columnWidths = [];\n\t                    seriesPerRow--;\n\t\n\t                    for (var k = 0; k < seriesWidths.length; k++) {\n\t                        if (seriesWidths[k] > (columnWidths[k % seriesPerRow] || 0) )\n\t                            columnWidths[k % seriesPerRow] = seriesWidths[k];\n\t                    }\n\t\n\t                    legendWidth = columnWidths.reduce(function(prev, cur, index, array) {\n\t                        return prev + cur;\n\t                    });\n\t                }\n\t\n\t                var xPositions = [];\n\t                for (var i = 0, curX = 0; i < seriesPerRow; i++) {\n\t                    xPositions[i] = curX;\n\t                    curX += columnWidths[i];\n\t                }\n\t\n\t                series\n\t                    .attr('transform', function(d, i) {\n\t                        return 'translate(' + xPositions[i % seriesPerRow] + ',' + (5 + Math.floor(i / seriesPerRow) * versPadding) + ')';\n\t                    });\n\t\n\t                //position legend as far right as possible within the total width\n\t                if (rightAlign) {\n\t                    g.attr('transform', 'translate(' + (width - margin.right - legendWidth) + ',' + margin.top + ')');\n\t                }\n\t                else {\n\t                    g.attr('transform', 'translate(0' + ',' + margin.top + ')');\n\t                }\n\t\n\t                height = margin.top + margin.bottom + (Math.ceil(seriesWidths.length / seriesPerRow) * versPadding);\n\t\n\t            } else {\n\t\n\t                var ypos = 5,\n\t                    newxpos = 5,\n\t                    maxwidth = 0,\n\t                    xpos;\n\t                series\n\t                    .attr('transform', function(d, i) {\n\t                        var length = d3.select(this).select('text').node().getComputedTextLength() + padding;\n\t                        xpos = newxpos;\n\t\n\t                        if (width < margin.left + margin.right + xpos + length) {\n\t                            newxpos = xpos = 5;\n\t                            ypos += versPadding;\n\t                        }\n\t\n\t                        newxpos += length;\n\t                        if (newxpos > maxwidth) maxwidth = newxpos;\n\t\n\t                        if(legendWidth < xpos + maxwidth) {\n\t                            legendWidth = xpos + maxwidth;\n\t                        }\n\t                        return 'translate(' + xpos + ',' + ypos + ')';\n\t                    });\n\t\n\t                //position legend as far right as possible within the total width\n\t                g.attr('transform', 'translate(' + (width - margin.right - maxwidth) + ',' + margin.top + ')');\n\t\n\t                height = margin.top + margin.bottom + ypos + 15;\n\t            }\n\t\n\t            if(vers == 'furious') {\n\t                // Size rectangles after text is placed\n\t                seriesShape\n\t                    .attr('width', function(d,i) {\n\t                        return seriesText[0][i].getComputedTextLength() + 27;\n\t                    })\n\t                    .attr('height', 18)\n\t                    .attr('y', -9)\n\t                    .attr('x', -15);\n\t\n\t                // The background for the expanded legend (UI)\n\t                gEnter.insert('rect',':first-child')\n\t                    .attr('class', 'nv-legend-bg')\n\t                    .attr('fill', '#eee')\n\t                    // .attr('stroke', '#444')\n\t                    .attr('opacity',0);\n\t\n\t                var seriesBG = g.select('.nv-legend-bg');\n\t\n\t                seriesBG\n\t                .transition().duration(300)\n\t                    .attr('x', -versPadding )\n\t                    .attr('width', legendWidth + versPadding - 12)\n\t                    .attr('height', height + 10)\n\t                    .attr('y', -margin.top - 10)\n\t                    .attr('opacity', expanded ? 1 : 0);\n\t\n\t\n\t            }\n\t\n\t            seriesShape\n\t                .style('fill', setBGColor)\n\t                .style('fill-opacity', setBGOpacity)\n\t                .style('stroke', setBGColor);\n\t        });\n\t\n\t        function setTextColor(d,i) {\n\t            if(vers != 'furious') return '#000';\n\t            if(expanded) {\n\t                return d.disengaged ? '#000' : '#fff';\n\t            } else if (!expanded) {\n\t                if(!d.color) d.color = color(d,i);\n\t                return !!d.disabled ? d.color : '#fff';\n\t            }\n\t        }\n\t\n\t        function setBGColor(d,i) {\n\t            if(expanded && vers == 'furious') {\n\t                return d.disengaged ? '#eee' : d.color || color(d,i);\n\t            } else {\n\t                return d.color || color(d,i);\n\t            }\n\t        }\n\t\n\t\n\t        function setBGOpacity(d,i) {\n\t            if(expanded && vers == 'furious') {\n\t                return 1;\n\t            } else {\n\t                return !!d.disabled ? 0 : 1;\n\t            }\n\t        }\n\t\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:          {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:         {get: function(){return height;}, set: function(_){height=_;}},\n\t        key:            {get: function(){return getKey;}, set: function(_){getKey=_;}},\n\t        keyFormatter:   {get: function(){return keyFormatter;}, set: function(_){keyFormatter=_;}},\n\t        align:          {get: function(){return align;}, set: function(_){align=_;}},\n\t        maxKeyLength:   {get: function(){return maxKeyLength;}, set: function(_){maxKeyLength=_;}},\n\t        rightAlign:     {get: function(){return rightAlign;}, set: function(_){rightAlign=_;}},\n\t        padding:        {get: function(){return padding;}, set: function(_){padding=_;}},\n\t        updateState:    {get: function(){return updateState;}, set: function(_){updateState=_;}},\n\t        radioButtonMode:{get: function(){return radioButtonMode;}, set: function(_){radioButtonMode=_;}},\n\t        expanded:       {get: function(){return expanded;}, set: function(_){expanded=_;}},\n\t        vers:           {get: function(){return vers;}, set: function(_){vers=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t        }}\n\t    });\n\t\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\t\n\tnv.models.line = function() {\n\t    \"use strict\";\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var  scatter = nv.models.scatter()\n\t        ;\n\t\n\t    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n\t        , width = 960\n\t        , height = 500\n\t        , container = null\n\t        , strokeWidth = 1.5\n\t        , color = nv.utils.defaultColor() // a function that returns a color\n\t        , getX = function(d) { return d.x } // accessor to get the x value from a data point\n\t        , getY = function(d) { return d.y } // accessor to get the y value from a data point\n\t        , defined = function(d,i) { return !isNaN(getY(d,i)) && getY(d,i) !== null } // allows a line to be not continuous when it is not defined\n\t        , isArea = function(d) { return d.area } // decides if a line is an area or just a line\n\t        , clipEdge = false // if true, masks lines within x and y scale\n\t        , x //can be accessed via chart.xScale()\n\t        , y //can be accessed via chart.yScale()\n\t        , interpolate = \"linear\" // controls the line interpolation\n\t        , duration = 250\n\t        , dispatch = d3.dispatch('elementClick', 'elementMouseover', 'elementMouseout', 'renderEnd')\n\t        ;\n\t\n\t    scatter\n\t        .pointSize(16) // default size\n\t        .pointDomain([16,256]) //set to speed up calculation, needs to be unset if there is a custom size accessor\n\t    ;\n\t\n\t    //============================================================\n\t\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var x0, y0 //used to store previous scales\n\t        , renderWatch = nv.utils.renderWatch(dispatch, duration)\n\t        ;\n\t\n\t    //============================================================\n\t\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        renderWatch.models(scatter);\n\t        selection.each(function(data) {\n\t            container = d3.select(this);\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                availableHeight = nv.utils.availableHeight(height, container, margin);\n\t            nv.utils.initSVG(container);\n\t\n\t            // Setup Scales\n\t            x = scatter.xScale();\n\t            y = scatter.yScale();\n\t\n\t            x0 = x0 || x;\n\t            y0 = y0 || y;\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-line').data([data]);\n\t            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-line');\n\t            var defsEnter = wrapEnter.append('defs');\n\t            var gEnter = wrapEnter.append('g');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-groups');\n\t            gEnter.append('g').attr('class', 'nv-scatterWrap');\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            scatter\n\t                .width(availableWidth)\n\t                .height(availableHeight);\n\t\n\t            var scatterWrap = wrap.select('.nv-scatterWrap');\n\t            scatterWrap.call(scatter);\n\t\n\t            defsEnter.append('clipPath')\n\t                .attr('id', 'nv-edge-clip-' + scatter.id())\n\t                .append('rect');\n\t\n\t            wrap.select('#nv-edge-clip-' + scatter.id() + ' rect')\n\t                .attr('width', availableWidth)\n\t                .attr('height', (availableHeight > 0) ? availableHeight : 0);\n\t\n\t            g   .attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + scatter.id() + ')' : '');\n\t            scatterWrap\n\t                .attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + scatter.id() + ')' : '');\n\t\n\t            var groups = wrap.select('.nv-groups').selectAll('.nv-group')\n\t                .data(function(d) { return d }, function(d) { return d.key });\n\t            groups.enter().append('g')\n\t                .style('stroke-opacity', 1e-6)\n\t                .style('stroke-width', function(d) { return d.strokeWidth || strokeWidth })\n\t                .style('fill-opacity', 1e-6);\n\t\n\t            groups.exit().remove();\n\t\n\t            groups\n\t                .attr('class', function(d,i) {\n\t                    return (d.classed || '') + ' nv-group nv-series-' + i;\n\t                })\n\t                .classed('hover', function(d) { return d.hover })\n\t                .style('fill', function(d,i){ return color(d, i) })\n\t                .style('stroke', function(d,i){ return color(d, i)});\n\t            groups.watchTransition(renderWatch, 'line: groups')\n\t                .style('stroke-opacity', 1)\n\t                .style('fill-opacity', function(d) { return d.fillOpacity || .5});\n\t\n\t            var areaPaths = groups.selectAll('path.nv-area')\n\t                .data(function(d) { return isArea(d) ? [d] : [] }); // this is done differently than lines because I need to check if series is an area\n\t            areaPaths.enter().append('path')\n\t                .attr('class', 'nv-area')\n\t                .attr('d', function(d) {\n\t                    return d3.svg.area()\n\t                        .interpolate(interpolate)\n\t                        .defined(defined)\n\t                        .x(function(d,i) { return nv.utils.NaNtoZero(x0(getX(d,i))) })\n\t                        .y0(function(d,i) { return nv.utils.NaNtoZero(y0(getY(d,i))) })\n\t                        .y1(function(d,i) { return y0( y.domain()[0] <= 0 ? y.domain()[1] >= 0 ? 0 : y.domain()[1] : y.domain()[0] ) })\n\t                        //.y1(function(d,i) { return y0(0) }) //assuming 0 is within y domain.. may need to tweak this\n\t                        .apply(this, [d.values])\n\t                });\n\t            groups.exit().selectAll('path.nv-area')\n\t                .remove();\n\t\n\t            areaPaths.watchTransition(renderWatch, 'line: areaPaths')\n\t                .attr('d', function(d) {\n\t                    return d3.svg.area()\n\t                        .interpolate(interpolate)\n\t                        .defined(defined)\n\t                        .x(function(d,i) { return nv.utils.NaNtoZero(x(getX(d,i))) })\n\t                        .y0(function(d,i) { return nv.utils.NaNtoZero(y(getY(d,i))) })\n\t                        .y1(function(d,i) { return y( y.domain()[0] <= 0 ? y.domain()[1] >= 0 ? 0 : y.domain()[1] : y.domain()[0] ) })\n\t                        //.y1(function(d,i) { return y0(0) }) //assuming 0 is within y domain.. may need to tweak this\n\t                        .apply(this, [d.values])\n\t                });\n\t\n\t            var linePaths = groups.selectAll('path.nv-line')\n\t                .data(function(d) { return [d.values] });\n\t\n\t            linePaths.enter().append('path')\n\t                .attr('class', 'nv-line')\n\t                .attr('d',\n\t                    d3.svg.line()\n\t                    .interpolate(interpolate)\n\t                    .defined(defined)\n\t                    .x(function(d,i) { return nv.utils.NaNtoZero(x0(getX(d,i))) })\n\t                    .y(function(d,i) { return nv.utils.NaNtoZero(y0(getY(d,i))) })\n\t            );\n\t\n\t            linePaths.watchTransition(renderWatch, 'line: linePaths')\n\t                .attr('d',\n\t                    d3.svg.line()\n\t                    .interpolate(interpolate)\n\t                    .defined(defined)\n\t                    .x(function(d,i) { return nv.utils.NaNtoZero(x(getX(d,i))) })\n\t                    .y(function(d,i) { return nv.utils.NaNtoZero(y(getY(d,i))) })\n\t            );\n\t\n\t            //store old scales for use in transitions on update\n\t            x0 = x.copy();\n\t            y0 = y.copy();\n\t        });\n\t        renderWatch.renderEnd('line immediate');\n\t        return chart;\n\t    }\n\t\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.scatter = scatter;\n\t    // Pass through events\n\t    scatter.dispatch.on('elementClick', function(){ dispatch.elementClick.apply(this, arguments); });\n\t    scatter.dispatch.on('elementMouseover', function(){ dispatch.elementMouseover.apply(this, arguments); });\n\t    scatter.dispatch.on('elementMouseout', function(){ dispatch.elementMouseout.apply(this, arguments); });\n\t\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:      {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:     {get: function(){return height;}, set: function(_){height=_;}},\n\t        defined: {get: function(){return defined;}, set: function(_){defined=_;}},\n\t        interpolate:      {get: function(){return interpolate;}, set: function(_){interpolate=_;}},\n\t        clipEdge:    {get: function(){return clipEdge;}, set: function(_){clipEdge=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        duration: {get: function(){return duration;}, set: function(_){\n\t            duration = _;\n\t            renderWatch.reset(duration);\n\t            scatter.duration(duration);\n\t        }},\n\t        isArea: {get: function(){return isArea;}, set: function(_){\n\t            isArea = d3.functor(_);\n\t        }},\n\t        x: {get: function(){return getX;}, set: function(_){\n\t            getX = _;\n\t            scatter.x(_);\n\t        }},\n\t        y: {get: function(){return getY;}, set: function(_){\n\t            getY = _;\n\t            scatter.y(_);\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t            scatter.color(color);\n\t        }}\n\t    });\n\t\n\t    nv.utils.inheritOptions(chart, scatter);\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\tnv.models.lineChart = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var lines = nv.models.line()\n\t        , xAxis = nv.models.axis()\n\t        , yAxis = nv.models.axis()\n\t        , legend = nv.models.legend()\n\t        , interactiveLayer = nv.interactiveGuideline()\n\t        , tooltip = nv.models.tooltip()\n\t        , focus = nv.models.focus(nv.models.line())\n\t        ;\n\t\n\t    var margin = {top: 30, right: 20, bottom: 50, left: 60}\n\t        , color = nv.utils.defaultColor()\n\t        , width = null\n\t        , height = null\n\t        , showLegend = true\n\t        , legendPosition = 'top'\n\t        , showXAxis = true\n\t        , showYAxis = true\n\t        , rightAlignYAxis = false\n\t        , useInteractiveGuideline = false\n\t        , x\n\t        , y\n\t        , focusEnable = false\n\t        , state = nv.utils.state()\n\t        , defaultState = null\n\t        , noData = null\n\t        , dispatch = d3.dispatch('tooltipShow', 'tooltipHide', 'stateChange', 'changeState', 'renderEnd')\n\t        , duration = 250\n\t        ;\n\t\n\t    // set options on sub-objects for this chart\n\t    xAxis.orient('bottom').tickPadding(7);\n\t    yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n\t\n\t    lines.clipEdge(true).duration(0);\n\t\n\t    tooltip.valueFormatter(function(d, i) {\n\t        return yAxis.tickFormat()(d, i);\n\t    }).headerFormatter(function(d, i) {\n\t        return xAxis.tickFormat()(d, i);\n\t    });\n\t\n\t    interactiveLayer.tooltip.valueFormatter(function(d, i) {\n\t        return yAxis.tickFormat()(d, i);\n\t    }).headerFormatter(function(d, i) {\n\t        return xAxis.tickFormat()(d, i);\n\t    });\n\t\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\t\n\t    var stateGetter = function(data) {\n\t        return function(){\n\t            return {\n\t                active: data.map(function(d) { return !d.disabled; })\n\t            };\n\t        };\n\t    };\n\t\n\t    var stateSetter = function(data) {\n\t        return function(state) {\n\t            if (state.active !== undefined)\n\t                data.forEach(function(series,i) {\n\t                    series.disabled = !state.active[i];\n\t                });\n\t        };\n\t    };\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        renderWatch.models(lines);\n\t        if (showXAxis) renderWatch.models(xAxis);\n\t        if (showYAxis) renderWatch.models(yAxis);\n\t\n\t        selection.each(function(data) {\n\t            var container = d3.select(this);\n\t            nv.utils.initSVG(container);\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n\t            chart.update = function() {\n\t                if( duration === 0 ) {\n\t                    container.call( chart );\n\t                } else {\n\t                    container.transition().duration(duration).call(chart);\n\t                }\n\t            };\n\t            chart.container = this;\n\t\n\t            state\n\t                .setter(stateSetter(data), chart.update)\n\t                .getter(stateGetter(data))\n\t                .update();\n\t\n\t            // DEPRECATED set state.disabled\n\t            state.disabled = data.map(function(d) { return !!d.disabled; });\n\t\n\t            if (!defaultState) {\n\t                var key;\n\t                defaultState = {};\n\t                for (key in state) {\n\t                    if (state[key] instanceof Array)\n\t                        defaultState[key] = state[key].slice(0);\n\t                    else\n\t                        defaultState[key] = state[key];\n\t                }\n\t            }\n\t\n\t            // Display noData message if there's nothing to show.\n\t            if (!data || !data.length || !data.filter(function(d) { return d.values.length; }).length) {\n\t                nv.utils.noData(chart, container);\n\t                return chart;\n\t            } else {\n\t                container.selectAll('.nv-noData').remove();\n\t            }\n\t\n\t            /* Update `main' graph on brush update. */\n\t            focus.dispatch.on(\"onBrush\", function(extent) {\n\t                onBrush(extent);\n\t            });\n\t\n\t            // Setup Scales\n\t            x = lines.xScale();\n\t            y = lines.yScale();\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-lineChart').data([data]);\n\t            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-lineChart').append('g');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-legendWrap');\n\t\n\t            var focusEnter = gEnter.append('g').attr('class', 'nv-focus');\n\t            focusEnter.append('g').attr('class', 'nv-background').append('rect');\n\t            focusEnter.append('g').attr('class', 'nv-x nv-axis');\n\t            focusEnter.append('g').attr('class', 'nv-y nv-axis');\n\t            focusEnter.append('g').attr('class', 'nv-linesWrap');\n\t            focusEnter.append('g').attr('class', 'nv-interactive');\n\t\n\t            var contextEnter = gEnter.append('g').attr('class', 'nv-focusWrap');\n\t\n\t            // Legend\n\t            if (!showLegend) {\n\t                g.select('.nv-legendWrap').selectAll('*').remove();\n\t            } else {\n\t                legend.width(availableWidth);\n\t\n\t                g.select('.nv-legendWrap')\n\t                    .datum(data)\n\t                    .call(legend);\n\t\n\t                if (legendPosition === 'bottom') {\n\t                    wrap.select('.nv-legendWrap')\n\t                        .attr('transform', 'translate(0,' + availableHeight +')');\n\t                } else if (legendPosition === 'top') {\n\t                    if (legend.height() > margin.top) {\n\t                        margin.top = legend.height();\n\t                        availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n\t                    }\n\t\n\t                    wrap.select('.nv-legendWrap')\n\t                        .attr('transform', 'translate(0,' + (-margin.top) +')');\n\t                }\n\t            }\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            if (rightAlignYAxis) {\n\t                g.select(\".nv-y.nv-axis\")\n\t                    .attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n\t            }\n\t\n\t            //Set up interactive layer\n\t            if (useInteractiveGuideline) {\n\t                interactiveLayer\n\t                    .width(availableWidth)\n\t                    .height(availableHeight)\n\t                    .margin({left:margin.left, top:margin.top})\n\t                    .svgContainer(container)\n\t                    .xScale(x);\n\t                wrap.select(\".nv-interactive\").call(interactiveLayer);\n\t            }\n\t\n\t            g.select('.nv-focus .nv-background rect')\n\t                .attr('width', availableWidth)\n\t                .attr('height', availableHeight);\n\t\n\t            lines\n\t                .width(availableWidth)\n\t                .height(availableHeight)\n\t                .color(data.map(function(d,i) {\n\t                    return d.color || color(d, i);\n\t                }).filter(function(d,i) { return !data[i].disabled; }));\n\t\n\t            var linesWrap = g.select('.nv-linesWrap')\n\t                .datum(data.filter(function(d) { return !d.disabled; }));\n\t\n\t\n\t            // Setup Main (Focus) Axes\n\t            if (showXAxis) {\n\t                xAxis\n\t                    .scale(x)\n\t                    ._ticks(nv.utils.calcTicksX(availableWidth/100, data) )\n\t                    .tickSize(-availableHeight, 0);\n\t            }\n\t\n\t            if (showYAxis) {\n\t                yAxis\n\t                    .scale(y)\n\t                    ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n\t                    .tickSize( -availableWidth, 0);\n\t            }\n\t\n\t            //============================================================\n\t            // Update Axes\n\t            //============================================================\n\t            function updateXAxis() {\n\t              if(showXAxis) {\n\t                g.select('.nv-focus .nv-x.nv-axis')\n\t                  .transition()\n\t                  .duration(duration)\n\t                  .call(xAxis)\n\t                ;\n\t              }\n\t            }\n\t\n\t            function updateYAxis() {\n\t              if(showYAxis) {\n\t                g.select('.nv-focus .nv-y.nv-axis')\n\t                  .transition()\n\t                  .duration(duration)\n\t                  .call(yAxis)\n\t                ;\n\t              }\n\t            }\n\t\n\t            g.select('.nv-focus .nv-x.nv-axis')\n\t                .attr('transform', 'translate(0,' + availableHeight + ')');\n\t\n\t            //============================================================\n\t            // Update Focus\n\t            //============================================================\n\t            if(!focusEnable) {\n\t                linesWrap.call(lines);\n\t                updateXAxis();\n\t                updateYAxis();\n\t            } else {\n\t                focus.width(availableWidth);\n\t                g.select('.nv-focusWrap')\n\t                    .attr('transform', 'translate(0,' + ( availableHeight + margin.bottom + focus.margin().top) + ')')\n\t                    .datum(data.filter(function(d) { return !d.disabled; }))\n\t                    .call(focus);\n\t                var extent = focus.brush.empty() ? focus.xDomain() : focus.brush.extent();\n\t                if(extent !== null){\n\t                    onBrush(extent);\n\t                }\n\t            }\n\t            //============================================================\n\t            // Event Handling/Dispatching (in chart's scope)\n\t            //------------------------------------------------------------\n\t\n\t            legend.dispatch.on('stateChange', function(newState) {\n\t                for (var key in newState)\n\t                    state[key] = newState[key];\n\t                dispatch.stateChange(state);\n\t                chart.update();\n\t            });\n\t\n\t            interactiveLayer.dispatch.on('elementMousemove', function(e) {\n\t                lines.clearHighlights();\n\t                var singlePoint, pointIndex, pointXLocation, allData = [];\n\t                data\n\t                    .filter(function(series, i) {\n\t                        series.seriesIndex = i;\n\t                        return !series.disabled && !series.disableTooltip;\n\t                    })\n\t                    .forEach(function(series,i) {\n\t                        var extent = focusEnable ? (focus.brush.empty() ? focus.xScale().domain() : focus.brush.extent()) : x.domain();\n\t                        var currentValues = series.values.filter(function(d,i) {\n\t                            return lines.x()(d,i) >= extent[0] && lines.x()(d,i) <= extent[1];\n\t                        });\n\t\n\t                        pointIndex = nv.interactiveBisect(currentValues, e.pointXValue, lines.x());\n\t                        var point = currentValues[pointIndex];\n\t                        var pointYValue = chart.y()(point, pointIndex);\n\t                        if (pointYValue !== null) {\n\t                            lines.highlightPoint(series.seriesIndex, pointIndex, true);\n\t                        }\n\t                        if (point === undefined) return;\n\t                        if (singlePoint === undefined) singlePoint = point;\n\t                        if (pointXLocation === undefined) pointXLocation = chart.xScale()(chart.x()(point,pointIndex));\n\t                        allData.push({\n\t                            key: series.key,\n\t                            value: pointYValue,\n\t                            color: color(series,series.seriesIndex),\n\t                            data: point\n\t                        });\n\t                    });\n\t                //Highlight the tooltip entry based on which point the mouse is closest to.\n\t                if (allData.length > 2) {\n\t                    var yValue = chart.yScale().invert(e.mouseY);\n\t                    var domainExtent = Math.abs(chart.yScale().domain()[0] - chart.yScale().domain()[1]);\n\t                    var threshold = 0.03 * domainExtent;\n\t                    var indexToHighlight = nv.nearestValueIndex(allData.map(function(d){return d.value;}),yValue,threshold);\n\t                    if (indexToHighlight !== null)\n\t                        allData[indexToHighlight].highlight = true;\n\t                }\n\t\n\t                var defaultValueFormatter = function(d,i) {\n\t                    return d == null ? \"N/A\" : yAxis.tickFormat()(d);\n\t                };\n\t\n\t                interactiveLayer.tooltip\n\t                    .valueFormatter(interactiveLayer.tooltip.valueFormatter() || defaultValueFormatter)\n\t                    .data({\n\t                        value: chart.x()( singlePoint,pointIndex ),\n\t                        index: pointIndex,\n\t                        series: allData\n\t                    })();\n\t\n\t                interactiveLayer.renderGuideLine(pointXLocation);\n\t\n\t            });\n\t\n\t            interactiveLayer.dispatch.on('elementClick', function(e) {\n\t                var pointXLocation, allData = [];\n\t\n\t                data.filter(function(series, i) {\n\t                    series.seriesIndex = i;\n\t                    return !series.disabled;\n\t                }).forEach(function(series) {\n\t                    var pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n\t                    var point = series.values[pointIndex];\n\t                    if (typeof point === 'undefined') return;\n\t                    if (typeof pointXLocation === 'undefined') pointXLocation = chart.xScale()(chart.x()(point,pointIndex));\n\t                    var yPos = chart.yScale()(chart.y()(point,pointIndex));\n\t                    allData.push({\n\t                        point: point,\n\t                        pointIndex: pointIndex,\n\t                        pos: [pointXLocation, yPos],\n\t                        seriesIndex: series.seriesIndex,\n\t                        series: series\n\t                    });\n\t                });\n\t\n\t                lines.dispatch.elementClick(allData);\n\t            });\n\t\n\t            interactiveLayer.dispatch.on(\"elementMouseout\",function(e) {\n\t                lines.clearHighlights();\n\t            });\n\t\n\t            dispatch.on('changeState', function(e) {\n\t                if (typeof e.disabled !== 'undefined' && data.length === e.disabled.length) {\n\t                    data.forEach(function(series,i) {\n\t                        series.disabled = e.disabled[i];\n\t                    });\n\t\n\t                    state.disabled = e.disabled;\n\t                }\n\t                chart.update();\n\t            });\n\t\n\t            //============================================================\n\t            // Functions\n\t            //------------------------------------------------------------\n\t\n\t            // Taken from crossfilter (http://square.github.com/crossfilter/)\n\t            function resizePath(d) {\n\t                var e = +(d == 'e'),\n\t                    x = e ? 1 : -1,\n\t                    y = availableHeight / 3;\n\t                return 'M' + (0.5 * x) + ',' + y\n\t                    + 'A6,6 0 0 ' + e + ' ' + (6.5 * x) + ',' + (y + 6)\n\t                    + 'V' + (2 * y - 6)\n\t                    + 'A6,6 0 0 ' + e + ' ' + (0.5 * x) + ',' + (2 * y)\n\t                    + 'Z'\n\t                    + 'M' + (2.5 * x) + ',' + (y + 8)\n\t                    + 'V' + (2 * y - 8)\n\t                    + 'M' + (4.5 * x) + ',' + (y + 8)\n\t                    + 'V' + (2 * y - 8);\n\t            }\n\t\n\t            function onBrush(extent) {\n\t                // Update Main (Focus)\n\t                var focusLinesWrap = g.select('.nv-focus .nv-linesWrap')\n\t                    .datum(\n\t                    data.filter(function(d) { return !d.disabled; })\n\t                        .map(function(d,i) {\n\t                            return {\n\t                                key: d.key,\n\t                                area: d.area,\n\t                                classed: d.classed,\n\t                                values: d.values.filter(function(d,i) {\n\t                                    return lines.x()(d,i) >= extent[0] && lines.x()(d,i) <= extent[1];\n\t                                }),\n\t                                disableTooltip: d.disableTooltip\n\t                            };\n\t                        })\n\t                );\n\t                focusLinesWrap.transition().duration(duration).call(lines);\n\t\n\t                // Update Main (Focus) Axes\n\t                updateXAxis();\n\t                updateYAxis();\n\t            }\n\t        });\n\t\n\t        renderWatch.renderEnd('lineChart immediate');\n\t        return chart;\n\t    }\n\t\n\t\n\t    //============================================================\n\t    // Event Handling/Dispatching (out of chart's scope)\n\t    //------------------------------------------------------------\n\t\n\t    lines.dispatch.on('elementMouseover.tooltip', function(evt) {\n\t        if(!evt.series.disableTooltip){\n\t            tooltip.data(evt).hidden(false);\n\t        }\n\t    });\n\t\n\t    lines.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t        tooltip.hidden(true);\n\t    });\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    // expose chart's sub-components\n\t    chart.dispatch = dispatch;\n\t    chart.lines = lines;\n\t    chart.legend = legend;\n\t    chart.focus = focus;\n\t    chart.xAxis = xAxis;\n\t    chart.x2Axis = focus.xAxis\n\t    chart.yAxis = yAxis;\n\t    chart.y2Axis = focus.yAxis\n\t    chart.interactiveLayer = interactiveLayer;\n\t    chart.tooltip = tooltip;\n\t    chart.state = state;\n\t    chart.dispatch = dispatch;\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:      {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:     {get: function(){return height;}, set: function(_){height=_;}},\n\t        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n\t        legendPosition: {get: function(){return legendPosition;}, set: function(_){legendPosition=_;}},\n\t        showXAxis:      {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n\t        showYAxis:    {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n\t        defaultState:    {get: function(){return defaultState;}, set: function(_){defaultState=_;}},\n\t        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n\t        // Focus options, mostly passed onto focus model.\n\t        focusEnable:    {get: function(){return focusEnable;}, set: function(_){focusEnable=_;}},\n\t        focusHeight:     {get: function(){return focus.height();}, set: function(_){focus.height(_);}},\n\t        focusShowAxisX:    {get: function(){return focus.showXAxis();}, set: function(_){focus.showXAxis(_);}},\n\t        focusShowAxisY:    {get: function(){return focus.showYAxis();}, set: function(_){focus.showYAxis(_);}},\n\t        brushExtent: {get: function(){return focus.brushExtent();}, set: function(_){focus.brushExtent(_);}},\n\t\n\t        // options that require extra logic in the setter\n\t        focusMargin: {get: function(){return focus.margin}, set: function(_){\n\t            focus.margin.top    = _.top    !== undefined ? _.top    : focus.margin.top;\n\t            focus.margin.right  = _.right  !== undefined ? _.right  : focus.margin.right;\n\t            focus.margin.bottom = _.bottom !== undefined ? _.bottom : focus.margin.bottom;\n\t            focus.margin.left   = _.left   !== undefined ? _.left   : focus.margin.left;\n\t        }},\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        duration: {get: function(){return duration;}, set: function(_){\n\t            duration = _;\n\t            renderWatch.reset(duration);\n\t            lines.duration(duration);\n\t            focus.duration(duration);\n\t            xAxis.duration(duration);\n\t            yAxis.duration(duration);\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t            legend.color(color);\n\t            lines.color(color);\n\t            focus.color(color);\n\t        }},\n\t        interpolate: {get: function(){return lines.interpolate();}, set: function(_){\n\t            lines.interpolate(_);\n\t            focus.interpolate(_);\n\t        }},\n\t        xTickFormat: {get: function(){return xAxis.tickFormat();}, set: function(_){\n\t            xAxis.tickFormat(_);\n\t            focus.xTickFormat(_);\n\t        }},\n\t        yTickFormat: {get: function(){return yAxis.tickFormat();}, set: function(_){\n\t            yAxis.tickFormat(_);\n\t            focus.yTickFormat(_);\n\t        }},\n\t        x: {get: function(){return lines.x();}, set: function(_){\n\t            lines.x(_);\n\t            focus.x(_);\n\t        }},\n\t        y: {get: function(){return lines.y();}, set: function(_){\n\t            lines.y(_);\n\t            focus.y(_);\n\t        }},\n\t        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n\t            rightAlignYAxis = _;\n\t            yAxis.orient( rightAlignYAxis ? 'right' : 'left');\n\t        }},\n\t        useInteractiveGuideline: {get: function(){return useInteractiveGuideline;}, set: function(_){\n\t            useInteractiveGuideline = _;\n\t            if (useInteractiveGuideline) {\n\t                lines.interactive(false);\n\t                lines.useVoronoi(false);\n\t            }\n\t        }}\n\t    });\n\t\n\t    nv.utils.inheritOptions(chart, lines);\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\t\n\tnv.models.lineWithFocusChart = function() {\n\t  return nv.models.lineChart()\n\t    .margin({ bottom: 30 })\n\t    .focusEnable( true );\n\t};\n\tnv.models.linePlusBarChart = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var lines = nv.models.line()\n\t        , lines2 = nv.models.line()\n\t        , bars = nv.models.historicalBar()\n\t        , bars2 = nv.models.historicalBar()\n\t        , xAxis = nv.models.axis()\n\t        , x2Axis = nv.models.axis()\n\t        , y1Axis = nv.models.axis()\n\t        , y2Axis = nv.models.axis()\n\t        , y3Axis = nv.models.axis()\n\t        , y4Axis = nv.models.axis()\n\t        , legend = nv.models.legend()\n\t        , brush = d3.svg.brush()\n\t        , tooltip = nv.models.tooltip()\n\t        ;\n\t\n\t    var margin = {top: 30, right: 30, bottom: 30, left: 60}\n\t        , margin2 = {top: 0, right: 30, bottom: 20, left: 60}\n\t        , width = null\n\t        , height = null\n\t        , getX = function(d) { return d.x }\n\t        , getY = function(d) { return d.y }\n\t        , color = nv.utils.defaultColor()\n\t        , showLegend = true\n\t        , focusEnable = true\n\t        , focusShowAxisY = false\n\t        , focusShowAxisX = true\n\t        , focusHeight = 50\n\t        , extent\n\t        , brushExtent = null\n\t        , x\n\t        , x2\n\t        , y1\n\t        , y2\n\t        , y3\n\t        , y4\n\t        , noData = null\n\t        , dispatch = d3.dispatch('brush', 'stateChange', 'changeState')\n\t        , transitionDuration = 0\n\t        , state = nv.utils.state()\n\t        , defaultState = null\n\t        , legendLeftAxisHint = ' (left axis)'\n\t        , legendRightAxisHint = ' (right axis)'\n\t        , switchYAxisOrder = false\n\t        ;\n\t\n\t    lines.clipEdge(true);\n\t    lines2.interactive(false);\n\t    // We don't want any points emitted for the focus chart's scatter graph.\n\t    lines2.pointActive(function(d) { return false });\n\t    xAxis.orient('bottom').tickPadding(5);\n\t    y1Axis.orient('left');\n\t    y2Axis.orient('right');\n\t    x2Axis.orient('bottom').tickPadding(5);\n\t    y3Axis.orient('left');\n\t    y4Axis.orient('right');\n\t\n\t    tooltip.headerEnabled(true).headerFormatter(function(d, i) {\n\t        return xAxis.tickFormat()(d, i);\n\t    });\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var getBarsAxis = function() {\n\t        return switchYAxisOrder\n\t            ? { main: y2Axis, focus: y4Axis }\n\t            : { main: y1Axis, focus: y3Axis }\n\t    }\n\t\n\t    var getLinesAxis = function() {\n\t        return switchYAxisOrder\n\t            ? { main: y1Axis, focus: y3Axis }\n\t            : { main: y2Axis, focus: y4Axis }\n\t    }\n\t\n\t    var stateGetter = function(data) {\n\t        return function(){\n\t            return {\n\t                active: data.map(function(d) { return !d.disabled })\n\t            };\n\t        }\n\t    };\n\t\n\t    var stateSetter = function(data) {\n\t        return function(state) {\n\t            if (state.active !== undefined)\n\t                data.forEach(function(series,i) {\n\t                    series.disabled = !state.active[i];\n\t                });\n\t        }\n\t    };\n\t\n\t    var allDisabled = function(data) {\n\t      return data.every(function(series) {\n\t        return series.disabled;\n\t      });\n\t    }\n\t\n\t    function chart(selection) {\n\t        selection.each(function(data) {\n\t            var container = d3.select(this),\n\t                that = this;\n\t            nv.utils.initSVG(container);\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                availableHeight1 = nv.utils.availableHeight(height, container, margin)\n\t                    - (focusEnable ? focusHeight : 0),\n\t                availableHeight2 = focusHeight - margin2.top - margin2.bottom;\n\t\n\t            chart.update = function() { container.transition().duration(transitionDuration).call(chart); };\n\t            chart.container = this;\n\t\n\t            state\n\t                .setter(stateSetter(data), chart.update)\n\t                .getter(stateGetter(data))\n\t                .update();\n\t\n\t            // DEPRECATED set state.disableddisabled\n\t            state.disabled = data.map(function(d) { return !!d.disabled });\n\t\n\t            if (!defaultState) {\n\t                var key;\n\t                defaultState = {};\n\t                for (key in state) {\n\t                    if (state[key] instanceof Array)\n\t                        defaultState[key] = state[key].slice(0);\n\t                    else\n\t                        defaultState[key] = state[key];\n\t                }\n\t            }\n\t\n\t            // Display No Data message if there's nothing to show.\n\t            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n\t                nv.utils.noData(chart, container)\n\t                return chart;\n\t            } else {\n\t                container.selectAll('.nv-noData').remove();\n\t            }\n\t\n\t            // Setup Scales\n\t            var dataBars = data.filter(function(d) { return !d.disabled && d.bar });\n\t            var dataLines = data.filter(function(d) { return !d.bar }); // removed the !d.disabled clause here to fix Issue #240\n\t\n\t            if (dataBars.length && !switchYAxisOrder) {\n\t                x = bars.xScale();\n\t            } else {\n\t                x = lines.xScale();\n\t            }\n\t\n\t            x2 = x2Axis.scale();\n\t\n\t            // select the scales and series based on the position of the yAxis\n\t            y1 = switchYAxisOrder ? lines.yScale() : bars.yScale();\n\t            y2 = switchYAxisOrder ? bars.yScale() : lines.yScale();\n\t            y3 = switchYAxisOrder ? lines2.yScale() : bars2.yScale();\n\t            y4 = switchYAxisOrder ? bars2.yScale() : lines2.yScale();\n\t\n\t            var series1 = data\n\t                .filter(function(d) { return !d.disabled && (switchYAxisOrder ? !d.bar : d.bar) })\n\t                .map(function(d) {\n\t                    return d.values.map(function(d,i) {\n\t                        return { x: getX(d,i), y: getY(d,i) }\n\t                    })\n\t                });\n\t\n\t            var series2 = data\n\t                .filter(function(d) { return !d.disabled && (switchYAxisOrder ? d.bar : !d.bar) })\n\t                .map(function(d) {\n\t                    return d.values.map(function(d,i) {\n\t                        return { x: getX(d,i), y: getY(d,i) }\n\t                    })\n\t                });\n\t\n\t            x.range([0, availableWidth]);\n\t\n\t            x2  .domain(d3.extent(d3.merge(series1.concat(series2)), function(d) { return d.x } ))\n\t                .range([0, availableWidth]);\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-linePlusBar').data([data]);\n\t            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-linePlusBar').append('g');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-legendWrap');\n\t\n\t            // this is the main chart\n\t            var focusEnter = gEnter.append('g').attr('class', 'nv-focus');\n\t            focusEnter.append('g').attr('class', 'nv-x nv-axis');\n\t            focusEnter.append('g').attr('class', 'nv-y1 nv-axis');\n\t            focusEnter.append('g').attr('class', 'nv-y2 nv-axis');\n\t            focusEnter.append('g').attr('class', 'nv-barsWrap');\n\t            focusEnter.append('g').attr('class', 'nv-linesWrap');\n\t\n\t            // context chart is where you can focus in\n\t            var contextEnter = gEnter.append('g').attr('class', 'nv-context');\n\t            contextEnter.append('g').attr('class', 'nv-x nv-axis');\n\t            contextEnter.append('g').attr('class', 'nv-y1 nv-axis');\n\t            contextEnter.append('g').attr('class', 'nv-y2 nv-axis');\n\t            contextEnter.append('g').attr('class', 'nv-barsWrap');\n\t            contextEnter.append('g').attr('class', 'nv-linesWrap');\n\t            contextEnter.append('g').attr('class', 'nv-brushBackground');\n\t            contextEnter.append('g').attr('class', 'nv-x nv-brush');\n\t\n\t            //============================================================\n\t            // Legend\n\t            //------------------------------------------------------------\n\t\n\t            if (!showLegend) {\n\t                g.select('.nv-legendWrap').selectAll('*').remove();\n\t            } else {\n\t                var legendWidth = legend.align() ? availableWidth / 2 : availableWidth;\n\t                var legendXPosition = legend.align() ? legendWidth : 0;\n\t\n\t                legend.width(legendWidth);\n\t\n\t                g.select('.nv-legendWrap')\n\t                    .datum(data.map(function(series) {\n\t                        series.originalKey = series.originalKey === undefined ? series.key : series.originalKey;\n\t                        if(switchYAxisOrder) {\n\t                            series.key = series.originalKey + (series.bar ? legendRightAxisHint : legendLeftAxisHint);\n\t                        } else {\n\t                            series.key = series.originalKey + (series.bar ? legendLeftAxisHint : legendRightAxisHint);\n\t                        }\n\t                        return series;\n\t                    }))\n\t                    .call(legend);\n\t\n\t                if (legend.height() > margin.top) {\n\t                    margin.top = legend.height();\n\t                    // FIXME: shouldn't this be \"- (focusEnabled ? focusHeight : 0)\"?\n\t                    availableHeight1 = nv.utils.availableHeight(height, container, margin) - focusHeight;\n\t                }\n\t\n\t                g.select('.nv-legendWrap')\n\t                    .attr('transform', 'translate(' + legendXPosition + ',' + (-margin.top) +')');\n\t            }\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            //============================================================\n\t            // Context chart (focus chart) components\n\t            //------------------------------------------------------------\n\t\n\t            // hide or show the focus context chart\n\t            g.select('.nv-context').style('display', focusEnable ? 'initial' : 'none');\n\t\n\t            bars2\n\t                .width(availableWidth)\n\t                .height(availableHeight2)\n\t                .color(data.map(function (d, i) {\n\t                    return d.color || color(d, i);\n\t                }).filter(function (d, i) {\n\t                    return !data[i].disabled && data[i].bar\n\t                }));\n\t            lines2\n\t                .width(availableWidth)\n\t                .height(availableHeight2)\n\t                .color(data.map(function (d, i) {\n\t                    return d.color || color(d, i);\n\t                }).filter(function (d, i) {\n\t                    return !data[i].disabled && !data[i].bar\n\t                }));\n\t\n\t            var bars2Wrap = g.select('.nv-context .nv-barsWrap')\n\t                .datum(dataBars.length ? dataBars : [\n\t                    {values: []}\n\t                ]);\n\t            var lines2Wrap = g.select('.nv-context .nv-linesWrap')\n\t                .datum(allDisabled(dataLines) ?\n\t                       [{values: []}] :\n\t                       dataLines.filter(function(dataLine) {\n\t                         return !dataLine.disabled;\n\t                       }));\n\t\n\t            g.select('.nv-context')\n\t                .attr('transform', 'translate(0,' + ( availableHeight1 + margin.bottom + margin2.top) + ')');\n\t\n\t            bars2Wrap.transition().call(bars2);\n\t            lines2Wrap.transition().call(lines2);\n\t\n\t            // context (focus chart) axis controls\n\t            if (focusShowAxisX) {\n\t                x2Axis\n\t                    ._ticks( nv.utils.calcTicksX(availableWidth / 100, data))\n\t                    .tickSize(-availableHeight2, 0);\n\t                g.select('.nv-context .nv-x.nv-axis')\n\t                    .attr('transform', 'translate(0,' + y3.range()[0] + ')');\n\t                g.select('.nv-context .nv-x.nv-axis').transition()\n\t                    .call(x2Axis);\n\t            }\n\t\n\t            if (focusShowAxisY) {\n\t                y3Axis\n\t                    .scale(y3)\n\t                    ._ticks( availableHeight2 / 36 )\n\t                    .tickSize( -availableWidth, 0);\n\t                y4Axis\n\t                    .scale(y4)\n\t                    ._ticks( availableHeight2 / 36 )\n\t                    .tickSize(dataBars.length ? 0 : -availableWidth, 0); // Show the y2 rules only if y1 has none\n\t\n\t                g.select('.nv-context .nv-y3.nv-axis')\n\t                    .style('opacity', dataBars.length ? 1 : 0)\n\t                    .attr('transform', 'translate(0,' + x2.range()[0] + ')');\n\t                g.select('.nv-context .nv-y2.nv-axis')\n\t                    .style('opacity', dataLines.length ? 1 : 0)\n\t                    .attr('transform', 'translate(' + x2.range()[1] + ',0)');\n\t\n\t                g.select('.nv-context .nv-y1.nv-axis').transition()\n\t                    .call(y3Axis);\n\t                g.select('.nv-context .nv-y2.nv-axis').transition()\n\t                    .call(y4Axis);\n\t            }\n\t\n\t            // Setup Brush\n\t            brush.x(x2).on('brush', onBrush);\n\t\n\t            if (brushExtent) brush.extent(brushExtent);\n\t\n\t            var brushBG = g.select('.nv-brushBackground').selectAll('g')\n\t                .data([brushExtent || brush.extent()]);\n\t\n\t            var brushBGenter = brushBG.enter()\n\t                .append('g');\n\t\n\t            brushBGenter.append('rect')\n\t                .attr('class', 'left')\n\t                .attr('x', 0)\n\t                .attr('y', 0)\n\t                .attr('height', availableHeight2);\n\t\n\t            brushBGenter.append('rect')\n\t                .attr('class', 'right')\n\t                .attr('x', 0)\n\t                .attr('y', 0)\n\t                .attr('height', availableHeight2);\n\t\n\t            var gBrush = g.select('.nv-x.nv-brush')\n\t                .call(brush);\n\t            gBrush.selectAll('rect')\n\t                //.attr('y', -5)\n\t                .attr('height', availableHeight2);\n\t            gBrush.selectAll('.resize').append('path').attr('d', resizePath);\n\t\n\t            //============================================================\n\t            // Event Handling/Dispatching (in chart's scope)\n\t            //------------------------------------------------------------\n\t\n\t            legend.dispatch.on('stateChange', function(newState) {\n\t                for (var key in newState)\n\t                    state[key] = newState[key];\n\t                dispatch.stateChange(state);\n\t                chart.update();\n\t            });\n\t\n\t            // Update chart from a state object passed to event handler\n\t            dispatch.on('changeState', function(e) {\n\t                if (typeof e.disabled !== 'undefined') {\n\t                    data.forEach(function(series,i) {\n\t                        series.disabled = e.disabled[i];\n\t                    });\n\t                    state.disabled = e.disabled;\n\t                }\n\t                chart.update();\n\t            });\n\t\n\t            //============================================================\n\t            // Functions\n\t            //------------------------------------------------------------\n\t\n\t            // Taken from crossfilter (http://square.github.com/crossfilter/)\n\t            function resizePath(d) {\n\t                var e = +(d == 'e'),\n\t                    x = e ? 1 : -1,\n\t                    y = availableHeight2 / 3;\n\t                return 'M' + (.5 * x) + ',' + y\n\t                    + 'A6,6 0 0 ' + e + ' ' + (6.5 * x) + ',' + (y + 6)\n\t                    + 'V' + (2 * y - 6)\n\t                    + 'A6,6 0 0 ' + e + ' ' + (.5 * x) + ',' + (2 * y)\n\t                    + 'Z'\n\t                    + 'M' + (2.5 * x) + ',' + (y + 8)\n\t                    + 'V' + (2 * y - 8)\n\t                    + 'M' + (4.5 * x) + ',' + (y + 8)\n\t                    + 'V' + (2 * y - 8);\n\t            }\n\t\n\t\n\t            function updateBrushBG() {\n\t                if (!brush.empty()) brush.extent(brushExtent);\n\t                brushBG\n\t                    .data([brush.empty() ? x2.domain() : brushExtent])\n\t                    .each(function(d,i) {\n\t                        var leftWidth = x2(d[0]) - x2.range()[0],\n\t                            rightWidth = x2.range()[1] - x2(d[1]);\n\t                        d3.select(this).select('.left')\n\t                            .attr('width',  leftWidth < 0 ? 0 : leftWidth);\n\t\n\t                        d3.select(this).select('.right')\n\t                            .attr('x', x2(d[1]))\n\t                            .attr('width', rightWidth < 0 ? 0 : rightWidth);\n\t                    });\n\t            }\n\t\n\t            function onBrush() {\n\t                brushExtent = brush.empty() ? null : brush.extent();\n\t                extent = brush.empty() ? x2.domain() : brush.extent();\n\t                dispatch.brush({extent: extent, brush: brush});\n\t                updateBrushBG();\n\t\n\t                // Prepare Main (Focus) Bars and Lines\n\t                bars\n\t                    .width(availableWidth)\n\t                    .height(availableHeight1)\n\t                    .color(data.map(function(d,i) {\n\t                        return d.color || color(d, i);\n\t                    }).filter(function(d,i) { return !data[i].disabled && data[i].bar }));\n\t\n\t                lines\n\t                    .width(availableWidth)\n\t                    .height(availableHeight1)\n\t                    .color(data.map(function(d,i) {\n\t                        return d.color || color(d, i);\n\t                    }).filter(function(d,i) { return !data[i].disabled && !data[i].bar }));\n\t\n\t                var focusBarsWrap = g.select('.nv-focus .nv-barsWrap')\n\t                    .datum(!dataBars.length ? [{values:[]}] :\n\t                        dataBars\n\t                            .map(function(d,i) {\n\t                                return {\n\t                                    key: d.key,\n\t                                    values: d.values.filter(function(d,i) {\n\t                                        return bars.x()(d,i) >= extent[0] && bars.x()(d,i) <= extent[1];\n\t                                    })\n\t                                }\n\t                            })\n\t                );\n\t\n\t                var focusLinesWrap = g.select('.nv-focus .nv-linesWrap')\n\t                    .datum(allDisabled(dataLines) ? [{values:[]}] :\n\t                           dataLines\n\t                           .filter(function(dataLine) { return !dataLine.disabled; })\n\t                           .map(function(d,i) {\n\t                                return {\n\t                                    area: d.area,\n\t                                    fillOpacity: d.fillOpacity,\n\t                                    strokeWidth: d.strokeWidth,\n\t                                    key: d.key,\n\t                                    values: d.values.filter(function(d,i) {\n\t                                        return lines.x()(d,i) >= extent[0] && lines.x()(d,i) <= extent[1];\n\t                                    })\n\t                                }\n\t                            })\n\t                );\n\t\n\t                // Update Main (Focus) X Axis\n\t                if (dataBars.length && !switchYAxisOrder) {\n\t                    x = bars.xScale();\n\t                } else {\n\t                    x = lines.xScale();\n\t                }\n\t\n\t                xAxis\n\t                    .scale(x)\n\t                    ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n\t                    .tickSize(-availableHeight1, 0);\n\t\n\t                xAxis.domain([Math.ceil(extent[0]), Math.floor(extent[1])]);\n\t\n\t                g.select('.nv-x.nv-axis').transition().duration(transitionDuration)\n\t                    .call(xAxis);\n\t\n\t                // Update Main (Focus) Bars and Lines\n\t                focusBarsWrap.transition().duration(transitionDuration).call(bars);\n\t                focusLinesWrap.transition().duration(transitionDuration).call(lines);\n\t\n\t                // Setup and Update Main (Focus) Y Axes\n\t                g.select('.nv-focus .nv-x.nv-axis')\n\t                    .attr('transform', 'translate(0,' + y1.range()[0] + ')');\n\t\n\t                y1Axis\n\t                    .scale(y1)\n\t                    ._ticks( nv.utils.calcTicksY(availableHeight1/36, data) )\n\t                    .tickSize(-availableWidth, 0);\n\t                y2Axis\n\t                    .scale(y2)\n\t                    ._ticks( nv.utils.calcTicksY(availableHeight1/36, data) );\n\t\n\t                // Show the y2 rules only if y1 has none\n\t                if(!switchYAxisOrder) {\n\t                    y2Axis.tickSize(dataBars.length ? 0 : -availableWidth, 0);\n\t                } else {\n\t                    y2Axis.tickSize(dataLines.length ? 0 : -availableWidth, 0);\n\t                }\n\t\n\t                // Calculate opacity of the axis\n\t                var barsOpacity = dataBars.length ? 1 : 0;\n\t                var linesOpacity = dataLines.length && !allDisabled(dataLines) ? 1 : 0;\n\t\n\t                var y1Opacity = switchYAxisOrder ? linesOpacity : barsOpacity;\n\t                var y2Opacity = switchYAxisOrder ? barsOpacity : linesOpacity;\n\t\n\t                g.select('.nv-focus .nv-y1.nv-axis')\n\t                    .style('opacity', y1Opacity);\n\t                g.select('.nv-focus .nv-y2.nv-axis')\n\t                    .style('opacity', y2Opacity)\n\t                    .attr('transform', 'translate(' + x.range()[1] + ',0)');\n\t\n\t                g.select('.nv-focus .nv-y1.nv-axis').transition().duration(transitionDuration)\n\t                    .call(y1Axis);\n\t                g.select('.nv-focus .nv-y2.nv-axis').transition().duration(transitionDuration)\n\t                    .call(y2Axis);\n\t            }\n\t\n\t            onBrush();\n\t\n\t        });\n\t\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Event Handling/Dispatching (out of chart's scope)\n\t    //------------------------------------------------------------\n\t\n\t    lines.dispatch.on('elementMouseover.tooltip', function(evt) {\n\t        tooltip\n\t            .duration(100)\n\t            .valueFormatter(function(d, i) {\n\t                return getLinesAxis().main.tickFormat()(d, i);\n\t            })\n\t            .data(evt)\n\t            .hidden(false);\n\t    });\n\t\n\t    lines.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t        tooltip.hidden(true)\n\t    });\n\t\n\t    bars.dispatch.on('elementMouseover.tooltip', function(evt) {\n\t        evt.value = chart.x()(evt.data);\n\t        evt['series'] = {\n\t            value: chart.y()(evt.data),\n\t            color: evt.color\n\t        };\n\t        tooltip\n\t            .duration(0)\n\t            .valueFormatter(function(d, i) {\n\t                return getBarsAxis().main.tickFormat()(d, i);\n\t            })\n\t            .data(evt)\n\t            .hidden(false);\n\t    });\n\t\n\t    bars.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t        tooltip.hidden(true);\n\t    });\n\t\n\t    bars.dispatch.on('elementMousemove.tooltip', function(evt) {\n\t        tooltip();\n\t    });\n\t\n\t    //============================================================\n\t\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    // expose chart's sub-components\n\t    chart.dispatch = dispatch;\n\t    chart.legend = legend;\n\t    chart.lines = lines;\n\t    chart.lines2 = lines2;\n\t    chart.bars = bars;\n\t    chart.bars2 = bars2;\n\t    chart.xAxis = xAxis;\n\t    chart.x2Axis = x2Axis;\n\t    chart.y1Axis = y1Axis;\n\t    chart.y2Axis = y2Axis;\n\t    chart.y3Axis = y3Axis;\n\t    chart.y4Axis = y4Axis;\n\t    chart.tooltip = tooltip;\n\t\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:      {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:     {get: function(){return height;}, set: function(_){height=_;}},\n\t        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n\t        brushExtent:    {get: function(){return brushExtent;}, set: function(_){brushExtent=_;}},\n\t        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n\t        focusEnable:    {get: function(){return focusEnable;}, set: function(_){focusEnable=_;}},\n\t        focusHeight:    {get: function(){return focusHeight;}, set: function(_){focusHeight=_;}},\n\t        focusShowAxisX:    {get: function(){return focusShowAxisX;}, set: function(_){focusShowAxisX=_;}},\n\t        focusShowAxisY:    {get: function(){return focusShowAxisY;}, set: function(_){focusShowAxisY=_;}},\n\t        legendLeftAxisHint:    {get: function(){return legendLeftAxisHint;}, set: function(_){legendLeftAxisHint=_;}},\n\t        legendRightAxisHint:    {get: function(){return legendRightAxisHint;}, set: function(_){legendRightAxisHint=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        focusMargin: {get: function(){return margin2;}, set: function(_){\n\t            margin2.top    = _.top    !== undefined ? _.top    : margin2.top;\n\t            margin2.right  = _.right  !== undefined ? _.right  : margin2.right;\n\t            margin2.bottom = _.bottom !== undefined ? _.bottom : margin2.bottom;\n\t            margin2.left   = _.left   !== undefined ? _.left   : margin2.left;\n\t        }},\n\t        duration: {get: function(){return transitionDuration;}, set: function(_){\n\t            transitionDuration = _;\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t            legend.color(color);\n\t        }},\n\t        x: {get: function(){return getX;}, set: function(_){\n\t            getX = _;\n\t            lines.x(_);\n\t            lines2.x(_);\n\t            bars.x(_);\n\t            bars2.x(_);\n\t        }},\n\t        y: {get: function(){return getY;}, set: function(_){\n\t            getY = _;\n\t            lines.y(_);\n\t            lines2.y(_);\n\t            bars.y(_);\n\t            bars2.y(_);\n\t        }},\n\t        switchYAxisOrder:    {get: function(){return switchYAxisOrder;}, set: function(_){\n\t            // Switch the tick format for the yAxis\n\t            if(switchYAxisOrder !== _) {\n\t                var y1 = y1Axis;\n\t                y1Axis = y2Axis;\n\t                y2Axis = y1;\n\t\n\t                var y3 = y3Axis;\n\t                y3Axis = y4Axis;\n\t                y4Axis = y3;\n\t            }\n\t            switchYAxisOrder=_;\n\t\n\t            y1Axis.orient('left');\n\t            y2Axis.orient('right');\n\t            y3Axis.orient('left');\n\t            y4Axis.orient('right');\n\t        }}\n\t    });\n\t\n\t    nv.utils.inheritOptions(chart, lines);\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\t\n\tnv.models.multiBar = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n\t        , width = 960\n\t        , height = 500\n\t        , x = d3.scale.ordinal()\n\t        , y = d3.scale.linear()\n\t        , id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n\t        , container = null\n\t        , getX = function(d) { return d.x }\n\t        , getY = function(d) { return d.y }\n\t        , forceY = [0] // 0 is forced by default.. this makes sense for the majority of bar graphs... user can always do chart.forceY([]) to remove\n\t        , clipEdge = true\n\t        , stacked = false\n\t        , stackOffset = 'zero' // options include 'silhouette', 'wiggle', 'expand', 'zero', or a custom function\n\t        , color = nv.utils.defaultColor()\n\t        , hideable = false\n\t        , barColor = null // adding the ability to set the color for each rather than the whole group\n\t        , disabled // used in conjunction with barColor to communicate from multiBarHorizontalChart what series are disabled\n\t        , duration = 500\n\t        , xDomain\n\t        , yDomain\n\t        , xRange\n\t        , yRange\n\t        , groupSpacing = 0.1\n\t        , fillOpacity = 0.75\n\t        , dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd')\n\t        ;\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var x0, y0 //used to store previous scales\n\t        , renderWatch = nv.utils.renderWatch(dispatch, duration)\n\t        ;\n\t\n\t    var last_datalength = 0;\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        selection.each(function(data) {\n\t            var availableWidth = width - margin.left - margin.right,\n\t                availableHeight = height - margin.top - margin.bottom;\n\t\n\t            container = d3.select(this);\n\t            nv.utils.initSVG(container);\n\t            var nonStackableCount = 0;\n\t            // This function defines the requirements for render complete\n\t            var endFn = function(d, i) {\n\t                if (d.series === data.length - 1 && i === data[0].values.length - 1)\n\t                    return true;\n\t                return false;\n\t            };\n\t\n\t            if(hideable && data.length) hideable = [{\n\t                values: data[0].values.map(function(d) {\n\t                        return {\n\t                            x: d.x,\n\t                            y: 0,\n\t                            series: d.series,\n\t                            size: 0.01\n\t                        };}\n\t                )}];\n\t\n\t            if (stacked) {\n\t                var parsed = d3.layout.stack()\n\t                    .offset(stackOffset)\n\t                    .values(function(d){ return d.values })\n\t                    .y(getY)\n\t                (!data.length && hideable ? hideable : data);\n\t\n\t                parsed.forEach(function(series, i){\n\t                    // if series is non-stackable, use un-parsed data\n\t                    if (series.nonStackable) {\n\t                        data[i].nonStackableSeries = nonStackableCount++;\n\t                        parsed[i] = data[i];\n\t                    } else {\n\t                        // don't stack this seires on top of the nonStackable seriees\n\t                        if (i > 0 && parsed[i - 1].nonStackable){\n\t                            parsed[i].values.map(function(d,j){\n\t                                d.y0 -= parsed[i - 1].values[j].y;\n\t                                d.y1 = d.y0 + d.y;\n\t                            });\n\t                        }\n\t                    }\n\t                });\n\t                data = parsed;\n\t            }\n\t            //add series index and key to each data point for reference\n\t            data.forEach(function(series, i) {\n\t                series.values.forEach(function(point) {\n\t                    point.series = i;\n\t                    point.key = series.key;\n\t                });\n\t            });\n\t\n\t            // HACK for negative value stacking\n\t            if (stacked && data.length > 0) {\n\t                data[0].values.map(function(d,i) {\n\t                    var posBase = 0, negBase = 0;\n\t                    data.map(function(d, idx) {\n\t                        if (!data[idx].nonStackable) {\n\t                            var f = d.values[i]\n\t                            f.size = Math.abs(f.y);\n\t                            if (f.y<0)  {\n\t                                f.y1 = negBase;\n\t                                negBase = negBase - f.size;\n\t                            } else\n\t                            {\n\t                                f.y1 = f.size + posBase;\n\t                                posBase = posBase + f.size;\n\t                            }\n\t                        }\n\t\n\t                    });\n\t                });\n\t            }\n\t            // Setup Scales\n\t            // remap and flatten the data for use in calculating the scales' domains\n\t            var seriesData = (xDomain && yDomain) ? [] : // if we know xDomain and yDomain, no need to calculate\n\t                data.map(function(d, idx) {\n\t                    return d.values.map(function(d,i) {\n\t                        return { x: getX(d,i), y: getY(d,i), y0: d.y0, y1: d.y1, idx:idx }\n\t                    })\n\t                });\n\t\n\t            x.domain(xDomain || d3.merge(seriesData).map(function(d) { return d.x }))\n\t                .rangeBands(xRange || [0, availableWidth], groupSpacing);\n\t\n\t            y.domain(yDomain || d3.extent(d3.merge(seriesData).map(function(d) {\n\t                var domain = d.y;\n\t                // increase the domain range if this series is stackable\n\t                if (stacked && !data[d.idx].nonStackable) {\n\t                    if (d.y > 0){\n\t                        domain = d.y1\n\t                    } else {\n\t                        domain = d.y1 + d.y\n\t                    }\n\t                }\n\t                return domain;\n\t            }).concat(forceY)))\n\t            .range(yRange || [availableHeight, 0]);\n\t\n\t            // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n\t            if (x.domain()[0] === x.domain()[1])\n\t                x.domain()[0] ?\n\t                    x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01])\n\t                    : x.domain([-1,1]);\n\t\n\t            if (y.domain()[0] === y.domain()[1])\n\t                y.domain()[0] ?\n\t                    y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01])\n\t                    : y.domain([-1,1]);\n\t\n\t            x0 = x0 || x;\n\t            y0 = y0 || y;\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-multibar').data([data]);\n\t            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multibar');\n\t            var defsEnter = wrapEnter.append('defs');\n\t            var gEnter = wrapEnter.append('g');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-groups');\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            defsEnter.append('clipPath')\n\t                .attr('id', 'nv-edge-clip-' + id)\n\t                .append('rect');\n\t            wrap.select('#nv-edge-clip-' + id + ' rect')\n\t                .attr('width', availableWidth)\n\t                .attr('height', availableHeight);\n\t\n\t            g.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + id + ')' : '');\n\t\n\t            var groups = wrap.select('.nv-groups').selectAll('.nv-group')\n\t                .data(function(d) { return d }, function(d,i) { return i });\n\t            groups.enter().append('g')\n\t                .style('stroke-opacity', 1e-6)\n\t                .style('fill-opacity', 1e-6);\n\t\n\t            var exitTransition = renderWatch\n\t                .transition(groups.exit().selectAll('rect.nv-bar'), 'multibarExit', Math.min(100, duration))\n\t                .attr('y', function(d, i, j) {\n\t                    var yVal = y0(0) || 0;\n\t                    if (stacked) {\n\t                        if (data[d.series] && !data[d.series].nonStackable) {\n\t                            yVal = y0(d.y0);\n\t                        }\n\t                    }\n\t                    return yVal;\n\t                })\n\t                .attr('height', 0)\n\t                .remove();\n\t            if (exitTransition.delay)\n\t                exitTransition.delay(function(d,i) {\n\t                    var delay = i * (duration / (last_datalength + 1)) - i;\n\t                    return delay;\n\t                });\n\t            groups\n\t                .attr('class', function(d,i) { return 'nv-group nv-series-' + i })\n\t                .classed('hover', function(d) { return d.hover })\n\t                .style('fill', function(d,i){ return color(d, i) })\n\t                .style('stroke', function(d,i){ return color(d, i) });\n\t            groups\n\t                .style('stroke-opacity', 1)\n\t                .style('fill-opacity', fillOpacity);\n\t\n\t            var bars = groups.selectAll('rect.nv-bar')\n\t                .data(function(d) { return (hideable && !data.length) ? hideable.values : d.values });\n\t            bars.exit().remove();\n\t\n\t            var barsEnter = bars.enter().append('rect')\n\t                    .attr('class', function(d,i) { return getY(d,i) < 0 ? 'nv-bar negative' : 'nv-bar positive'})\n\t                    .attr('x', function(d,i,j) {\n\t                        return stacked && !data[j].nonStackable ? 0 : (j * x.rangeBand() / data.length )\n\t                    })\n\t                    .attr('y', function(d,i,j) { return y0(stacked && !data[j].nonStackable ? d.y0 : 0) || 0 })\n\t                    .attr('height', 0)\n\t                    .attr('width', function(d,i,j) { return x.rangeBand() / (stacked && !data[j].nonStackable ? 1 : data.length) })\n\t                    .attr('transform', function(d,i) { return 'translate(' + x(getX(d,i)) + ',0)'; })\n\t                ;\n\t            bars\n\t                .style('fill', function(d,i,j){ return color(d, j, i);  })\n\t                .style('stroke', function(d,i,j){ return color(d, j, i); })\n\t                .on('mouseover', function(d,i) { //TODO: figure out why j works above, but not here\n\t                    d3.select(this).classed('hover', true);\n\t                    dispatch.elementMouseover({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\")\n\t                    });\n\t                })\n\t                .on('mouseout', function(d,i) {\n\t                    d3.select(this).classed('hover', false);\n\t                    dispatch.elementMouseout({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\")\n\t                    });\n\t                })\n\t                .on('mousemove', function(d,i) {\n\t                    dispatch.elementMousemove({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\")\n\t                    });\n\t                })\n\t                .on('click', function(d,i) {\n\t                    var element = this;\n\t                    dispatch.elementClick({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\"),\n\t                        event: d3.event,\n\t                        element: element\n\t                    });\n\t                    d3.event.stopPropagation();\n\t                })\n\t                .on('dblclick', function(d,i) {\n\t                    dispatch.elementDblClick({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\")\n\t                    });\n\t                    d3.event.stopPropagation();\n\t                });\n\t            bars\n\t                .attr('class', function(d,i) { return getY(d,i) < 0 ? 'nv-bar negative' : 'nv-bar positive'})\n\t                .attr('transform', function(d,i) { return 'translate(' + x(getX(d,i)) + ',0)'; })\n\t\n\t            if (barColor) {\n\t                if (!disabled) disabled = data.map(function() { return true });\n\t                bars\n\t                    .style('fill', function(d,i,j) { return d3.rgb(barColor(d,i)).darker(  disabled.map(function(d,i) { return i }).filter(function(d,i){ return !disabled[i]  })[j]   ).toString(); })\n\t                    .style('stroke', function(d,i,j) { return d3.rgb(barColor(d,i)).darker(  disabled.map(function(d,i) { return i }).filter(function(d,i){ return !disabled[i]  })[j]   ).toString(); });\n\t            }\n\t\n\t            var barSelection =\n\t                bars.watchTransition(renderWatch, 'multibar', Math.min(250, duration))\n\t                    .delay(function(d,i) {\n\t                        return i * duration / data[0].values.length;\n\t                    });\n\t            if (stacked){\n\t                barSelection\n\t                    .attr('y', function(d,i,j) {\n\t                        var yVal = 0;\n\t                        // if stackable, stack it on top of the previous series\n\t                        if (!data[j].nonStackable) {\n\t                            yVal = y(d.y1);\n\t                        } else {\n\t                            if (getY(d,i) < 0){\n\t                                yVal = y(0);\n\t                            } else {\n\t                                if (y(0) - y(getY(d,i)) < -1){\n\t                                    yVal = y(0) - 1;\n\t                                } else {\n\t                                    yVal = y(getY(d, i)) || 0;\n\t                                }\n\t                            }\n\t                        }\n\t                        return yVal;\n\t                    })\n\t                    .attr('height', function(d,i,j) {\n\t                        if (!data[j].nonStackable) {\n\t                            return Math.max(Math.abs(y(d.y+d.y0) - y(d.y0)), 0);\n\t                        } else {\n\t                            return Math.max(Math.abs(y(getY(d,i)) - y(0)), 0) || 0;\n\t                        }\n\t                    })\n\t                    .attr('x', function(d,i,j) {\n\t                        var width = 0;\n\t                        if (data[j].nonStackable) {\n\t                            width = d.series * x.rangeBand() / data.length;\n\t                            if (data.length !== nonStackableCount){\n\t                                width = data[j].nonStackableSeries * x.rangeBand()/(nonStackableCount*2);\n\t                            }\n\t                        }\n\t                        return width;\n\t                    })\n\t                    .attr('width', function(d,i,j){\n\t                        if (!data[j].nonStackable) {\n\t                            return x.rangeBand();\n\t                        } else {\n\t                            // if all series are nonStacable, take the full width\n\t                            var width = (x.rangeBand() / nonStackableCount);\n\t                            // otherwise, nonStackable graph will be only taking the half-width\n\t                            // of the x rangeBand\n\t                            if (data.length !== nonStackableCount) {\n\t                                width = x.rangeBand()/(nonStackableCount*2);\n\t                            }\n\t                            return width;\n\t                        }\n\t                    });\n\t            }\n\t            else {\n\t                barSelection\n\t                    .attr('x', function(d,i) {\n\t                        return d.series * x.rangeBand() / data.length;\n\t                    })\n\t                    .attr('width', x.rangeBand() / data.length)\n\t                    .attr('y', function(d,i) {\n\t                        return getY(d,i) < 0 ?\n\t                            y(0) :\n\t                                y(0) - y(getY(d,i)) < 1 ?\n\t                            y(0) - 1 :\n\t                            y(getY(d,i)) || 0;\n\t                    })\n\t                    .attr('height', function(d,i) {\n\t                        return Math.max(Math.abs(y(getY(d,i)) - y(0)),1) || 0;\n\t                    });\n\t            }\n\t\n\t            //store old scales for use in transitions on update\n\t            x0 = x.copy();\n\t            y0 = y.copy();\n\t\n\t            // keep track of the last data value length for transition calculations\n\t            if (data[0] && data[0].values) {\n\t                last_datalength = data[0].values.length;\n\t            }\n\t\n\t        });\n\t\n\t        renderWatch.renderEnd('multibar immediate');\n\t\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.dispatch = dispatch;\n\t\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:   {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:  {get: function(){return height;}, set: function(_){height=_;}},\n\t        x:       {get: function(){return getX;}, set: function(_){getX=_;}},\n\t        y:       {get: function(){return getY;}, set: function(_){getY=_;}},\n\t        xScale:  {get: function(){return x;}, set: function(_){x=_;}},\n\t        yScale:  {get: function(){return y;}, set: function(_){y=_;}},\n\t        xDomain: {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n\t        yDomain: {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n\t        xRange:  {get: function(){return xRange;}, set: function(_){xRange=_;}},\n\t        yRange:  {get: function(){return yRange;}, set: function(_){yRange=_;}},\n\t        forceY:  {get: function(){return forceY;}, set: function(_){forceY=_;}},\n\t        stacked: {get: function(){return stacked;}, set: function(_){stacked=_;}},\n\t        stackOffset: {get: function(){return stackOffset;}, set: function(_){stackOffset=_;}},\n\t        clipEdge:    {get: function(){return clipEdge;}, set: function(_){clipEdge=_;}},\n\t        disabled:    {get: function(){return disabled;}, set: function(_){disabled=_;}},\n\t        id:          {get: function(){return id;}, set: function(_){id=_;}},\n\t        hideable:    {get: function(){return hideable;}, set: function(_){hideable=_;}},\n\t        groupSpacing:{get: function(){return groupSpacing;}, set: function(_){groupSpacing=_;}},\n\t        fillOpacity: {get: function(){return fillOpacity;}, set: function(_){fillOpacity=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        duration: {get: function(){return duration;}, set: function(_){\n\t            duration = _;\n\t            renderWatch.reset(duration);\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t        }},\n\t        barColor:  {get: function(){return barColor;}, set: function(_){\n\t            barColor = _ ? nv.utils.getColor(_) : null;\n\t        }}\n\t    });\n\t\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\tnv.models.multiBarChart = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var multibar = nv.models.multiBar()\n\t        , xAxis = nv.models.axis()\n\t        , yAxis = nv.models.axis()\n\t        , interactiveLayer = nv.interactiveGuideline()\n\t        , legend = nv.models.legend()\n\t        , controls = nv.models.legend()\n\t        , tooltip = nv.models.tooltip()\n\t        ;\n\t\n\t    var margin = {top: 30, right: 20, bottom: 50, left: 60}\n\t        , width = null\n\t        , height = null\n\t        , color = nv.utils.defaultColor()\n\t        , showControls = true\n\t        , controlLabels = {}\n\t        , showLegend = true\n\t        , showXAxis = true\n\t        , showYAxis = true\n\t        , rightAlignYAxis = false\n\t        , reduceXTicks = true // if false a tick will show for every data point\n\t        , staggerLabels = false\n\t        , wrapLabels = false\n\t        , rotateLabels = 0\n\t        , x //can be accessed via chart.xScale()\n\t        , y //can be accessed via chart.yScale()\n\t        , state = nv.utils.state()\n\t        , defaultState = null\n\t        , noData = null\n\t        , dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd')\n\t        , controlWidth = function() { return showControls ? 180 : 0 }\n\t        , duration = 250\n\t        , useInteractiveGuideline = false\n\t        ;\n\t\n\t    state.stacked = false // DEPRECATED Maintained for backward compatibility\n\t\n\t    multibar.stacked(false);\n\t    xAxis\n\t        .orient('bottom')\n\t        .tickPadding(7)\n\t        .showMaxMin(false)\n\t        .tickFormat(function(d) { return d })\n\t    ;\n\t    yAxis\n\t        .orient((rightAlignYAxis) ? 'right' : 'left')\n\t        .tickFormat(d3.format(',.1f'))\n\t    ;\n\t\n\t    tooltip\n\t        .duration(0)\n\t        .valueFormatter(function(d, i) {\n\t            return yAxis.tickFormat()(d, i);\n\t        })\n\t        .headerFormatter(function(d, i) {\n\t            return xAxis.tickFormat()(d, i);\n\t        });\n\t\n\t    controls.updateState(false);\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var renderWatch = nv.utils.renderWatch(dispatch);\n\t    var stacked = false;\n\t\n\t    var stateGetter = function(data) {\n\t        return function(){\n\t            return {\n\t                active: data.map(function(d) { return !d.disabled }),\n\t                stacked: stacked\n\t            };\n\t        }\n\t    };\n\t\n\t    var stateSetter = function(data) {\n\t        return function(state) {\n\t            if (state.stacked !== undefined)\n\t                stacked = state.stacked;\n\t            if (state.active !== undefined)\n\t                data.forEach(function(series,i) {\n\t                    series.disabled = !state.active[i];\n\t                });\n\t        }\n\t    };\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        renderWatch.models(multibar);\n\t        if (showXAxis) renderWatch.models(xAxis);\n\t        if (showYAxis) renderWatch.models(yAxis);\n\t\n\t        selection.each(function(data) {\n\t            var container = d3.select(this),\n\t                that = this;\n\t            nv.utils.initSVG(container);\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                availableHeight = nv.utils.availableHeight(height, container, margin);\n\t\n\t            chart.update = function() {\n\t                if (duration === 0)\n\t                    container.call(chart);\n\t                else\n\t                    container.transition()\n\t                        .duration(duration)\n\t                        .call(chart);\n\t            };\n\t            chart.container = this;\n\t\n\t            state\n\t                .setter(stateSetter(data), chart.update)\n\t                .getter(stateGetter(data))\n\t                .update();\n\t\n\t            // DEPRECATED set state.disableddisabled\n\t            state.disabled = data.map(function(d) { return !!d.disabled });\n\t\n\t            if (!defaultState) {\n\t                var key;\n\t                defaultState = {};\n\t                for (key in state) {\n\t                    if (state[key] instanceof Array)\n\t                        defaultState[key] = state[key].slice(0);\n\t                    else\n\t                        defaultState[key] = state[key];\n\t                }\n\t            }\n\t\n\t            // Display noData message if there's nothing to show.\n\t            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n\t                nv.utils.noData(chart, container)\n\t                return chart;\n\t            } else {\n\t                container.selectAll('.nv-noData').remove();\n\t            }\n\t\n\t            // Setup Scales\n\t            x = multibar.xScale();\n\t            y = multibar.yScale();\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-multiBarWithLegend').data([data]);\n\t            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multiBarWithLegend').append('g');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-x nv-axis');\n\t            gEnter.append('g').attr('class', 'nv-y nv-axis');\n\t            gEnter.append('g').attr('class', 'nv-barsWrap');\n\t            gEnter.append('g').attr('class', 'nv-legendWrap');\n\t            gEnter.append('g').attr('class', 'nv-controlsWrap');\n\t            gEnter.append('g').attr('class', 'nv-interactive');\n\t\n\t            // Legend\n\t            if (!showLegend) {\n\t                g.select('.nv-legendWrap').selectAll('*').remove();\n\t            } else {\n\t                legend.width(availableWidth - controlWidth());\n\t\n\t                g.select('.nv-legendWrap')\n\t                    .datum(data)\n\t                    .call(legend);\n\t\n\t                if (legend.height() > margin.top) {\n\t                    margin.top = legend.height();\n\t                    availableHeight = nv.utils.availableHeight(height, container, margin);\n\t                }\n\t\n\t                g.select('.nv-legendWrap')\n\t                    .attr('transform', 'translate(' + controlWidth() + ',' + (-margin.top) +')');\n\t            }\n\t\n\t            // Controls\n\t            if (!showControls) {\n\t                 g.select('.nv-controlsWrap').selectAll('*').remove();\n\t            } else {\n\t                var controlsData = [\n\t                    { key: controlLabels.grouped || 'Grouped', disabled: multibar.stacked() },\n\t                    { key: controlLabels.stacked || 'Stacked', disabled: !multibar.stacked() }\n\t                ];\n\t\n\t                controls.width(controlWidth()).color(['#444', '#444', '#444']);\n\t                g.select('.nv-controlsWrap')\n\t                    .datum(controlsData)\n\t                    .attr('transform', 'translate(0,' + (-margin.top) +')')\n\t                    .call(controls);\n\t            }\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t            if (rightAlignYAxis) {\n\t                g.select(\".nv-y.nv-axis\")\n\t                    .attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n\t            }\n\t\n\t            // Main Chart Component(s)\n\t            multibar\n\t                .disabled(data.map(function(series) { return series.disabled }))\n\t                .width(availableWidth)\n\t                .height(availableHeight)\n\t                .color(data.map(function(d,i) {\n\t                    return d.color || color(d, i);\n\t                }).filter(function(d,i) { return !data[i].disabled }));\n\t\n\t\n\t            var barsWrap = g.select('.nv-barsWrap')\n\t                .datum(data.filter(function(d) { return !d.disabled }));\n\t\n\t            barsWrap.call(multibar);\n\t\n\t            // Setup Axes\n\t            if (showXAxis) {\n\t                xAxis\n\t                    .scale(x)\n\t                    ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n\t                    .tickSize(-availableHeight, 0);\n\t\n\t                g.select('.nv-x.nv-axis')\n\t                    .attr('transform', 'translate(0,' + y.range()[0] + ')');\n\t                g.select('.nv-x.nv-axis')\n\t                    .call(xAxis);\n\t\n\t                var xTicks = g.select('.nv-x.nv-axis > g').selectAll('g');\n\t\n\t                xTicks\n\t                    .selectAll('line, text')\n\t                    .style('opacity', 1)\n\t\n\t                if (staggerLabels) {\n\t                    var getTranslate = function(x,y) {\n\t                        return \"translate(\" + x + \",\" + y + \")\";\n\t                    };\n\t\n\t                    var staggerUp = 5, staggerDown = 17;  //pixels to stagger by\n\t                    // Issue #140\n\t                    xTicks\n\t                        .selectAll(\"text\")\n\t                        .attr('transform', function(d,i,j) {\n\t                            return  getTranslate(0, (j % 2 == 0 ? staggerUp : staggerDown));\n\t                        });\n\t\n\t                    var totalInBetweenTicks = d3.selectAll(\".nv-x.nv-axis .nv-wrap g g text\")[0].length;\n\t                    g.selectAll(\".nv-x.nv-axis .nv-axisMaxMin text\")\n\t                        .attr(\"transform\", function(d,i) {\n\t                            return getTranslate(0, (i === 0 || totalInBetweenTicks % 2 !== 0) ? staggerDown : staggerUp);\n\t                        });\n\t                }\n\t\n\t                if (wrapLabels) {\n\t                    g.selectAll('.tick text')\n\t                        .call(nv.utils.wrapTicks, chart.xAxis.rangeBand())\n\t                }\n\t\n\t                if (reduceXTicks)\n\t                    xTicks\n\t                        .filter(function(d,i) {\n\t                            return i % Math.ceil(data[0].values.length / (availableWidth / 100)) !== 0;\n\t                        })\n\t                        .selectAll('text, line')\n\t                        .style('opacity', 0);\n\t\n\t                if(rotateLabels)\n\t                    xTicks\n\t                        .selectAll('.tick text')\n\t                        .attr('transform', 'rotate(' + rotateLabels + ' 0,0)')\n\t                        .style('text-anchor', rotateLabels > 0 ? 'start' : 'end');\n\t\n\t                g.select('.nv-x.nv-axis').selectAll('g.nv-axisMaxMin text')\n\t                    .style('opacity', 1);\n\t            }\n\t\n\t            if (showYAxis) {\n\t                yAxis\n\t                    .scale(y)\n\t                    ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n\t                    .tickSize( -availableWidth, 0);\n\t\n\t                g.select('.nv-y.nv-axis')\n\t                    .call(yAxis);\n\t            }\n\t\n\t            //Set up interactive layer\n\t            if (useInteractiveGuideline) {\n\t                interactiveLayer\n\t                    .width(availableWidth)\n\t                    .height(availableHeight)\n\t                    .margin({left:margin.left, top:margin.top})\n\t                    .svgContainer(container)\n\t                    .xScale(x);\n\t                wrap.select(\".nv-interactive\").call(interactiveLayer);\n\t            }\n\t\n\t            //============================================================\n\t            // Event Handling/Dispatching (in chart's scope)\n\t            //------------------------------------------------------------\n\t\n\t            legend.dispatch.on('stateChange', function(newState) {\n\t                for (var key in newState)\n\t                    state[key] = newState[key];\n\t                dispatch.stateChange(state);\n\t                chart.update();\n\t            });\n\t\n\t            controls.dispatch.on('legendClick', function(d,i) {\n\t                if (!d.disabled) return;\n\t                controlsData = controlsData.map(function(s) {\n\t                    s.disabled = true;\n\t                    return s;\n\t                });\n\t                d.disabled = false;\n\t\n\t                switch (d.key) {\n\t                    case 'Grouped':\n\t                    case controlLabels.grouped:\n\t                        multibar.stacked(false);\n\t                        break;\n\t                    case 'Stacked':\n\t                    case controlLabels.stacked:\n\t                        multibar.stacked(true);\n\t                        break;\n\t                }\n\t\n\t                state.stacked = multibar.stacked();\n\t                dispatch.stateChange(state);\n\t                chart.update();\n\t            });\n\t\n\t            // Update chart from a state object passed to event handler\n\t            dispatch.on('changeState', function(e) {\n\t                if (typeof e.disabled !== 'undefined') {\n\t                    data.forEach(function(series,i) {\n\t                        series.disabled = e.disabled[i];\n\t                    });\n\t                    state.disabled = e.disabled;\n\t                }\n\t                if (typeof e.stacked !== 'undefined') {\n\t                    multibar.stacked(e.stacked);\n\t                    state.stacked = e.stacked;\n\t                    stacked = e.stacked;\n\t                }\n\t                chart.update();\n\t            });\n\t\n\t            if (useInteractiveGuideline) {\n\t                interactiveLayer.dispatch.on('elementMousemove', function(e) {\n\t                    if (e.pointXValue == undefined) return;\n\t\n\t                    var singlePoint, pointIndex, pointXLocation, xValue, allData = [];\n\t                    data\n\t                        .filter(function(series, i) {\n\t                            series.seriesIndex = i;\n\t                            return !series.disabled;\n\t                        })\n\t                        .forEach(function(series,i) {\n\t                            pointIndex = x.domain().indexOf(e.pointXValue)\n\t\n\t                            var point = series.values[pointIndex];\n\t                            if (point === undefined) return;\n\t\n\t                            xValue = point.x;\n\t                            if (singlePoint === undefined) singlePoint = point;\n\t                            if (pointXLocation === undefined) pointXLocation = e.mouseX\n\t                            allData.push({\n\t                                key: series.key,\n\t                                value: chart.y()(point, pointIndex),\n\t                                color: color(series,series.seriesIndex),\n\t                                data: series.values[pointIndex]\n\t                            });\n\t                        });\n\t\n\t                    interactiveLayer.tooltip\n\t                        .data({\n\t                            value: xValue,\n\t                            index: pointIndex,\n\t                            series: allData\n\t                        })();\n\t\n\t                    interactiveLayer.renderGuideLine(pointXLocation);\n\t                });\n\t\n\t                interactiveLayer.dispatch.on(\"elementMouseout\",function(e) {\n\t                    interactiveLayer.tooltip.hidden(true);\n\t                });\n\t            }\n\t            else {\n\t                multibar.dispatch.on('elementMouseover.tooltip', function(evt) {\n\t                    evt.value = chart.x()(evt.data);\n\t                    evt['series'] = {\n\t                        key: evt.data.key,\n\t                        value: chart.y()(evt.data),\n\t                        color: evt.color\n\t                    };\n\t                    tooltip.data(evt).hidden(false);\n\t                });\n\t\n\t                multibar.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t                    tooltip.hidden(true);\n\t                });\n\t\n\t                multibar.dispatch.on('elementMousemove.tooltip', function(evt) {\n\t                    tooltip();\n\t                });\n\t            }\n\t        });\n\t\n\t        renderWatch.renderEnd('multibarchart immediate');\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    // expose chart's sub-components\n\t    chart.dispatch = dispatch;\n\t    chart.multibar = multibar;\n\t    chart.legend = legend;\n\t    chart.controls = controls;\n\t    chart.xAxis = xAxis;\n\t    chart.yAxis = yAxis;\n\t    chart.state = state;\n\t    chart.tooltip = tooltip;\n\t    chart.interactiveLayer = interactiveLayer;\n\t\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:      {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:     {get: function(){return height;}, set: function(_){height=_;}},\n\t        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n\t        showControls: {get: function(){return showControls;}, set: function(_){showControls=_;}},\n\t        controlLabels: {get: function(){return controlLabels;}, set: function(_){controlLabels=_;}},\n\t        showXAxis:      {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n\t        showYAxis:    {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n\t        defaultState:    {get: function(){return defaultState;}, set: function(_){defaultState=_;}},\n\t        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n\t        reduceXTicks:    {get: function(){return reduceXTicks;}, set: function(_){reduceXTicks=_;}},\n\t        rotateLabels:    {get: function(){return rotateLabels;}, set: function(_){rotateLabels=_;}},\n\t        staggerLabels:    {get: function(){return staggerLabels;}, set: function(_){staggerLabels=_;}},\n\t        wrapLabels:   {get: function(){return wrapLabels;}, set: function(_){wrapLabels=!!_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        duration: {get: function(){return duration;}, set: function(_){\n\t            duration = _;\n\t            multibar.duration(duration);\n\t            xAxis.duration(duration);\n\t            yAxis.duration(duration);\n\t            renderWatch.reset(duration);\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t            legend.color(color);\n\t        }},\n\t        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n\t            rightAlignYAxis = _;\n\t            yAxis.orient( rightAlignYAxis ? 'right' : 'left');\n\t        }},\n\t        useInteractiveGuideline: {get: function(){return useInteractiveGuideline;}, set: function(_){\n\t            useInteractiveGuideline = _;\n\t        }},\n\t        barColor:  {get: function(){return multibar.barColor;}, set: function(_){\n\t            multibar.barColor(_);\n\t            legend.color(function(d,i) {return d3.rgb('#ccc').darker(i * 1.5).toString();})\n\t        }}\n\t    });\n\t\n\t    nv.utils.inheritOptions(chart, multibar);\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\t\n\tnv.models.multiBarHorizontal = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n\t        , width = 960\n\t        , height = 500\n\t        , id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n\t        , container = null\n\t        , x = d3.scale.ordinal()\n\t        , y = d3.scale.linear()\n\t        , getX = function(d) { return d.x }\n\t        , getY = function(d) { return d.y }\n\t        , getYerr = function(d) { return d.yErr }\n\t        , forceY = [0] // 0 is forced by default.. this makes sense for the majority of bar graphs... user can always do chart.forceY([]) to remove\n\t        , color = nv.utils.defaultColor()\n\t        , barColor = null // adding the ability to set the color for each rather than the whole group\n\t        , disabled // used in conjunction with barColor to communicate from multiBarHorizontalChart what series are disabled\n\t        , stacked = false\n\t        , showValues = false\n\t        , showBarLabels = false\n\t        , valuePadding = 60\n\t        , groupSpacing = 0.1\n\t        , fillOpacity = 0.75\n\t        , valueFormat = d3.format(',.2f')\n\t        , delay = 1200\n\t        , xDomain\n\t        , yDomain\n\t        , xRange\n\t        , yRange\n\t        , duration = 250\n\t        , dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd')\n\t        ;\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var x0, y0; //used to store previous scales\n\t    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        selection.each(function(data) {\n\t            var availableWidth = width - margin.left - margin.right,\n\t                availableHeight = height - margin.top - margin.bottom;\n\t\n\t            container = d3.select(this);\n\t            nv.utils.initSVG(container);\n\t\n\t            if (stacked)\n\t                data = d3.layout.stack()\n\t                    .offset('zero')\n\t                    .values(function(d){ return d.values })\n\t                    .y(getY)\n\t                (data);\n\t\n\t            //add series index and key to each data point for reference\n\t            data.forEach(function(series, i) {\n\t                series.values.forEach(function(point) {\n\t                    point.series = i;\n\t                    point.key = series.key;\n\t                });\n\t            });\n\t\n\t            // HACK for negative value stacking\n\t            if (stacked)\n\t                data[0].values.map(function(d,i) {\n\t                    var posBase = 0, negBase = 0;\n\t                    data.map(function(d) {\n\t                        var f = d.values[i]\n\t                        f.size = Math.abs(f.y);\n\t                        if (f.y<0)  {\n\t                            f.y1 = negBase - f.size;\n\t                            negBase = negBase - f.size;\n\t                        } else\n\t                        {\n\t                            f.y1 = posBase;\n\t                            posBase = posBase + f.size;\n\t                        }\n\t                    });\n\t                });\n\t\n\t            // Setup Scales\n\t            // remap and flatten the data for use in calculating the scales' domains\n\t            var seriesData = (xDomain && yDomain) ? [] : // if we know xDomain and yDomain, no need to calculate\n\t                data.map(function(d) {\n\t                    return d.values.map(function(d,i) {\n\t                        return { x: getX(d,i), y: getY(d,i), y0: d.y0, y1: d.y1 }\n\t                    })\n\t                });\n\t\n\t            x.domain(xDomain || d3.merge(seriesData).map(function(d) { return d.x }))\n\t                .rangeBands(xRange || [0, availableHeight], groupSpacing);\n\t\n\t            y.domain(yDomain || d3.extent(d3.merge(seriesData).map(function(d) { return stacked ? (d.y > 0 ? d.y1 + d.y : d.y1 ) : d.y }).concat(forceY)))\n\t\n\t            if (showValues && !stacked)\n\t                y.range(yRange || [(y.domain()[0] < 0 ? valuePadding : 0), availableWidth - (y.domain()[1] > 0 ? valuePadding : 0) ]);\n\t            else\n\t                y.range(yRange || [0, availableWidth]);\n\t\n\t            x0 = x0 || x;\n\t            y0 = y0 || d3.scale.linear().domain(y.domain()).range([y(0),y(0)]);\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = d3.select(this).selectAll('g.nv-wrap.nv-multibarHorizontal').data([data]);\n\t            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multibarHorizontal');\n\t            var defsEnter = wrapEnter.append('defs');\n\t            var gEnter = wrapEnter.append('g');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-groups');\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            var groups = wrap.select('.nv-groups').selectAll('.nv-group')\n\t                .data(function(d) { return d }, function(d,i) { return i });\n\t            groups.enter().append('g')\n\t                .style('stroke-opacity', 1e-6)\n\t                .style('fill-opacity', 1e-6);\n\t            groups.exit().watchTransition(renderWatch, 'multibarhorizontal: exit groups')\n\t                .style('stroke-opacity', 1e-6)\n\t                .style('fill-opacity', 1e-6)\n\t                .remove();\n\t            groups\n\t                .attr('class', function(d,i) { return 'nv-group nv-series-' + i })\n\t                .classed('hover', function(d) { return d.hover })\n\t                .style('fill', function(d,i){ return color(d, i) })\n\t                .style('stroke', function(d,i){ return color(d, i) });\n\t            groups.watchTransition(renderWatch, 'multibarhorizontal: groups')\n\t                .style('stroke-opacity', 1)\n\t                .style('fill-opacity', fillOpacity);\n\t\n\t            var bars = groups.selectAll('g.nv-bar')\n\t                .data(function(d) { return d.values });\n\t            bars.exit().remove();\n\t\n\t            var barsEnter = bars.enter().append('g')\n\t                .attr('transform', function(d,i,j) {\n\t                    return 'translate(' + y0(stacked ? d.y0 : 0) + ',' + (stacked ? 0 : (j * x.rangeBand() / data.length ) + x(getX(d,i))) + ')'\n\t                });\n\t\n\t            barsEnter.append('rect')\n\t                .attr('width', 0)\n\t                .attr('height', x.rangeBand() / (stacked ? 1 : data.length) )\n\t\n\t            bars\n\t                .on('mouseover', function(d,i) { //TODO: figure out why j works above, but not here\n\t                    d3.select(this).classed('hover', true);\n\t                    dispatch.elementMouseover({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\")\n\t                    });\n\t                })\n\t                .on('mouseout', function(d,i) {\n\t                    d3.select(this).classed('hover', false);\n\t                    dispatch.elementMouseout({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\")\n\t                    });\n\t                })\n\t                .on('mouseout', function(d,i) {\n\t                    dispatch.elementMouseout({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\")\n\t                    });\n\t                })\n\t                .on('mousemove', function(d,i) {\n\t                    dispatch.elementMousemove({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\")\n\t                    });\n\t                })\n\t                .on('click', function(d,i) {\n\t                    var element = this;\n\t                    dispatch.elementClick({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\"),\n\t                        event: d3.event,\n\t                        element: element\n\t                    });\n\t                    d3.event.stopPropagation();\n\t                })\n\t                .on('dblclick', function(d,i) {\n\t                    dispatch.elementDblClick({\n\t                        data: d,\n\t                        index: i,\n\t                        color: d3.select(this).style(\"fill\")\n\t                    });\n\t                    d3.event.stopPropagation();\n\t                });\n\t\n\t            if (getYerr(data[0],0)) {\n\t                barsEnter.append('polyline');\n\t\n\t                bars.select('polyline')\n\t                    .attr('fill', 'none')\n\t                    .attr('points', function(d,i) {\n\t                        var xerr = getYerr(d,i)\n\t                            , mid = 0.8 * x.rangeBand() / ((stacked ? 1 : data.length) * 2);\n\t                        xerr = xerr.length ? xerr : [-Math.abs(xerr), Math.abs(xerr)];\n\t                        xerr = xerr.map(function(e) { return y(e) - y(0); });\n\t                        var a = [[xerr[0],-mid], [xerr[0],mid], [xerr[0],0], [xerr[1],0], [xerr[1],-mid], [xerr[1],mid]];\n\t                        return a.map(function (path) { return path.join(',') }).join(' ');\n\t                    })\n\t                    .attr('transform', function(d,i) {\n\t                        var mid = x.rangeBand() / ((stacked ? 1 : data.length) * 2);\n\t                        return 'translate(' + (getY(d,i) < 0 ? 0 : y(getY(d,i)) - y(0)) + ', ' + mid + ')'\n\t                    });\n\t            }\n\t\n\t            barsEnter.append('text');\n\t\n\t            if (showValues && !stacked) {\n\t                bars.select('text')\n\t                    .attr('text-anchor', function(d,i) { return getY(d,i) < 0 ? 'end' : 'start' })\n\t                    .attr('y', x.rangeBand() / (data.length * 2))\n\t                    .attr('dy', '.32em')\n\t                    .text(function(d,i) {\n\t                        var t = valueFormat(getY(d,i))\n\t                            , yerr = getYerr(d,i);\n\t                        if (yerr === undefined)\n\t                            return t;\n\t                        if (!yerr.length)\n\t                            return t + '±' + valueFormat(Math.abs(yerr));\n\t                        return t + '+' + valueFormat(Math.abs(yerr[1])) + '-' + valueFormat(Math.abs(yerr[0]));\n\t                    });\n\t                bars.watchTransition(renderWatch, 'multibarhorizontal: bars')\n\t                    .select('text')\n\t                    .attr('x', function(d,i) { return getY(d,i) < 0 ? -4 : y(getY(d,i)) - y(0) + 4 })\n\t            } else {\n\t                bars.selectAll('text').text('');\n\t            }\n\t\n\t            if (showBarLabels && !stacked) {\n\t                barsEnter.append('text').classed('nv-bar-label',true);\n\t                bars.select('text.nv-bar-label')\n\t                    .attr('text-anchor', function(d,i) { return getY(d,i) < 0 ? 'start' : 'end' })\n\t                    .attr('y', x.rangeBand() / (data.length * 2))\n\t                    .attr('dy', '.32em')\n\t                    .text(function(d,i) { return getX(d,i) });\n\t                bars.watchTransition(renderWatch, 'multibarhorizontal: bars')\n\t                    .select('text.nv-bar-label')\n\t                    .attr('x', function(d,i) { return getY(d,i) < 0 ? y(0) - y(getY(d,i)) + 4 : -4 });\n\t            }\n\t            else {\n\t                bars.selectAll('text.nv-bar-label').text('');\n\t            }\n\t\n\t            bars\n\t                .attr('class', function(d,i) { return getY(d,i) < 0 ? 'nv-bar negative' : 'nv-bar positive'})\n\t\n\t            if (barColor) {\n\t                if (!disabled) disabled = data.map(function() { return true });\n\t                bars\n\t                    .style('fill', function(d,i,j) { return d3.rgb(barColor(d,i)).darker(  disabled.map(function(d,i) { return i }).filter(function(d,i){ return !disabled[i]  })[j]   ).toString(); })\n\t                    .style('stroke', function(d,i,j) { return d3.rgb(barColor(d,i)).darker(  disabled.map(function(d,i) { return i }).filter(function(d,i){ return !disabled[i]  })[j]   ).toString(); });\n\t            }\n\t\n\t            if (stacked)\n\t                bars.watchTransition(renderWatch, 'multibarhorizontal: bars')\n\t                    .attr('transform', function(d,i) {\n\t                        return 'translate(' + y(d.y1) + ',' + x(getX(d,i)) + ')'\n\t                    })\n\t                    .select('rect')\n\t                    .attr('width', function(d,i) {\n\t                        return Math.abs(y(getY(d,i) + d.y0) - y(d.y0)) || 0\n\t                    })\n\t                    .attr('height', x.rangeBand() );\n\t            else\n\t                bars.watchTransition(renderWatch, 'multibarhorizontal: bars')\n\t                    .attr('transform', function(d,i) {\n\t                        //TODO: stacked must be all positive or all negative, not both?\n\t                        return 'translate(' +\n\t                            (getY(d,i) < 0 ? y(getY(d,i)) : y(0))\n\t                            + ',' +\n\t                            (d.series * x.rangeBand() / data.length\n\t                                +\n\t                                x(getX(d,i)) )\n\t                            + ')'\n\t                    })\n\t                    .select('rect')\n\t                    .attr('height', x.rangeBand() / data.length )\n\t                    .attr('width', function(d,i) {\n\t                        return Math.max(Math.abs(y(getY(d,i)) - y(0)),1) || 0\n\t                    });\n\t\n\t            //store old scales for use in transitions on update\n\t            x0 = x.copy();\n\t            y0 = y.copy();\n\t\n\t        });\n\t\n\t        renderWatch.renderEnd('multibarHorizontal immediate');\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.dispatch = dispatch;\n\t\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:   {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:  {get: function(){return height;}, set: function(_){height=_;}},\n\t        x:       {get: function(){return getX;}, set: function(_){getX=_;}},\n\t        y:       {get: function(){return getY;}, set: function(_){getY=_;}},\n\t        yErr:       {get: function(){return getYerr;}, set: function(_){getYerr=_;}},\n\t        xScale:  {get: function(){return x;}, set: function(_){x=_;}},\n\t        yScale:  {get: function(){return y;}, set: function(_){y=_;}},\n\t        xDomain: {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n\t        yDomain: {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n\t        xRange:  {get: function(){return xRange;}, set: function(_){xRange=_;}},\n\t        yRange:  {get: function(){return yRange;}, set: function(_){yRange=_;}},\n\t        forceY:  {get: function(){return forceY;}, set: function(_){forceY=_;}},\n\t        stacked: {get: function(){return stacked;}, set: function(_){stacked=_;}},\n\t        showValues: {get: function(){return showValues;}, set: function(_){showValues=_;}},\n\t        // this shows the group name, seems pointless?\n\t        //showBarLabels:    {get: function(){return showBarLabels;}, set: function(_){showBarLabels=_;}},\n\t        disabled:     {get: function(){return disabled;}, set: function(_){disabled=_;}},\n\t        id:           {get: function(){return id;}, set: function(_){id=_;}},\n\t        valueFormat:  {get: function(){return valueFormat;}, set: function(_){valueFormat=_;}},\n\t        valuePadding: {get: function(){return valuePadding;}, set: function(_){valuePadding=_;}},\n\t        groupSpacing: {get: function(){return groupSpacing;}, set: function(_){groupSpacing=_;}},\n\t        fillOpacity:  {get: function(){return fillOpacity;}, set: function(_){fillOpacity=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        duration: {get: function(){return duration;}, set: function(_){\n\t            duration = _;\n\t            renderWatch.reset(duration);\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t        }},\n\t        barColor:  {get: function(){return barColor;}, set: function(_){\n\t            barColor = _ ? nv.utils.getColor(_) : null;\n\t        }}\n\t    });\n\t\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\t\n\tnv.models.multiBarHorizontalChart = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var multibar = nv.models.multiBarHorizontal()\n\t        , xAxis = nv.models.axis()\n\t        , yAxis = nv.models.axis()\n\t        , legend = nv.models.legend().height(30)\n\t        , controls = nv.models.legend().height(30)\n\t        , tooltip = nv.models.tooltip()\n\t        ;\n\t\n\t    var margin = {top: 30, right: 20, bottom: 50, left: 60}\n\t        , width = null\n\t        , height = null\n\t        , color = nv.utils.defaultColor()\n\t        , showControls = true\n\t        , controlLabels = {}\n\t        , showLegend = true\n\t        , showXAxis = true\n\t        , showYAxis = true\n\t        , stacked = false\n\t        , x //can be accessed via chart.xScale()\n\t        , y //can be accessed via chart.yScale()\n\t        , state = nv.utils.state()\n\t        , defaultState = null\n\t        , noData = null\n\t        , dispatch = d3.dispatch('stateChange', 'changeState','renderEnd')\n\t        , controlWidth = function() { return showControls ? 180 : 0 }\n\t        , duration = 250\n\t        ;\n\t\n\t    state.stacked = false; // DEPRECATED Maintained for backward compatibility\n\t\n\t    multibar.stacked(stacked);\n\t\n\t    xAxis\n\t        .orient('left')\n\t        .tickPadding(5)\n\t        .showMaxMin(false)\n\t        .tickFormat(function(d) { return d })\n\t    ;\n\t    yAxis\n\t        .orient('bottom')\n\t        .tickFormat(d3.format(',.1f'))\n\t    ;\n\t\n\t    tooltip\n\t        .duration(0)\n\t        .valueFormatter(function(d, i) {\n\t            return yAxis.tickFormat()(d, i);\n\t        })\n\t        .headerFormatter(function(d, i) {\n\t            return xAxis.tickFormat()(d, i);\n\t        });\n\t\n\t    controls.updateState(false);\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var stateGetter = function(data) {\n\t        return function(){\n\t            return {\n\t                active: data.map(function(d) { return !d.disabled }),\n\t                stacked: stacked\n\t            };\n\t        }\n\t    };\n\t\n\t    var stateSetter = function(data) {\n\t        return function(state) {\n\t            if (state.stacked !== undefined)\n\t                stacked = state.stacked;\n\t            if (state.active !== undefined)\n\t                data.forEach(function(series,i) {\n\t                    series.disabled = !state.active[i];\n\t                });\n\t        }\n\t    };\n\t\n\t    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        renderWatch.models(multibar);\n\t        if (showXAxis) renderWatch.models(xAxis);\n\t        if (showYAxis) renderWatch.models(yAxis);\n\t\n\t        selection.each(function(data) {\n\t            var container = d3.select(this),\n\t                that = this;\n\t            nv.utils.initSVG(container);\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                availableHeight = nv.utils.availableHeight(height, container, margin);\n\t\n\t            chart.update = function() { container.transition().duration(duration).call(chart) };\n\t            chart.container = this;\n\t\n\t            stacked = multibar.stacked();\n\t\n\t            state\n\t                .setter(stateSetter(data), chart.update)\n\t                .getter(stateGetter(data))\n\t                .update();\n\t\n\t            // DEPRECATED set state.disableddisabled\n\t            state.disabled = data.map(function(d) { return !!d.disabled });\n\t\n\t            if (!defaultState) {\n\t                var key;\n\t                defaultState = {};\n\t                for (key in state) {\n\t                    if (state[key] instanceof Array)\n\t                        defaultState[key] = state[key].slice(0);\n\t                    else\n\t                        defaultState[key] = state[key];\n\t                }\n\t            }\n\t\n\t            // Display No Data message if there's nothing to show.\n\t            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n\t                nv.utils.noData(chart, container)\n\t                return chart;\n\t            } else {\n\t                container.selectAll('.nv-noData').remove();\n\t            }\n\t\n\t            // Setup Scales\n\t            x = multibar.xScale();\n\t            y = multibar.yScale().clamp(true);\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-multiBarHorizontalChart').data([data]);\n\t            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multiBarHorizontalChart').append('g');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-x nv-axis');\n\t            gEnter.append('g').attr('class', 'nv-y nv-axis')\n\t                .append('g').attr('class', 'nv-zeroLine')\n\t                .append('line');\n\t            gEnter.append('g').attr('class', 'nv-barsWrap');\n\t            gEnter.append('g').attr('class', 'nv-legendWrap');\n\t            gEnter.append('g').attr('class', 'nv-controlsWrap');\n\t\n\t            // Legend\n\t            if (!showLegend) {\n\t                g.select('.nv-legendWrap').selectAll('*').remove();\n\t            } else {\n\t                legend.width(availableWidth - controlWidth());\n\t\n\t                g.select('.nv-legendWrap')\n\t                    .datum(data)\n\t                    .call(legend);\n\t\n\t                if (legend.height() > margin.top) {\n\t                    margin.top = legend.height();\n\t                    availableHeight = nv.utils.availableHeight(height, container, margin);\n\t                }\n\t\n\t                g.select('.nv-legendWrap')\n\t                    .attr('transform', 'translate(' + controlWidth() + ',' + (-margin.top) +')');\n\t            }\n\t\n\t            // Controls\n\t            if (!showControls) {\n\t                 g.select('.nv-controlsWrap').selectAll('*').remove();\n\t            } else {\n\t                var controlsData = [\n\t                    { key: controlLabels.grouped || 'Grouped', disabled: multibar.stacked() },\n\t                    { key: controlLabels.stacked || 'Stacked', disabled: !multibar.stacked() }\n\t                ];\n\t\n\t                controls.width(controlWidth()).color(['#444', '#444', '#444']);\n\t                g.select('.nv-controlsWrap')\n\t                    .datum(controlsData)\n\t                    .attr('transform', 'translate(0,' + (-margin.top) +')')\n\t                    .call(controls);\n\t            }\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            // Main Chart Component(s)\n\t            multibar\n\t                .disabled(data.map(function(series) { return series.disabled }))\n\t                .width(availableWidth)\n\t                .height(availableHeight)\n\t                .color(data.map(function(d,i) {\n\t                    return d.color || color(d, i);\n\t                }).filter(function(d,i) { return !data[i].disabled }));\n\t\n\t            var barsWrap = g.select('.nv-barsWrap')\n\t                .datum(data.filter(function(d) { return !d.disabled }));\n\t\n\t            barsWrap.transition().call(multibar);\n\t\n\t            // Setup Axes\n\t            if (showXAxis) {\n\t                xAxis\n\t                    .scale(x)\n\t                    ._ticks( nv.utils.calcTicksY(availableHeight/24, data) )\n\t                    .tickSize(-availableWidth, 0);\n\t\n\t                g.select('.nv-x.nv-axis').call(xAxis);\n\t\n\t                var xTicks = g.select('.nv-x.nv-axis').selectAll('g');\n\t\n\t                xTicks\n\t                    .selectAll('line, text');\n\t            }\n\t\n\t            if (showYAxis) {\n\t                yAxis\n\t                    .scale(y)\n\t                    ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n\t                    .tickSize( -availableHeight, 0);\n\t\n\t                g.select('.nv-y.nv-axis')\n\t                    .attr('transform', 'translate(0,' + availableHeight + ')');\n\t                g.select('.nv-y.nv-axis').call(yAxis);\n\t            }\n\t\n\t            // Zero line\n\t            g.select(\".nv-zeroLine line\")\n\t                .attr(\"x1\", y(0))\n\t                .attr(\"x2\", y(0))\n\t                .attr(\"y1\", 0)\n\t                .attr(\"y2\", -availableHeight)\n\t            ;\n\t\n\t            //============================================================\n\t            // Event Handling/Dispatching (in chart's scope)\n\t            //------------------------------------------------------------\n\t\n\t            legend.dispatch.on('stateChange', function(newState) {\n\t                for (var key in newState)\n\t                    state[key] = newState[key];\n\t                dispatch.stateChange(state);\n\t                chart.update();\n\t            });\n\t\n\t            controls.dispatch.on('legendClick', function(d,i) {\n\t                if (!d.disabled) return;\n\t                controlsData = controlsData.map(function(s) {\n\t                    s.disabled = true;\n\t                    return s;\n\t                });\n\t                d.disabled = false;\n\t\n\t                switch (d.key) {\n\t                    case 'Grouped':\n\t                    case controlLabels.grouped:\n\t                        multibar.stacked(false);\n\t                        break;\n\t                    case 'Stacked':\n\t                    case controlLabels.stacked:\n\t                        multibar.stacked(true);\n\t                        break;\n\t                }\n\t\n\t                state.stacked = multibar.stacked();\n\t                dispatch.stateChange(state);\n\t                stacked = multibar.stacked();\n\t\n\t                chart.update();\n\t            });\n\t\n\t            // Update chart from a state object passed to event handler\n\t            dispatch.on('changeState', function(e) {\n\t\n\t                if (typeof e.disabled !== 'undefined') {\n\t                    data.forEach(function(series,i) {\n\t                        series.disabled = e.disabled[i];\n\t                    });\n\t\n\t                    state.disabled = e.disabled;\n\t                }\n\t\n\t                if (typeof e.stacked !== 'undefined') {\n\t                    multibar.stacked(e.stacked);\n\t                    state.stacked = e.stacked;\n\t                    stacked = e.stacked;\n\t                }\n\t\n\t                chart.update();\n\t            });\n\t        });\n\t        renderWatch.renderEnd('multibar horizontal chart immediate');\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Event Handling/Dispatching (out of chart's scope)\n\t    //------------------------------------------------------------\n\t\n\t    multibar.dispatch.on('elementMouseover.tooltip', function(evt) {\n\t        evt.value = chart.x()(evt.data);\n\t        evt['series'] = {\n\t            key: evt.data.key,\n\t            value: chart.y()(evt.data),\n\t            color: evt.color\n\t        };\n\t        tooltip.data(evt).hidden(false);\n\t    });\n\t\n\t    multibar.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t        tooltip.hidden(true);\n\t    });\n\t\n\t    multibar.dispatch.on('elementMousemove.tooltip', function(evt) {\n\t        tooltip();\n\t    });\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    // expose chart's sub-components\n\t    chart.dispatch = dispatch;\n\t    chart.multibar = multibar;\n\t    chart.legend = legend;\n\t    chart.controls = controls;\n\t    chart.xAxis = xAxis;\n\t    chart.yAxis = yAxis;\n\t    chart.state = state;\n\t    chart.tooltip = tooltip;\n\t\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:      {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:     {get: function(){return height;}, set: function(_){height=_;}},\n\t        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n\t        showControls: {get: function(){return showControls;}, set: function(_){showControls=_;}},\n\t        controlLabels: {get: function(){return controlLabels;}, set: function(_){controlLabels=_;}},\n\t        showXAxis:      {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n\t        showYAxis:    {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n\t        defaultState:    {get: function(){return defaultState;}, set: function(_){defaultState=_;}},\n\t        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        duration: {get: function(){return duration;}, set: function(_){\n\t            duration = _;\n\t            renderWatch.reset(duration);\n\t            multibar.duration(duration);\n\t            xAxis.duration(duration);\n\t            yAxis.duration(duration);\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t            legend.color(color);\n\t        }},\n\t        barColor:  {get: function(){return multibar.barColor;}, set: function(_){\n\t            multibar.barColor(_);\n\t            legend.color(function(d,i) {return d3.rgb('#ccc').darker(i * 1.5).toString();})\n\t        }}\n\t    });\n\t\n\t    nv.utils.inheritOptions(chart, multibar);\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\tnv.models.multiChart = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var margin = {top: 30, right: 20, bottom: 50, left: 60},\n\t        color = nv.utils.defaultColor(),\n\t        width = null,\n\t        height = null,\n\t        showLegend = true,\n\t        noData = null,\n\t        yDomain1,\n\t        yDomain2,\n\t        getX = function(d) { return d.x },\n\t        getY = function(d) { return d.y},\n\t        interpolate = 'linear',\n\t        useVoronoi = true,\n\t        interactiveLayer = nv.interactiveGuideline(),\n\t        useInteractiveGuideline = false,\n\t        legendRightAxisHint = ' (right axis)'\n\t        ;\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var x = d3.scale.linear(),\n\t        yScale1 = d3.scale.linear(),\n\t        yScale2 = d3.scale.linear(),\n\t\n\t        lines1 = nv.models.line().yScale(yScale1),\n\t        lines2 = nv.models.line().yScale(yScale2),\n\t\n\t        scatters1 = nv.models.scatter().yScale(yScale1),\n\t        scatters2 = nv.models.scatter().yScale(yScale2),\n\t\n\t        bars1 = nv.models.multiBar().stacked(false).yScale(yScale1),\n\t        bars2 = nv.models.multiBar().stacked(false).yScale(yScale2),\n\t\n\t        stack1 = nv.models.stackedArea().yScale(yScale1),\n\t        stack2 = nv.models.stackedArea().yScale(yScale2),\n\t\n\t        xAxis = nv.models.axis().scale(x).orient('bottom').tickPadding(5),\n\t        yAxis1 = nv.models.axis().scale(yScale1).orient('left'),\n\t        yAxis2 = nv.models.axis().scale(yScale2).orient('right'),\n\t\n\t        legend = nv.models.legend().height(30),\n\t        tooltip = nv.models.tooltip(),\n\t        dispatch = d3.dispatch();\n\t\n\t    var charts = [lines1, lines2, scatters1, scatters2, bars1, bars2, stack1, stack2];\n\t\n\t    function chart(selection) {\n\t        selection.each(function(data) {\n\t            var container = d3.select(this),\n\t                that = this;\n\t            nv.utils.initSVG(container);\n\t\n\t            chart.update = function() { container.transition().call(chart); };\n\t            chart.container = this;\n\t\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                availableHeight = nv.utils.availableHeight(height, container, margin);\n\t\n\t            var dataLines1 = data.filter(function(d) {return d.type == 'line' && d.yAxis == 1});\n\t            var dataLines2 = data.filter(function(d) {return d.type == 'line' && d.yAxis == 2});\n\t            var dataScatters1 = data.filter(function(d) {return d.type == 'scatter' && d.yAxis == 1});\n\t            var dataScatters2 = data.filter(function(d) {return d.type == 'scatter' && d.yAxis == 2});\n\t            var dataBars1 =  data.filter(function(d) {return d.type == 'bar'  && d.yAxis == 1});\n\t            var dataBars2 =  data.filter(function(d) {return d.type == 'bar'  && d.yAxis == 2});\n\t            var dataStack1 = data.filter(function(d) {return d.type == 'area' && d.yAxis == 1});\n\t            var dataStack2 = data.filter(function(d) {return d.type == 'area' && d.yAxis == 2});\n\t\n\t            // Display noData message if there's nothing to show.\n\t            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n\t                nv.utils.noData(chart, container);\n\t                return chart;\n\t            } else {\n\t                container.selectAll('.nv-noData').remove();\n\t            }\n\t\n\t            var series1 = data.filter(function(d) {return !d.disabled && d.yAxis == 1})\n\t                .map(function(d) {\n\t                    return d.values.map(function(d,i) {\n\t                        return { x: getX(d), y: getY(d) }\n\t                    })\n\t                });\n\t\n\t            var series2 = data.filter(function(d) {return !d.disabled && d.yAxis == 2})\n\t                .map(function(d) {\n\t                    return d.values.map(function(d,i) {\n\t                        return { x: getX(d), y: getY(d) }\n\t                    })\n\t                });\n\t\n\t            x   .domain(d3.extent(d3.merge(series1.concat(series2)), function(d) { return d.x }))\n\t                .range([0, availableWidth]);\n\t\n\t            var wrap = container.selectAll('g.wrap.multiChart').data([data]);\n\t            var gEnter = wrap.enter().append('g').attr('class', 'wrap nvd3 multiChart').append('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-x nv-axis');\n\t            gEnter.append('g').attr('class', 'nv-y1 nv-axis');\n\t            gEnter.append('g').attr('class', 'nv-y2 nv-axis');\n\t            gEnter.append('g').attr('class', 'stack1Wrap');\n\t            gEnter.append('g').attr('class', 'stack2Wrap');\n\t            gEnter.append('g').attr('class', 'bars1Wrap');\n\t            gEnter.append('g').attr('class', 'bars2Wrap');\n\t            gEnter.append('g').attr('class', 'scatters1Wrap');\n\t            gEnter.append('g').attr('class', 'scatters2Wrap');\n\t            gEnter.append('g').attr('class', 'lines1Wrap');\n\t            gEnter.append('g').attr('class', 'lines2Wrap');\n\t            gEnter.append('g').attr('class', 'legendWrap');\n\t            gEnter.append('g').attr('class', 'nv-interactive');\n\t\n\t            var g = wrap.select('g');\n\t\n\t            var color_array = data.map(function(d,i) {\n\t                return data[i].color || color(d, i);\n\t            });\n\t\n\t            // Legend\n\t            if (!showLegend) {\n\t                g.select('.legendWrap').selectAll('*').remove();\n\t            } else {\n\t                var legendWidth = legend.align() ? availableWidth / 2 : availableWidth;\n\t                var legendXPosition = legend.align() ? legendWidth : 0;\n\t\n\t                legend.width(legendWidth);\n\t                legend.color(color_array);\n\t\n\t                g.select('.legendWrap')\n\t                    .datum(data.map(function(series) {\n\t                        series.originalKey = series.originalKey === undefined ? series.key : series.originalKey;\n\t                        series.key = series.originalKey + (series.yAxis == 1 ? '' : legendRightAxisHint);\n\t                        return series;\n\t                    }))\n\t                    .call(legend);\n\t\n\t                if (legend.height() > margin.top) {\n\t                    margin.top = legend.height();\n\t                    availableHeight = nv.utils.availableHeight(height, container, margin);\n\t                }\n\t\n\t                g.select('.legendWrap')\n\t                    .attr('transform', 'translate(' + legendXPosition + ',' + (-margin.top) +')');\n\t            }\n\t\n\t            lines1\n\t                .width(availableWidth)\n\t                .height(availableHeight)\n\t                .interpolate(interpolate)\n\t                .color(color_array.filter(function(d,i) { return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'line'}));\n\t            lines2\n\t                .width(availableWidth)\n\t                .height(availableHeight)\n\t                .interpolate(interpolate)\n\t                .color(color_array.filter(function(d,i) { return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'line'}));\n\t            scatters1\n\t                .width(availableWidth)\n\t                .height(availableHeight)\n\t                .color(color_array.filter(function(d,i) { return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'scatter'}));\n\t            scatters2\n\t                .width(availableWidth)\n\t                .height(availableHeight)\n\t                .color(color_array.filter(function(d,i) { return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'scatter'}));\n\t            bars1\n\t                .width(availableWidth)\n\t                .height(availableHeight)\n\t                .color(color_array.filter(function(d,i) { return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'bar'}));\n\t            bars2\n\t                .width(availableWidth)\n\t                .height(availableHeight)\n\t                .color(color_array.filter(function(d,i) { return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'bar'}));\n\t            stack1\n\t                .width(availableWidth)\n\t                .height(availableHeight)\n\t                .interpolate(interpolate)\n\t                .color(color_array.filter(function(d,i) { return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'area'}));\n\t            stack2\n\t                .width(availableWidth)\n\t                .height(availableHeight)\n\t                .interpolate(interpolate)\n\t                .color(color_array.filter(function(d,i) { return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'area'}));\n\t\n\t            g.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            var lines1Wrap = g.select('.lines1Wrap')\n\t                .datum(dataLines1.filter(function(d){return !d.disabled}));\n\t            var scatters1Wrap = g.select('.scatters1Wrap')\n\t                .datum(dataScatters1.filter(function(d){return !d.disabled}));\n\t            var bars1Wrap = g.select('.bars1Wrap')\n\t                .datum(dataBars1.filter(function(d){return !d.disabled}));\n\t            var stack1Wrap = g.select('.stack1Wrap')\n\t                .datum(dataStack1.filter(function(d){return !d.disabled}));\n\t            var lines2Wrap = g.select('.lines2Wrap')\n\t                .datum(dataLines2.filter(function(d){return !d.disabled}));\n\t            var scatters2Wrap = g.select('.scatters2Wrap')\n\t                .datum(dataScatters2.filter(function(d){return !d.disabled}));\n\t            var bars2Wrap = g.select('.bars2Wrap')\n\t                .datum(dataBars2.filter(function(d){return !d.disabled}));\n\t            var stack2Wrap = g.select('.stack2Wrap')\n\t                .datum(dataStack2.filter(function(d){return !d.disabled}));\n\t\n\t            var extraValue1 = dataStack1.length ? dataStack1.map(function(a){return a.values}).reduce(function(a,b){\n\t                return a.map(function(aVal,i){return {x: aVal.x, y: aVal.y + b[i].y}})\n\t            }).concat([{x:0, y:0}]) : [];\n\t            var extraValue2 = dataStack2.length ? dataStack2.map(function(a){return a.values}).reduce(function(a,b){\n\t                return a.map(function(aVal,i){return {x: aVal.x, y: aVal.y + b[i].y}})\n\t            }).concat([{x:0, y:0}]) : [];\n\t\n\t            yScale1 .domain(yDomain1 || d3.extent(d3.merge(series1).concat(extraValue1), function(d) { return d.y } ))\n\t                .range([0, availableHeight]);\n\t\n\t            yScale2 .domain(yDomain2 || d3.extent(d3.merge(series2).concat(extraValue2), function(d) { return d.y } ))\n\t                .range([0, availableHeight]);\n\t\n\t            lines1.yDomain(yScale1.domain());\n\t            scatters1.yDomain(yScale1.domain());\n\t            bars1.yDomain(yScale1.domain());\n\t            stack1.yDomain(yScale1.domain());\n\t\n\t            lines2.yDomain(yScale2.domain());\n\t            scatters2.yDomain(yScale2.domain());\n\t            bars2.yDomain(yScale2.domain());\n\t            stack2.yDomain(yScale2.domain());\n\t\n\t            if(dataStack1.length){d3.transition(stack1Wrap).call(stack1);}\n\t            if(dataStack2.length){d3.transition(stack2Wrap).call(stack2);}\n\t\n\t            if(dataBars1.length){d3.transition(bars1Wrap).call(bars1);}\n\t            if(dataBars2.length){d3.transition(bars2Wrap).call(bars2);}\n\t\n\t            if(dataLines1.length){d3.transition(lines1Wrap).call(lines1);}\n\t            if(dataLines2.length){d3.transition(lines2Wrap).call(lines2);}\n\t\n\t            if(dataScatters1.length){d3.transition(scatters1Wrap).call(scatters1);}\n\t            if(dataScatters2.length){d3.transition(scatters2Wrap).call(scatters2);}\n\t\n\t            xAxis\n\t                ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n\t                .tickSize(-availableHeight, 0);\n\t\n\t            g.select('.nv-x.nv-axis')\n\t                .attr('transform', 'translate(0,' + availableHeight + ')');\n\t            d3.transition(g.select('.nv-x.nv-axis'))\n\t                .call(xAxis);\n\t\n\t            yAxis1\n\t                ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n\t                .tickSize( -availableWidth, 0);\n\t\n\t\n\t            d3.transition(g.select('.nv-y1.nv-axis'))\n\t                .call(yAxis1);\n\t\n\t            yAxis2\n\t                ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n\t                .tickSize( -availableWidth, 0);\n\t\n\t            d3.transition(g.select('.nv-y2.nv-axis'))\n\t                .call(yAxis2);\n\t\n\t            g.select('.nv-y1.nv-axis')\n\t                .classed('nv-disabled', series1.length ? false : true)\n\t                .attr('transform', 'translate(' + x.range()[0] + ',0)');\n\t\n\t            g.select('.nv-y2.nv-axis')\n\t                .classed('nv-disabled', series2.length ? false : true)\n\t                .attr('transform', 'translate(' + x.range()[1] + ',0)');\n\t\n\t            legend.dispatch.on('stateChange', function(newState) {\n\t                chart.update();\n\t            });\n\t\n\t            if(useInteractiveGuideline){\n\t                interactiveLayer\n\t                    .width(availableWidth)\n\t                    .height(availableHeight)\n\t                    .margin({left:margin.left, top:margin.top})\n\t                    .svgContainer(container)\n\t                    .xScale(x);\n\t                wrap.select(\".nv-interactive\").call(interactiveLayer);\n\t            }\n\t\n\t            //============================================================\n\t            // Event Handling/Dispatching\n\t            //------------------------------------------------------------\n\t\n\t            function mouseover_line(evt) {\n\t                var yaxis = data[evt.seriesIndex].yAxis === 2 ? yAxis2 : yAxis1;\n\t                evt.value = evt.point.x;\n\t                evt.series = {\n\t                    value: evt.point.y,\n\t                    color: evt.point.color,\n\t                    key: evt.series.key\n\t                };\n\t                tooltip\n\t                    .duration(0)\n\t                    .headerFormatter(function(d, i) {\n\t                    \treturn xAxis.tickFormat()(d, i);\n\t                    })\n\t                    .valueFormatter(function(d, i) {\n\t                        return yaxis.tickFormat()(d, i);\n\t                    })\n\t                    .data(evt)\n\t                    .hidden(false);\n\t            }\n\t\n\t            function mouseover_scatter(evt) {\n\t                var yaxis = data[evt.seriesIndex].yAxis === 2 ? yAxis2 : yAxis1;\n\t                evt.value = evt.point.x;\n\t                evt.series = {\n\t                    value: evt.point.y,\n\t                    color: evt.point.color,\n\t                    key: evt.series.key\n\t                };\n\t                tooltip\n\t                    .duration(100)\n\t                    .headerFormatter(function(d, i) {\n\t                    \treturn xAxis.tickFormat()(d, i);\n\t                    })\n\t                    .valueFormatter(function(d, i) {\n\t                        return yaxis.tickFormat()(d, i);\n\t                    })\n\t                    .data(evt)\n\t                    .hidden(false);\n\t            }\n\t\n\t            function mouseover_stack(evt) {\n\t                var yaxis = data[evt.seriesIndex].yAxis === 2 ? yAxis2 : yAxis1;\n\t                evt.point['x'] = stack1.x()(evt.point);\n\t                evt.point['y'] = stack1.y()(evt.point);\n\t                tooltip\n\t                    .duration(0)\n\t                    .headerFormatter(function(d, i) {\n\t                    \treturn xAxis.tickFormat()(d, i);\n\t                    })\n\t                    .valueFormatter(function(d, i) {\n\t                        return yaxis.tickFormat()(d, i);\n\t                    })\n\t                    .data(evt)\n\t                    .hidden(false);\n\t            }\n\t\n\t            function mouseover_bar(evt) {\n\t                var yaxis = data[evt.data.series].yAxis === 2 ? yAxis2 : yAxis1;\n\t\n\t                evt.value = bars1.x()(evt.data);\n\t                evt['series'] = {\n\t                    value: bars1.y()(evt.data),\n\t                    color: evt.color,\n\t                    key: evt.data.key\n\t                };\n\t                tooltip\n\t                    .duration(0)\n\t                    .headerFormatter(function(d, i) {\n\t                    \treturn xAxis.tickFormat()(d, i);\n\t                    })\n\t                    .valueFormatter(function(d, i) {\n\t                        return yaxis.tickFormat()(d, i);\n\t                    })\n\t                    .data(evt)\n\t                    .hidden(false);\n\t            }\n\t\n\t\n\t\n\t            function clearHighlights() {\n\t              for(var i=0, il=charts.length; i < il; i++){\n\t                var chart = charts[i];\n\t                try {\n\t                  chart.clearHighlights();\n\t                } catch(e){}\n\t              }\n\t            }\n\t\n\t            function highlightPoint(serieIndex, pointIndex, b){\n\t              for(var i=0, il=charts.length; i < il; i++){\n\t                var chart = charts[i];\n\t                try {\n\t                  chart.highlightPoint(serieIndex, pointIndex, b);\n\t                } catch(e){}\n\t              }\n\t            }\n\t\n\t            if(useInteractiveGuideline){\n\t                interactiveLayer.dispatch.on('elementMousemove', function(e) {\n\t                    clearHighlights();\n\t                    var singlePoint, pointIndex, pointXLocation, allData = [];\n\t                    data\n\t                    .filter(function(series, i) {\n\t                        series.seriesIndex = i;\n\t                        return !series.disabled;\n\t                    })\n\t                    .forEach(function(series,i) {\n\t                        var extent = x.domain();\n\t                        var currentValues = series.values.filter(function(d,i) {\n\t                            return chart.x()(d,i) >= extent[0] && chart.x()(d,i) <= extent[1];\n\t                        });\n\t\n\t                        pointIndex = nv.interactiveBisect(currentValues, e.pointXValue, chart.x());\n\t                        var point = currentValues[pointIndex];\n\t                        var pointYValue = chart.y()(point, pointIndex);\n\t                        if (pointYValue !== null) {\n\t                            highlightPoint(i, pointIndex, true);\n\t                        }\n\t                        if (point === undefined) return;\n\t                        if (singlePoint === undefined) singlePoint = point;\n\t                        if (pointXLocation === undefined) pointXLocation = x(chart.x()(point,pointIndex));\n\t                        allData.push({\n\t                            key: series.key,\n\t                            value: pointYValue,\n\t                            color: color(series,series.seriesIndex),\n\t                            data: point,\n\t                            yAxis: series.yAxis == 2 ? yAxis2 : yAxis1\n\t                        });\n\t                    });\n\t\n\t                    var defaultValueFormatter = function(d,i) {\n\t                        var yAxis = allData[i].yAxis;\n\t                        return d == null ? \"N/A\" : yAxis.tickFormat()(d);\n\t                    };\n\t\n\t                    interactiveLayer.tooltip\n\t                        .headerFormatter(function(d, i) {\n\t                            return xAxis.tickFormat()(d, i);\n\t                        })\n\t                        .valueFormatter(interactiveLayer.tooltip.valueFormatter() || defaultValueFormatter)\n\t                        .data({\n\t                            value: chart.x()( singlePoint,pointIndex ),\n\t                            index: pointIndex,\n\t                            series: allData\n\t                        })();\n\t\n\t                    interactiveLayer.renderGuideLine(pointXLocation);\n\t                });\n\t\n\t                interactiveLayer.dispatch.on(\"elementMouseout\",function(e) {\n\t                    clearHighlights();\n\t                });\n\t            } else {\n\t                lines1.dispatch.on('elementMouseover.tooltip', mouseover_line);\n\t                lines2.dispatch.on('elementMouseover.tooltip', mouseover_line);\n\t                lines1.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t                    tooltip.hidden(true)\n\t                });\n\t                lines2.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t                    tooltip.hidden(true)\n\t                });\n\t\n\t                scatters1.dispatch.on('elementMouseover.tooltip', mouseover_scatter);\n\t                scatters2.dispatch.on('elementMouseover.tooltip', mouseover_scatter);\n\t                scatters1.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t                    tooltip.hidden(true)\n\t                });\n\t                scatters2.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t                    tooltip.hidden(true)\n\t                });\n\t\n\t                stack1.dispatch.on('elementMouseover.tooltip', mouseover_stack);\n\t                stack2.dispatch.on('elementMouseover.tooltip', mouseover_stack);\n\t                stack1.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t                    tooltip.hidden(true)\n\t                });\n\t                stack2.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t                    tooltip.hidden(true)\n\t                });\n\t\n\t                bars1.dispatch.on('elementMouseover.tooltip', mouseover_bar);\n\t                bars2.dispatch.on('elementMouseover.tooltip', mouseover_bar);\n\t\n\t                bars1.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t                    tooltip.hidden(true);\n\t                });\n\t                bars2.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t                    tooltip.hidden(true);\n\t                });\n\t                bars1.dispatch.on('elementMousemove.tooltip', function(evt) {\n\t                    tooltip();\n\t                });\n\t                bars2.dispatch.on('elementMousemove.tooltip', function(evt) {\n\t                    tooltip();\n\t                });\n\t            }\n\t        });\n\t\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Global getters and setters\n\t    //------------------------------------------------------------\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.legend = legend;\n\t    chart.lines1 = lines1;\n\t    chart.lines2 = lines2;\n\t    chart.scatters1 = scatters1;\n\t    chart.scatters2 = scatters2;\n\t    chart.bars1 = bars1;\n\t    chart.bars2 = bars2;\n\t    chart.stack1 = stack1;\n\t    chart.stack2 = stack2;\n\t    chart.xAxis = xAxis;\n\t    chart.yAxis1 = yAxis1;\n\t    chart.yAxis2 = yAxis2;\n\t    chart.tooltip = tooltip;\n\t    chart.interactiveLayer = interactiveLayer;\n\t\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:      {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:     {get: function(){return height;}, set: function(_){height=_;}},\n\t        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n\t        yDomain1:      {get: function(){return yDomain1;}, set: function(_){yDomain1=_;}},\n\t        yDomain2:    {get: function(){return yDomain2;}, set: function(_){yDomain2=_;}},\n\t        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n\t        interpolate:    {get: function(){return interpolate;}, set: function(_){interpolate=_;}},\n\t        legendRightAxisHint:    {get: function(){return legendRightAxisHint;}, set: function(_){legendRightAxisHint=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t        }},\n\t        x: {get: function(){return getX;}, set: function(_){\n\t            getX = _;\n\t            lines1.x(_);\n\t            lines2.x(_);\n\t            scatters1.x(_);\n\t            scatters2.x(_);\n\t            bars1.x(_);\n\t            bars2.x(_);\n\t            stack1.x(_);\n\t            stack2.x(_);\n\t        }},\n\t        y: {get: function(){return getY;}, set: function(_){\n\t            getY = _;\n\t            lines1.y(_);\n\t            lines2.y(_);\n\t            scatters1.y(_);\n\t            scatters2.y(_);\n\t            stack1.y(_);\n\t            stack2.y(_);\n\t            bars1.y(_);\n\t            bars2.y(_);\n\t        }},\n\t        useVoronoi: {get: function(){return useVoronoi;}, set: function(_){\n\t            useVoronoi=_;\n\t            lines1.useVoronoi(_);\n\t            lines2.useVoronoi(_);\n\t            stack1.useVoronoi(_);\n\t            stack2.useVoronoi(_);\n\t        }},\n\t\n\t        useInteractiveGuideline: {get: function(){return useInteractiveGuideline;}, set: function(_){\n\t            useInteractiveGuideline = _;\n\t            if (useInteractiveGuideline) {\n\t                lines1.interactive(false);\n\t                lines1.useVoronoi(false);\n\t                lines2.interactive(false);\n\t                lines2.useVoronoi(false);\n\t                stack1.interactive(false);\n\t                stack1.useVoronoi(false);\n\t                stack2.interactive(false);\n\t                stack2.useVoronoi(false);\n\t                scatters1.interactive(false);\n\t                scatters2.interactive(false);\n\t            }\n\t        }}\n\t    });\n\t\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\t\n\tnv.models.ohlcBar = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n\t        , width = null\n\t        , height = null\n\t        , id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n\t        , container = null\n\t        , x = d3.scale.linear()\n\t        , y = d3.scale.linear()\n\t        , getX = function(d) { return d.x }\n\t        , getY = function(d) { return d.y }\n\t        , getOpen = function(d) { return d.open }\n\t        , getClose = function(d) { return d.close }\n\t        , getHigh = function(d) { return d.high }\n\t        , getLow = function(d) { return d.low }\n\t        , forceX = []\n\t        , forceY = []\n\t        , padData     = false // If true, adds half a data points width to front and back, for lining up a line chart with a bar chart\n\t        , clipEdge = true\n\t        , color = nv.utils.defaultColor()\n\t        , interactive = false\n\t        , xDomain\n\t        , yDomain\n\t        , xRange\n\t        , yRange\n\t        , dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd', 'chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove')\n\t        ;\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    function chart(selection) {\n\t        selection.each(function(data) {\n\t            container = d3.select(this);\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                availableHeight = nv.utils.availableHeight(height, container, margin);\n\t\n\t            nv.utils.initSVG(container);\n\t\n\t            // ohlc bar width.\n\t            var w = (availableWidth / data[0].values.length) * .9;\n\t\n\t            // Setup Scales\n\t            x.domain(xDomain || d3.extent(data[0].values.map(getX).concat(forceX) ));\n\t\n\t            if (padData)\n\t                x.range(xRange || [availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5)  / data[0].values.length ]);\n\t            else\n\t                x.range(xRange || [5 + w/2, availableWidth - w/2 - 5]);\n\t\n\t            y.domain(yDomain || [\n\t                    d3.min(data[0].values.map(getLow).concat(forceY)),\n\t                    d3.max(data[0].values.map(getHigh).concat(forceY))\n\t                ]\n\t            ).range(yRange || [availableHeight, 0]);\n\t\n\t            // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n\t            if (x.domain()[0] === x.domain()[1])\n\t                x.domain()[0] ?\n\t                    x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01])\n\t                    : x.domain([-1,1]);\n\t\n\t            if (y.domain()[0] === y.domain()[1])\n\t                y.domain()[0] ?\n\t                    y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01])\n\t                    : y.domain([-1,1]);\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = d3.select(this).selectAll('g.nv-wrap.nv-ohlcBar').data([data[0].values]);\n\t            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-ohlcBar');\n\t            var defsEnter = wrapEnter.append('defs');\n\t            var gEnter = wrapEnter.append('g');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-ticks');\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            container\n\t                .on('click', function(d,i) {\n\t                    dispatch.chartClick({\n\t                        data: d,\n\t                        index: i,\n\t                        pos: d3.event,\n\t                        id: id\n\t                    });\n\t                });\n\t\n\t            defsEnter.append('clipPath')\n\t                .attr('id', 'nv-chart-clip-path-' + id)\n\t                .append('rect');\n\t\n\t            wrap.select('#nv-chart-clip-path-' + id + ' rect')\n\t                .attr('width', availableWidth)\n\t                .attr('height', availableHeight);\n\t\n\t            g   .attr('clip-path', clipEdge ? 'url(#nv-chart-clip-path-' + id + ')' : '');\n\t\n\t            var ticks = wrap.select('.nv-ticks').selectAll('.nv-tick')\n\t                .data(function(d) { return d });\n\t            ticks.exit().remove();\n\t\n\t            ticks.enter().append('path')\n\t                .attr('class', function(d,i,j) { return (getOpen(d,i) > getClose(d,i) ? 'nv-tick negative' : 'nv-tick positive') + ' nv-tick-' + j + '-' + i })\n\t                .attr('d', function(d,i) {\n\t                    return 'm0,0l0,'\n\t                        + (y(getOpen(d,i))\n\t                            - y(getHigh(d,i)))\n\t                        + 'l'\n\t                        + (-w/2)\n\t                        + ',0l'\n\t                        + (w/2)\n\t                        + ',0l0,'\n\t                        + (y(getLow(d,i)) - y(getOpen(d,i)))\n\t                        + 'l0,'\n\t                        + (y(getClose(d,i))\n\t                            - y(getLow(d,i)))\n\t                        + 'l'\n\t                        + (w/2)\n\t                        + ',0l'\n\t                        + (-w/2)\n\t                        + ',0z';\n\t                })\n\t                .attr('transform', function(d,i) { return 'translate(' + x(getX(d,i)) + ',' + y(getHigh(d,i)) + ')'; })\n\t                .attr('fill', function(d,i) { return color[0]; })\n\t                .attr('stroke', function(d,i) { return color[0]; })\n\t                .attr('x', 0 )\n\t                .attr('y', function(d,i) {  return y(Math.max(0, getY(d,i))) })\n\t                .attr('height', function(d,i) { return Math.abs(y(getY(d,i)) - y(0)) });\n\t\n\t            // the bar colors are controlled by CSS currently\n\t            ticks.attr('class', function(d,i,j) {\n\t                return (getOpen(d,i) > getClose(d,i) ? 'nv-tick negative' : 'nv-tick positive') + ' nv-tick-' + j + '-' + i;\n\t            });\n\t\n\t            d3.transition(ticks)\n\t                .attr('transform', function(d,i) { return 'translate(' + x(getX(d,i)) + ',' + y(getHigh(d,i)) + ')'; })\n\t                .attr('d', function(d,i) {\n\t                    var w = (availableWidth / data[0].values.length) * .9;\n\t                    return 'm0,0l0,'\n\t                        + (y(getOpen(d,i))\n\t                            - y(getHigh(d,i)))\n\t                        + 'l'\n\t                        + (-w/2)\n\t                        + ',0l'\n\t                        + (w/2)\n\t                        + ',0l0,'\n\t                        + (y(getLow(d,i))\n\t                            - y(getOpen(d,i)))\n\t                        + 'l0,'\n\t                        + (y(getClose(d,i))\n\t                            - y(getLow(d,i)))\n\t                        + 'l'\n\t                        + (w/2)\n\t                        + ',0l'\n\t                        + (-w/2)\n\t                        + ',0z';\n\t                });\n\t        });\n\t\n\t        return chart;\n\t    }\n\t\n\t\n\t    //Create methods to allow outside functions to highlight a specific bar.\n\t    chart.highlightPoint = function(pointIndex, isHoverOver) {\n\t        chart.clearHighlights();\n\t        container.select(\".nv-ohlcBar .nv-tick-0-\" + pointIndex)\n\t            .classed(\"hover\", isHoverOver)\n\t        ;\n\t    };\n\t\n\t    chart.clearHighlights = function() {\n\t        container.select(\".nv-ohlcBar .nv-tick.hover\")\n\t            .classed(\"hover\", false)\n\t        ;\n\t    };\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:    {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:   {get: function(){return height;}, set: function(_){height=_;}},\n\t        xScale:   {get: function(){return x;}, set: function(_){x=_;}},\n\t        yScale:   {get: function(){return y;}, set: function(_){y=_;}},\n\t        xDomain:  {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n\t        yDomain:  {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n\t        xRange:   {get: function(){return xRange;}, set: function(_){xRange=_;}},\n\t        yRange:   {get: function(){return yRange;}, set: function(_){yRange=_;}},\n\t        forceX:   {get: function(){return forceX;}, set: function(_){forceX=_;}},\n\t        forceY:   {get: function(){return forceY;}, set: function(_){forceY=_;}},\n\t        padData:  {get: function(){return padData;}, set: function(_){padData=_;}},\n\t        clipEdge: {get: function(){return clipEdge;}, set: function(_){clipEdge=_;}},\n\t        id:       {get: function(){return id;}, set: function(_){id=_;}},\n\t        interactive: {get: function(){return interactive;}, set: function(_){interactive=_;}},\n\t\n\t        x:     {get: function(){return getX;}, set: function(_){getX=_;}},\n\t        y:     {get: function(){return getY;}, set: function(_){getY=_;}},\n\t        open:  {get: function(){return getOpen();}, set: function(_){getOpen=_;}},\n\t        close: {get: function(){return getClose();}, set: function(_){getClose=_;}},\n\t        high:  {get: function(){return getHigh;}, set: function(_){getHigh=_;}},\n\t        low:   {get: function(){return getLow;}, set: function(_){getLow=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    != undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  != undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom != undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   != undefined ? _.left   : margin.left;\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t        }}\n\t    });\n\t\n\t    nv.utils.initOptions(chart);\n\t    return chart;\n\t};\n\t// Code adapted from Jason Davies' \"Parallel Coordinates\"\n\t// http://bl.ocks.org/jasondavies/1341281\n\tnv.models.parallelCoordinates = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var margin = {top: 30, right: 0, bottom: 10, left: 0}\n\t        , width = null\n\t        , height = null\n\t        , availableWidth = null\n\t        , availableHeight = null\n\t        , x = d3.scale.ordinal()\n\t        , y = {}\n\t        , undefinedValuesLabel = \"undefined values\"\n\t        , dimensionData = []\n\t        , enabledDimensions = []\n\t        , dimensionNames = []\n\t        , displayBrush = true\n\t        , color = nv.utils.defaultColor()\n\t        , filters = []\n\t        , active = []\n\t        , dragging = []\n\t        , axisWithUndefinedValues = []\n\t        , lineTension = 1\n\t        , foreground\n\t        , background\n\t        , dimensions\n\t        , line = d3.svg.line()\n\t        , axis = d3.svg.axis()\n\t        , dispatch = d3.dispatch('brushstart', 'brush', 'brushEnd', 'dimensionsOrder', \"stateChange\", 'elementClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd', 'activeChanged')\n\t        ;\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var renderWatch = nv.utils.renderWatch(dispatch);\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        selection.each(function(data) {\n\t            var container = d3.select(this);\n\t            availableWidth = nv.utils.availableWidth(width, container, margin);\n\t            availableHeight = nv.utils.availableHeight(height, container, margin);\n\t\n\t            nv.utils.initSVG(container);\n\t\n\t           //Convert old data to new format (name, values)\n\t            if (data[0].values === undefined) {\n\t                var newData = [];\n\t                data.forEach(function (d) {\n\t                        var val = {};\n\t                        var key = Object.keys(d);\n\t                        key.forEach(function (k) { if (k !== \"name\") val[k] = d[k] });\n\t                        newData.push({ key: d.name, values: val });\n\t                });\n\t                data = newData;\n\t            }\n\t\n\t            var dataValues = data.map(function (d) {return d.values});\n\t            if (active.length === 0) {\n\t                active = data;\n\t            }; //set all active before first brush call\n\t            \n\t            dimensionNames = dimensionData.sort(function (a, b) { return a.currentPosition - b.currentPosition; }).map(function (d) { return d.key });\n\t            enabledDimensions = dimensionData.filter(function (d) { return !d.disabled; });\n\t            \n\t            // Setup Scales\n\t            x.rangePoints([0, availableWidth], 1).domain(enabledDimensions.map(function (d) { return d.key; }));\n\t\n\t            //Set as true if all values on an axis are missing.\n\t            // Extract the list of dimensions and create a scale for each.\n\t            var oldDomainMaxValue = {};\n\t            var displayMissingValuesline = false;\n\t            var currentTicks = [];\n\t            \n\t            dimensionNames.forEach(function(d) {\n\t                var extent = d3.extent(dataValues, function (p) { return +p[d]; });\n\t                var min = extent[0];\n\t                var max = extent[1];\n\t                var onlyUndefinedValues = false;\n\t                //If there is no values to display on an axis, set the extent to 0\n\t                if (isNaN(min) || isNaN(max)) {\n\t                    onlyUndefinedValues = true;\n\t                    min = 0;\n\t                    max = 0;\n\t                }\n\t                //Scale axis if there is only one value\n\t                if (min === max) {\n\t                    min = min - 1;\n\t                    max = max + 1;\n\t                }\n\t                var f = filters.filter(function (k) { return k.dimension == d; });\n\t                if (f.length !== 0) {\n\t                    //If there is only NaN values, keep the existing domain.\n\t                    if (onlyUndefinedValues) {\n\t                        min = y[d].domain()[0];\n\t                        max = y[d].domain()[1];\n\t                    }\n\t                        //If the brush extent is > max (< min), keep the extent value.\n\t                    else if (!f[0].hasOnlyNaN && displayBrush) {\n\t                        min = min > f[0].extent[0] ? f[0].extent[0] : min;\n\t                        max = max < f[0].extent[1] ? f[0].extent[1] : max;\n\t                    }\n\t                        //If there is NaN values brushed be sure the brush extent is on the domain.\n\t                    else if (f[0].hasNaN) {\n\t                        max = max < f[0].extent[1] ? f[0].extent[1] : max;\n\t                        oldDomainMaxValue[d] = y[d].domain()[1];\n\t                        displayMissingValuesline = true;\n\t                    }\n\t                }\n\t                //Use 90% of (availableHeight - 12) for the axis range, 12 reprensenting the space necessary to display \"undefined values\" text.\n\t                //The remaining 10% are used to display the missingValue line.\n\t                y[d] = d3.scale.linear()\n\t                    .domain([min, max])\n\t                    .range([(availableHeight - 12) * 0.9, 0]);\n\t\n\t                axisWithUndefinedValues = [];\n\t                y[d].brush = d3.svg.brush().y(y[d]).on('brushstart', brushstart).on('brush', brush).on('brushend', brushend);\n\t            });\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-parallelCoordinates').data([data]);\n\t            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-parallelCoordinates');\n\t            var gEnter = wrapEnter.append('g');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-parallelCoordinates background');\n\t            gEnter.append('g').attr('class', 'nv-parallelCoordinates foreground');\n\t            gEnter.append('g').attr('class', 'nv-parallelCoordinates missingValuesline');\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            line.interpolate('cardinal').tension(lineTension);\n\t            axis.orient('left');\n\t            var axisDrag = d3.behavior.drag()\n\t                        .on('dragstart', dragStart)\n\t                        .on('drag', dragMove)\n\t                        .on('dragend', dragEnd);\n\t\n\t            //Add missing value line at the bottom of the chart\n\t            var missingValuesline, missingValueslineText;\n\t            var step = x.range()[1] - x.range()[0];\n\t            if (!isNaN(step)) {\n\t                var lineData = [0 + step / 2, availableHeight - 12, availableWidth - step / 2, availableHeight - 12];\n\t                missingValuesline = wrap.select('.missingValuesline').selectAll('line').data([lineData]);\n\t                missingValuesline.enter().append('line');\n\t                missingValuesline.exit().remove();\n\t                missingValuesline.attr(\"x1\", function(d) { return d[0]; })\n\t                        .attr(\"y1\", function(d) { return d[1]; })\n\t                        .attr(\"x2\", function(d) { return d[2]; })\n\t                        .attr(\"y2\", function(d) { return d[3]; });\n\t    \n\t                //Add the text \"undefined values\" under the missing value line\n\t                missingValueslineText = wrap.select('.missingValuesline').selectAll('text').data([undefinedValuesLabel]);\n\t                missingValueslineText.append('text').data([undefinedValuesLabel]);\n\t                missingValueslineText.enter().append('text');\n\t                missingValueslineText.exit().remove();\n\t                missingValueslineText.attr(\"y\", availableHeight)\n\t                        //To have the text right align with the missingValues line, substract 92 representing the text size.\n\t                        .attr(\"x\", availableWidth - 92 - step / 2)\n\t                        .text(function(d) { return d; });\n\t            }\n\t            // Add grey background lines for context.\n\t            background = wrap.select('.background').selectAll('path').data(data);\n\t            background.enter().append('path');\n\t            background.exit().remove();\n\t            background.attr('d', path);\n\t\n\t            // Add blue foreground lines for focus.\n\t            foreground = wrap.select('.foreground').selectAll('path').data(data);\n\t            foreground.enter().append('path')\n\t            foreground.exit().remove();\n\t            foreground.attr('d', path)\n\t                .style(\"stroke-width\", function (d, i) {\n\t                if (isNaN(d.strokeWidth)) { d.strokeWidth = 1;} return d.strokeWidth;})\n\t                .attr('stroke', function (d, i) { return d.color || color(d, i); });\n\t            foreground.on(\"mouseover\", function (d, i) {\n\t                d3.select(this).classed('hover', true).style(\"stroke-width\", d.strokeWidth + 2 + \"px\").style(\"stroke-opacity\", 1);\n\t                dispatch.elementMouseover({\n\t                    label: d.name,\n\t                    color: d.color || color(d, i),\n\t                    values: d.values,\n\t                    dimensions: enabledDimensions\n\t                });\n\t\n\t            });\n\t            foreground.on(\"mouseout\", function (d, i) {\n\t                d3.select(this).classed('hover', false).style(\"stroke-width\", d.strokeWidth + \"px\").style(\"stroke-opacity\", 0.7);\n\t                dispatch.elementMouseout({\n\t                    label: d.name,\n\t                    index: i\n\t                });\n\t            });\n\t            foreground.on('mousemove', function (d, i) {\n\t                dispatch.elementMousemove();\n\t            });\n\t            foreground.on('click', function (d) {\n\t                dispatch.elementClick({\n\t                    id: d.id\n\t                });\n\t            });\n\t            // Add a group element for each dimension.\n\t            dimensions = g.selectAll('.dimension').data(enabledDimensions);\n\t            var dimensionsEnter = dimensions.enter().append('g').attr('class', 'nv-parallelCoordinates dimension');\n\t\n\t            dimensions.attr('transform', function(d) { return 'translate(' + x(d.key) + ',0)'; });\n\t            dimensionsEnter.append('g').attr('class', 'nv-axis');\n\t\n\t            // Add an axis and title.\n\t            dimensionsEnter.append('text')\n\t                .attr('class', 'nv-label')\n\t                .style(\"cursor\", \"move\")\n\t                .attr('dy', '-1em')\n\t                .attr('text-anchor', 'middle')\n\t                .on(\"mouseover\", function(d, i) {\n\t                    dispatch.elementMouseover({\n\t                        label: d.tooltip || d.key,\n\t                        color: d.color \n\t                    });\n\t                })\n\t                .on(\"mouseout\", function(d, i) {\n\t                    dispatch.elementMouseout({\n\t                        label: d.tooltip\n\t                    });\n\t                })\n\t                .on('mousemove', function (d, i) {\n\t                    dispatch.elementMousemove();\n\t                })\n\t                .call(axisDrag);\n\t\n\t            dimensionsEnter.append('g').attr('class', 'nv-brushBackground');\n\t            dimensions.exit().remove();\n\t            dimensions.select('.nv-label').text(function (d) { return d.key });\n\t\n\t            // Add and store a brush for each axis.\n\t            restoreBrush(displayBrush);\n\t\n\t            var actives = dimensionNames.filter(function (p) { return !y[p].brush.empty(); }),\n\t                    extents = actives.map(function (p) { return y[p].brush.extent(); });\n\t            var formerActive = active.slice(0);\n\t\n\t            //Restore active values\n\t            active = [];\n\t            foreground.style(\"display\", function (d) {\n\t                var isActive = actives.every(function (p, i) {\n\t                    if ((isNaN(d.values[p]) || isNaN(parseFloat(d.values[p]))) && extents[i][0] == y[p].brush.y().domain()[0]) {\n\t                        return true;\n\t                    }\n\t                    return (extents[i][0] <= d.values[p] && d.values[p] <= extents[i][1]) && !isNaN(parseFloat(d.values[p]));\n\t                });\n\t                if (isActive)\n\t                    active.push(d);\n\t                return !isActive ? \"none\" : null;\n\t\n\t            });\n\t\n\t            if (filters.length > 0 || !nv.utils.arrayEquals(active, formerActive)) {\n\t               dispatch.activeChanged(active);\n\t            }\n\t\n\t            // Returns the path for a given data point.\n\t            function path(d) {\n\t                return line(enabledDimensions.map(function (p) {\n\t                    //If value if missing, put the value on the missing value line\n\t                    if (isNaN(d.values[p.key]) || isNaN(parseFloat(d.values[p.key])) || displayMissingValuesline) {\n\t                        var domain = y[p.key].domain();\n\t                        var range = y[p.key].range();\n\t                        var min = domain[0] - (domain[1] - domain[0]) / 9;\n\t\n\t                        //If it's not already the case, allow brush to select undefined values\n\t                        if (axisWithUndefinedValues.indexOf(p.key) < 0) {\n\t\n\t                            var newscale = d3.scale.linear().domain([min, domain[1]]).range([availableHeight - 12, range[1]]);\n\t                            y[p.key].brush.y(newscale);\n\t                            axisWithUndefinedValues.push(p.key);\n\t                        }\n\t                        if (isNaN(d.values[p.key]) || isNaN(parseFloat(d.values[p.key]))) {\n\t                            return [x(p.key), y[p.key](min)];\n\t                        }\n\t                    }\n\t\n\t                    //If parallelCoordinate contain missing values show the missing values line otherwise, hide it.\n\t                    if (missingValuesline !== undefined) {\n\t                        if (axisWithUndefinedValues.length > 0 || displayMissingValuesline) {\n\t                            missingValuesline.style(\"display\", \"inline\");\n\t                            missingValueslineText.style(\"display\", \"inline\");\n\t                        } else {\n\t                            missingValuesline.style(\"display\", \"none\");\n\t                            missingValueslineText.style(\"display\", \"none\");\n\t                        }\n\t                    }\n\t                    return [x(p.key), y[p.key](d.values[p.key])];\n\t                }));\n\t            }\n\t\n\t            function restoreBrush(visible) {\n\t                filters.forEach(function (f) {\n\t                    //If filter brushed NaN values, keep the brush on the bottom of the axis.\n\t                    var brushDomain = y[f.dimension].brush.y().domain();\n\t                    if (f.hasOnlyNaN) {\n\t                        f.extent[1] = (y[f.dimension].domain()[1] - brushDomain[0]) * (f.extent[1] - f.extent[0]) / (oldDomainMaxValue[f.dimension] - f.extent[0]) + brushDomain[0];\n\t                    }\n\t                    if (f.hasNaN) {\n\t                        f.extent[0] = brushDomain[0];\n\t                    }\n\t                    if (visible)\n\t                        y[f.dimension].brush.extent(f.extent);\n\t                });\n\t                \n\t                dimensions.select('.nv-brushBackground')\n\t                    .each(function (d) {\n\t                        d3.select(this).call(y[d.key].brush);\n\t\n\t                    })\n\t                    .selectAll('rect')\n\t                    .attr('x', -8)\n\t                    .attr('width', 16);\n\t                \n\t                updateTicks();\n\t            }\n\t            \n\t            // Handles a brush event, toggling the display of foreground lines.\n\t            function brushstart() {\n\t                //If brush aren't visible, show it before brushing again.\n\t                if (displayBrush === false) {\n\t                    displayBrush = true;\n\t                    restoreBrush(true);\n\t                }\n\t            }\n\t            \n\t            // Handles a brush event, toggling the display of foreground lines.\n\t            function brush() {\n\t                actives = dimensionNames.filter(function (p) { return !y[p].brush.empty(); });\n\t                extents = actives.map(function(p) { return y[p].brush.extent(); });\n\t\n\t                filters = []; //erase current filters\n\t                actives.forEach(function(d,i) {\n\t                    filters[i] = {\n\t                        dimension: d,\n\t                        extent: extents[i],\n\t                        hasNaN: false,\n\t                        hasOnlyNaN: false\n\t                    }\n\t                });\n\t\n\t                active = []; //erase current active list\n\t                foreground.style('display', function(d) {\n\t                    var isActive = actives.every(function(p, i) {\n\t                        if ((isNaN(d.values[p]) || isNaN(parseFloat(d.values[p]))) && extents[i][0] == y[p].brush.y().domain()[0]) return true;\n\t                        return (extents[i][0] <= d.values[p] && d.values[p] <= extents[i][1]) && !isNaN(parseFloat(d.values[p]));\n\t                    });\n\t                    if (isActive) active.push(d);\n\t                    return isActive ? null : 'none';\n\t                });\n\t                \n\t                updateTicks();\n\t                \n\t                dispatch.brush({\n\t                    filters: filters,\n\t                    active: active\n\t                });\n\t            }\n\t            function brushend() {\n\t                var hasActiveBrush = actives.length > 0 ? true : false;\n\t                filters.forEach(function (f) {\n\t                    if (f.extent[0] === y[f.dimension].brush.y().domain()[0] && axisWithUndefinedValues.indexOf(f.dimension) >= 0)\n\t                        f.hasNaN = true;\n\t                    if (f.extent[1] < y[f.dimension].domain()[0])\n\t                        f.hasOnlyNaN = true;\n\t                });\n\t                dispatch.brushEnd(active, hasActiveBrush);\n\t            }           \n\t            function updateTicks() {\n\t                dimensions.select('.nv-axis')\n\t                    .each(function (d, i) {\n\t                        var f = filters.filter(function (k) { return k.dimension == d.key; });\n\t                        currentTicks[d.key] = y[d.key].domain();\n\t                        \n\t                        //If brush are available, display brush extent\n\t                        if (f.length != 0 && displayBrush)\n\t                        {\n\t                            currentTicks[d.key] = [];\n\t                            if (f[0].extent[1] > y[d.key].domain()[0]) \n\t                                currentTicks[d.key] = [f[0].extent[1]];\n\t                            if (f[0].extent[0] >= y[d.key].domain()[0])\n\t                                currentTicks[d.key].push(f[0].extent[0]);    \n\t                        }\n\t                            \n\t                        d3.select(this).call(axis.scale(y[d.key]).tickFormat(d.format).tickValues(currentTicks[d.key]));\n\t                });\n\t            }\n\t            function dragStart(d) {\n\t                dragging[d.key] = this.parentNode.__origin__ = x(d.key);\n\t                background.attr(\"visibility\", \"hidden\");\n\t            }\n\t            function dragMove(d) {\n\t                dragging[d.key] = Math.min(availableWidth, Math.max(0, this.parentNode.__origin__ += d3.event.x));\n\t                foreground.attr(\"d\", path);\n\t                enabledDimensions.sort(function (a, b) { return dimensionPosition(a.key) - dimensionPosition(b.key); });\n\t                enabledDimensions.forEach(function (d, i) { return d.currentPosition = i; });\n\t                x.domain(enabledDimensions.map(function (d) { return d.key; }));\n\t                dimensions.attr(\"transform\", function(d) { return \"translate(\" + dimensionPosition(d.key) + \")\"; });\n\t            }\n\t            function dragEnd(d, i) {\n\t                delete this.parentNode.__origin__;\n\t                delete dragging[d.key];\n\t                d3.select(this.parentNode).attr(\"transform\", \"translate(\" + x(d.key) + \")\");\n\t                foreground\n\t                  .attr(\"d\", path);\n\t                background\n\t                  .attr(\"d\", path)\n\t                  .attr(\"visibility\", null);\n\t\n\t                dispatch.dimensionsOrder(enabledDimensions);\n\t            }\n\t            function dimensionPosition(d) {\n\t                var v = dragging[d];\n\t                return v == null ? x(d) : v;\n\t            }\n\t        });\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:         {get: function(){return width;},           set: function(_){width= _;}},\n\t        height:        {get: function(){return height;},          set: function(_){height= _;}},\n\t        dimensionData: { get: function () { return dimensionData; }, set: function (_) { dimensionData = _; } },\n\t        displayBrush: { get: function () { return displayBrush; }, set: function (_) { displayBrush = _; } },\n\t        filters: { get: function () { return filters; }, set: function (_) { filters = _; } },\n\t        active: { get: function () { return active; }, set: function (_) { active = _; } },\n\t        lineTension:   {get: function(){return lineTension;},     set: function(_){lineTension = _;}},\n\t        undefinedValuesLabel : {get: function(){return undefinedValuesLabel;}, set: function(_){undefinedValuesLabel=_;}},\n\t        \n\t        // deprecated options\n\t        dimensions: {get: function () { return dimensionData.map(function (d){return d.key}); }, set: function (_) {\n\t            // deprecated after 1.8.1\n\t            nv.deprecated('dimensions', 'use dimensionData instead');\n\t            if (dimensionData.length === 0) {\n\t                _.forEach(function (k) { dimensionData.push({ key: k }) })\n\t            } else {\n\t                _.forEach(function (k, i) { dimensionData[i].key= k })\n\t            }\n\t        }},\n\t        dimensionNames: {get: function () { return dimensionData.map(function (d){return d.key}); }, set: function (_) {\n\t            // deprecated after 1.8.1\n\t            nv.deprecated('dimensionNames', 'use dimensionData instead');\n\t            dimensionNames = [];\n\t            if (dimensionData.length === 0) {\n\t                _.forEach(function (k) { dimensionData.push({ key: k }) })\n\t            } else {\n\t                _.forEach(function (k, i) { dimensionData[i].key = k })\n\t            }\n\t \n\t        }},\n\t        dimensionFormats: {get: function () { return dimensionData.map(function (d) { return d.format }); }, set: function (_) {\n\t            // deprecated after 1.8.1\n\t            nv.deprecated('dimensionFormats', 'use dimensionData instead');\n\t            if (dimensionData.length === 0) {\n\t                _.forEach(function (f) { dimensionData.push({ format: f }) })\n\t            } else {\n\t                _.forEach(function (f, i) { dimensionData[i].format = f })\n\t            }\n\t\n\t        }},\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    =  _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  =  _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom =  _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   =  _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t        }}\n\t    });\n\t    nv.utils.initOptions(chart);\n\t    return chart;\n\t};\n\tnv.models.parallelCoordinatesChart = function () {\n\t        \"use strict\";\n\t        //============================================================\n\t        // Public Variables with Default Settings\n\t        //------------------------------------------------------------\n\t\n\t        var parallelCoordinates = nv.models.parallelCoordinates()\n\t        var legend = nv.models.legend()\n\t        var tooltip = nv.models.tooltip();\n\t        var dimensionTooltip = nv.models.tooltip();\n\t\n\t        var margin = { top: 0, right: 0, bottom: 0, left: 0 }\n\t        , width = null\n\t\t\t, height = null\n\t        , showLegend = true\n\t\t\t, color = nv.utils.defaultColor()\n\t        , state = nv.utils.state()\n\t        , dimensionData = []\n\t        , displayBrush = true\n\t        , defaultState = null\n\t        , noData = null\n\t        , nanValue = \"undefined\"\n\t        , dispatch = d3.dispatch('dimensionsOrder', 'brushEnd', 'stateChange', 'changeState', 'renderEnd')\n\t        , controlWidth = function () { return showControls ? 180 : 0 }\n\t        ;\n\t\n\t\t    //============================================================\n\t\n\t\t\t//============================================================\n\t        // Private Variables\n\t        //------------------------------------------------------------\n\t\n\t        var renderWatch = nv.utils.renderWatch(dispatch);\n\t\n\t        var stateGetter = function(data) {\n\t            return function() {\n\t                return {\n\t                    active: data.map(function(d) { return !d.disabled })\n\t                };\n\t            }\n\t        };\n\t\n\t        var stateSetter = function(data) {\n\t            return function(state) {\n\t                if(state.active !== undefined) {\n\t                    data.forEach(function(series, i) {\n\t                        series.disabled = !state.active[i];\n\t                    });\n\t                }\n\t            }\n\t        };\n\t\n\t        tooltip.contentGenerator(function(data) {\n\t            var str = '<table><thead><tr><td class=\"legend-color-guide\"><div style=\"background-color:' + data.color + '\"></div></td><td><strong>' + data.key + '</strong></td></tr></thead>';\n\t            if(data.series.length !== 0)\n\t            {\n\t                str = str + '<tbody><tr><td height =\"10px\"></td></tr>';\n\t                data.series.forEach(function(d){\n\t                    str = str + '<tr><td class=\"legend-color-guide\"><div style=\"background-color:' + d.color + '\"></div></td><td class=\"key\">' + d.key + '</td><td class=\"value\">' + d.value + '</td></tr>';\n\t                });\n\t                str = str + '</tbody>';\n\t            }\n\t            str = str + '</table>';\n\t            return str;\n\t        });\n\t\n\t        //============================================================\n\t        // Chart function\n\t        //------------------------------------------------------------\n\t\n\t        function chart(selection) {\n\t            renderWatch.reset();\n\t            renderWatch.models(parallelCoordinates);\n\t\n\t            selection.each(function(data) {\n\t                var container = d3.select(this);\n\t                nv.utils.initSVG(container);\n\t\n\t                var that = this;\n\t\n\t                var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                    availableHeight = nv.utils.availableHeight(height, container, margin);\n\t\n\t                chart.update = function() { container.call(chart); };\n\t                chart.container = this;\n\t\n\t                state.setter(stateSetter(dimensionData), chart.update)\n\t                    .getter(stateGetter(dimensionData))\n\t                    .update();\n\t\n\t                //set state.disabled\n\t                state.disabled = dimensionData.map(function (d) { return !!d.disabled });\n\t\n\t                //Keep dimensions position in memory\n\t                dimensionData = dimensionData.map(function (d) {d.disabled = !!d.disabled; return d});\n\t                dimensionData.forEach(function (d, i) {\n\t                    d.originalPosition = isNaN(d.originalPosition) ? i : d.originalPosition;\n\t                    d.currentPosition = isNaN(d.currentPosition) ? i : d.currentPosition;\n\t                });\n\t\n\t               if (!defaultState) {\n\t                    var key;\n\t                    defaultState = {};\n\t                    for(key in state) {\n\t                        if(state[key] instanceof Array)\n\t                            defaultState[key] = state[key].slice(0);\n\t                        else\n\t                            defaultState[key] = state[key];\n\t                    }\n\t                }\n\t\n\t                // Display No Data message if there's nothing to show.\n\t                if(!data || !data.length) {\n\t                    nv.utils.noData(chart, container);\n\t                    return chart;\n\t                } else {\n\t                    container.selectAll('.nv-noData').remove();\n\t                }\n\t\n\t                //------------------------------------------------------------\n\t                // Setup containers and skeleton of chart\n\t\n\t                var wrap = container.selectAll('g.nv-wrap.nv-parallelCoordinatesChart').data([data]);\n\t                var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-parallelCoordinatesChart').append('g');\n\t\n\t                var g = wrap.select('g');\n\t\n\t                gEnter.append('g').attr('class', 'nv-parallelCoordinatesWrap');\n\t                gEnter.append('g').attr('class', 'nv-legendWrap');\n\t\n\t                g.select(\"rect\")\n\t                    .attr(\"width\", availableWidth)\n\t                    .attr(\"height\", (availableHeight > 0) ? availableHeight : 0);\n\t\n\t                // Legend\n\t                if (!showLegend) {\n\t                    g.select('.nv-legendWrap').selectAll('*').remove();\n\t                } else {\n\t                    legend.width(availableWidth)\n\t                        .color(function (d) { return \"rgb(188,190,192)\"; });\n\t\n\t                    g.select('.nv-legendWrap')\n\t                        .datum(dimensionData.sort(function (a, b) { return a.originalPosition - b.originalPosition; }))\n\t                        .call(legend);\n\t\n\t                    if (legend.height() > margin.top) {\n\t                        margin.top = legend.height();\n\t                        availableHeight = nv.utils.availableHeight(height, container, margin);\n\t                    }\n\t                    wrap.select('.nv-legendWrap')\n\t                       .attr('transform', 'translate( 0 ,' + (-margin.top) + ')');\n\t                }\n\t                wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t                // Main Chart Component(s)\n\t                parallelCoordinates\n\t                    .width(availableWidth)\n\t                    .height(availableHeight)\n\t                    .dimensionData(dimensionData)\n\t                    .displayBrush(displayBrush);\n\t\n\t\t\t        var parallelCoordinatesWrap = g.select('.nv-parallelCoordinatesWrap ')\n\t                  .datum(data);\n\t\n\t\t\t        parallelCoordinatesWrap.transition().call(parallelCoordinates);\n\t\n\t\t\t\t\t//============================================================\n\t                // Event Handling/Dispatching (in chart's scope)\n\t                //------------------------------------------------------------\n\t                //Display reset brush button\n\t\t\t        parallelCoordinates.dispatch.on('brushEnd', function (active, hasActiveBrush) {\n\t\t\t            if (hasActiveBrush) {\n\t\t\t                displayBrush = true;\n\t\t\t                dispatch.brushEnd(active);\n\t\t\t            } else {\n\t\n\t\t\t                displayBrush = false;\n\t\t\t            }\n\t\t\t        });\n\t\n\t\t\t        legend.dispatch.on('stateChange', function(newState) {\n\t\t\t            for(var key in newState) {\n\t\t\t                state[key] = newState[key];\n\t\t\t            }\n\t\t\t            dispatch.stateChange(state);\n\t\t\t            chart.update();\n\t\t\t        });\n\t\n\t                //Update dimensions order and display reset sorting button\n\t\t\t        parallelCoordinates.dispatch.on('dimensionsOrder', function (e) {\n\t\t\t            dimensionData.sort(function (a, b) { return a.currentPosition - b.currentPosition; });\n\t\t\t            var isSorted = false;\n\t\t\t            dimensionData.forEach(function (d, i) {\n\t\t\t                d.currentPosition = i;\n\t\t\t                if (d.currentPosition !== d.originalPosition)\n\t\t\t                    isSorted = true;\n\t\t\t            });\n\t\t\t            dispatch.dimensionsOrder(dimensionData, isSorted);\n\t\t\t        });\n\t\n\t\t\t\t\t// Update chart from a state object passed to event handler\n\t                dispatch.on('changeState', function (e) {\n\t\n\t                    if (typeof e.disabled !== 'undefined') {\n\t                        dimensionData.forEach(function (series, i) {\n\t                            series.disabled = e.disabled[i];\n\t                        });\n\t                        state.disabled = e.disabled;\n\t                    }\n\t                    chart.update();\n\t                });\n\t            });\n\t\n\t            renderWatch.renderEnd('parraleleCoordinateChart immediate');\n\t            return chart;\n\t        }\n\t\n\t\t\t//============================================================\n\t        // Event Handling/Dispatching (out of chart's scope)\n\t        //------------------------------------------------------------\n\t\n\t        parallelCoordinates.dispatch.on('elementMouseover.tooltip', function (evt) {\n\t            var tp = {\n\t                key: evt.label,\n\t                color: evt.color,\n\t                series: []\n\t             }\n\t            if(evt.values){\n\t                Object.keys(evt.values).forEach(function (d) {\n\t                    var dim = evt.dimensions.filter(function (dd) {return dd.key === d;})[0];\n\t                    if(dim){\n\t                        var v;\n\t                        if (isNaN(evt.values[d]) || isNaN(parseFloat(evt.values[d]))) {\n\t                            v = nanValue;\n\t                        } else {\n\t                            v = dim.format(evt.values[d]);\n\t                        }\n\t                        tp.series.push({ idx: dim.currentPosition, key: d, value: v, color: dim.color });\n\t                    }\n\t                });\n\t                tp.series.sort(function(a,b) {return a.idx - b.idx});\n\t             }\n\t            tooltip.data(tp).hidden(false);\n\t        });\n\t\n\t        parallelCoordinates.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t            tooltip.hidden(true)\n\t        });\n\t\n\t        parallelCoordinates.dispatch.on('elementMousemove.tooltip', function () {\n\t            tooltip();\n\t        });\n\t\t\t //============================================================\n\t        // Expose Public Variables\n\t        //------------------------------------------------------------\n\t\n\t\t\t// expose chart's sub-components\n\t        chart.dispatch = dispatch;\n\t        chart.parallelCoordinates = parallelCoordinates;\n\t        chart.legend = legend;\n\t        chart.tooltip = tooltip;\n\t        chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t        chart._options = Object.create({}, {\n\t            // simple options, just get/set the necessary values\n\t            width: { get: function () { return width; }, set: function (_) { width = _; } },\n\t            height: { get: function () { return height; }, set: function (_) { height = _; } },\n\t            showLegend: { get: function () { return showLegend; }, set: function (_) { showLegend = _; } },\n\t            defaultState: { get: function () { return defaultState; }, set: function (_) { defaultState = _; } },\n\t            dimensionData: { get: function () { return dimensionData; }, set: function (_) { dimensionData = _; } },\n\t            displayBrush: { get: function () { return displayBrush; }, set: function (_) { displayBrush = _; } },\n\t            noData: { get: function () { return noData; }, set: function (_) { noData = _; } },\n\t            nanValue: { get: function () { return nanValue; }, set: function (_) { nanValue = _; } },\n\t\n\t            // options that require extra logic in the setter\n\t            margin: {\n\t                get: function () { return margin; },\n\t                set: function (_) {\n\t                    margin.top = _.top !== undefined ? _.top : margin.top;\n\t                    margin.right = _.right !== undefined ? _.right : margin.right;\n\t                    margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t                    margin.left = _.left !== undefined ? _.left : margin.left;\n\t                }\n\t            },\n\t            color: {get: function(){return color;}, set: function(_){\n\t                    color = nv.utils.getColor(_);\n\t                    legend.color(color);\n\t                    parallelCoordinates.color(color);\n\t                }}\n\t        });\n\t\n\t        nv.utils.inheritOptions(chart, parallelCoordinates);\n\t        nv.utils.initOptions(chart);\n\t\n\t        return chart;\n\t    };\n\tnv.models.pie = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n\t        , width = 500\n\t        , height = 500\n\t        , getX = function(d) { return d.x }\n\t        , getY = function(d) { return d.y }\n\t        , id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n\t        , container = null\n\t        , color = nv.utils.defaultColor()\n\t        , valueFormat = d3.format(',.2f')\n\t        , showLabels = true\n\t        , labelsOutside = false\n\t        , labelType = \"key\"\n\t        , labelThreshold = .02 //if slice percentage is under this, don't show label\n\t        , donut = false\n\t        , title = false\n\t        , growOnHover = true\n\t        , titleOffset = 0\n\t        , labelSunbeamLayout = false\n\t        , startAngle = false\n\t        , padAngle = false\n\t        , endAngle = false\n\t        , cornerRadius = 0\n\t        , donutRatio = 0.5\n\t        , duration = 250\n\t        , arcsRadius = []\n\t        , dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd')\n\t        ;\n\t\n\t    var arcs = [];\n\t    var arcsOver = [];\n\t\n\t    //============================================================\n\t    // chart function\n\t    //------------------------------------------------------------\n\t\n\t    var renderWatch = nv.utils.renderWatch(dispatch);\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        selection.each(function(data) {\n\t            var availableWidth = width - margin.left - margin.right\n\t                , availableHeight = height - margin.top - margin.bottom\n\t                , radius = Math.min(availableWidth, availableHeight) / 2\n\t                , arcsRadiusOuter = []\n\t                , arcsRadiusInner = []\n\t                ;\n\t\n\t            container = d3.select(this)\n\t            if (arcsRadius.length === 0) {\n\t                var outer = radius - radius / 5;\n\t                var inner = donutRatio * radius;\n\t                for (var i = 0; i < data[0].length; i++) {\n\t                    arcsRadiusOuter.push(outer);\n\t                    arcsRadiusInner.push(inner);\n\t                }\n\t            } else {\n\t                if(growOnHover){\n\t                    arcsRadiusOuter = arcsRadius.map(function (d) { return (d.outer - d.outer / 5) * radius; });\n\t                    arcsRadiusInner = arcsRadius.map(function (d) { return (d.inner - d.inner / 5) * radius; });\n\t                    donutRatio = d3.min(arcsRadius.map(function (d) { return (d.inner - d.inner / 5); }));\n\t                } else {\n\t                    arcsRadiusOuter = arcsRadius.map(function (d) { return d.outer * radius; });\n\t                    arcsRadiusInner = arcsRadius.map(function (d) { return d.inner * radius; });\n\t                    donutRatio = d3.min(arcsRadius.map(function (d) { return d.inner; }));\n\t                }\n\t            }\n\t            nv.utils.initSVG(container);\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('.nv-wrap.nv-pie').data(data);\n\t            var wrapEnter = wrap.enter().append('g').attr('class','nvd3 nv-wrap nv-pie nv-chart-' + id);\n\t            var gEnter = wrapEnter.append('g');\n\t            var g = wrap.select('g');\n\t            var g_pie = gEnter.append('g').attr('class', 'nv-pie');\n\t            gEnter.append('g').attr('class', 'nv-pieLabels');\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t            g.select('.nv-pie').attr('transform', 'translate(' + availableWidth / 2 + ',' + availableHeight / 2 + ')');\n\t            g.select('.nv-pieLabels').attr('transform', 'translate(' + availableWidth / 2 + ',' + availableHeight / 2 + ')');\n\t\n\t            //\n\t            container.on('click', function(d,i) {\n\t                dispatch.chartClick({\n\t                    data: d,\n\t                    index: i,\n\t                    pos: d3.event,\n\t                    id: id\n\t                });\n\t            });\n\t\n\t            arcs = [];\n\t            arcsOver = [];\n\t            for (var i = 0; i < data[0].length; i++) {\n\t\n\t                var arc = d3.svg.arc().outerRadius(arcsRadiusOuter[i]);\n\t                var arcOver = d3.svg.arc().outerRadius(arcsRadiusOuter[i] + 5);\n\t\n\t                if (startAngle !== false) {\n\t                    arc.startAngle(startAngle);\n\t                    arcOver.startAngle(startAngle);\n\t                }\n\t                if (endAngle !== false) {\n\t                    arc.endAngle(endAngle);\n\t                    arcOver.endAngle(endAngle);\n\t                }\n\t                if (donut) {\n\t                    arc.innerRadius(arcsRadiusInner[i]);\n\t                    arcOver.innerRadius(arcsRadiusInner[i]);\n\t                }\n\t\n\t                if (arc.cornerRadius && cornerRadius) {\n\t                    arc.cornerRadius(cornerRadius);\n\t                    arcOver.cornerRadius(cornerRadius);\n\t                }\n\t\n\t                arcs.push(arc);\n\t                arcsOver.push(arcOver);\n\t            }\n\t\n\t            // Setup the Pie chart and choose the data element\n\t            var pie = d3.layout.pie()\n\t                .sort(null)\n\t                .value(function(d) { return d.disabled ? 0 : getY(d) });\n\t\n\t            // padAngle added in d3 3.5\n\t            if (pie.padAngle && padAngle) {\n\t                pie.padAngle(padAngle);\n\t            }\n\t\n\t            // if title is specified and donut, put it in the middle\n\t            if (donut && title) {\n\t                g_pie.append(\"text\").attr('class', 'nv-pie-title');\n\t\n\t                wrap.select('.nv-pie-title')\n\t                    .style(\"text-anchor\", \"middle\")\n\t                    .text(function (d) {\n\t                        return title;\n\t                    })\n\t                    .style(\"font-size\", (Math.min(availableWidth, availableHeight)) * donutRatio * 2 / (title.length + 2) + \"px\")\n\t                    .attr(\"dy\", \"0.35em\") // trick to vertically center text\n\t                    .attr('transform', function(d, i) {\n\t                        return 'translate(0, '+ titleOffset + ')';\n\t                    });\n\t            }\n\t\n\t            var slices = wrap.select('.nv-pie').selectAll('.nv-slice').data(pie);\n\t            var pieLabels = wrap.select('.nv-pieLabels').selectAll('.nv-label').data(pie);\n\t\n\t            slices.exit().remove();\n\t            pieLabels.exit().remove();\n\t\n\t            var ae = slices.enter().append('g');\n\t            ae.attr('class', 'nv-slice');\n\t            ae.on('mouseover', function(d, i) {\n\t                d3.select(this).classed('hover', true);\n\t                if (growOnHover) {\n\t                    d3.select(this).select(\"path\").transition()\n\t                        .duration(70)\n\t                        .attr(\"d\", arcsOver[i]);\n\t                }\n\t                dispatch.elementMouseover({\n\t                    data: d.data,\n\t                    index: i,\n\t                    color: d3.select(this).style(\"fill\"),\n\t                    percent: (d.endAngle - d.startAngle) / (2 * Math.PI)\n\t                });\n\t            });\n\t            ae.on('mouseout', function(d, i) {\n\t                d3.select(this).classed('hover', false);\n\t                if (growOnHover) {\n\t                    d3.select(this).select(\"path\").transition()\n\t                        .duration(50)\n\t                        .attr(\"d\", arcs[i]);\n\t                }\n\t                dispatch.elementMouseout({data: d.data, index: i});\n\t            });\n\t            ae.on('mousemove', function(d, i) {\n\t                dispatch.elementMousemove({data: d.data, index: i});\n\t            });\n\t            ae.on('click', function(d, i) {\n\t                var element = this;\n\t                dispatch.elementClick({\n\t                    data: d.data,\n\t                    index: i,\n\t                    color: d3.select(this).style(\"fill\"),\n\t                    event: d3.event,\n\t                    element: element\n\t                });\n\t            });\n\t            ae.on('dblclick', function(d, i) {\n\t                dispatch.elementDblClick({\n\t                    data: d.data,\n\t                    index: i,\n\t                    color: d3.select(this).style(\"fill\")\n\t                });\n\t            });\n\t\n\t            slices.attr('fill', function(d,i) { return color(d.data, i); });\n\t            slices.attr('stroke', function(d,i) { return color(d.data, i); });\n\t\n\t            var paths = ae.append('path').each(function(d) {\n\t                this._current = d;\n\t            });\n\t\n\t            slices.select('path')\n\t                .transition()\n\t                .duration(duration)\n\t                .attr('d', function (d, i) { return arcs[i](d); })\n\t                .attrTween('d', arcTween);\n\t\n\t            if (showLabels) {\n\t                // This does the normal label\n\t                var labelsArc = [];\n\t                for (var i = 0; i < data[0].length; i++) {\n\t                    labelsArc.push(arcs[i]);\n\t\n\t                    if (labelsOutside) {\n\t                        if (donut) {\n\t                            labelsArc[i] = d3.svg.arc().outerRadius(arcs[i].outerRadius());\n\t                            if (startAngle !== false) labelsArc[i].startAngle(startAngle);\n\t                            if (endAngle !== false) labelsArc[i].endAngle(endAngle);\n\t                        }\n\t                    } else if (!donut) {\n\t                            labelsArc[i].innerRadius(0);\n\t                    }\n\t                }\n\t\n\t                pieLabels.enter().append(\"g\").classed(\"nv-label\",true).each(function(d,i) {\n\t                    var group = d3.select(this);\n\t\n\t                    group.attr('transform', function (d, i) {\n\t                        if (labelSunbeamLayout) {\n\t                            d.outerRadius = arcsRadiusOuter[i] + 10; // Set Outer Coordinate\n\t                            d.innerRadius = arcsRadiusOuter[i] + 15; // Set Inner Coordinate\n\t                            var rotateAngle = (d.startAngle + d.endAngle) / 2 * (180 / Math.PI);\n\t                            if ((d.startAngle + d.endAngle) / 2 < Math.PI) {\n\t                                rotateAngle -= 90;\n\t                            } else {\n\t                                rotateAngle += 90;\n\t                            }\n\t                            return 'translate(' + labelsArc[i].centroid(d) + ') rotate(' + rotateAngle + ')';\n\t                        } else {\n\t                            d.outerRadius = radius + 10; // Set Outer Coordinate\n\t                            d.innerRadius = radius + 15; // Set Inner Coordinate\n\t                            return 'translate(' + labelsArc[i].centroid(d) + ')'\n\t                        }\n\t                    });\n\t\n\t                    group.append('rect')\n\t                        .style('stroke', '#fff')\n\t                        .style('fill', '#fff')\n\t                        .attr(\"rx\", 3)\n\t                        .attr(\"ry\", 3);\n\t\n\t                    group.append('text')\n\t                        .style('text-anchor', labelSunbeamLayout ? ((d.startAngle + d.endAngle) / 2 < Math.PI ? 'start' : 'end') : 'middle') //center the text on it's origin or begin/end if orthogonal aligned\n\t                        .style('fill', '#000')\n\t                });\n\t\n\t                var labelLocationHash = {};\n\t                var avgHeight = 14;\n\t                var avgWidth = 140;\n\t                var createHashKey = function(coordinates) {\n\t                    return Math.floor(coordinates[0]/avgWidth) * avgWidth + ',' + Math.floor(coordinates[1]/avgHeight) * avgHeight;\n\t                };\n\t                var getSlicePercentage = function(d) {\n\t                    return (d.endAngle - d.startAngle) / (2 * Math.PI);\n\t                };\n\t\n\t                pieLabels.watchTransition(renderWatch, 'pie labels').attr('transform', function (d, i) {\n\t                    if (labelSunbeamLayout) {\n\t                        d.outerRadius = arcsRadiusOuter[i] + 10; // Set Outer Coordinate\n\t                        d.innerRadius = arcsRadiusOuter[i] + 15; // Set Inner Coordinate\n\t                        var rotateAngle = (d.startAngle + d.endAngle) / 2 * (180 / Math.PI);\n\t                        if ((d.startAngle + d.endAngle) / 2 < Math.PI) {\n\t                            rotateAngle -= 90;\n\t                        } else {\n\t                            rotateAngle += 90;\n\t                        }\n\t                        return 'translate(' + labelsArc[i].centroid(d) + ') rotate(' + rotateAngle + ')';\n\t                    } else {\n\t                        d.outerRadius = radius + 10; // Set Outer Coordinate\n\t                        d.innerRadius = radius + 15; // Set Inner Coordinate\n\t\n\t                        /*\n\t                        Overlapping pie labels are not good. What this attempts to do is, prevent overlapping.\n\t                        Each label location is hashed, and if a hash collision occurs, we assume an overlap.\n\t                        Adjust the label's y-position to remove the overlap.\n\t                        */\n\t                        var center = labelsArc[i].centroid(d);\n\t                        var percent = getSlicePercentage(d);\n\t                        if (d.value && percent >= labelThreshold) {\n\t                            var hashKey = createHashKey(center);\n\t                            if (labelLocationHash[hashKey]) {\n\t                                center[1] -= avgHeight;\n\t                            }\n\t                            labelLocationHash[createHashKey(center)] = true;\n\t                        }\n\t                        return 'translate(' + center + ')'\n\t                    }\n\t                });\n\t\n\t                pieLabels.select(\".nv-label text\")\n\t                    .style('text-anchor', function(d,i) {\n\t                        //center the text on it's origin or begin/end if orthogonal aligned\n\t                        return labelSunbeamLayout ? ((d.startAngle + d.endAngle) / 2 < Math.PI ? 'start' : 'end') : 'middle';\n\t                    })\n\t                    .text(function(d, i) {\n\t                        var percent = getSlicePercentage(d);\n\t                        var label = '';\n\t                        if (!d.value || percent < labelThreshold) return '';\n\t\n\t                        if(typeof labelType === 'function') {\n\t                            label = labelType(d, i, {\n\t                                'key': getX(d.data),\n\t                                'value': getY(d.data),\n\t                                'percent': valueFormat(percent)\n\t                            });\n\t                        } else {\n\t                            switch (labelType) {\n\t                                case 'key':\n\t                                    label = getX(d.data);\n\t                                    break;\n\t                                case 'value':\n\t                                    label = valueFormat(getY(d.data));\n\t                                    break;\n\t                                case 'percent':\n\t                                    label = d3.format('%')(percent);\n\t                                    break;\n\t                            }\n\t                        }\n\t                        return label;\n\t                    })\n\t                ;\n\t            }\n\t\n\t\n\t            // Computes the angle of an arc, converting from radians to degrees.\n\t            function angle(d) {\n\t                var a = (d.startAngle + d.endAngle) * 90 / Math.PI - 90;\n\t                return a > 90 ? a - 180 : a;\n\t            }\n\t\n\t            function arcTween(a, idx) {\n\t                a.endAngle = isNaN(a.endAngle) ? 0 : a.endAngle;\n\t                a.startAngle = isNaN(a.startAngle) ? 0 : a.startAngle;\n\t                if (!donut) a.innerRadius = 0;\n\t                var i = d3.interpolate(this._current, a);\n\t                this._current = i(0);\n\t                return function (t) {\n\t                    return arcs[idx](i(t));\n\t                };\n\t            }\n\t        });\n\t\n\t        renderWatch.renderEnd('pie immediate');\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        arcsRadius: { get: function () { return arcsRadius; }, set: function (_) { arcsRadius = _; } },\n\t        width:      {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:     {get: function(){return height;}, set: function(_){height=_;}},\n\t        showLabels: {get: function(){return showLabels;}, set: function(_){showLabels=_;}},\n\t        title:      {get: function(){return title;}, set: function(_){title=_;}},\n\t        titleOffset:    {get: function(){return titleOffset;}, set: function(_){titleOffset=_;}},\n\t        labelThreshold: {get: function(){return labelThreshold;}, set: function(_){labelThreshold=_;}},\n\t        valueFormat:    {get: function(){return valueFormat;}, set: function(_){valueFormat=_;}},\n\t        x:          {get: function(){return getX;}, set: function(_){getX=_;}},\n\t        id:         {get: function(){return id;}, set: function(_){id=_;}},\n\t        endAngle:   {get: function(){return endAngle;}, set: function(_){endAngle=_;}},\n\t        startAngle: {get: function(){return startAngle;}, set: function(_){startAngle=_;}},\n\t        padAngle:   {get: function(){return padAngle;}, set: function(_){padAngle=_;}},\n\t        cornerRadius: {get: function(){return cornerRadius;}, set: function(_){cornerRadius=_;}},\n\t        donutRatio:   {get: function(){return donutRatio;}, set: function(_){donutRatio=_;}},\n\t        labelsOutside: {get: function(){return labelsOutside;}, set: function(_){labelsOutside=_;}},\n\t        labelSunbeamLayout: {get: function(){return labelSunbeamLayout;}, set: function(_){labelSunbeamLayout=_;}},\n\t        donut:              {get: function(){return donut;}, set: function(_){donut=_;}},\n\t        growOnHover:        {get: function(){return growOnHover;}, set: function(_){growOnHover=_;}},\n\t\n\t        // depreciated after 1.7.1\n\t        pieLabelsOutside: {get: function(){return labelsOutside;}, set: function(_){\n\t            labelsOutside=_;\n\t            nv.deprecated('pieLabelsOutside', 'use labelsOutside instead');\n\t        }},\n\t        // depreciated after 1.7.1\n\t        donutLabelsOutside: {get: function(){return labelsOutside;}, set: function(_){\n\t            labelsOutside=_;\n\t            nv.deprecated('donutLabelsOutside', 'use labelsOutside instead');\n\t        }},\n\t        // deprecated after 1.7.1\n\t        labelFormat: {get: function(){ return valueFormat;}, set: function(_) {\n\t            valueFormat=_;\n\t            nv.deprecated('labelFormat','use valueFormat instead');\n\t        }},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = typeof _.top    != 'undefined' ? _.top    : margin.top;\n\t            margin.right  = typeof _.right  != 'undefined' ? _.right  : margin.right;\n\t            margin.bottom = typeof _.bottom != 'undefined' ? _.bottom : margin.bottom;\n\t            margin.left   = typeof _.left   != 'undefined' ? _.left   : margin.left;\n\t        }},\n\t        duration: {get: function(){return duration;}, set: function(_){\n\t            duration = _;\n\t            renderWatch.reset(duration);\n\t        }},\n\t        y: {get: function(){return getY;}, set: function(_){\n\t            getY=d3.functor(_);\n\t        }},\n\t        color: {get: function(){return color;}, set: function(_){\n\t            color=nv.utils.getColor(_);\n\t        }},\n\t        labelType:          {get: function(){return labelType;}, set: function(_){\n\t            labelType= _ || 'key';\n\t        }}\n\t    });\n\t\n\t    nv.utils.initOptions(chart);\n\t    return chart;\n\t};\n\tnv.models.pieChart = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var pie = nv.models.pie();\n\t    var legend = nv.models.legend();\n\t    var tooltip = nv.models.tooltip();\n\t\n\t    var margin = {top: 30, right: 20, bottom: 20, left: 20}\n\t        , width = null\n\t        , height = null\n\t        , showTooltipPercent = false\n\t        , showLegend = true\n\t        , legendPosition = \"top\"\n\t        , color = nv.utils.defaultColor()\n\t        , state = nv.utils.state()\n\t        , defaultState = null\n\t        , noData = null\n\t        , duration = 250\n\t        , dispatch = d3.dispatch('stateChange', 'changeState','renderEnd')\n\t        ;\n\t\n\t    tooltip\n\t        .duration(0)\n\t        .headerEnabled(false)\n\t        .valueFormatter(function(d, i) {\n\t            return pie.valueFormat()(d, i);\n\t        });\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var renderWatch = nv.utils.renderWatch(dispatch);\n\t\n\t    var stateGetter = function(data) {\n\t        return function(){\n\t            return {\n\t                active: data.map(function(d) { return !d.disabled })\n\t            };\n\t        }\n\t    };\n\t\n\t    var stateSetter = function(data) {\n\t        return function(state) {\n\t            if (state.active !== undefined) {\n\t                data.forEach(function (series, i) {\n\t                    series.disabled = !state.active[i];\n\t                });\n\t            }\n\t        }\n\t    };\n\t\n\t    //============================================================\n\t    // Chart function\n\t    //------------------------------------------------------------\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        renderWatch.models(pie);\n\t\n\t        selection.each(function(data) {\n\t            var container = d3.select(this);\n\t            nv.utils.initSVG(container);\n\t\n\t            var that = this;\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                availableHeight = nv.utils.availableHeight(height, container, margin);\n\t\n\t            chart.update = function() { container.transition().call(chart); };\n\t            chart.container = this;\n\t\n\t            state.setter(stateSetter(data), chart.update)\n\t                .getter(stateGetter(data))\n\t                .update();\n\t\n\t            //set state.disabled\n\t            state.disabled = data.map(function(d) { return !!d.disabled });\n\t\n\t            if (!defaultState) {\n\t                var key;\n\t                defaultState = {};\n\t                for (key in state) {\n\t                    if (state[key] instanceof Array)\n\t                        defaultState[key] = state[key].slice(0);\n\t                    else\n\t                        defaultState[key] = state[key];\n\t                }\n\t            }\n\t\n\t            // Display No Data message if there's nothing to show.\n\t            if (!data || !data.length) {\n\t                nv.utils.noData(chart, container);\n\t                return chart;\n\t            } else {\n\t                container.selectAll('.nv-noData').remove();\n\t            }\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-pieChart').data([data]);\n\t            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-pieChart').append('g');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-pieWrap');\n\t            gEnter.append('g').attr('class', 'nv-legendWrap');\n\t\n\t            // Legend\n\t            if (!showLegend) {\n\t                g.select('.nv-legendWrap').selectAll('*').remove();\n\t            } else {\n\t                if (legendPosition === \"top\") {\n\t                    legend.width( availableWidth ).key(pie.x());\n\t\n\t                    wrap.select('.nv-legendWrap')\n\t                        .datum(data)\n\t                        .call(legend);\n\t\n\t                    if (legend.height() > margin.top) {\n\t                        margin.top = legend.height();\n\t                        availableHeight = nv.utils.availableHeight(height, container, margin);\n\t                    }\n\t\n\t                    wrap.select('.nv-legendWrap')\n\t                        .attr('transform', 'translate(0,' + (-margin.top) +')');\n\t                } else if (legendPosition === \"right\") {\n\t                    var legendWidth = nv.models.legend().width();\n\t                    if (availableWidth / 2 < legendWidth) {\n\t                        legendWidth = (availableWidth / 2)\n\t                    }\n\t                    legend.height(availableHeight).key(pie.x());\n\t                    legend.width(legendWidth);\n\t                    availableWidth -= legend.width();\n\t\n\t                    wrap.select('.nv-legendWrap')\n\t                        .datum(data)\n\t                        .call(legend)\n\t                        .attr('transform', 'translate(' + (availableWidth) +',0)');\n\t                }\n\t            }\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            // Main Chart Component(s)\n\t            pie.width(availableWidth).height(availableHeight);\n\t            var pieWrap = g.select('.nv-pieWrap').datum([data]);\n\t            d3.transition(pieWrap).call(pie);\n\t\n\t            //============================================================\n\t            // Event Handling/Dispatching (in chart's scope)\n\t            //------------------------------------------------------------\n\t\n\t            legend.dispatch.on('stateChange', function(newState) {\n\t                for (var key in newState) {\n\t                    state[key] = newState[key];\n\t                }\n\t                dispatch.stateChange(state);\n\t                chart.update();\n\t            });\n\t\n\t            // Update chart from a state object passed to event handler\n\t            dispatch.on('changeState', function(e) {\n\t                if (typeof e.disabled !== 'undefined') {\n\t                    data.forEach(function(series,i) {\n\t                        series.disabled = e.disabled[i];\n\t                    });\n\t                    state.disabled = e.disabled;\n\t                }\n\t                chart.update();\n\t            });\n\t        });\n\t\n\t        renderWatch.renderEnd('pieChart immediate');\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Event Handling/Dispatching (out of chart's scope)\n\t    //------------------------------------------------------------\n\t\n\t    pie.dispatch.on('elementMouseover.tooltip', function(evt) {\n\t        evt['series'] = {\n\t            key: chart.x()(evt.data),\n\t            value: chart.y()(evt.data),\n\t            color: evt.color,\n\t            percent: evt.percent\n\t        };\n\t        if (!showTooltipPercent) {\n\t            delete evt.percent;\n\t            delete evt.series.percent;\n\t        }\n\t        tooltip.data(evt).hidden(false);\n\t    });\n\t\n\t    pie.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t        tooltip.hidden(true);\n\t    });\n\t\n\t    pie.dispatch.on('elementMousemove.tooltip', function(evt) {\n\t        tooltip();\n\t    });\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    // expose chart's sub-components\n\t    chart.legend = legend;\n\t    chart.dispatch = dispatch;\n\t    chart.pie = pie;\n\t    chart.tooltip = tooltip;\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    // use Object get/set functionality to map between vars and chart functions\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:              {get: function(){return width;},                set: function(_){width=_;}},\n\t        height:             {get: function(){return height;},               set: function(_){height=_;}},\n\t        noData:             {get: function(){return noData;},               set: function(_){noData=_;}},\n\t        showTooltipPercent: {get: function(){return showTooltipPercent;},   set: function(_){showTooltipPercent=_;}},\n\t        showLegend:         {get: function(){return showLegend;},           set: function(_){showLegend=_;}},\n\t        legendPosition:     {get: function(){return legendPosition;},       set: function(_){legendPosition=_;}},\n\t        defaultState:       {get: function(){return defaultState;},         set: function(_){defaultState=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        color: {get: function(){return color;}, set: function(_){\n\t            color = _;\n\t            legend.color(color);\n\t            pie.color(color);\n\t        }},\n\t        duration: {get: function(){return duration;}, set: function(_){\n\t            duration = _;\n\t            renderWatch.reset(duration);\n\t            pie.duration(duration);\n\t        }},\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }}\n\t    });\n\t    nv.utils.inheritOptions(chart, pie);\n\t    nv.utils.initOptions(chart);\n\t    return chart;\n\t};\n\t\n\tnv.models.scatter = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var margin       = {top: 0, right: 0, bottom: 0, left: 0}\n\t        , width        = null\n\t        , height       = null\n\t        , color        = nv.utils.defaultColor() // chooses color\n\t        , id           = Math.floor(Math.random() * 100000) //Create semi-unique ID incase user doesn't select one\n\t        , container    = null\n\t        , x            = d3.scale.linear()\n\t        , y            = d3.scale.linear()\n\t        , z            = d3.scale.linear() //linear because d3.svg.shape.size is treated as area\n\t        , getX         = function(d) { return d.x } // accessor to get the x value\n\t        , getY         = function(d) { return d.y } // accessor to get the y value\n\t        , getSize      = function(d) { return d.size || 1} // accessor to get the point size\n\t        , getShape     = function(d) { return d.shape || 'circle' } // accessor to get point shape\n\t        , forceX       = [] // List of numbers to Force into the X scale (ie. 0, or a max / min, etc.)\n\t        , forceY       = [] // List of numbers to Force into the Y scale\n\t        , forceSize    = [] // List of numbers to Force into the Size scale\n\t        , interactive  = true // If true, plots a voronoi overlay for advanced point intersection\n\t        , pointActive  = function(d) { return !d.notActive } // any points that return false will be filtered out\n\t        , padData      = false // If true, adds half a data points width to front and back, for lining up a line chart with a bar chart\n\t        , padDataOuter = .1 //outerPadding to imitate ordinal scale outer padding\n\t        , clipEdge     = false // if true, masks points within x and y scale\n\t        , clipVoronoi  = true // if true, masks each point with a circle... can turn off to slightly increase performance\n\t        , showVoronoi  = false // display the voronoi areas\n\t        , clipRadius   = function() { return 25 } // function to get the radius for voronoi point clips\n\t        , xDomain      = null // Override x domain (skips the calculation from data)\n\t        , yDomain      = null // Override y domain\n\t        , xRange       = null // Override x range\n\t        , yRange       = null // Override y range\n\t        , sizeDomain   = null // Override point size domain\n\t        , sizeRange    = null\n\t        , singlePoint  = false\n\t        , dispatch     = d3.dispatch('elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'renderEnd')\n\t        , useVoronoi   = true\n\t        , duration     = 250\n\t        , interactiveUpdateDelay = 300\n\t        , showLabels    = false \n\t        ;\n\t\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var x0, y0, z0 // used to store previous scales\n\t        , timeoutID\n\t        , needsUpdate = false // Flag for when the points are visually updating, but the interactive layer is behind, to disable tooltips\n\t        , renderWatch = nv.utils.renderWatch(dispatch, duration)\n\t        , _sizeRange_def = [16, 256]\n\t        , _caches\n\t        ;\n\t\n\t    function getCache(d) {\n\t        var cache, i;\n\t        cache = _caches = _caches || {};\n\t        i = d[0].series;\n\t        cache = cache[i] = cache[i] || {};\n\t        i = d[1];\n\t        cache = cache[i] = cache[i] || {};\n\t        return cache;\n\t    }\n\t\n\t    function getDiffs(d) {\n\t        var i, key,\n\t            point = d[0],\n\t            cache = getCache(d),\n\t            diffs = false;\n\t        for (i = 1; i < arguments.length; i ++) {\n\t            key = arguments[i];\n\t            if (cache[key] !== point[key] || !cache.hasOwnProperty(key)) {\n\t                cache[key] = point[key];\n\t                diffs = true;\n\t            }\n\t        }\n\t        return diffs;\n\t    }\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        selection.each(function(data) {\n\t            container = d3.select(this);\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                availableHeight = nv.utils.availableHeight(height, container, margin);\n\t\n\t            nv.utils.initSVG(container);\n\t\n\t            //add series index to each data point for reference\n\t            data.forEach(function(series, i) {\n\t                series.values.forEach(function(point) {\n\t                    point.series = i;\n\t                });\n\t            });\n\t\n\t            // Setup Scales\n\t            var logScale = chart.yScale().name === d3.scale.log().name ? true : false; \n\t            // remap and flatten the data for use in calculating the scales' domains\n\t            var seriesData = (xDomain && yDomain && sizeDomain) ? [] : // if we know xDomain and yDomain and sizeDomain, no need to calculate.... if Size is constant remember to set sizeDomain to speed up performance\n\t                d3.merge(\n\t                    data.map(function(d) {\n\t                        return d.values.map(function(d,i) {\n\t                            return { x: getX(d,i), y: getY(d,i), size: getSize(d,i) }\n\t                        })\n\t                    })\n\t                );\n\t\n\t            x   .domain(xDomain || d3.extent(seriesData.map(function(d) { return d.x; }).concat(forceX)))\n\t\n\t            if (padData && data[0])\n\t                x.range(xRange || [(availableWidth * padDataOuter +  availableWidth) / (2 *data[0].values.length), availableWidth - availableWidth * (1 + padDataOuter) / (2 * data[0].values.length)  ]);\n\t            //x.range([availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5)  / data[0].values.length ]);\n\t            else\n\t                x.range(xRange || [0, availableWidth]);\n\t\n\t             if (logScale) {\n\t                    var min = d3.min(seriesData.map(function(d) { if (d.y !== 0) return d.y; }));\n\t                    y.clamp(true)\n\t                        .domain(yDomain || d3.extent(seriesData.map(function(d) {\n\t                            if (d.y !== 0) return d.y;\n\t                            else return min * 0.1;\n\t                        }).concat(forceY)))\n\t                        .range(yRange || [availableHeight, 0]);\n\t                } else {\n\t                        y.domain(yDomain || d3.extent(seriesData.map(function (d) { return d.y;}).concat(forceY)))\n\t                        .range(yRange || [availableHeight, 0]);\n\t                }\n\t\n\t            z   .domain(sizeDomain || d3.extent(seriesData.map(function(d) { return d.size }).concat(forceSize)))\n\t                .range(sizeRange || _sizeRange_def);\n\t\n\t            // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n\t            singlePoint = x.domain()[0] === x.domain()[1] || y.domain()[0] === y.domain()[1];\n\t\n\t            if (x.domain()[0] === x.domain()[1])\n\t                x.domain()[0] ?\n\t                    x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01])\n\t                    : x.domain([-1,1]);\n\t\n\t            if (y.domain()[0] === y.domain()[1])\n\t                y.domain()[0] ?\n\t                    y.domain([y.domain()[0] - y.domain()[0] * 0.01, y.domain()[1] + y.domain()[1] * 0.01])\n\t                    : y.domain([-1,1]);\n\t\n\t            if ( isNaN(x.domain()[0])) {\n\t                x.domain([-1,1]);\n\t            }\n\t\n\t            if ( isNaN(y.domain()[0])) {\n\t                y.domain([-1,1]);\n\t            }\n\t\n\t            x0 = x0 || x;\n\t            y0 = y0 || y;\n\t            z0 = z0 || z;\n\t\n\t            var scaleDiff = x(1) !== x0(1) || y(1) !== y0(1) || z(1) !== z0(1);\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-scatter').data([data]);\n\t            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-scatter nv-chart-' + id);\n\t            var defsEnter = wrapEnter.append('defs');\n\t            var gEnter = wrapEnter.append('g');\n\t            var g = wrap.select('g');\n\t\n\t            wrap.classed('nv-single-point', singlePoint);\n\t            gEnter.append('g').attr('class', 'nv-groups');\n\t            gEnter.append('g').attr('class', 'nv-point-paths');\n\t            wrapEnter.append('g').attr('class', 'nv-point-clips');\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            defsEnter.append('clipPath')\n\t                .attr('id', 'nv-edge-clip-' + id)\n\t                .append('rect');\n\t\n\t            wrap.select('#nv-edge-clip-' + id + ' rect')\n\t                .attr('width', availableWidth)\n\t                .attr('height', (availableHeight > 0) ? availableHeight : 0);\n\t\n\t            g.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + id + ')' : '');\n\t\n\t            function updateInteractiveLayer() {\n\t                // Always clear needs-update flag regardless of whether or not\n\t                // we will actually do anything (avoids needless invocations).\n\t                needsUpdate = false;\n\t\n\t                if (!interactive) return false;\n\t\n\t                // inject series and point index for reference into voronoi\n\t                if (useVoronoi === true) {\n\t                    var vertices = d3.merge(data.map(function(group, groupIndex) {\n\t                            return group.values\n\t                                .map(function(point, pointIndex) {\n\t                                    // *Adding noise to make duplicates very unlikely\n\t                                    // *Injecting series and point index for reference\n\t                                    /* *Adding a 'jitter' to the points, because there's an issue in d3.geom.voronoi.\n\t                                     */\n\t                                    var pX = getX(point,pointIndex);\n\t                                    var pY = getY(point,pointIndex);\n\t\n\t                                    return [nv.utils.NaNtoZero(x(pX))+ Math.random() * 1e-4,\n\t                                            nv.utils.NaNtoZero(y(pY))+ Math.random() * 1e-4,\n\t                                        groupIndex,\n\t                                        pointIndex, point]; //temp hack to add noise until I think of a better way so there are no duplicates\n\t                                })\n\t                                .filter(function(pointArray, pointIndex) {\n\t                                    return pointActive(pointArray[4], pointIndex); // Issue #237.. move filter to after map, so pointIndex is correct!\n\t                                })\n\t                        })\n\t                    );\n\t\n\t                    if (vertices.length == 0) return false;  // No active points, we're done\n\t                    if (vertices.length < 3) {\n\t                        // Issue #283 - Adding 2 dummy points to the voronoi b/c voronoi requires min 3 points to work\n\t                        vertices.push([x.range()[0] - 20, y.range()[0] - 20, null, null]);\n\t                        vertices.push([x.range()[1] + 20, y.range()[1] + 20, null, null]);\n\t                        vertices.push([x.range()[0] - 20, y.range()[0] + 20, null, null]);\n\t                        vertices.push([x.range()[1] + 20, y.range()[1] - 20, null, null]);\n\t                    }\n\t\n\t                    // keep voronoi sections from going more than 10 outside of graph\n\t                    // to avoid overlap with other things like legend etc\n\t                    var bounds = d3.geom.polygon([\n\t                        [-10,-10],\n\t                        [-10,height + 10],\n\t                        [width + 10,height + 10],\n\t                        [width + 10,-10]\n\t                    ]);\n\t\n\t                    var voronoi = d3.geom.voronoi(vertices).map(function(d, i) {\n\t                        return {\n\t                            'data': bounds.clip(d),\n\t                            'series': vertices[i][2],\n\t                            'point': vertices[i][3]\n\t                        }\n\t                    });\n\t\n\t                    // nuke all voronoi paths on reload and recreate them\n\t                    wrap.select('.nv-point-paths').selectAll('path').remove();\n\t                    var pointPaths = wrap.select('.nv-point-paths').selectAll('path').data(voronoi);\n\t                    var vPointPaths = pointPaths\n\t                        .enter().append(\"svg:path\")\n\t                        .attr(\"d\", function(d) {\n\t                            if (!d || !d.data || d.data.length === 0)\n\t                                return 'M 0 0';\n\t                            else\n\t                                return \"M\" + d.data.join(\",\") + \"Z\";\n\t                        })\n\t                        .attr(\"id\", function(d,i) {\n\t                            return \"nv-path-\"+i; })\n\t                        .attr(\"clip-path\", function(d,i) { return \"url(#nv-clip-\"+id+\"-\"+i+\")\"; })\n\t                        ;\n\t\n\t                    // good for debugging point hover issues\n\t                    if (showVoronoi) {\n\t                        vPointPaths.style(\"fill\", d3.rgb(230, 230, 230))\n\t                            .style('fill-opacity', 0.4)\n\t                            .style('stroke-opacity', 1)\n\t                            .style(\"stroke\", d3.rgb(200,200,200));\n\t                    }\n\t\n\t                    if (clipVoronoi) {\n\t                        // voronoi sections are already set to clip,\n\t                        // just create the circles with the IDs they expect\n\t                        wrap.select('.nv-point-clips').selectAll('*').remove(); // must do * since it has sub-dom\n\t                        var pointClips = wrap.select('.nv-point-clips').selectAll('clipPath').data(vertices);\n\t                        var vPointClips = pointClips\n\t                            .enter().append(\"svg:clipPath\")\n\t                            .attr(\"id\", function(d, i) { return \"nv-clip-\"+id+\"-\"+i;})\n\t                            .append(\"svg:circle\")\n\t                            .attr('cx', function(d) { return d[0]; })\n\t                            .attr('cy', function(d) { return d[1]; })\n\t                            .attr('r', clipRadius);\n\t                    }\n\t\n\t                    var mouseEventCallback = function(d, mDispatch) {\n\t                        if (needsUpdate) return 0;\n\t                        var series = data[d.series];\n\t                        if (series === undefined) return;\n\t                        var point  = series.values[d.point];\n\t                        point['color'] = color(series, d.series);\n\t\n\t                        // standardize attributes for tooltip.\n\t                        point['x'] = getX(point);\n\t                        point['y'] = getY(point);\n\t\n\t                        // can't just get box of event node since it's actually a voronoi polygon\n\t                        var box = container.node().getBoundingClientRect();\n\t                        var scrollTop  = window.pageYOffset || document.documentElement.scrollTop;\n\t                        var scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\n\t\n\t                        var pos = {\n\t                            left: x(getX(point, d.point)) + box.left + scrollLeft + margin.left + 10,\n\t                            top: y(getY(point, d.point)) + box.top + scrollTop + margin.top + 10\n\t                        };\n\t\n\t                        mDispatch({\n\t                            point: point,\n\t                            series: series,\n\t                            pos: pos,\n\t                            relativePos: [x(getX(point, d.point)) + margin.left, y(getY(point, d.point)) + margin.top],\n\t                            seriesIndex: d.series,\n\t                            pointIndex: d.point\n\t                        });\n\t                    };\n\t\n\t                    pointPaths\n\t                        .on('click', function(d) {\n\t                            mouseEventCallback(d, dispatch.elementClick);\n\t                        })\n\t                        .on('dblclick', function(d) {\n\t                            mouseEventCallback(d, dispatch.elementDblClick);\n\t                        })\n\t                        .on('mouseover', function(d) {\n\t                            mouseEventCallback(d, dispatch.elementMouseover);\n\t                        })\n\t                        .on('mouseout', function(d, i) {\n\t                            mouseEventCallback(d, dispatch.elementMouseout);\n\t                        });\n\t\n\t                } else {\n\t                    // add event handlers to points instead voronoi paths\n\t                    wrap.select('.nv-groups').selectAll('.nv-group')\n\t                        .selectAll('.nv-point')\n\t                        //.data(dataWithPoints)\n\t                        //.style('pointer-events', 'auto') // recativate events, disabled by css\n\t                        .on('click', function(d,i) {\n\t                            //nv.log('test', d, i);\n\t                            if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n\t                            var series = data[d.series],\n\t                                point  = series.values[i];\n\t                            var element = this;\n\t                            dispatch.elementClick({\n\t                                point: point,\n\t                                series: series,\n\t                                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top], //TODO: make this pos base on the page\n\t                                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n\t                                seriesIndex: d.series,\n\t                                pointIndex: i,\n\t                                event: d3.event,\n\t                                element: element\n\t                            });\n\t                        })\n\t                        .on('dblclick', function(d,i) {\n\t                            if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n\t                            var series = data[d.series],\n\t                                point  = series.values[i];\n\t\n\t                            dispatch.elementDblClick({\n\t                                point: point,\n\t                                series: series,\n\t                                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],//TODO: make this pos base on the page\n\t                                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n\t                                seriesIndex: d.series,\n\t                                pointIndex: i\n\t                            });\n\t                        })\n\t                        .on('mouseover', function(d,i) {\n\t                            if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n\t                            var series = data[d.series],\n\t                                point  = series.values[i];\n\t\n\t                            dispatch.elementMouseover({\n\t                                point: point,\n\t                                series: series,\n\t                                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],//TODO: make this pos base on the page\n\t                                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n\t                                seriesIndex: d.series,\n\t                                pointIndex: i,\n\t                                color: color(d, i)\n\t                            });\n\t                        })\n\t                        .on('mouseout', function(d,i) {\n\t                            if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n\t                            var series = data[d.series],\n\t                                point  = series.values[i];\n\t\n\t                            dispatch.elementMouseout({\n\t                                point: point,\n\t                                series: series,\n\t                                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],//TODO: make this pos base on the page\n\t                                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n\t                                seriesIndex: d.series,\n\t                                pointIndex: i,\n\t                                color: color(d, i)\n\t                            });\n\t                        });\n\t                }\n\t            }\n\t\n\t            needsUpdate = true;\n\t            var groups = wrap.select('.nv-groups').selectAll('.nv-group')\n\t                .data(function(d) { return d }, function(d) { return d.key });\n\t            groups.enter().append('g')\n\t                .style('stroke-opacity', 1e-6)\n\t                .style('fill-opacity', 1e-6);\n\t            groups.exit()\n\t                .remove();\n\t            groups\n\t                .attr('class', function(d,i) {\n\t                    return (d.classed || '') + ' nv-group nv-series-' + i;\n\t                })\n\t                .classed('nv-noninteractive', !interactive)\n\t                .classed('hover', function(d) { return d.hover });\n\t            groups.watchTransition(renderWatch, 'scatter: groups')\n\t                .style('fill', function(d,i) { return color(d, i) })\n\t                .style('stroke', function(d,i) { return color(d, i) })\n\t                .style('stroke-opacity', 1)\n\t                .style('fill-opacity', .5);\n\t\n\t            // create the points, maintaining their IDs from the original data set\n\t            var points = groups.selectAll('path.nv-point')\n\t                .data(function(d) {\n\t                    return d.values.map(\n\t                        function (point, pointIndex) {\n\t                            return [point, pointIndex]\n\t                        }).filter(\n\t                            function(pointArray, pointIndex) {\n\t                                return pointActive(pointArray[0], pointIndex)\n\t                            })\n\t                    });\n\t            points.enter().append('path')\n\t                .attr('class', function (d) {\n\t                    return 'nv-point nv-point-' + d[1];\n\t                })\n\t                .style('fill', function (d) { return d.color })\n\t                .style('stroke', function (d) { return d.color })\n\t                .attr('transform', function(d) {\n\t                    return 'translate(' + nv.utils.NaNtoZero(x0(getX(d[0],d[1]))) + ',' + nv.utils.NaNtoZero(y0(getY(d[0],d[1]))) + ')'\n\t                })\n\t                .attr('d',\n\t                    nv.utils.symbol()\n\t                    .type(function(d) { return getShape(d[0]); })\n\t                    .size(function(d) { return z(getSize(d[0],d[1])) })\n\t            );\n\t            points.exit().remove();\n\t            groups.exit().selectAll('path.nv-point')\n\t                .watchTransition(renderWatch, 'scatter exit')\n\t                .attr('transform', function(d) {\n\t                    return 'translate(' + nv.utils.NaNtoZero(x(getX(d[0],d[1]))) + ',' + nv.utils.NaNtoZero(y(getY(d[0],d[1]))) + ')'\n\t                })\n\t                .remove();\n\t            points.filter(function (d) { return scaleDiff || getDiffs(d, 'x', 'y'); })\n\t                .watchTransition(renderWatch, 'scatter points')\n\t                .attr('transform', function(d) {\n\t                    //nv.log(d, getX(d[0],d[1]), x(getX(d[0],d[1])));\n\t                    return 'translate(' + nv.utils.NaNtoZero(x(getX(d[0],d[1]))) + ',' + nv.utils.NaNtoZero(y(getY(d[0],d[1]))) + ')'\n\t                });\n\t            points.filter(function (d) { return scaleDiff || getDiffs(d, 'shape', 'size'); })\n\t                .watchTransition(renderWatch, 'scatter points')\n\t                .attr('d',\n\t                    nv.utils.symbol()\n\t                    .type(function(d) { return getShape(d[0]); })\n\t                    .size(function(d) { return z(getSize(d[0],d[1])) })\n\t            );\n\t            \n\t            // add label a label to scatter chart \n\t            if(showLabels)\n\t            {      \n\t                var titles =  groups.selectAll('.nv-label')\n\t                    .data(function(d) {\n\t                        return d.values.map(\n\t                            function (point, pointIndex) {\n\t                                return [point, pointIndex]\n\t                            }).filter(\n\t                                function(pointArray, pointIndex) {\n\t                                    return pointActive(pointArray[0], pointIndex)\n\t                                })\n\t                        });\n\t\n\t                titles.enter().append('text')\n\t                    .style('fill', function (d,i) { \n\t                        return d.color })\n\t                    .style('stroke-opacity', 0)\n\t                    .style('fill-opacity', 1)\n\t                    .attr('transform', function(d) {\n\t                        var dx = nv.utils.NaNtoZero(x0(getX(d[0],d[1]))) + Math.sqrt(z(getSize(d[0],d[1]))/Math.PI) + 2;\n\t                        return 'translate(' + dx + ',' + nv.utils.NaNtoZero(y0(getY(d[0],d[1]))) + ')';\n\t                    })\n\t                    .text(function(d,i){\n\t                        return d[0].label;});\n\t\n\t                titles.exit().remove();\n\t                groups.exit().selectAll('path.nv-label')\n\t                    .watchTransition(renderWatch, 'scatter exit')\n\t                    .attr('transform', function(d) {\n\t                        var dx = nv.utils.NaNtoZero(x(getX(d[0],d[1])))+ Math.sqrt(z(getSize(d[0],d[1]))/Math.PI)+2;\n\t                        return 'translate(' + dx + ',' + nv.utils.NaNtoZero(y(getY(d[0],d[1]))) + ')';\n\t                    })\n\t                    .remove();\n\t               titles.each(function(d) {\n\t                  d3.select(this)\n\t                    .classed('nv-label', true)\n\t                    .classed('nv-label-' + d[1], false)\n\t                    .classed('hover',false);\n\t                });\n\t                titles.watchTransition(renderWatch, 'scatter labels')\n\t                    .attr('transform', function(d) {\n\t                        var dx = nv.utils.NaNtoZero(x(getX(d[0],d[1])))+ Math.sqrt(z(getSize(d[0],d[1]))/Math.PI)+2;\n\t                        return 'translate(' + dx + ',' + nv.utils.NaNtoZero(y(getY(d[0],d[1]))) + ')'\n\t                    });\n\t            }\n\t\n\t            // Delay updating the invisible interactive layer for smoother animation\n\t            if( interactiveUpdateDelay )\n\t            {\n\t                clearTimeout(timeoutID); // stop repeat calls to updateInteractiveLayer\n\t                timeoutID = setTimeout(updateInteractiveLayer, interactiveUpdateDelay );\n\t            }\n\t            else\n\t            {\n\t                updateInteractiveLayer();\n\t            }\n\t\n\t            //store old scales for use in transitions on update\n\t            x0 = x.copy();\n\t            y0 = y.copy();\n\t            z0 = z.copy();\n\t\n\t        });\n\t        renderWatch.renderEnd('scatter immediate');\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    // utility function calls provided by this chart\n\t    chart._calls = new function() {\n\t        this.clearHighlights = function () {\n\t            nv.dom.write(function() {\n\t                container.selectAll(\".nv-point.hover\").classed(\"hover\", false);\n\t            });\n\t            return null;\n\t        };\n\t        this.highlightPoint = function (seriesIndex, pointIndex, isHoverOver) {\n\t            nv.dom.write(function() {\n\t                container.select('.nv-groups')\n\t                  .selectAll(\".nv-series-\" + seriesIndex)\n\t                  .selectAll(\".nv-point-\" + pointIndex)\n\t                  .classed(\"hover\", isHoverOver);\n\t            });\n\t        };\n\t    };\n\t\n\t    // trigger calls from events too\n\t    dispatch.on('elementMouseover.point', function(d) {\n\t        if (interactive) chart._calls.highlightPoint(d.seriesIndex,d.pointIndex,true);\n\t    });\n\t\n\t    dispatch.on('elementMouseout.point', function(d) {\n\t        if (interactive) chart._calls.highlightPoint(d.seriesIndex,d.pointIndex,false);\n\t    });\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:        {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:       {get: function(){return height;}, set: function(_){height=_;}},\n\t        xScale:       {get: function(){return x;}, set: function(_){x=_;}},\n\t        yScale:       {get: function(){return y;}, set: function(_){y=_;}},\n\t        pointScale:   {get: function(){return z;}, set: function(_){z=_;}},\n\t        xDomain:      {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n\t        yDomain:      {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n\t        pointDomain:  {get: function(){return sizeDomain;}, set: function(_){sizeDomain=_;}},\n\t        xRange:       {get: function(){return xRange;}, set: function(_){xRange=_;}},\n\t        yRange:       {get: function(){return yRange;}, set: function(_){yRange=_;}},\n\t        pointRange:   {get: function(){return sizeRange;}, set: function(_){sizeRange=_;}},\n\t        forceX:       {get: function(){return forceX;}, set: function(_){forceX=_;}},\n\t        forceY:       {get: function(){return forceY;}, set: function(_){forceY=_;}},\n\t        forcePoint:   {get: function(){return forceSize;}, set: function(_){forceSize=_;}},\n\t        interactive:  {get: function(){return interactive;}, set: function(_){interactive=_;}},\n\t        pointActive:  {get: function(){return pointActive;}, set: function(_){pointActive=_;}},\n\t        padDataOuter: {get: function(){return padDataOuter;}, set: function(_){padDataOuter=_;}},\n\t        padData:      {get: function(){return padData;}, set: function(_){padData=_;}},\n\t        clipEdge:     {get: function(){return clipEdge;}, set: function(_){clipEdge=_;}},\n\t        clipVoronoi:  {get: function(){return clipVoronoi;}, set: function(_){clipVoronoi=_;}},\n\t        clipRadius:   {get: function(){return clipRadius;}, set: function(_){clipRadius=_;}},\n\t        showVoronoi:   {get: function(){return showVoronoi;}, set: function(_){showVoronoi=_;}},\n\t        id:           {get: function(){return id;}, set: function(_){id=_;}},\n\t        interactiveUpdateDelay: {get:function(){return interactiveUpdateDelay;}, set: function(_){interactiveUpdateDelay=_;}},\n\t        showLabels: {get: function(){return showLabels;}, set: function(_){ showLabels = _;}},\n\t\n\t        // simple functor options\n\t        x:     {get: function(){return getX;}, set: function(_){getX = d3.functor(_);}},\n\t        y:     {get: function(){return getY;}, set: function(_){getY = d3.functor(_);}},\n\t        pointSize: {get: function(){return getSize;}, set: function(_){getSize = d3.functor(_);}},\n\t        pointShape: {get: function(){return getShape;}, set: function(_){getShape = d3.functor(_);}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        duration: {get: function(){return duration;}, set: function(_){\n\t            duration = _;\n\t            renderWatch.reset(duration);\n\t        }},\n\t        color: {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t        }},\n\t        useVoronoi: {get: function(){return useVoronoi;}, set: function(_){\n\t            useVoronoi = _;\n\t            if (useVoronoi === false) {\n\t                clipVoronoi = false;\n\t            }\n\t        }}\n\t    });\n\t\n\t    nv.utils.initOptions(chart);\n\t    return chart;\n\t};\n\t\n\tnv.models.scatterChart = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var scatter      = nv.models.scatter()\n\t        , xAxis        = nv.models.axis()\n\t        , yAxis        = nv.models.axis()\n\t        , legend       = nv.models.legend()\n\t        , distX        = nv.models.distribution()\n\t        , distY        = nv.models.distribution()\n\t        , tooltip      = nv.models.tooltip()\n\t        ;\n\t\n\t    var margin       = {top: 30, right: 20, bottom: 50, left: 75}\n\t        , width        = null\n\t        , height       = null\n\t        , container    = null\n\t        , color        = nv.utils.defaultColor()\n\t        , x            = scatter.xScale()\n\t        , y            = scatter.yScale()\n\t        , showDistX    = false\n\t        , showDistY    = false\n\t        , showLegend   = true\n\t        , showXAxis    = true\n\t        , showYAxis    = true\n\t        , rightAlignYAxis = false\n\t        , state = nv.utils.state()\n\t        , defaultState = null\n\t        , dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd')\n\t        , noData       = null\n\t        , duration = 250\n\t        , showLabels    = false\n\t        ;\n\t\n\t    scatter.xScale(x).yScale(y);\n\t    xAxis.orient('bottom').tickPadding(10);\n\t    yAxis\n\t        .orient((rightAlignYAxis) ? 'right' : 'left')\n\t        .tickPadding(10)\n\t    ;\n\t    distX.axis('x');\n\t    distY.axis('y');\n\t    tooltip\n\t        .headerFormatter(function(d, i) {\n\t            return xAxis.tickFormat()(d, i);\n\t        })\n\t        .valueFormatter(function(d, i) {\n\t            return yAxis.tickFormat()(d, i);\n\t        });\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var x0, y0\n\t        , renderWatch = nv.utils.renderWatch(dispatch, duration);\n\t\n\t    var stateGetter = function(data) {\n\t        return function(){\n\t            return {\n\t                active: data.map(function(d) { return !d.disabled })\n\t            };\n\t        }\n\t    };\n\t\n\t    var stateSetter = function(data) {\n\t        return function(state) {\n\t            if (state.active !== undefined)\n\t                data.forEach(function(series,i) {\n\t                    series.disabled = !state.active[i];\n\t                });\n\t        }\n\t    };\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        renderWatch.models(scatter);\n\t        if (showXAxis) renderWatch.models(xAxis);\n\t        if (showYAxis) renderWatch.models(yAxis);\n\t        if (showDistX) renderWatch.models(distX);\n\t        if (showDistY) renderWatch.models(distY);\n\t\n\t        selection.each(function(data) {\n\t            var that = this;\n\t\n\t            container = d3.select(this);\n\t            nv.utils.initSVG(container);\n\t\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                availableHeight = nv.utils.availableHeight(height, container, margin);\n\t\n\t            chart.update = function() {\n\t                if (duration === 0)\n\t                    container.call(chart);\n\t                else\n\t                    container.transition().duration(duration).call(chart);\n\t            };\n\t            chart.container = this;\n\t\n\t            state\n\t                .setter(stateSetter(data), chart.update)\n\t                .getter(stateGetter(data))\n\t                .update();\n\t\n\t            // DEPRECATED set state.disableddisabled\n\t            state.disabled = data.map(function(d) { return !!d.disabled });\n\t\n\t            if (!defaultState) {\n\t                var key;\n\t                defaultState = {};\n\t                for (key in state) {\n\t                    if (state[key] instanceof Array)\n\t                        defaultState[key] = state[key].slice(0);\n\t                    else\n\t                        defaultState[key] = state[key];\n\t                }\n\t            }\n\t\n\t            // Display noData message if there's nothing to show.\n\t            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n\t                nv.utils.noData(chart, container);\n\t                renderWatch.renderEnd('scatter immediate');\n\t                return chart;\n\t            } else {\n\t                container.selectAll('.nv-noData').remove();\n\t            }\n\t\n\t            // Setup Scales\n\t            x = scatter.xScale();\n\t            y = scatter.yScale();\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-scatterChart').data([data]);\n\t            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-scatterChart nv-chart-' + scatter.id());\n\t            var gEnter = wrapEnter.append('g');\n\t            var g = wrap.select('g');\n\t\n\t            // background for pointer events\n\t            gEnter.append('rect').attr('class', 'nvd3 nv-background').style(\"pointer-events\",\"none\");\n\t\n\t            gEnter.append('g').attr('class', 'nv-x nv-axis');\n\t            gEnter.append('g').attr('class', 'nv-y nv-axis');\n\t            gEnter.append('g').attr('class', 'nv-scatterWrap');\n\t            gEnter.append('g').attr('class', 'nv-regressionLinesWrap');\n\t            gEnter.append('g').attr('class', 'nv-distWrap');\n\t            gEnter.append('g').attr('class', 'nv-legendWrap');\n\t\n\t            if (rightAlignYAxis) {\n\t                g.select(\".nv-y.nv-axis\")\n\t                    .attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n\t            }\n\t\n\t            // Legend\n\t            if (!showLegend) {\n\t                g.select('.nv-legendWrap').selectAll('*').remove();\n\t            } else {\n\t                var legendWidth = availableWidth;\n\t                legend.width(legendWidth);\n\t\n\t                wrap.select('.nv-legendWrap')\n\t                    .datum(data)\n\t                    .call(legend);\n\t\n\t                if (legend.height() > margin.top) {\n\t                    margin.top = legend.height();\n\t                    availableHeight = nv.utils.availableHeight(height, container, margin);\n\t                }\n\t\n\t                wrap.select('.nv-legendWrap')\n\t                    .attr('transform', 'translate(0' + ',' + (-margin.top) +')');\n\t            }\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            // Main Chart Component(s)\n\t            scatter\n\t                .width(availableWidth)\n\t                .height(availableHeight)\n\t                .color(data.map(function(d,i) {\n\t                    d.color = d.color || color(d, i);\n\t                    return d.color;\n\t                }).filter(function(d,i) { return !data[i].disabled }))\n\t                .showLabels(showLabels);\n\t\n\t            wrap.select('.nv-scatterWrap')\n\t                .datum(data.filter(function(d) { return !d.disabled }))\n\t                .call(scatter);\n\t\n\t\n\t            wrap.select('.nv-regressionLinesWrap')\n\t                .attr('clip-path', 'url(#nv-edge-clip-' + scatter.id() + ')');\n\t\n\t            var regWrap = wrap.select('.nv-regressionLinesWrap').selectAll('.nv-regLines')\n\t                .data(function (d) {\n\t                    return d;\n\t                });\n\t\n\t            regWrap.enter().append('g').attr('class', 'nv-regLines');\n\t\n\t            var regLine = regWrap.selectAll('.nv-regLine')\n\t                .data(function (d) {\n\t                    return [d]\n\t                });\n\t\n\t            regLine.enter()\n\t                .append('line').attr('class', 'nv-regLine')\n\t                .style('stroke-opacity', 0);\n\t\n\t            // don't add lines unless we have slope and intercept to use\n\t            regLine.filter(function(d) {\n\t                return d.intercept && d.slope;\n\t            })\n\t                .watchTransition(renderWatch, 'scatterPlusLineChart: regline')\n\t                .attr('x1', x.range()[0])\n\t                .attr('x2', x.range()[1])\n\t                .attr('y1', function (d, i) {\n\t                    return y(x.domain()[0] * d.slope + d.intercept)\n\t                })\n\t                .attr('y2', function (d, i) {\n\t                    return y(x.domain()[1] * d.slope + d.intercept)\n\t                })\n\t                .style('stroke', function (d, i, j) {\n\t                    return color(d, j)\n\t                })\n\t                .style('stroke-opacity', function (d, i) {\n\t                    return (d.disabled || typeof d.slope === 'undefined' || typeof d.intercept === 'undefined') ? 0 : 1\n\t                });\n\t\n\t            // Setup Axes\n\t            if (showXAxis) {\n\t                xAxis\n\t                    .scale(x)\n\t                    ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n\t                    .tickSize( -availableHeight , 0);\n\t\n\t                g.select('.nv-x.nv-axis')\n\t                    .attr('transform', 'translate(0,' + y.range()[0] + ')')\n\t                    .call(xAxis);\n\t            }\n\t\n\t            if (showYAxis) {\n\t                yAxis\n\t                    .scale(y)\n\t                    ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n\t                    .tickSize( -availableWidth, 0);\n\t\n\t                g.select('.nv-y.nv-axis')\n\t                    .call(yAxis);\n\t            }\n\t\n\t            // Setup Distribution\n\t            if (showDistX) {\n\t                distX\n\t                    .getData(scatter.x())\n\t                    .scale(x)\n\t                    .width(availableWidth)\n\t                    .color(data.map(function(d,i) {\n\t                        return d.color || color(d, i);\n\t                    }).filter(function(d,i) { return !data[i].disabled }));\n\t                gEnter.select('.nv-distWrap').append('g')\n\t                    .attr('class', 'nv-distributionX');\n\t                g.select('.nv-distributionX')\n\t                    .attr('transform', 'translate(0,' + y.range()[0] + ')')\n\t                    .datum(data.filter(function(d) { return !d.disabled }))\n\t                    .call(distX);\n\t            }\n\t\n\t            if (showDistY) {\n\t                distY\n\t                    .getData(scatter.y())\n\t                    .scale(y)\n\t                    .width(availableHeight)\n\t                    .color(data.map(function(d,i) {\n\t                        return d.color || color(d, i);\n\t                    }).filter(function(d,i) { return !data[i].disabled }));\n\t                gEnter.select('.nv-distWrap').append('g')\n\t                    .attr('class', 'nv-distributionY');\n\t                g.select('.nv-distributionY')\n\t                    .attr('transform', 'translate(' + (rightAlignYAxis ? availableWidth : -distY.size() ) + ',0)')\n\t                    .datum(data.filter(function(d) { return !d.disabled }))\n\t                    .call(distY);\n\t            }\n\t\n\t            //============================================================\n\t            // Event Handling/Dispatching (in chart's scope)\n\t            //------------------------------------------------------------\n\t\n\t            legend.dispatch.on('stateChange', function(newState) {\n\t                for (var key in newState)\n\t                    state[key] = newState[key];\n\t                dispatch.stateChange(state);\n\t                chart.update();\n\t            });\n\t\n\t            // Update chart from a state object passed to event handler\n\t            dispatch.on('changeState', function(e) {\n\t                if (typeof e.disabled !== 'undefined') {\n\t                    data.forEach(function(series,i) {\n\t                        series.disabled = e.disabled[i];\n\t                    });\n\t                    state.disabled = e.disabled;\n\t                }\n\t                chart.update();\n\t            });\n\t\n\t            // mouseover needs availableHeight so we just keep scatter mouse events inside the chart block\n\t            scatter.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t                tooltip.hidden(true);\n\t                container.select('.nv-chart-' + scatter.id() + ' .nv-series-' + evt.seriesIndex + ' .nv-distx-' + evt.pointIndex)\n\t                    .attr('y1', 0);\n\t                container.select('.nv-chart-' + scatter.id() + ' .nv-series-' + evt.seriesIndex + ' .nv-disty-' + evt.pointIndex)\n\t                    .attr('x2', distY.size());\n\t            });\n\t\n\t            scatter.dispatch.on('elementMouseover.tooltip', function(evt) {\n\t                container.select('.nv-series-' + evt.seriesIndex + ' .nv-distx-' + evt.pointIndex)\n\t                    .attr('y1', evt.relativePos[1] - availableHeight);\n\t                container.select('.nv-series-' + evt.seriesIndex + ' .nv-disty-' + evt.pointIndex)\n\t                    .attr('x2', evt.relativePos[0] + distX.size());\n\t                tooltip.data(evt).hidden(false);\n\t            });\n\t\n\t            //store old scales for use in transitions on update\n\t            x0 = x.copy();\n\t            y0 = y.copy();\n\t\n\t        });\n\t\n\t        renderWatch.renderEnd('scatter with line immediate');\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    // expose chart's sub-components\n\t    chart.dispatch = dispatch;\n\t    chart.scatter = scatter;\n\t    chart.legend = legend;\n\t    chart.xAxis = xAxis;\n\t    chart.yAxis = yAxis;\n\t    chart.distX = distX;\n\t    chart.distY = distY;\n\t    chart.tooltip = tooltip;\n\t\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:      {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:     {get: function(){return height;}, set: function(_){height=_;}},\n\t        container:  {get: function(){return container;}, set: function(_){container=_;}},\n\t        showDistX:  {get: function(){return showDistX;}, set: function(_){showDistX=_;}},\n\t        showDistY:  {get: function(){return showDistY;}, set: function(_){showDistY=_;}},\n\t        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n\t        showXAxis:  {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n\t        showYAxis:  {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n\t        defaultState:     {get: function(){return defaultState;}, set: function(_){defaultState=_;}},\n\t        noData:     {get: function(){return noData;}, set: function(_){noData=_;}},\n\t        duration:   {get: function(){return duration;}, set: function(_){duration=_;}},\n\t        showLabels: {get: function(){return showLabels;}, set: function(_){showLabels=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n\t            rightAlignYAxis = _;\n\t            yAxis.orient( (_) ? 'right' : 'left');\n\t        }},\n\t        color: {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t            legend.color(color);\n\t            distX.color(color);\n\t            distY.color(color);\n\t        }}\n\t    });\n\t\n\t    nv.utils.inheritOptions(chart, scatter);\n\t    nv.utils.initOptions(chart);\n\t    return chart;\n\t};\n\t\n\tnv.models.sparkline = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var margin = {top: 2, right: 0, bottom: 2, left: 0}\n\t        , width = 400\n\t        , height = 32\n\t        , container = null\n\t        , animate = true\n\t        , x = d3.scale.linear()\n\t        , y = d3.scale.linear()\n\t        , getX = function(d) { return d.x }\n\t        , getY = function(d) { return d.y }\n\t        , color = nv.utils.getColor(['#000'])\n\t        , xDomain\n\t        , yDomain\n\t        , xRange\n\t        , yRange\n\t        , showMinMaxPoints = true\n\t        , showCurrentPoint = true\n\t        , dispatch = d3.dispatch('renderEnd')\n\t        ;\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var renderWatch = nv.utils.renderWatch(dispatch);\n\t    \n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        selection.each(function(data) {\n\t            var availableWidth = width - margin.left - margin.right,\n\t                availableHeight = height - margin.top - margin.bottom;\n\t\n\t            container = d3.select(this);\n\t            nv.utils.initSVG(container);\n\t\n\t            // Setup Scales\n\t            x   .domain(xDomain || d3.extent(data, getX ))\n\t                .range(xRange || [0, availableWidth]);\n\t\n\t            y   .domain(yDomain || d3.extent(data, getY ))\n\t                .range(yRange || [availableHeight, 0]);\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-sparkline').data([data]);\n\t            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-sparkline');\n\t            var gEnter = wrapEnter.append('g');\n\t            var g = wrap.select('g');\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')\n\t\n\t            var paths = wrap.selectAll('path')\n\t                .data(function(d) { return [d] });\n\t            paths.enter().append('path');\n\t            paths.exit().remove();\n\t            paths\n\t                .style('stroke', function(d,i) { return d.color || color(d, i) })\n\t                .attr('d', d3.svg.line()\n\t                    .x(function(d,i) { return x(getX(d,i)) })\n\t                    .y(function(d,i) { return y(getY(d,i)) })\n\t            );\n\t\n\t            // TODO: Add CURRENT data point (Need Min, Mac, Current / Most recent)\n\t            var points = wrap.selectAll('circle.nv-point')\n\t                .data(function(data) {\n\t                    var yValues = data.map(function(d, i) { return getY(d,i); });\n\t                    function pointIndex(index) {\n\t                        if (index != -1) {\n\t                            var result = data[index];\n\t                            result.pointIndex = index;\n\t                            return result;\n\t                        } else {\n\t                            return null;\n\t                        }\n\t                    }\n\t                    var maxPoint = pointIndex(yValues.lastIndexOf(y.domain()[1])),\n\t                        minPoint = pointIndex(yValues.indexOf(y.domain()[0])),\n\t                        currentPoint = pointIndex(yValues.length - 1);\n\t                    return [(showMinMaxPoints ? minPoint : null), (showMinMaxPoints ? maxPoint : null), (showCurrentPoint ? currentPoint : null)].filter(function (d) {return d != null;});\n\t                });\n\t            points.enter().append('circle');\n\t            points.exit().remove();\n\t            points\n\t                .attr('cx', function(d,i) { return x(getX(d,d.pointIndex)) })\n\t                .attr('cy', function(d,i) { return y(getY(d,d.pointIndex)) })\n\t                .attr('r', 2)\n\t                .attr('class', function(d,i) {\n\t                    return getX(d, d.pointIndex) == x.domain()[1] ? 'nv-point nv-currentValue' :\n\t                            getY(d, d.pointIndex) == y.domain()[0] ? 'nv-point nv-minValue' : 'nv-point nv-maxValue'\n\t                });\n\t        });\n\t        \n\t        renderWatch.renderEnd('sparkline immediate');\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:            {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:           {get: function(){return height;}, set: function(_){height=_;}},\n\t        xDomain:          {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n\t        yDomain:          {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n\t        xRange:           {get: function(){return xRange;}, set: function(_){xRange=_;}},\n\t        yRange:           {get: function(){return yRange;}, set: function(_){yRange=_;}},\n\t        xScale:           {get: function(){return x;}, set: function(_){x=_;}},\n\t        yScale:           {get: function(){return y;}, set: function(_){y=_;}},\n\t        animate:          {get: function(){return animate;}, set: function(_){animate=_;}},\n\t        showMinMaxPoints: {get: function(){return showMinMaxPoints;}, set: function(_){showMinMaxPoints=_;}},\n\t        showCurrentPoint: {get: function(){return showCurrentPoint;}, set: function(_){showCurrentPoint=_;}},\n\t\n\t        //functor options\n\t        x: {get: function(){return getX;}, set: function(_){getX=d3.functor(_);}},\n\t        y: {get: function(){return getY;}, set: function(_){getY=d3.functor(_);}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t        }}\n\t    });\n\t\n\t    chart.dispatch = dispatch;\n\t    nv.utils.initOptions(chart);\n\t    return chart;\n\t};\n\t\n\tnv.models.sparklinePlus = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var sparkline = nv.models.sparkline();\n\t\n\t    var margin = {top: 15, right: 100, bottom: 10, left: 50}\n\t        , width = null\n\t        , height = null\n\t        , x\n\t        , y\n\t        , index = []\n\t        , paused = false\n\t        , xTickFormat = d3.format(',r')\n\t        , yTickFormat = d3.format(',.2f')\n\t        , showLastValue = true\n\t        , alignValue = true\n\t        , rightAlignValue = false\n\t        , noData = null\n\t        , dispatch = d3.dispatch('renderEnd')\n\t        ;\n\t        \n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var renderWatch = nv.utils.renderWatch(dispatch);\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        renderWatch.models(sparkline);\n\t        selection.each(function(data) {\n\t            var container = d3.select(this);\n\t            nv.utils.initSVG(container);\n\t\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                availableHeight = nv.utils.availableHeight(height, container, margin);\n\t\n\t            chart.update = function() { container.call(chart); };\n\t            chart.container = this;\n\t\n\t            // Display No Data message if there's nothing to show.\n\t            if (!data || !data.length) {\n\t                nv.utils.noData(chart, container)\n\t                return chart;\n\t            } else {\n\t                container.selectAll('.nv-noData').remove();\n\t            }\n\t\n\t            var currentValue = sparkline.y()(data[data.length-1], data.length-1);\n\t\n\t            // Setup Scales\n\t            x = sparkline.xScale();\n\t            y = sparkline.yScale();\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-sparklineplus').data([data]);\n\t            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-sparklineplus');\n\t            var gEnter = wrapEnter.append('g');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-sparklineWrap');\n\t            gEnter.append('g').attr('class', 'nv-valueWrap');\n\t            gEnter.append('g').attr('class', 'nv-hoverArea');\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            // Main Chart Component(s)\n\t            var sparklineWrap = g.select('.nv-sparklineWrap');\n\t\n\t            sparkline.width(availableWidth).height(availableHeight);\n\t            sparklineWrap.call(sparkline);\n\t\n\t            if (showLastValue) {\n\t                var valueWrap = g.select('.nv-valueWrap');\n\t                var value = valueWrap.selectAll('.nv-currentValue')\n\t                    .data([currentValue]);\n\t\n\t                value.enter().append('text').attr('class', 'nv-currentValue')\n\t                    .attr('dx', rightAlignValue ? -8 : 8)\n\t                    .attr('dy', '.9em')\n\t                    .style('text-anchor', rightAlignValue ? 'end' : 'start');\n\t\n\t                value\n\t                    .attr('x', availableWidth + (rightAlignValue ? margin.right : 0))\n\t                    .attr('y', alignValue ? function (d) {\n\t                        return y(d)\n\t                    } : 0)\n\t                    .style('fill', sparkline.color()(data[data.length - 1], data.length - 1))\n\t                    .text(yTickFormat(currentValue));\n\t            }\n\t\n\t            gEnter.select('.nv-hoverArea').append('rect')\n\t                .on('mousemove', sparklineHover)\n\t                .on('click', function() { paused = !paused })\n\t                .on('mouseout', function() { index = []; updateValueLine(); });\n\t\n\t            g.select('.nv-hoverArea rect')\n\t                .attr('transform', function(d) { return 'translate(' + -margin.left + ',' + -margin.top + ')' })\n\t                .attr('width', availableWidth + margin.left + margin.right)\n\t                .attr('height', availableHeight + margin.top);\n\t\n\t            //index is currently global (within the chart), may or may not keep it that way\n\t            function updateValueLine() {\n\t                if (paused) return;\n\t\n\t                var hoverValue = g.selectAll('.nv-hoverValue').data(index);\n\t\n\t                var hoverEnter = hoverValue.enter()\n\t                    .append('g').attr('class', 'nv-hoverValue')\n\t                    .style('stroke-opacity', 0)\n\t                    .style('fill-opacity', 0);\n\t\n\t                hoverValue.exit()\n\t                    .transition().duration(250)\n\t                    .style('stroke-opacity', 0)\n\t                    .style('fill-opacity', 0)\n\t                    .remove();\n\t\n\t                hoverValue\n\t                    .attr('transform', function(d) { return 'translate(' + x(sparkline.x()(data[d],d)) + ',0)' })\n\t                    .transition().duration(250)\n\t                    .style('stroke-opacity', 1)\n\t                    .style('fill-opacity', 1);\n\t\n\t                if (!index.length) return;\n\t\n\t                hoverEnter.append('line')\n\t                    .attr('x1', 0)\n\t                    .attr('y1', -margin.top)\n\t                    .attr('x2', 0)\n\t                    .attr('y2', availableHeight);\n\t\n\t                hoverEnter.append('text').attr('class', 'nv-xValue')\n\t                    .attr('x', -6)\n\t                    .attr('y', -margin.top)\n\t                    .attr('text-anchor', 'end')\n\t                    .attr('dy', '.9em');\n\t\n\t                g.select('.nv-hoverValue .nv-xValue')\n\t                    .text(xTickFormat(sparkline.x()(data[index[0]], index[0])));\n\t\n\t                hoverEnter.append('text').attr('class', 'nv-yValue')\n\t                    .attr('x', 6)\n\t                    .attr('y', -margin.top)\n\t                    .attr('text-anchor', 'start')\n\t                    .attr('dy', '.9em');\n\t\n\t                g.select('.nv-hoverValue .nv-yValue')\n\t                    .text(yTickFormat(sparkline.y()(data[index[0]], index[0])));\n\t            }\n\t\n\t            function sparklineHover() {\n\t                if (paused) return;\n\t\n\t                var pos = d3.mouse(this)[0] - margin.left;\n\t\n\t                function getClosestIndex(data, x) {\n\t                    var distance = Math.abs(sparkline.x()(data[0], 0) - x);\n\t                    var closestIndex = 0;\n\t                    for (var i = 0; i < data.length; i++){\n\t                        if (Math.abs(sparkline.x()(data[i], i) - x) < distance) {\n\t                            distance = Math.abs(sparkline.x()(data[i], i) - x);\n\t                            closestIndex = i;\n\t                        }\n\t                    }\n\t                    return closestIndex;\n\t                }\n\t\n\t                index = [getClosestIndex(data, Math.round(x.invert(pos)))];\n\t                updateValueLine();\n\t            }\n\t\n\t        });\n\t        renderWatch.renderEnd('sparklinePlus immediate');\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    // expose chart's sub-components\n\t    chart.dispatch = dispatch;\n\t    chart.sparkline = sparkline;\n\t\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:           {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:          {get: function(){return height;}, set: function(_){height=_;}},\n\t        xTickFormat:     {get: function(){return xTickFormat;}, set: function(_){xTickFormat=_;}},\n\t        yTickFormat:     {get: function(){return yTickFormat;}, set: function(_){yTickFormat=_;}},\n\t        showLastValue:   {get: function(){return showLastValue;}, set: function(_){showLastValue=_;}},\n\t        alignValue:      {get: function(){return alignValue;}, set: function(_){alignValue=_;}},\n\t        rightAlignValue: {get: function(){return rightAlignValue;}, set: function(_){rightAlignValue=_;}},\n\t        noData:          {get: function(){return noData;}, set: function(_){noData=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }}\n\t    });\n\t\n\t    nv.utils.inheritOptions(chart, sparkline);\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\t\n\tnv.models.stackedArea = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n\t        , width = 960\n\t        , height = 500\n\t        , color = nv.utils.defaultColor() // a function that computes the color\n\t        , id = Math.floor(Math.random() * 100000) //Create semi-unique ID incase user doesn't selet one\n\t        , container = null\n\t        , getX = function(d) { return d.x } // accessor to get the x value from a data point\n\t        , getY = function(d) { return d.y } // accessor to get the y value from a data point\n\t        , defined = function(d,i) { return !isNaN(getY(d,i)) && getY(d,i) !== null } // allows a line to be not continuous when it is not defined\n\t        , style = 'stack'\n\t        , offset = 'zero'\n\t        , order = 'default'\n\t        , interpolate = 'linear'  // controls the line interpolation\n\t        , clipEdge = false // if true, masks lines within x and y scale\n\t        , x //can be accessed via chart.xScale()\n\t        , y //can be accessed via chart.yScale()\n\t        , scatter = nv.models.scatter()\n\t        , duration = 250\n\t        , dispatch =  d3.dispatch('areaClick', 'areaMouseover', 'areaMouseout','renderEnd', 'elementClick', 'elementMouseover', 'elementMouseout')\n\t        ;\n\t\n\t    scatter\n\t        .pointSize(2.2) // default size\n\t        .pointDomain([2.2, 2.2]) // all the same size by default\n\t    ;\n\t\n\t    /************************************\n\t     * offset:\n\t     *   'wiggle' (stream)\n\t     *   'zero' (stacked)\n\t     *   'expand' (normalize to 100%)\n\t     *   'silhouette' (simple centered)\n\t     *\n\t     * order:\n\t     *   'inside-out' (stream)\n\t     *   'default' (input order)\n\t     ************************************/\n\t\n\t    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        renderWatch.models(scatter);\n\t        selection.each(function(data) {\n\t            var availableWidth = width - margin.left - margin.right,\n\t                availableHeight = height - margin.top - margin.bottom;\n\t\n\t            container = d3.select(this);\n\t            nv.utils.initSVG(container);\n\t\n\t            // Setup Scales\n\t            x = scatter.xScale();\n\t            y = scatter.yScale();\n\t\n\t            var dataRaw = data;\n\t            // Injecting point index into each point because d3.layout.stack().out does not give index\n\t            data.forEach(function(aseries, i) {\n\t                aseries.seriesIndex = i;\n\t                aseries.values = aseries.values.map(function(d, j) {\n\t                    d.index = j;\n\t                    d.seriesIndex = i;\n\t                    return d;\n\t                });\n\t            });\n\t\n\t            var dataFiltered = data.filter(function(series) {\n\t                return !series.disabled;\n\t            });\n\t\n\t            data = d3.layout.stack()\n\t                .order(order)\n\t                .offset(offset)\n\t                .values(function(d) { return d.values })  //TODO: make values customizeable in EVERY model in this fashion\n\t                .x(getX)\n\t                .y(getY)\n\t                .out(function(d, y0, y) {\n\t                    d.display = {\n\t                        y: y,\n\t                        y0: y0\n\t                    };\n\t                })\n\t            (dataFiltered);\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-stackedarea').data([data]);\n\t            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-stackedarea');\n\t            var defsEnter = wrapEnter.append('defs');\n\t            var gEnter = wrapEnter.append('g');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-areaWrap');\n\t            gEnter.append('g').attr('class', 'nv-scatterWrap');\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t            \n\t            // If the user has not specified forceY, make sure 0 is included in the domain\n\t            // Otherwise, use user-specified values for forceY\n\t            if (scatter.forceY().length == 0) {\n\t                scatter.forceY().push(0);\n\t            }\n\t            \n\t            scatter\n\t                .width(availableWidth)\n\t                .height(availableHeight)\n\t                .x(getX)\n\t                .y(function(d) {\n\t                    if (d.display !== undefined) { return d.display.y + d.display.y0; }\n\t                })\n\t                .color(data.map(function(d,i) {\n\t                    d.color = d.color || color(d, d.seriesIndex);\n\t                    return d.color;\n\t                }));\n\t\n\t            var scatterWrap = g.select('.nv-scatterWrap')\n\t                .datum(data);\n\t\n\t            scatterWrap.call(scatter);\n\t\n\t            defsEnter.append('clipPath')\n\t                .attr('id', 'nv-edge-clip-' + id)\n\t                .append('rect');\n\t\n\t            wrap.select('#nv-edge-clip-' + id + ' rect')\n\t                .attr('width', availableWidth)\n\t                .attr('height', availableHeight);\n\t\n\t            g.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + id + ')' : '');\n\t\n\t            var area = d3.svg.area()\n\t                .defined(defined)\n\t                .x(function(d,i)  { return x(getX(d,i)) })\n\t                .y0(function(d) {\n\t                    return y(d.display.y0)\n\t                })\n\t                .y1(function(d) {\n\t                    return y(d.display.y + d.display.y0)\n\t                })\n\t                .interpolate(interpolate);\n\t\n\t            var zeroArea = d3.svg.area()\n\t                .defined(defined)\n\t                .x(function(d,i)  { return x(getX(d,i)) })\n\t                .y0(function(d) { return y(d.display.y0) })\n\t                .y1(function(d) { return y(d.display.y0) });\n\t\n\t            var path = g.select('.nv-areaWrap').selectAll('path.nv-area')\n\t                .data(function(d) { return d });\n\t\n\t            path.enter().append('path').attr('class', function(d,i) { return 'nv-area nv-area-' + i })\n\t                .attr('d', function(d,i){\n\t                    return zeroArea(d.values, d.seriesIndex);\n\t                })\n\t                .on('mouseover', function(d,i) {\n\t                    d3.select(this).classed('hover', true);\n\t                    dispatch.areaMouseover({\n\t                        point: d,\n\t                        series: d.key,\n\t                        pos: [d3.event.pageX, d3.event.pageY],\n\t                        seriesIndex: d.seriesIndex\n\t                    });\n\t                })\n\t                .on('mouseout', function(d,i) {\n\t                    d3.select(this).classed('hover', false);\n\t                    dispatch.areaMouseout({\n\t                        point: d,\n\t                        series: d.key,\n\t                        pos: [d3.event.pageX, d3.event.pageY],\n\t                        seriesIndex: d.seriesIndex\n\t                    });\n\t                })\n\t                .on('click', function(d,i) {\n\t                    d3.select(this).classed('hover', false);\n\t                    dispatch.areaClick({\n\t                        point: d,\n\t                        series: d.key,\n\t                        pos: [d3.event.pageX, d3.event.pageY],\n\t                        seriesIndex: d.seriesIndex\n\t                    });\n\t                });\n\t\n\t            path.exit().remove();\n\t            path.style('fill', function(d,i){\n\t                    return d.color || color(d, d.seriesIndex)\n\t                })\n\t                .style('stroke', function(d,i){ return d.color || color(d, d.seriesIndex) });\n\t            path.watchTransition(renderWatch,'stackedArea path')\n\t                .attr('d', function(d,i) {\n\t                    return area(d.values,i)\n\t                });\n\t\n\t            //============================================================\n\t            // Event Handling/Dispatching (in chart's scope)\n\t            //------------------------------------------------------------\n\t\n\t            scatter.dispatch.on('elementMouseover.area', function(e) {\n\t                g.select('.nv-chart-' + id + ' .nv-area-' + e.seriesIndex).classed('hover', true);\n\t            });\n\t            scatter.dispatch.on('elementMouseout.area', function(e) {\n\t                g.select('.nv-chart-' + id + ' .nv-area-' + e.seriesIndex).classed('hover', false);\n\t            });\n\t\n\t            //Special offset functions\n\t            chart.d3_stackedOffset_stackPercent = function(stackData) {\n\t                var n = stackData.length,    //How many series\n\t                    m = stackData[0].length,     //how many points per series\n\t                    i,\n\t                    j,\n\t                    o,\n\t                    y0 = [];\n\t\n\t                for (j = 0; j < m; ++j) { //Looping through all points\n\t                    for (i = 0, o = 0; i < dataRaw.length; i++) { //looping through all series\n\t                        o += getY(dataRaw[i].values[j]); //total y value of all series at a certian point in time.\n\t                    }\n\t\n\t                    if (o) for (i = 0; i < n; i++) { //(total y value of all series at point in time i) != 0\n\t                        stackData[i][j][1] /= o;\n\t                    } else { //(total y value of all series at point in time i) == 0\n\t                        for (i = 0; i < n; i++) {\n\t                            stackData[i][j][1] = 0;\n\t                        }\n\t                    }\n\t                }\n\t                for (j = 0; j < m; ++j) y0[j] = 0;\n\t                return y0;\n\t            };\n\t\n\t        });\n\t\n\t        renderWatch.renderEnd('stackedArea immediate');\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Global getters and setters\n\t    //------------------------------------------------------------\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.scatter = scatter;\n\t\n\t    scatter.dispatch.on('elementClick', function(){ dispatch.elementClick.apply(this, arguments); });\n\t    scatter.dispatch.on('elementMouseover', function(){ dispatch.elementMouseover.apply(this, arguments); });\n\t    scatter.dispatch.on('elementMouseout', function(){ dispatch.elementMouseout.apply(this, arguments); });\n\t\n\t    chart.interpolate = function(_) {\n\t        if (!arguments.length) return interpolate;\n\t        interpolate = _;\n\t        return chart;\n\t    };\n\t\n\t    chart.duration = function(_) {\n\t        if (!arguments.length) return duration;\n\t        duration = _;\n\t        renderWatch.reset(duration);\n\t        scatter.duration(duration);\n\t        return chart;\n\t    };\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.scatter = scatter;\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:      {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:     {get: function(){return height;}, set: function(_){height=_;}},\n\t        defined: {get: function(){return defined;}, set: function(_){defined=_;}},\n\t        clipEdge: {get: function(){return clipEdge;}, set: function(_){clipEdge=_;}},\n\t        offset:      {get: function(){return offset;}, set: function(_){offset=_;}},\n\t        order:    {get: function(){return order;}, set: function(_){order=_;}},\n\t        interpolate:    {get: function(){return interpolate;}, set: function(_){interpolate=_;}},\n\t\n\t        // simple functor options\n\t        x:     {get: function(){return getX;}, set: function(_){getX = d3.functor(_);}},\n\t        y:     {get: function(){return getY;}, set: function(_){getY = d3.functor(_);}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t        }},\n\t        style: {get: function(){return style;}, set: function(_){\n\t            style = _;\n\t            switch (style) {\n\t                case 'stack':\n\t                    chart.offset('zero');\n\t                    chart.order('default');\n\t                    break;\n\t                case 'stream':\n\t                    chart.offset('wiggle');\n\t                    chart.order('inside-out');\n\t                    break;\n\t                case 'stream-center':\n\t                    chart.offset('silhouette');\n\t                    chart.order('inside-out');\n\t                    break;\n\t                case 'expand':\n\t                    chart.offset('expand');\n\t                    chart.order('default');\n\t                    break;\n\t                case 'stack_percent':\n\t                    chart.offset(chart.d3_stackedOffset_stackPercent);\n\t                    chart.order('default');\n\t                    break;\n\t            }\n\t        }},\n\t        duration: {get: function(){return duration;}, set: function(_){\n\t            duration = _;\n\t            renderWatch.reset(duration);\n\t            scatter.duration(duration);\n\t        }}\n\t    });\n\t\n\t    nv.utils.inheritOptions(chart, scatter);\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\t\n\tnv.models.stackedAreaChart = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var stacked = nv.models.stackedArea()\n\t        , xAxis = nv.models.axis()\n\t        , yAxis = nv.models.axis()\n\t        , legend = nv.models.legend()\n\t        , controls = nv.models.legend()\n\t        , interactiveLayer = nv.interactiveGuideline()\n\t        , tooltip = nv.models.tooltip()\n\t        , focus = nv.models.focus(nv.models.stackedArea())\n\t        ;\n\t\n\t    var margin = {top: 30, right: 25, bottom: 50, left: 60}\n\t        , width = null\n\t        , height = null\n\t        , color = nv.utils.defaultColor()\n\t        , showControls = true\n\t        , showLegend = true\n\t        , showXAxis = true\n\t        , showYAxis = true\n\t        , rightAlignYAxis = false\n\t        , focusEnable = false\n\t        , useInteractiveGuideline = false\n\t        , showTotalInTooltip = true\n\t        , totalLabel = 'TOTAL'\n\t        , x //can be accessed via chart.xScale()\n\t        , y //can be accessed via chart.yScale()\n\t        , state = nv.utils.state()\n\t        , defaultState = null\n\t        , noData = null\n\t        , dispatch = d3.dispatch('stateChange', 'changeState','renderEnd')\n\t        , controlWidth = 250\n\t        , controlOptions = ['Stacked','Stream','Expanded']\n\t        , controlLabels = {}\n\t        , duration = 250\n\t        ;\n\t\n\t    state.style = stacked.style();\n\t    xAxis.orient('bottom').tickPadding(7);\n\t    yAxis.orient((rightAlignYAxis) ? 'right' : 'left');\n\t\n\t    tooltip\n\t        .headerFormatter(function(d, i) {\n\t            return xAxis.tickFormat()(d, i);\n\t        })\n\t        .valueFormatter(function(d, i) {\n\t            return yAxis.tickFormat()(d, i);\n\t        });\n\t\n\t    interactiveLayer.tooltip\n\t        .headerFormatter(function(d, i) {\n\t            return xAxis.tickFormat()(d, i);\n\t        })\n\t        .valueFormatter(function(d, i) {\n\t            return d == null ? \"N/A\" : yAxis.tickFormat()(d, i);\n\t        });\n\t\n\t    var oldYTickFormat = null,\n\t        oldValueFormatter = null;\n\t\n\t    controls.updateState(false);\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var renderWatch = nv.utils.renderWatch(dispatch);\n\t    var style = stacked.style();\n\t\n\t    var stateGetter = function(data) {\n\t        return function(){\n\t            return {\n\t                active: data.map(function(d) { return !d.disabled }),\n\t                style: stacked.style()\n\t            };\n\t        }\n\t    };\n\t\n\t    var stateSetter = function(data) {\n\t        return function(state) {\n\t            if (state.style !== undefined)\n\t                style = state.style;\n\t            if (state.active !== undefined)\n\t                data.forEach(function(series,i) {\n\t                    series.disabled = !state.active[i];\n\t                });\n\t        }\n\t    };\n\t\n\t    var percentFormatter = d3.format('%');\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        renderWatch.models(stacked);\n\t        if (showXAxis) renderWatch.models(xAxis);\n\t        if (showYAxis) renderWatch.models(yAxis);\n\t\n\t        selection.each(function(data) {\n\t            var container = d3.select(this),\n\t                that = this;\n\t            nv.utils.initSVG(container);\n\t\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin),\n\t                availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n\t\n\t            chart.update = function() { container.transition().duration(duration).call(chart); };\n\t            chart.container = this;\n\t\n\t            state\n\t                .setter(stateSetter(data), chart.update)\n\t                .getter(stateGetter(data))\n\t                .update();\n\t\n\t            // DEPRECATED set state.disabled\n\t            state.disabled = data.map(function(d) { return !!d.disabled });\n\t\n\t            if (!defaultState) {\n\t                var key;\n\t                defaultState = {};\n\t                for (key in state) {\n\t                    if (state[key] instanceof Array)\n\t                        defaultState[key] = state[key].slice(0);\n\t                    else\n\t                        defaultState[key] = state[key];\n\t                }\n\t            }\n\t\n\t            // Display No Data message if there's nothing to show.\n\t            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n\t                nv.utils.noData(chart, container)\n\t                return chart;\n\t            } else {\n\t                container.selectAll('.nv-noData').remove();\n\t            }\n\t            // Setup Scales\n\t            x = stacked.xScale();\n\t            y = stacked.yScale();\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.selectAll('g.nv-wrap.nv-stackedAreaChart').data([data]);\n\t            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-stackedAreaChart').append('g');\n\t            var g = wrap.select('g');\n\t\n\t            gEnter.append('g').attr('class', 'nv-legendWrap');\n\t            gEnter.append('g').attr('class', 'nv-controlsWrap');\n\t\n\t            var focusEnter = gEnter.append('g').attr('class', 'nv-focus');\n\t            focusEnter.append('g').attr('class', 'nv-background').append('rect');\n\t            focusEnter.append('g').attr('class', 'nv-x nv-axis');\n\t            focusEnter.append('g').attr('class', 'nv-y nv-axis');\n\t            focusEnter.append('g').attr('class', 'nv-stackedWrap');\n\t            focusEnter.append('g').attr('class', 'nv-interactive');\n\t\n\t            // g.select(\"rect\").attr(\"width\",availableWidth).attr(\"height\",availableHeight);\n\t\n\t            var contextEnter = gEnter.append('g').attr('class', 'nv-focusWrap');\n\t\n\t            // Legend\n\t            if (!showLegend) {\n\t                g.select('.nv-legendWrap').selectAll('*').remove();\n\t            } else {\n\t                var legendWidth = (showControls) ? availableWidth - controlWidth : availableWidth;\n\t\n\t                legend.width(legendWidth);\n\t                g.select('.nv-legendWrap').datum(data).call(legend);\n\t\n\t                if (legend.height() > margin.top) {\n\t                    margin.top = legend.height();\n\t                    availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n\t                }\n\t\n\t                g.select('.nv-legendWrap')\n\t                    .attr('transform', 'translate(' + (availableWidth-legendWidth) + ',' + (-margin.top) +')');\n\t            }\n\t\n\t            // Controls\n\t            if (!showControls) {\n\t                 g.select('.nv-controlsWrap').selectAll('*').remove();\n\t            } else {\n\t                var controlsData = [\n\t                    {\n\t                        key: controlLabels.stacked || 'Stacked',\n\t                        metaKey: 'Stacked',\n\t                        disabled: stacked.style() != 'stack',\n\t                        style: 'stack'\n\t                    },\n\t                    {\n\t                        key: controlLabels.stream || 'Stream',\n\t                        metaKey: 'Stream',\n\t                        disabled: stacked.style() != 'stream',\n\t                        style: 'stream'\n\t                    },\n\t                    {\n\t                        key: controlLabels.expanded || 'Expanded',\n\t                        metaKey: 'Expanded',\n\t                        disabled: stacked.style() != 'expand',\n\t                        style: 'expand'\n\t                    },\n\t                    {\n\t                        key: controlLabels.stack_percent || 'Stack %',\n\t                        metaKey: 'Stack_Percent',\n\t                        disabled: stacked.style() != 'stack_percent',\n\t                        style: 'stack_percent'\n\t                    }\n\t                ];\n\t\n\t                controlWidth = (controlOptions.length/3) * 260;\n\t                controlsData = controlsData.filter(function(d) {\n\t                    return controlOptions.indexOf(d.metaKey) !== -1;\n\t                });\n\t\n\t                controls\n\t                    .width( controlWidth )\n\t                    .color(['#444', '#444', '#444']);\n\t\n\t                g.select('.nv-controlsWrap')\n\t                    .datum(controlsData)\n\t                    .call(controls);\n\t\n\t                if (Math.max(controls.height(), legend.height()) > margin.top) {\n\t                    margin.top = Math.max(controls.height(), legend.height());\n\t                    availableHeight = nv.utils.availableHeight(height, container, margin);\n\t                }\n\t\n\t                g.select('.nv-controlsWrap')\n\t                    .attr('transform', 'translate(0,' + (-margin.top) +')');\n\t            }\n\t\n\t            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            if (rightAlignYAxis) {\n\t                g.select(\".nv-y.nv-axis\")\n\t                    .attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n\t            }\n\t\n\t            //Set up interactive layer\n\t            if (useInteractiveGuideline) {\n\t                interactiveLayer\n\t                    .width(availableWidth)\n\t                    .height(availableHeight)\n\t                    .margin({left: margin.left, top: margin.top})\n\t                    .svgContainer(container)\n\t                    .xScale(x);\n\t                wrap.select(\".nv-interactive\").call(interactiveLayer);\n\t            }\n\t\n\t            g.select('.nv-focus .nv-background rect')\n\t                .attr('width', availableWidth)\n\t                .attr('height', availableHeight);\n\t\n\t            stacked\n\t                .width(availableWidth)\n\t                .height(availableHeight)\n\t                .color(data.map(function(d,i) {\n\t                    return d.color || color(d, i);\n\t                }).filter(function(d,i) { return !data[i].disabled; }));\n\t\n\t            var stackedWrap = g.select('.nv-focus .nv-stackedWrap')\n\t                .datum(data.filter(function(d) { return !d.disabled; }));\n\t\n\t            // Setup Axes\n\t            if (showXAxis) {\n\t                xAxis.scale(x)\n\t                    ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n\t                    .tickSize( -availableHeight, 0);\n\t            }\n\t\n\t            if (showYAxis) {\n\t                var ticks;\n\t                if (stacked.offset() === 'wiggle') {\n\t                    ticks = 0;\n\t                }\n\t                else {\n\t                    ticks = nv.utils.calcTicksY(availableHeight/36, data);\n\t                }\n\t                yAxis.scale(y)\n\t                    ._ticks(ticks)\n\t                    .tickSize(-availableWidth, 0);\n\t            }\n\t\n\t            //============================================================\n\t            // Update Axes\n\t            //============================================================\n\t            function updateXAxis() {\n\t                if(showXAxis) {\n\t                    g.select('.nv-focus .nv-x.nv-axis')\n\t                        .attr('transform', 'translate(0,' + availableHeight + ')')\n\t                        .transition()\n\t                        .duration(duration)\n\t                        .call(xAxis)\n\t                        ;\n\t                }\n\t            }\n\t\n\t            function updateYAxis() {\n\t                if(showYAxis) {\n\t                    if (stacked.style() === 'expand' || stacked.style() === 'stack_percent') {\n\t                        var currentFormat = yAxis.tickFormat();\n\t\n\t                        if ( !oldYTickFormat || currentFormat !== percentFormatter )\n\t                            oldYTickFormat = currentFormat;\n\t\n\t                        //Forces the yAxis to use percentage in 'expand' mode.\n\t                        yAxis.tickFormat(percentFormatter);\n\t                    }\n\t                    else {\n\t                        if (oldYTickFormat) {\n\t                            yAxis.tickFormat(oldYTickFormat);\n\t                            oldYTickFormat = null;\n\t                        }\n\t                    }\n\t\n\t                    g.select('.nv-focus .nv-y.nv-axis')\n\t                    .transition().duration(0)\n\t                    .call(yAxis);\n\t                }\n\t            }\n\t\n\t            //============================================================\n\t            // Update Focus\n\t            //============================================================\n\t            if(!focusEnable) {\n\t                stackedWrap.transition().call(stacked);\n\t                updateXAxis();\n\t                updateYAxis();\n\t            } else {\n\t                focus.width(availableWidth);\n\t                g.select('.nv-focusWrap')\n\t                    .attr('transform', 'translate(0,' + ( availableHeight + margin.bottom + focus.margin().top) + ')')\n\t                    .datum(data.filter(function(d) { return !d.disabled; }))\n\t                    .call(focus);\n\t                var extent = focus.brush.empty() ? focus.xDomain() : focus.brush.extent();\n\t                if(extent !== null){\n\t                    onBrush(extent);\n\t                }\n\t            }\n\t\n\t            //============================================================\n\t            // Event Handling/Dispatching (in chart's scope)\n\t            //------------------------------------------------------------\n\t\n\t            stacked.dispatch.on('areaClick.toggle', function(e) {\n\t                if (data.filter(function(d) { return !d.disabled }).length === 1)\n\t                    data.forEach(function(d) {\n\t                        d.disabled = false;\n\t                    });\n\t                else\n\t                    data.forEach(function(d,i) {\n\t                        d.disabled = (i != e.seriesIndex);\n\t                    });\n\t\n\t                state.disabled = data.map(function(d) { return !!d.disabled });\n\t                dispatch.stateChange(state);\n\t\n\t                chart.update();\n\t            });\n\t\n\t            legend.dispatch.on('stateChange', function(newState) {\n\t                for (var key in newState)\n\t                    state[key] = newState[key];\n\t                dispatch.stateChange(state);\n\t                chart.update();\n\t            });\n\t\n\t            controls.dispatch.on('legendClick', function(d,i) {\n\t                if (!d.disabled) return;\n\t\n\t                controlsData = controlsData.map(function(s) {\n\t                    s.disabled = true;\n\t                    return s;\n\t                });\n\t                d.disabled = false;\n\t\n\t                stacked.style(d.style);\n\t\n\t\n\t                state.style = stacked.style();\n\t                dispatch.stateChange(state);\n\t\n\t                chart.update();\n\t            });\n\t\n\t            interactiveLayer.dispatch.on('elementMousemove', function(e) {\n\t                stacked.clearHighlights();\n\t                var singlePoint, pointIndex, pointXLocation, allData = [], valueSum = 0, allNullValues = true;\n\t                data\n\t                    .filter(function(series, i) {\n\t                        series.seriesIndex = i;\n\t                        return !series.disabled;\n\t                    })\n\t                    .forEach(function(series,i) {\n\t                        pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n\t                        var point = series.values[pointIndex];\n\t                        var pointYValue = chart.y()(point, pointIndex);\n\t                        if (pointYValue != null) {\n\t                            stacked.highlightPoint(i, pointIndex, true);\n\t                        }\n\t                        if (typeof point === 'undefined') return;\n\t                        if (typeof singlePoint === 'undefined') singlePoint = point;\n\t                        if (typeof pointXLocation === 'undefined') pointXLocation = chart.xScale()(chart.x()(point,pointIndex));\n\t\n\t                        //If we are in 'expand' mode, use the stacked percent value instead of raw value.\n\t                        var tooltipValue = (stacked.style() == 'expand') ? point.display.y : chart.y()(point,pointIndex);\n\t                        allData.push({\n\t                            key: series.key,\n\t                            value: tooltipValue,\n\t                            color: color(series,series.seriesIndex),\n\t                            point: point\n\t                        });\n\t\n\t                        if (showTotalInTooltip && stacked.style() != 'expand' && tooltipValue != null) {\n\t                          valueSum += tooltipValue;\n\t                          allNullValues = false;\n\t                        };\n\t                    });\n\t\n\t                allData.reverse();\n\t\n\t                //Highlight the tooltip entry based on which stack the mouse is closest to.\n\t                if (allData.length > 2) {\n\t                    var yValue = chart.yScale().invert(e.mouseY);\n\t                    var yDistMax = Infinity, indexToHighlight = null;\n\t                    allData.forEach(function(series,i) {\n\t\n\t                        //To handle situation where the stacked area chart is negative, we need to use absolute values\n\t                        //when checking if the mouse Y value is within the stack area.\n\t                        yValue = Math.abs(yValue);\n\t                        var stackedY0 = Math.abs(series.point.display.y0);\n\t                        var stackedY = Math.abs(series.point.display.y);\n\t                        if ( yValue >= stackedY0 && yValue <= (stackedY + stackedY0))\n\t                        {\n\t                            indexToHighlight = i;\n\t                            return;\n\t                        }\n\t                    });\n\t                    if (indexToHighlight != null)\n\t                        allData[indexToHighlight].highlight = true;\n\t                }\n\t\n\t                //If we are not in 'expand' mode, add a 'Total' row to the tooltip.\n\t                if (showTotalInTooltip && stacked.style() != 'expand' && allData.length >= 2 && !allNullValues) {\n\t                    allData.push({\n\t                        key: totalLabel,\n\t                        value: valueSum,\n\t                        total: true\n\t                    });\n\t                }\n\t\n\t                var xValue = chart.x()(singlePoint,pointIndex);\n\t\n\t                var valueFormatter = interactiveLayer.tooltip.valueFormatter();\n\t                // Keeps track of the tooltip valueFormatter if the chart changes to expanded view\n\t                if (stacked.style() === 'expand' || stacked.style() === 'stack_percent') {\n\t                    if ( !oldValueFormatter ) {\n\t                        oldValueFormatter = valueFormatter;\n\t                    }\n\t                    //Forces the tooltip to use percentage in 'expand' mode.\n\t                    valueFormatter = d3.format(\".1%\");\n\t                }\n\t                else {\n\t                    if (oldValueFormatter) {\n\t                        valueFormatter = oldValueFormatter;\n\t                        oldValueFormatter = null;\n\t                    }\n\t                }\n\t\n\t                interactiveLayer.tooltip\n\t                    .valueFormatter(valueFormatter)\n\t                    .data(\n\t                    {\n\t                        value: xValue,\n\t                        series: allData\n\t                    }\n\t                )();\n\t\n\t                interactiveLayer.renderGuideLine(pointXLocation);\n\t\n\t            });\n\t\n\t            interactiveLayer.dispatch.on(\"elementMouseout\",function(e) {\n\t                stacked.clearHighlights();\n\t            });\n\t\n\t            /* Update `main' graph on brush update. */\n\t            focus.dispatch.on(\"onBrush\", function(extent) {\n\t                onBrush(extent);\n\t            });\n\t\n\t            // Update chart from a state object passed to event handler\n\t            dispatch.on('changeState', function(e) {\n\t\n\t                if (typeof e.disabled !== 'undefined' && data.length === e.disabled.length) {\n\t                    data.forEach(function(series,i) {\n\t                        series.disabled = e.disabled[i];\n\t                    });\n\t\n\t                    state.disabled = e.disabled;\n\t                }\n\t\n\t                if (typeof e.style !== 'undefined') {\n\t                    stacked.style(e.style);\n\t                    style = e.style;\n\t                }\n\t\n\t                chart.update();\n\t            });\n\t\n\t            //============================================================\n\t            // Functions\n\t            //------------------------------------------------------------\n\t\n\t            function onBrush(extent) {\n\t                // Update Main (Focus)\n\t                var stackedWrap = g.select('.nv-focus .nv-stackedWrap')\n\t                    .datum(\n\t                    data.filter(function(d) { return !d.disabled; })\n\t                        .map(function(d,i) {\n\t                            return {\n\t                                key: d.key,\n\t                                area: d.area,\n\t                                classed: d.classed,\n\t                                values: d.values.filter(function(d,i) {\n\t                                    return stacked.x()(d,i) >= extent[0] && stacked.x()(d,i) <= extent[1];\n\t                                }),\n\t                                disableTooltip: d.disableTooltip\n\t                            };\n\t                        })\n\t                );\n\t                stackedWrap.transition().duration(duration).call(stacked);\n\t\n\t                // Update Main (Focus) Axes\n\t                updateXAxis();\n\t                updateYAxis();\n\t            }\n\t\n\t        });\n\t\n\t        renderWatch.renderEnd('stacked Area chart immediate');\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Event Handling/Dispatching (out of chart's scope)\n\t    //------------------------------------------------------------\n\t\n\t    stacked.dispatch.on('elementMouseover.tooltip', function(evt) {\n\t        evt.point['x'] = stacked.x()(evt.point);\n\t        evt.point['y'] = stacked.y()(evt.point);\n\t        tooltip.data(evt).hidden(false);\n\t    });\n\t\n\t    stacked.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t        tooltip.hidden(true)\n\t    });\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    // expose chart's sub-components\n\t    chart.dispatch = dispatch;\n\t    chart.stacked = stacked;\n\t    chart.legend = legend;\n\t    chart.controls = controls;\n\t    chart.xAxis = xAxis;\n\t    chart.x2Axis = focus.xAxis;\n\t    chart.yAxis = yAxis;\n\t    chart.y2Axis = focus.yAxis;\n\t    chart.interactiveLayer = interactiveLayer;\n\t    chart.tooltip = tooltip;\n\t    chart.focus = focus;\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:      {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:     {get: function(){return height;}, set: function(_){height=_;}},\n\t        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n\t        showXAxis:      {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n\t        showYAxis:    {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n\t        defaultState:    {get: function(){return defaultState;}, set: function(_){defaultState=_;}},\n\t        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n\t        showControls:    {get: function(){return showControls;}, set: function(_){showControls=_;}},\n\t        controlLabels:    {get: function(){return controlLabels;}, set: function(_){controlLabels=_;}},\n\t        controlOptions:    {get: function(){return controlOptions;}, set: function(_){controlOptions=_;}},\n\t        showTotalInTooltip:      {get: function(){return showTotalInTooltip;}, set: function(_){showTotalInTooltip=_;}},\n\t        totalLabel:      {get: function(){return totalLabel;}, set: function(_){totalLabel=_;}},\n\t        focusEnable:    {get: function(){return focusEnable;}, set: function(_){focusEnable=_;}},\n\t        focusHeight:     {get: function(){return focus.height();}, set: function(_){focus.height(_);}},\n\t        brushExtent: {get: function(){return focus.brushExtent();}, set: function(_){focus.brushExtent(_);}},\n\t\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t        }},\n\t        focusMargin: {get: function(){return focus.margin}, set: function(_){\n\t            focus.margin.top    = _.top    !== undefined ? _.top    : focus.margin.top;\n\t            focus.margin.right  = _.right  !== undefined ? _.right  : focus.margin.right;\n\t            focus.margin.bottom = _.bottom !== undefined ? _.bottom : focus.margin.bottom;\n\t            focus.margin.left   = _.left   !== undefined ? _.left   : focus.margin.left;\n\t        }},\n\t        duration: {get: function(){return duration;}, set: function(_){\n\t            duration = _;\n\t            renderWatch.reset(duration);\n\t            stacked.duration(duration);\n\t            xAxis.duration(duration);\n\t            yAxis.duration(duration);\n\t        }},\n\t        color:  {get: function(){return color;}, set: function(_){\n\t            color = nv.utils.getColor(_);\n\t            legend.color(color);\n\t            stacked.color(color);\n\t            focus.color(color);\n\t        }},\n\t        x: {get: function(){return stacked.x();}, set: function(_){\n\t            stacked.x(_);\n\t            focus.x(_);\n\t        }},\n\t        y: {get: function(){return stacked.y();}, set: function(_){\n\t            stacked.y(_);\n\t            focus.y(_);\n\t        }},\n\t        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n\t            rightAlignYAxis = _;\n\t            yAxis.orient( rightAlignYAxis ? 'right' : 'left');\n\t        }},\n\t        useInteractiveGuideline: {get: function(){return useInteractiveGuideline;}, set: function(_){\n\t            useInteractiveGuideline = !!_;\n\t            chart.interactive(!_);\n\t            chart.useVoronoi(!_);\n\t            stacked.scatter.interactive(!_);\n\t        }}\n\t    });\n\t\n\t    nv.utils.inheritOptions(chart, stacked);\n\t    nv.utils.initOptions(chart);\n\t\n\t    return chart;\n\t};\n\t\n\tnv.models.stackedAreaWithFocusChart = function() {\n\t  return nv.models.stackedAreaChart()\n\t    .margin({ bottom: 30 })\n\t    .focusEnable( true );\n\t};\n\t// based on http://bl.ocks.org/kerryrodden/477c1bfb081b783f80ad\n\tnv.models.sunburst = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n\t        , width = 600\n\t        , height = 600\n\t        , mode = \"count\"\n\t        , modes = {count: function(d) { return 1; }, value: function(d) { return d.value || d.size }, size: function(d) { return d.value || d.size }}\n\t        , id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n\t        , container = null\n\t        , color = nv.utils.defaultColor()\n\t        , showLabels = false\n\t        , labelFormat = function(d){if(mode === 'count'){return d.name + ' #' + d.value}else{return d.name + ' ' + (d.value || d.size)}}\n\t        , labelThreshold = 0.02\n\t        , sort = function(d1, d2){return d1.name > d2.name;}\n\t        , key = function(d,i){return d.name;}\n\t        , groupColorByParent = true\n\t        , duration = 500\n\t        , dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMousemove', 'elementMouseover', 'elementMouseout', 'renderEnd');\n\t\n\t    //============================================================\n\t    // aux functions and setup\n\t    //------------------------------------------------------------\n\t\n\t    var x = d3.scale.linear().range([0, 2 * Math.PI]);\n\t    var y = d3.scale.sqrt();\n\t\n\t    var partition = d3.layout.partition().sort(sort);\n\t\n\t    var node, availableWidth, availableHeight, radius;\n\t    var prevPositions = {};\n\t\n\t    var arc = d3.svg.arc()\n\t        .startAngle(function(d) {return Math.max(0, Math.min(2 * Math.PI, x(d.x))) })\n\t        .endAngle(function(d) {return Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx))) })\n\t        .innerRadius(function(d) {return Math.max(0, y(d.y)) })\n\t        .outerRadius(function(d) {return Math.max(0, y(d.y + d.dy)) });\n\t\n\t    function rotationToAvoidUpsideDown(d) {\n\t        var centerAngle = computeCenterAngle(d);\n\t        if(centerAngle > 90){\n\t            return 180;\n\t        }\n\t        else {\n\t            return 0;\n\t        }\n\t    }\n\t\n\t    function computeCenterAngle(d) {\n\t        var startAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x)));\n\t        var endAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx)));\n\t        var centerAngle = (((startAngle + endAngle) / 2) * (180 / Math.PI)) - 90;\n\t        return centerAngle;\n\t    }\n\t\n\t    function computeNodePercentage(d) {\n\t        var startAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x)));\n\t        var endAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx)));\n\t        return (endAngle - startAngle) / (2 * Math.PI);\n\t    }\n\t\n\t    function labelThresholdMatched(d) {\n\t        var startAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x)));\n\t        var endAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx)));\n\t\n\t        var size = endAngle - startAngle;\n\t        return size > labelThreshold;\n\t    }\n\t\n\t    // When zooming: interpolate the scales.\n\t    function arcTweenZoom(e,i) {\n\t        var xd = d3.interpolate(x.domain(), [node.x, node.x + node.dx]),\n\t        yd = d3.interpolate(y.domain(), [node.y, 1]),\n\t        yr = d3.interpolate(y.range(), [node.y ? 20 : 0, radius]);\n\t\n\t        if (i === 0) {\n\t            return function() {return arc(e);}\n\t        }\n\t        else {\n\t            return function (t) {\n\t                x.domain(xd(t));\n\t                y.domain(yd(t)).range(yr(t));\n\t                return arc(e);\n\t            }\n\t        };\n\t    }\n\t\n\t    function arcTweenUpdate(d) {\n\t        var ipo = d3.interpolate({x: d.x0, dx: d.dx0, y: d.y0, dy: d.dy0}, d);\n\t\n\t        return function (t) {\n\t            var b = ipo(t);\n\t\n\t            d.x0 = b.x;\n\t            d.dx0 = b.dx;\n\t            d.y0 = b.y;\n\t            d.dy0 = b.dy;\n\t\n\t            return arc(b);\n\t        };\n\t    }\n\t\n\t    function updatePrevPosition(node) {\n\t        var k = key(node);\n\t        if(! prevPositions[k]) prevPositions[k] = {};\n\t        var pP = prevPositions[k];\n\t        pP.dx = node.dx;\n\t        pP.x = node.x;\n\t        pP.dy = node.dy;\n\t        pP.y = node.y;\n\t    }\n\t\n\t    function storeRetrievePrevPositions(nodes) {\n\t        nodes.forEach(function(n){\n\t            var k = key(n);\n\t            var pP = prevPositions[k];\n\t            //console.log(k,n,pP);\n\t            if( pP ){\n\t                n.dx0 = pP.dx;\n\t                n.x0 = pP.x;\n\t                n.dy0 = pP.dy;\n\t                n.y0 = pP.y;\n\t            }\n\t            else {\n\t                n.dx0 = n.dx;\n\t                n.x0 = n.x;\n\t                n.dy0 = n.dy;\n\t                n.y0 = n.y;\n\t            }\n\t            updatePrevPosition(n);\n\t        });\n\t    }\n\t\n\t    function zoomClick(d) {\n\t        var labels = container.selectAll('text')\n\t        var path = container.selectAll('path')\n\t\n\t        // fade out all text elements\n\t        labels.transition().attr(\"opacity\",0);\n\t\n\t        // to allow reference to the new center node\n\t        node = d;\n\t\n\t        path.transition()\n\t            .duration(duration)\n\t            .attrTween(\"d\", arcTweenZoom)\n\t            .each('end', function(e) {\n\t                // partially taken from here: http://bl.ocks.org/metmajer/5480307\n\t                // check if the animated element's data e lies within the visible angle span given in d\n\t                if(e.x >= d.x && e.x < (d.x + d.dx) ){\n\t                    if(e.depth >= d.depth){\n\t                        // get a selection of the associated text element\n\t                        var parentNode = d3.select(this.parentNode);\n\t                        var arcText = parentNode.select('text');\n\t\n\t                        // fade in the text element and recalculate positions\n\t                        arcText.transition().duration(duration)\n\t                        .text( function(e){return labelFormat(e) })\n\t                        .attr(\"opacity\", function(d){\n\t                            if(labelThresholdMatched(d)) {\n\t                                return 1;\n\t                            }\n\t                            else {\n\t                                return 0;\n\t                            }\n\t                        })\n\t                        .attr(\"transform\", function() {\n\t                            var width = this.getBBox().width;\n\t                            if(e.depth === 0)\n\t                            return \"translate(\" + (width / 2 * - 1) + \",0)\";\n\t                            else if(e.depth === d.depth){\n\t                                return \"translate(\" + (y(e.y) + 5) + \",0)\";\n\t                            }\n\t                            else {\n\t                                var centerAngle = computeCenterAngle(e);\n\t                                var rotation = rotationToAvoidUpsideDown(e);\n\t                                if (rotation === 0) {\n\t                                    return 'rotate('+ centerAngle +')translate(' + (y(e.y) + 5) + ',0)';\n\t                                }\n\t                                else {\n\t                                    return 'rotate('+ centerAngle +')translate(' + (y(e.y) + width + 5) + ',0)rotate(' + rotation + ')';\n\t                                }\n\t                            }\n\t                        });\n\t                    }\n\t                }\n\t            })\n\t    }\n\t\n\t    //============================================================\n\t    // chart function\n\t    //------------------------------------------------------------\n\t    var renderWatch = nv.utils.renderWatch(dispatch);\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t\n\t        selection.each(function(data) {\n\t            container = d3.select(this);\n\t            availableWidth = nv.utils.availableWidth(width, container, margin);\n\t            availableHeight = nv.utils.availableHeight(height, container, margin);\n\t            radius = Math.min(availableWidth, availableHeight) / 2;\n\t\n\t            y.range([0, radius]);\n\t\n\t            // Setup containers and skeleton of chart\n\t            var wrap = container.select('g.nvd3.nv-wrap.nv-sunburst');\n\t            if( !wrap[0][0] ) {\n\t                wrap = container.append('g')\n\t                    .attr('class', 'nvd3 nv-wrap nv-sunburst nv-chart-' + id)\n\t                    .attr('transform', 'translate(' + ((availableWidth / 2) + margin.left + margin.right) + ',' + ((availableHeight / 2) + margin.top + margin.bottom) + ')');\n\t            } else {\n\t                wrap.attr('transform', 'translate(' + ((availableWidth / 2) + margin.left + margin.right) + ',' + ((availableHeight / 2) + margin.top + margin.bottom) + ')');\n\t            }\n\t\n\t            container.on('click', function (d, i) {\n\t                dispatch.chartClick({\n\t                    data: d,\n\t                    index: i,\n\t                    pos: d3.event,\n\t                    id: id\n\t                });\n\t            });\n\t\n\t            partition.value(modes[mode] || modes[\"count\"]);\n\t\n\t            //reverse the drawing order so that the labels of inner\n\t            //arcs are drawn on top of the outer arcs.\n\t            var nodes = partition.nodes(data[0]).reverse()\n\t\n\t            storeRetrievePrevPositions(nodes);\n\t            var cG = wrap.selectAll('.arc-container').data(nodes, key)\n\t\n\t            //handle new datapoints\n\t            var cGE = cG.enter()\n\t                .append(\"g\")\n\t                .attr(\"class\",'arc-container')\n\t\n\t            cGE.append(\"path\")\n\t                .attr(\"d\", arc)\n\t                .style(\"fill\", function (d) {\n\t                    if (d.color) {\n\t                        return d.color;\n\t                    }\n\t                    else if (groupColorByParent) {\n\t                        return color((d.children ? d : d.parent).name);\n\t                    }\n\t                    else {\n\t                        return color(d.name);\n\t                    }\n\t                })\n\t                .style(\"stroke\", \"#FFF\")\n\t                .on(\"click\", zoomClick)\n\t                .on('mouseover', function(d,i){\n\t                    d3.select(this).classed('hover', true).style('opacity', 0.8);\n\t                    dispatch.elementMouseover({\n\t                        data: d,\n\t                        color: d3.select(this).style(\"fill\"),\n\t                        percent: computeNodePercentage(d)\n\t                    });\n\t                })\n\t                .on('mouseout', function(d,i){\n\t                    d3.select(this).classed('hover', false).style('opacity', 1);\n\t                    dispatch.elementMouseout({\n\t                        data: d\n\t                    });\n\t                })\n\t                .on('mousemove', function(d,i){\n\t                    dispatch.elementMousemove({\n\t                        data: d\n\t                    });\n\t                });\n\t\n\t            ///Iterating via each and selecting based on the this\n\t            ///makes it work ... a cG.selectAll('path') doesn't.\n\t            ///Without iteration the data (in the element) didn't update.\n\t            cG.each(function(d){\n\t                d3.select(this).select('path')\n\t                    .transition()\n\t                    .duration(duration)\n\t                    .attrTween('d', arcTweenUpdate);\n\t            });\n\t\n\t            if(showLabels){\n\t                //remove labels first and add them back\n\t                cG.selectAll('text').remove();\n\t\n\t                //this way labels are on top of newly added arcs\n\t                cG.append('text')\n\t                    .text( function(e){ return labelFormat(e)})\n\t                    .transition()\n\t                    .duration(duration)\n\t                    .attr(\"opacity\", function(d){\n\t                        if(labelThresholdMatched(d)) {\n\t                            return 1;\n\t                        }\n\t                        else {\n\t                            return 0;\n\t                        }\n\t                    })\n\t                    .attr(\"transform\", function(d) {\n\t                        var width = this.getBBox().width;\n\t                        if(d.depth === 0){\n\t                            return \"rotate(0)translate(\" + (width / 2 * -1) + \",0)\";\n\t                        }\n\t                        else {\n\t                            var centerAngle = computeCenterAngle(d);\n\t                            var rotation = rotationToAvoidUpsideDown(d);\n\t                            if (rotation === 0) {\n\t                                return 'rotate('+ centerAngle +')translate(' + (y(d.y) + 5) + ',0)';\n\t                            }\n\t                            else {\n\t                                return 'rotate('+ centerAngle +')translate(' + (y(d.y) + width + 5) + ',0)rotate(' + rotation + ')';\n\t                            }\n\t                        }\n\t                    });\n\t            }\n\t\n\t            //zoom out to the center when the data is updated.\n\t            zoomClick(nodes[nodes.length - 1])\n\t\n\t\n\t            //remove unmatched elements ...\n\t            cG.exit()\n\t                .transition()\n\t                .duration(duration)\n\t                .attr('opacity',0)\n\t                .each('end',function(d){\n\t                    var k = key(d);\n\t                    prevPositions[k] = undefined;\n\t                })\n\t                .remove();\n\t        });\n\t\n\t\n\t        renderWatch.renderEnd('sunburst immediate');\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    chart.dispatch = dispatch;\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        width:      {get: function(){return width;}, set: function(_){width=_;}},\n\t        height:     {get: function(){return height;}, set: function(_){height=_;}},\n\t        mode:       {get: function(){return mode;}, set: function(_){mode=_;}},\n\t        id:         {get: function(){return id;}, set: function(_){id=_;}},\n\t        duration:   {get: function(){return duration;}, set: function(_){duration=_;}},\n\t        groupColorByParent: {get: function(){return groupColorByParent;}, set: function(_){groupColorByParent=!!_;}},\n\t        showLabels: {get: function(){return showLabels;}, set: function(_){showLabels=!!_}},\n\t        labelFormat: {get: function(){return labelFormat;}, set: function(_){labelFormat=_}},\n\t        labelThreshold: {get: function(){return labelThreshold;}, set: function(_){labelThreshold=_}},\n\t        sort: {get: function(){return sort;}, set: function(_){sort=_}},\n\t        key: {get: function(){return key;}, set: function(_){key=_}},\n\t        // options that require extra logic in the setter\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    != undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  != undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom != undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   != undefined ? _.left   : margin.left;\n\t        }},\n\t        color: {get: function(){return color;}, set: function(_){\n\t            color=nv.utils.getColor(_);\n\t        }}\n\t    });\n\t\n\t    nv.utils.initOptions(chart);\n\t    return chart;\n\t};\n\tnv.models.sunburstChart = function() {\n\t    \"use strict\";\n\t\n\t    //============================================================\n\t    // Public Variables with Default Settings\n\t    //------------------------------------------------------------\n\t\n\t    var sunburst = nv.models.sunburst();\n\t    var tooltip = nv.models.tooltip();\n\t\n\t    var margin = {top: 30, right: 20, bottom: 20, left: 20}\n\t        , width = null\n\t        , height = null\n\t        , color = nv.utils.defaultColor()\n\t        , showTooltipPercent = false\n\t        , id = Math.round(Math.random() * 100000)\n\t        , defaultState = null\n\t        , noData = null\n\t        , duration = 250\n\t        , dispatch = d3.dispatch('stateChange', 'changeState','renderEnd');\n\t\n\t\n\t    //============================================================\n\t    // Private Variables\n\t    //------------------------------------------------------------\n\t\n\t    var renderWatch = nv.utils.renderWatch(dispatch);\n\t\n\t    tooltip\n\t        .duration(0)\n\t        .headerEnabled(false)\n\t        .valueFormatter(function(d){return d;});\n\t\n\t    //============================================================\n\t    // Chart function\n\t    //------------------------------------------------------------\n\t\n\t    function chart(selection) {\n\t        renderWatch.reset();\n\t        renderWatch.models(sunburst);\n\t\n\t        selection.each(function(data) {\n\t            var container = d3.select(this);\n\t\n\t            nv.utils.initSVG(container);\n\t\n\t            var availableWidth = nv.utils.availableWidth(width, container, margin);\n\t            var availableHeight = nv.utils.availableHeight(height, container, margin);\n\t\n\t            chart.update = function() {\n\t                if (duration === 0) {\n\t                    container.call(chart);\n\t                } else {\n\t                    container.transition().duration(duration).call(chart);\n\t                }\n\t            };\n\t            chart.container = container;\n\t\n\t            // Display No Data message if there's nothing to show.\n\t            if (!data || !data.length) {\n\t                nv.utils.noData(chart, container);\n\t                return chart;\n\t            } else {\n\t                container.selectAll('.nv-noData').remove();\n\t            }\n\t\n\t            sunburst.width(availableWidth).height(availableHeight).margin(margin);\n\t            container.call(sunburst);\n\t        });\n\t\n\t        renderWatch.renderEnd('sunburstChart immediate');\n\t        return chart;\n\t    }\n\t\n\t    //============================================================\n\t    // Event Handling/Dispatching (out of chart's scope)\n\t    //------------------------------------------------------------\n\t\n\t    sunburst.dispatch.on('elementMouseover.tooltip', function(evt) {\n\t        evt.series = {\n\t            key: evt.data.name,\n\t            value: (evt.data.value || evt.data.size),\n\t            color: evt.color,\n\t            percent: evt.percent\n\t        };\n\t        if (!showTooltipPercent) {\n\t            delete evt.percent;\n\t            delete evt.series.percent;\n\t        }\n\t        tooltip.data(evt).hidden(false);\n\t    });\n\t\n\t    sunburst.dispatch.on('elementMouseout.tooltip', function(evt) {\n\t        tooltip.hidden(true);\n\t    });\n\t\n\t    sunburst.dispatch.on('elementMousemove.tooltip', function(evt) {\n\t        tooltip();\n\t    });\n\t\n\t    //============================================================\n\t    // Expose Public Variables\n\t    //------------------------------------------------------------\n\t\n\t    // expose chart's sub-components\n\t    chart.dispatch = dispatch;\n\t    chart.sunburst = sunburst;\n\t    chart.tooltip = tooltip;\n\t    chart.options = nv.utils.optionsFunc.bind(chart);\n\t\n\t    // use Object get/set functionality to map between vars and chart functions\n\t    chart._options = Object.create({}, {\n\t        // simple options, just get/set the necessary values\n\t        noData:             {get: function(){return noData;},               set: function(_){noData=_;}},\n\t        defaultState:       {get: function(){return defaultState;},         set: function(_){defaultState=_;}},\n\t        showTooltipPercent: {get: function(){return showTooltipPercent;},   set: function(_){showTooltipPercent=_;}},\n\t\n\t        // options that require extra logic in the setter\n\t        color: {get: function(){return color;}, set: function(_){\n\t            color = _;\n\t            sunburst.color(color);\n\t        }},\n\t        duration: {get: function(){return duration;}, set: function(_){\n\t            duration = _;\n\t            renderWatch.reset(duration);\n\t            sunburst.duration(duration);\n\t        }},\n\t        margin: {get: function(){return margin;}, set: function(_){\n\t            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n\t            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n\t            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n\t            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n\t            sunburst.margin(margin);\n\t        }}\n\t    });\n\t    nv.utils.inheritOptions(chart, sunburst);\n\t    nv.utils.initOptions(chart);\n\t    return chart;\n\t\n\t};\n\t\n\tnv.version = \"1.8.4\";\n\t})();\n\n/***/ },\n\n/***/ 354:\n/***/ function(module, exports, __webpack_require__) {\n\n\t!function(t,e){ true?module.exports=e(__webpack_require__(2),__webpack_require__(78),__webpack_require__(329)):\"function\"==typeof define&&define.amd?define([\"react\",\"d3\",\"nvd3\"],e):\"object\"==typeof exports?exports.NVD3Chart=e(require(\"react\"),require(\"d3\"),require(\"nvd3\")):t.NVD3Chart=e(t.React,t.d3,t.nv)}(this,function(t,e,n){return function(t){function e(r){if(n[r])return n[r].exports;var o=n[r]={exports:{},id:r,loaded:!1};return t[r].call(o.exports,o,o.exports,e),o.loaded=!0,o.exports}var n={};return e.m=t,e.c=n,e.p=\"\",e(0)}([function(t,e,n){\"use strict\";function r(t){return t&&t.__esModule?t:{\"default\":t}}Object.defineProperty(e,\"__esModule\",{value:!0});var o=n(1),i=r(o),u=n(2),c=r(u),s=n(17),a=r(s),f=n(21),p=r(f),l=n(22),d=r(l),h=n(25),y=r(h),v=n(48),b=r(v),g=n(55),m=r(g),_=n(56),x=r(_),O=n(57),j=r(O),w=n(58),S=[\"x\",\"y\",\"type\",\"datum\",\"configure\"],P=[\"width\",\"height\"],E=\"margin\",M=\"containerStyle\",k=\"renderStart\",C=\"renderEnd\",D=\"ready\",F=function(t){function e(){return(0,p[\"default\"])(this,e),(0,y[\"default\"])(this,(0,a[\"default\"])(e).apply(this,arguments))}return(0,b[\"default\"])(e,t),(0,d[\"default\"])(e,[{key:\"componentDidMount\",value:function(){var t=this;j[\"default\"].addGraph(this.renderChart.bind(this),function(e){(0,w.isCallable)(t.props.ready)&&t.props.ready(e,D)})}},{key:\"componentDidUpdate\",value:function(){this.renderChart()}},{key:\"componentWillUnmount\",value:function(){this.resizeHandler&&this.resizeHandler.clear()}},{key:\"renderChart\",value:function(){var t=void 0;switch(this.chart=this.chart&&!this.rendering?this.chart:j[\"default\"].models[this.props.type](),(0,w.isCallable)(this.props.renderStart)&&this.props.renderStart(this.chart,k),this.parsedProps=(0,w.bindFunctions)(this.props,this.props.context),this.chart.x&&this.chart.x((0,w.getValueFunction)(this.parsedProps.x,\"x\")),this.chart.y&&this.chart.y((0,w.getValueFunction)(this.parsedProps.y,\"y\")),this.props.margin&&this.chart.margin(this.options(E,w.pick).margin||(0,w.propsByPrefix)(\"margin\",this.props)||{}),this.configureComponents(this.chart,this.options(S.concat(M),w.without)),!this.props.configure||this.props.configure(this.chart),this.selection=x[\"default\"].select(this.refs.svg).datum(this.props.datum).call(this.chart),this.resizeHandler||(this.resizeHandler=j[\"default\"].utils.windowResize(this.chart.update)),this.props.type){case\"pieChart\":t=this.chart.pie.dispatch;break;case\"lineChart\":t=this.chart.lines.dispatch;break;default:t=this.chart.dispatch}return t.renderEnd&&t.on(\"renderEnd\",this.renderEnd.bind(this)),this.rendering=!0,this.chart}},{key:\"renderEnd\",value:function(t){(0,w.isCallable)(this.props.renderEnd)&&this.props.renderEnd(this.chart,C),this.rendering=!1}},{key:\"configureComponents\",value:function(t,e){for(var n in e){var r=e[n];t&&((0,w.isPlainObject)(r)?this.configureComponents(t[n],r):\"function\"==typeof t[n]&&t[n](r))}}},{key:\"options\",value:function(t,e){var n=this.parsedProps.options||this.parsedProps||this.props.chartOptions;return(e=e||w.pick)(n,t)}},{key:\"render\",value:function(){var t=(0,w.pick)(this.props,P),e=(0,c[\"default\"])({},t,this.props.containerStyle);return m[\"default\"].createElement(\"div\",{ref:\"root\",className:\"nv-chart\",style:e},m[\"default\"].createElement(\"svg\",(0,i[\"default\"])({ref:\"svg\"},t)))}}]),e}(m[\"default\"].Component);e[\"default\"]=F,t.exports=F},function(t,e,n){\"use strict\";var r=n(2)[\"default\"];e[\"default\"]=r||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t},e.__esModule=!0},function(t,e,n){t.exports={\"default\":n(3),__esModule:!0}},function(t,e,n){n(4),t.exports=n(7).Object.assign},function(t,e,n){var r=n(5);r(r.S+r.F,\"Object\",{assign:n(10)})},function(t,e,n){var r=n(6),o=n(7),i=n(8),u=\"prototype\",c=function(t,e,n){var s,a,f,p=t&c.F,l=t&c.G,d=t&c.S,h=t&c.P,y=t&c.B,v=t&c.W,b=l?o:o[e]||(o[e]={}),g=l?r:d?r[e]:(r[e]||{})[u];l&&(n=e);for(s in n)a=!p&&g&&s in g,a&&s in b||(f=a?g[s]:n[s],b[s]=l&&\"function\"!=typeof g[s]?n[s]:y&&a?i(f,r):v&&g[s]==f?function(t){var e=function(e){return this instanceof t?new t(e):t(e)};return e[u]=t[u],e}(f):h&&\"function\"==typeof f?i(Function.call,f):f,h&&((b[u]||(b[u]={}))[s]=f))};c.F=1,c.G=2,c.S=4,c.P=8,c.B=16,c.W=32,t.exports=c},function(t,e){var n=t.exports=\"undefined\"!=typeof window&&window.Math==Math?window:\"undefined\"!=typeof self&&self.Math==Math?self:Function(\"return this\")();\"number\"==typeof __g&&(__g=n)},function(t,e){var n=t.exports={version:\"1.2.6\"};\"number\"==typeof __e&&(__e=n)},function(t,e,n){var r=n(9);t.exports=function(t,e,n){if(r(t),void 0===e)return t;switch(n){case 1:return function(n){return t.call(e,n)};case 2:return function(n,r){return t.call(e,n,r)};case 3:return function(n,r,o){return t.call(e,n,r,o)}}return function(){return t.apply(e,arguments)}}},function(t,e){t.exports=function(t){if(\"function\"!=typeof t)throw TypeError(t+\" is not a function!\");return t}},function(t,e,n){var r=n(11),o=n(12),i=n(14);t.exports=n(16)(function(){var t=Object.assign,e={},n={},r=Symbol(),o=\"abcdefghijklmnopqrst\";return e[r]=7,o.split(\"\").forEach(function(t){n[t]=t}),7!=t({},e)[r]||Object.keys(t({},n)).join(\"\")!=o})?function(t,e){for(var n=o(t),u=arguments,c=u.length,s=1,a=r.getKeys,f=r.getSymbols,p=r.isEnum;c>s;)for(var l,d=i(u[s++]),h=f?a(d).concat(f(d)):a(d),y=h.length,v=0;y>v;)p.call(d,l=h[v++])&&(n[l]=d[l]);return n}:Object.assign},function(t,e){var n=Object;t.exports={create:n.create,getProto:n.getPrototypeOf,isEnum:{}.propertyIsEnumerable,getDesc:n.getOwnPropertyDescriptor,setDesc:n.defineProperty,setDescs:n.defineProperties,getKeys:n.keys,getNames:n.getOwnPropertyNames,getSymbols:n.getOwnPropertySymbols,each:[].forEach}},function(t,e,n){var r=n(13);t.exports=function(t){return Object(r(t))}},function(t,e){t.exports=function(t){if(void 0==t)throw TypeError(\"Can't call method on  \"+t);return t}},function(t,e,n){var r=n(15);t.exports=Object(\"z\").propertyIsEnumerable(0)?Object:function(t){return\"String\"==r(t)?t.split(\"\"):Object(t)}},function(t,e){var n={}.toString;t.exports=function(t){return n.call(t).slice(8,-1)}},function(t,e){t.exports=function(t){try{return!!t()}catch(e){return!0}}},function(t,e,n){t.exports={\"default\":n(18),__esModule:!0}},function(t,e,n){n(19),t.exports=n(7).Object.getPrototypeOf},function(t,e,n){var r=n(12);n(20)(\"getPrototypeOf\",function(t){return function(e){return t(r(e))}})},function(t,e,n){var r=n(5),o=n(7),i=n(16);t.exports=function(t,e){var n=(o.Object||{})[t]||Object[t],u={};u[t]=e(n),r(r.S+r.F*i(function(){n(1)}),\"Object\",u)}},function(t,e){\"use strict\";e[\"default\"]=function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")},e.__esModule=!0},function(t,e,n){\"use strict\";function r(t){return t&&t.__esModule?t:{\"default\":t}}var o=n(23),i=r(o);e[\"default\"]=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),(0,i[\"default\"])(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),e.__esModule=!0},function(t,e,n){t.exports={\"default\":n(24),__esModule:!0}},function(t,e,n){var r=n(11);t.exports=function(t,e,n){return r.setDesc(t,e,n)}},function(t,e,n){\"use strict\";function r(t){return t&&t.__esModule?t:{\"default\":t}}var o=n(26),i=r(o);e[\"default\"]=function(t,e){if(!t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!e||\"object\"!==(\"undefined\"==typeof e?\"undefined\":(0,i[\"default\"])(e))&&\"function\"!=typeof e?t:e},e.__esModule=!0},function(t,e,n){\"use strict\";var r=n(27)[\"default\"];e[\"default\"]=function(t){return t&&t.constructor===r?\"symbol\":typeof t},e.__esModule=!0},function(t,e,n){t.exports={\"default\":n(28),__esModule:!0}},function(t,e,n){n(29),n(47),t.exports=n(7).Symbol},function(t,e,n){\"use strict\";var r=n(11),o=n(6),i=n(30),u=n(31),c=n(5),s=n(32),a=n(16),f=n(35),p=n(36),l=n(38),d=n(37),h=n(39),y=n(41),v=n(42),b=n(43),g=n(44),m=n(40),_=n(34),x=r.getDesc,O=r.setDesc,j=r.create,w=y.get,S=o.Symbol,P=o.JSON,E=P&&P.stringify,M=!1,k=d(\"_hidden\"),C=r.isEnum,D=f(\"symbol-registry\"),F=f(\"symbols\"),N=\"function\"==typeof S,T=Object.prototype,q=u&&a(function(){return 7!=j(O({},\"a\",{get:function(){return O(this,\"a\",{value:7}).a}})).a})?function(t,e,n){var r=x(T,e);r&&delete T[e],O(t,e,n),r&&t!==T&&O(T,e,r)}:O,z=function(t){var e=F[t]=j(S.prototype);return e._k=t,u&&M&&q(T,t,{configurable:!0,set:function(e){i(this,k)&&i(this[k],t)&&(this[k][t]=!1),q(this,t,_(1,e))}}),e},A=function(t){return\"symbol\"==typeof t},V=function(t,e,n){return n&&i(F,e)?(n.enumerable?(i(t,k)&&t[k][e]&&(t[k][e]=!1),n=j(n,{enumerable:_(0,!1)})):(i(t,k)||O(t,k,_(1,{})),t[k][e]=!0),q(t,e,n)):O(t,e,n)},W=function(t,e){g(t);for(var n,r=v(e=m(e)),o=0,i=r.length;i>o;)V(t,n=r[o++],e[n]);return t},B=function(t,e){return void 0===e?j(t):W(j(t),e)},G=function(t){var e=C.call(this,t);return e||!i(this,t)||!i(F,t)||i(this,k)&&this[k][t]?e:!0},H=function(t,e){var n=x(t=m(t),e);return!n||!i(F,e)||i(t,k)&&t[k][e]||(n.enumerable=!0),n},I=function(t){for(var e,n=w(m(t)),r=[],o=0;n.length>o;)i(F,e=n[o++])||e==k||r.push(e);return r},J=function(t){for(var e,n=w(m(t)),r=[],o=0;n.length>o;)i(F,e=n[o++])&&r.push(F[e]);return r},K=function(t){if(void 0!==t&&!A(t)){for(var e,n,r=[t],o=1,i=arguments;i.length>o;)r.push(i[o++]);return e=r[1],\"function\"==typeof e&&(n=e),(n||!b(e))&&(e=function(t,e){return n&&(e=n.call(this,t,e)),A(e)?void 0:e}),r[1]=e,E.apply(P,r)}},R=a(function(){var t=S();return\"[null]\"!=E([t])||\"{}\"!=E({a:t})||\"{}\"!=E(Object(t))});N||(S=function(){if(A(this))throw TypeError(\"Symbol is not a constructor\");return z(l(arguments.length>0?arguments[0]:void 0))},s(S.prototype,\"toString\",function(){return this._k}),A=function(t){return t instanceof S},r.create=B,r.isEnum=G,r.getDesc=H,r.setDesc=V,r.setDescs=W,r.getNames=y.get=I,r.getSymbols=J,u&&!n(46)&&s(T,\"propertyIsEnumerable\",G,!0));var U={\"for\":function(t){return i(D,t+=\"\")?D[t]:D[t]=S(t)},keyFor:function(t){return h(D,t)},useSetter:function(){M=!0},useSimple:function(){M=!1}};r.each.call(\"hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables\".split(\",\"),function(t){var e=d(t);U[t]=N?e:z(e)}),M=!0,c(c.G+c.W,{Symbol:S}),c(c.S,\"Symbol\",U),c(c.S+c.F*!N,\"Object\",{create:B,defineProperty:V,defineProperties:W,getOwnPropertyDescriptor:H,getOwnPropertyNames:I,getOwnPropertySymbols:J}),P&&c(c.S+c.F*(!N||R),\"JSON\",{stringify:K}),p(S,\"Symbol\"),p(Math,\"Math\",!0),p(o.JSON,\"JSON\",!0)},function(t,e){var n={}.hasOwnProperty;t.exports=function(t,e){return n.call(t,e)}},function(t,e,n){t.exports=!n(16)(function(){return 7!=Object.defineProperty({},\"a\",{get:function(){return 7}}).a})},function(t,e,n){t.exports=n(33)},function(t,e,n){var r=n(11),o=n(34);t.exports=n(31)?function(t,e,n){return r.setDesc(t,e,o(1,n))}:function(t,e,n){return t[e]=n,t}},function(t,e){t.exports=function(t,e){return{enumerable:!(1&t),configurable:!(2&t),writable:!(4&t),value:e}}},function(t,e,n){var r=n(6),o=\"__core-js_shared__\",i=r[o]||(r[o]={});t.exports=function(t){return i[t]||(i[t]={})}},function(t,e,n){var r=n(11).setDesc,o=n(30),i=n(37)(\"toStringTag\");t.exports=function(t,e,n){t&&!o(t=n?t:t.prototype,i)&&r(t,i,{configurable:!0,value:e})}},function(t,e,n){var r=n(35)(\"wks\"),o=n(38),i=n(6).Symbol;t.exports=function(t){return r[t]||(r[t]=i&&i[t]||(i||o)(\"Symbol.\"+t))}},function(t,e){var n=0,r=Math.random();t.exports=function(t){return\"Symbol(\".concat(void 0===t?\"\":t,\")_\",(++n+r).toString(36))}},function(t,e,n){var r=n(11),o=n(40);t.exports=function(t,e){for(var n,i=o(t),u=r.getKeys(i),c=u.length,s=0;c>s;)if(i[n=u[s++]]===e)return n}},function(t,e,n){var r=n(14),o=n(13);t.exports=function(t){return r(o(t))}},function(t,e,n){var r=n(40),o=n(11).getNames,i={}.toString,u=\"object\"==typeof window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[],c=function(t){try{return o(t)}catch(e){return u.slice()}};t.exports.get=function(t){return u&&\"[object Window]\"==i.call(t)?c(t):o(r(t))}},function(t,e,n){var r=n(11);t.exports=function(t){var e=r.getKeys(t),n=r.getSymbols;if(n)for(var o,i=n(t),u=r.isEnum,c=0;i.length>c;)u.call(t,o=i[c++])&&e.push(o);return e}},function(t,e,n){var r=n(15);t.exports=Array.isArray||function(t){return\"Array\"==r(t)}},function(t,e,n){var r=n(45);t.exports=function(t){if(!r(t))throw TypeError(t+\" is not an object!\");return t}},function(t,e){t.exports=function(t){return\"object\"==typeof t?null!==t:\"function\"==typeof t}},function(t,e){t.exports=!0},function(t,e){},function(t,e,n){\"use strict\";var r=n(49)[\"default\"],o=n(51)[\"default\"];e[\"default\"]=function(t,e){if(\"function\"!=typeof e&&null!==e)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof e);t.prototype=r(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(o?o(t,e):t.__proto__=e)},e.__esModule=!0},function(t,e,n){t.exports={\"default\":n(50),__esModule:!0}},function(t,e,n){var r=n(11);t.exports=function(t,e){return r.create(t,e)}},function(t,e,n){t.exports={\"default\":n(52),__esModule:!0}},function(t,e,n){n(53),t.exports=n(7).Object.setPrototypeOf},function(t,e,n){var r=n(5);r(r.S,\"Object\",{setPrototypeOf:n(54).set})},function(t,e,n){var r=n(11).getDesc,o=n(45),i=n(44),u=function(t,e){if(i(t),!o(e)&&null!==e)throw TypeError(e+\": can't set as prototype!\")};t.exports={set:Object.setPrototypeOf||(\"__proto__\"in{}?function(t,e,o){try{o=n(8)(Function.call,r(Object.prototype,\"__proto__\").set,2),o(t,[]),e=!(t instanceof Array)}catch(i){e=!0}return function(t,n){return u(t,n),e?t.__proto__=n:o(t,n),t}}({},!1):void 0),check:u}},function(e,n){e.exports=t},function(t,n){t.exports=e},function(t,e){t.exports=n},function(t,e,n){\"use strict\";function r(t){return t&&t.__esModule?t:{\"default\":t}}function o(t,e){return t.indexOf(e)>=0}function i(t){return function(){return!t.apply(this,arguments)}}function u(t,e,n){for(var r={},o=(0,m[\"default\"])(t),i=0,u=o.length;u>i;i++){var c=o[i],s=t[c];n(e,c)&&(r[c]=s)}return r}function c(t,e){return u(t,e,o)}function s(t,e){return u(t,e,i(o))}function a(t){if(\"object\"==(\"undefined\"==typeof t?\"undefined\":(0,b[\"default\"])(t))&&null!==t){if(\"function\"==typeof y[\"default\"]){var e=(0,y[\"default\"])(t);return e===Object.prototype||null===e}return\"[object Object]\"==Object.prototype.toString.call(t)}return!1}function f(t,e){var n,r,o;n=Array.isArray(t)?[]:{};for(o in t)r=t[o],null!=r&&(\"object\"===(\"undefined\"==typeof r?\"undefined\":(0,b[\"default\"])(r))&&null!==r&&\"function\"!==r.type?n[o]=f(r,e):\"function\"===r.type?n[o]=e[r.name]:n[o]=r);return n}function p(t,e){return\"function\"==typeof t?t:function(n){return\"undefined\"!=typeof n[t]?n[t]:n[e]}}function l(t,e){return console.warn(\"Set margin with prefixes is deprecated use an object instead\"),t+=\"-\",(0,m[\"default\"])(e).reduce(function(n,r){return r.substr(0,t.length)===t&&(n[r.replace(t,\"\")]=e[r]),n},{})}function d(t){return t&&\"function\"==typeof t}Object.defineProperty(e,\"__esModule\",{value:!0}),e.includes=o,e.negate=i,e.filterObject=u,e.pick=c,e.without=s,e.isPlainObject=a,e.bindFunctions=f,e.getValueFunction=p,e.propsByPrefix=l,e.isCallable=d;var h=n(17),y=r(h),v=n(26),b=r(v),g=n(59),m=r(g)},function(t,e,n){t.exports={\"default\":n(60),__esModule:!0}},function(t,e,n){n(61),t.exports=n(7).Object.keys},function(t,e,n){var r=n(12);n(20)(\"keys\",function(t){return function(e){return t(r(e))}})}])});\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** 0.b5cba9f.chunk.js\n **/","!function() {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/d3/d3.js\n ** module id = 78\n ** module chunks = 0 1\n **/","import update from 'react-addons-update';\nimport getNiceDomain from '../../utils/dataFormats/getNiceDomain';\n\n/**\n * Need to setup yDomain for NVD3 chart that requires YAXis\n * @param object typeConfig Chart type config\n * @return bool\n */\nexport function shouldSetupYDomain(typeConfig) {\n  return 0 === typeConfig.dataFormat.indexOf('nvd3') &&\n    -1 !== typeConfig.modules.settings.indexOf('YAxis');\n}\n\n/**\n * add nicely rounded yDomain to chart options, if chart has a yAxis\n * @param obj chartOptions\n * @param obj typeConfig\n * @param array chartData\n * @return obj Cloned chart options object with new yDomain\n */\nexport default function applyYDomain(chartOptions, typeConfig, chartData) {\n  if (!shouldSetupYDomain(typeConfig)) {\n    return chartOptions;\n  }\n\n  /**\n   * @todo Recalculate yDomain when series visibility is toggled by clicking on dots in the legend\n   */\n  return update(chartOptions, { yDomain: {\n    $set: getNiceDomain(typeConfig.dataFormat, chartData),\n  } });\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./app/middleware/utils/applyYDomain.js\n **/","import { min, max, scale } from 'd3';\n\n/**\n * Get [min, max] array for data series in nvd3SingleSeries or nvd3MultiSeries format\n *\n * @param array series Data series\n * @param string format Data format\n * @return array Range of [min, max] for series\n */\nfunction _getSeriesDomain(series, format) {\n  const key = 'nvd3SingleSeries' === format ? 'value' : 'y';\n  const values = series.map((point) => point[key]);\n  return [min(values), max(values)];\n}\n\nfunction _getMultiSeriesDomain(series, format) {\n  const mins = [];\n  const maxs = [];\n  series.forEach((singleSeries) => {\n    const domain = _getSeriesDomain(singleSeries.values, format);\n    mins.push(domain[0]);\n    maxs.push(domain[1]);\n  });\n  return [min(mins), max(maxs)];\n}\n\nfunction _makeNice(range) {\n  return scale.linear().domain(range).nice().domain();\n}\n\n/**\n * Get \"nice\" rounded domain from dataset\n *\n * @param string format Data format from chart config object\n * @param array data Chart data transformed for data format\n * @return array Domain array of [min, max] values\n */\nexport default function getNiceDomain(format, data) {\n  const domain = 'nvd3SingleSeries' === format ?\n    _getSeriesDomain(data, format) : _getMultiSeriesDomain(data, format);\n  return _makeNice(domain);\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./app/utils/dataFormats/getNiceDomain.js\n **/","var map = {\n\t\"./NVD3Adapter/index\": 267\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 246;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./app/components/Chart/ChartTypes ^\\.\\/.*\\/index$\n ** module id = 246\n ** module chunks = 0\n **/","import React, { Component } from 'react';\nimport NVD3Chart from 'react-nvd3';\nimport update from 'react-addons-update';\nimport { connect } from 'react-redux';\nimport actionTrigger from '../../../../actions';\nimport { RECEIVE_ERROR } from '../../../../constants';\nimport { getChartTypeObject } from '../../../../utils/chartTypeUtils';\nimport { nvd3Defaults } from '../../../../constants/chartTypes';\nimport applyDataFormatters from '../../../../middleware/utils/applyDataFormatters';\nimport { shouldSetupYDomain } from '../../../../middleware/utils/applyYDomain';\nimport getNiceDomain from '../../../../utils/dataFormats/getNiceDomain';\n\nclass NVD3Adapter extends Component {\n\n  componentWillMount() {\n    this.setState(this._buildStateFromProps(this.props));\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState(this._buildStateFromProps(nextProps));\n\n    try {\n      // Force the react-nvd3 to re-render the chart, when new props are received\n      this.refs.chartNode.rendering = true;\n      const wrapEl = this.refs.chartNode.refs.root.querySelector('g.nv-wrap');\n      if (wrapEl) {\n        wrapEl.parentNode.removeChild(wrapEl);\n      }\n    } catch (err) {\n      this.props.dispatch(actionTrigger(RECEIVE_ERROR, 'e004'));\n      console.log(err.message); // eslint-disable-line no-console\n    }\n  }\n\n  /**\n   * In editor, merge data into options and add a ref\n   * In widget, also recreate funciton-based options that can't be sent as JSON\n   */\n  _buildStateFromProps(props) {\n    let nextState = update(props.options, {\n      datum: { $set: this._dataTransform(props.options.type, props.data) },\n      ref: { $set: 'chartNode' },\n    });\n\n    if (!this.props.widget) {\n      return nextState;\n    }\n\n    // Widgets need to recreate function-based options\n    const typeConfig = getChartTypeObject(props.options.type).config;\n\n    nextState = update(nextState, {\n      x: { $set: nvd3Defaults[typeConfig.dataFormat].x },\n      y: { $set: nvd3Defaults[typeConfig.dataFormat].y },\n      yDomain: { $apply: (oldYDomain) => { // eslint-disable-line arrow-body-style\n        return (shouldSetupYDomain(typeConfig) && undefined === oldYDomain) ?\n          getNiceDomain(typeConfig.dataFormat, props.data) : oldYDomain;\n      } },\n    });\n\n    // tickFormatSettings -> tick formatting functions\n    // applyDataFormatters() returns a cloned object\n    return applyDataFormatters(nextState, typeConfig);\n  }\n\n  /**\n   * Apply any special formatting specfic to a chart type\n   */\n  _dataTransform(chartType, data) {\n    switch (chartType) {\n      case 'discreteBarChart':\n        return [{\n          key: '',\n          values: data,\n        }];\n\n      default:\n        return data;\n    }\n  }\n\n  render() {\n    return React.createElement(NVD3Chart, this.state);\n  }\n}\n\nNVD3Adapter.propTypes = {\n  data: React.PropTypes.array,\n  options: React.PropTypes.object,\n  widget: React.PropTypes.oneOfType([\n    React.PropTypes.string,\n    React.PropTypes.bool,\n  ]),\n  dispatch: React.PropTypes.func,\n};\n\nexport default connect()(NVD3Adapter);\n\n\n\n/** WEBPACK FOOTER **\n ** ./app/components/Chart/ChartTypes/NVD3Adapter/index.js\n **/","/* nvd3 version 1.8.4 (https://github.com/novus/nvd3) 2016-07-03 */\n(function(){\n\n// set up main nv object\nvar nv = {};\n\n// the major global objects under the nv namespace\nnv.dev = false; //set false when in production\nnv.tooltip = nv.tooltip || {}; // For the tooltip system\nnv.utils = nv.utils || {}; // Utility subsystem\nnv.models = nv.models || {}; //stores all the possible models/components\nnv.charts = {}; //stores all the ready to use charts\nnv.logs = {}; //stores some statistics and potential error messages\nnv.dom = {}; //DOM manipulation functions\n\n// Node/CommonJS - require D3\nif (typeof(module) !== 'undefined' && typeof(exports) !== 'undefined' && typeof(d3) == 'undefined') {\n    d3 = require('d3');\n}\n\nnv.dispatch = d3.dispatch('render_start', 'render_end');\n\n// Function bind polyfill\n// Needed ONLY for phantomJS as it's missing until version 2.0 which is unreleased as of this comment\n// https://github.com/ariya/phantomjs/issues/10522\n// http://kangax.github.io/compat-table/es5/#Function.prototype.bind\n// phantomJS is used for running the test suite\nif (!Function.prototype.bind) {\n    Function.prototype.bind = function (oThis) {\n        if (typeof this !== \"function\") {\n            // closest thing possible to the ECMAScript 5 internal IsCallable function\n            throw new TypeError(\"Function.prototype.bind - what is trying to be bound is not callable\");\n        }\n\n        var aArgs = Array.prototype.slice.call(arguments, 1),\n            fToBind = this,\n            fNOP = function () {},\n            fBound = function () {\n                return fToBind.apply(this instanceof fNOP && oThis\n                        ? this\n                        : oThis,\n                    aArgs.concat(Array.prototype.slice.call(arguments)));\n            };\n\n        fNOP.prototype = this.prototype;\n        fBound.prototype = new fNOP();\n        return fBound;\n    };\n}\n\n//  Development render timers - disabled if dev = false\nif (nv.dev) {\n    nv.dispatch.on('render_start', function(e) {\n        nv.logs.startTime = +new Date();\n    });\n\n    nv.dispatch.on('render_end', function(e) {\n        nv.logs.endTime = +new Date();\n        nv.logs.totalTime = nv.logs.endTime - nv.logs.startTime;\n        nv.log('total', nv.logs.totalTime); // used for development, to keep track of graph generation times\n    });\n}\n\n// Logs all arguments, and returns the last so you can test things in place\n// Note: in IE8 console.log is an object not a function, and if modernizr is used\n// then calling Function.prototype.bind with with anything other than a function\n// causes a TypeError to be thrown.\nnv.log = function() {\n    if (nv.dev && window.console && console.log && console.log.apply)\n        console.log.apply(console, arguments);\n    else if (nv.dev && window.console && typeof console.log == \"function\" && Function.prototype.bind) {\n        var log = Function.prototype.bind.call(console.log, console);\n        log.apply(console, arguments);\n    }\n    return arguments[arguments.length - 1];\n};\n\n// print console warning, should be used by deprecated functions\nnv.deprecated = function(name, info) {\n    if (console && console.warn) {\n        console.warn('nvd3 warning: `' + name + '` has been deprecated. ', info || '');\n    }\n};\n\n// The nv.render function is used to queue up chart rendering\n// in non-blocking async functions.\n// When all queued charts are done rendering, nv.dispatch.render_end is invoked.\nnv.render = function render(step) {\n    // number of graphs to generate in each timeout loop\n    step = step || 1;\n\n    nv.render.active = true;\n    nv.dispatch.render_start();\n\n    var renderLoop = function() {\n        var chart, graph;\n\n        for (var i = 0; i < step && (graph = nv.render.queue[i]); i++) {\n            chart = graph.generate();\n            if (typeof graph.callback == typeof(Function)) graph.callback(chart);\n        }\n\n        nv.render.queue.splice(0, i);\n\n        if (nv.render.queue.length) {\n            setTimeout(renderLoop);\n        }\n        else {\n            nv.dispatch.render_end();\n            nv.render.active = false;\n        }\n    };\n\n    setTimeout(renderLoop);\n};\n\nnv.render.active = false;\nnv.render.queue = [];\n\n/*\nAdds a chart to the async rendering queue. This method can take arguments in two forms:\nnv.addGraph({\n    generate: <Function>\n    callback: <Function>\n})\n\nor\n\nnv.addGraph(<generate Function>, <callback Function>)\n\nThe generate function should contain code that creates the NVD3 model, sets options\non it, adds data to an SVG element, and invokes the chart model. The generate function\nshould return the chart model.  See examples/lineChart.html for a usage example.\n\nThe callback function is optional, and it is called when the generate function completes.\n*/\nnv.addGraph = function(obj) {\n    if (typeof arguments[0] === typeof(Function)) {\n        obj = {generate: arguments[0], callback: arguments[1]};\n    }\n\n    nv.render.queue.push(obj);\n\n    if (!nv.render.active) {\n        nv.render();\n    }\n};\n\n// Node/CommonJS exports\nif (typeof(module) !== 'undefined' && typeof(exports) !== 'undefined') {\n  module.exports = nv;\n}\n\nif (typeof(window) !== 'undefined') {\n  window.nv = nv;\n}\n/* Facade for queueing DOM write operations\r\n * with Fastdom (https://github.com/wilsonpage/fastdom)\r\n * if available.\r\n * This could easily be extended to support alternate\r\n * implementations in the future.\r\n */\r\nnv.dom.write = function(callback) {\r\n\tif (window.fastdom !== undefined) {\r\n\t\treturn fastdom.mutate(callback);\r\n\t}\r\n\treturn callback();\r\n};\r\n\r\n/* Facade for queueing DOM read operations\r\n * with Fastdom (https://github.com/wilsonpage/fastdom)\r\n * if available.\r\n * This could easily be extended to support alternate\r\n * implementations in the future.\r\n */\r\nnv.dom.read = function(callback) {\r\n\tif (window.fastdom !== undefined) {\r\n\t\treturn fastdom.measure(callback);\r\n\t}\r\n\treturn callback();\r\n};\r\n/* Utility class to handle creation of an interactive layer.\n This places a rectangle on top of the chart. When you mouse move over it, it sends a dispatch\n containing the X-coordinate. It can also render a vertical line where the mouse is located.\n\n dispatch.elementMousemove is the important event to latch onto.  It is fired whenever the mouse moves over\n the rectangle. The dispatch is given one object which contains the mouseX/Y location.\n It also has 'pointXValue', which is the conversion of mouseX to the x-axis scale.\n */\nnv.interactiveGuideline = function() {\n    \"use strict\";\n\n    var margin = { left: 0, top: 0 } //Pass the chart's top and left magins. Used to calculate the mouseX/Y.\n        ,   width = null\n        ,   height = null\n        ,   xScale = d3.scale.linear()\n        ,   dispatch = d3.dispatch('elementMousemove', 'elementMouseout', 'elementClick', 'elementDblclick', 'elementMouseDown', 'elementMouseUp')\n        ,   showGuideLine = true\n        ,   svgContainer = null // Must pass the chart's svg, we'll use its mousemove event.\n        ,   tooltip = nv.models.tooltip()\n        ,   isMSIE =  window.ActiveXObject// Checkt if IE by looking for activeX. (excludes IE11)\n    ;\n\n    tooltip\n        .duration(0)\n        .hideDelay(0)\n        .hidden(false);\n\n    function layer(selection) {\n        selection.each(function(data) {\n            var container = d3.select(this);\n            var availableWidth = (width || 960), availableHeight = (height || 400);\n            var wrap = container.selectAll(\"g.nv-wrap.nv-interactiveLineLayer\")\n                .data([data]);\n            var wrapEnter = wrap.enter()\n                .append(\"g\").attr(\"class\", \" nv-wrap nv-interactiveLineLayer\");\n            wrapEnter.append(\"g\").attr(\"class\",\"nv-interactiveGuideLine\");\n\n            if (!svgContainer) {\n                return;\n            }\n\n            function mouseHandler() {\n                var d3mouse = d3.mouse(this);\n                var mouseX = d3mouse[0];\n                var mouseY = d3mouse[1];\n                var subtractMargin = true;\n                var mouseOutAnyReason = false;\n                if (isMSIE) {\n                    /*\n                     D3.js (or maybe SVG.getScreenCTM) has a nasty bug in Internet Explorer 10.\n                     d3.mouse() returns incorrect X,Y mouse coordinates when mouse moving\n                     over a rect in IE 10.\n                     However, d3.event.offsetX/Y also returns the mouse coordinates\n                     relative to the triggering <rect>. So we use offsetX/Y on IE.\n                     */\n                    mouseX = d3.event.offsetX;\n                    mouseY = d3.event.offsetY;\n\n                    /*\n                     On IE, if you attach a mouse event listener to the <svg> container,\n                     it will actually trigger it for all the child elements (like <path>, <circle>, etc).\n                     When this happens on IE, the offsetX/Y is set to where ever the child element\n                     is located.\n                     As a result, we do NOT need to subtract margins to figure out the mouse X/Y\n                     position under this scenario. Removing the line below *will* cause\n                     the interactive layer to not work right on IE.\n                     */\n                    if(d3.event.target.tagName !== \"svg\") {\n                        subtractMargin = false;\n                    }\n\n                    if (d3.event.target.className.baseVal.match(\"nv-legend\")) {\n                        mouseOutAnyReason = true;\n                    }\n\n                }\n\n                if(subtractMargin) {\n                    mouseX -= margin.left;\n                    mouseY -= margin.top;\n                }\n\n                /* If mouseX/Y is outside of the chart's bounds,\n                 trigger a mouseOut event.\n                 */\n                if (d3.event.type === 'mouseout'\n                    || mouseX < 0 || mouseY < 0\n                    || mouseX > availableWidth || mouseY > availableHeight\n                    || (d3.event.relatedTarget && d3.event.relatedTarget.ownerSVGElement === undefined)\n                    || mouseOutAnyReason\n                    ) {\n\n                    if (isMSIE) {\n                        if (d3.event.relatedTarget\n                            && d3.event.relatedTarget.ownerSVGElement === undefined\n                            && (d3.event.relatedTarget.className === undefined\n                                || d3.event.relatedTarget.className.match(tooltip.nvPointerEventsClass))) {\n\n                            return;\n                        }\n                    }\n                    dispatch.elementMouseout({\n                        mouseX: mouseX,\n                        mouseY: mouseY\n                    });\n                    layer.renderGuideLine(null); //hide the guideline\n                    tooltip.hidden(true);\n                    return;\n                } else {\n                    tooltip.hidden(false);\n                }\n\n\n                var scaleIsOrdinal = typeof xScale.rangeBands === 'function';\n                var pointXValue = undefined;\n\n                // Ordinal scale has no invert method\n                if (scaleIsOrdinal) {\n                    var elementIndex = d3.bisect(xScale.range(), mouseX) - 1;\n                    // Check if mouseX is in the range band\n                    if (xScale.range()[elementIndex] + xScale.rangeBand() >= mouseX) {\n                        pointXValue = xScale.domain()[d3.bisect(xScale.range(), mouseX) - 1];\n                    }\n                    else {\n                        dispatch.elementMouseout({\n                            mouseX: mouseX,\n                            mouseY: mouseY\n                        });\n                        layer.renderGuideLine(null); //hide the guideline\n                        tooltip.hidden(true);\n                        return;\n                    }\n                }\n                else {\n                    pointXValue = xScale.invert(mouseX);\n                }\n\n                dispatch.elementMousemove({\n                    mouseX: mouseX,\n                    mouseY: mouseY,\n                    pointXValue: pointXValue\n                });\n\n                //If user double clicks the layer, fire a elementDblclick\n                if (d3.event.type === \"dblclick\") {\n                    dispatch.elementDblclick({\n                        mouseX: mouseX,\n                        mouseY: mouseY,\n                        pointXValue: pointXValue\n                    });\n                }\n\n                // if user single clicks the layer, fire elementClick\n                if (d3.event.type === 'click') {\n                    dispatch.elementClick({\n                        mouseX: mouseX,\n                        mouseY: mouseY,\n                        pointXValue: pointXValue\n                    });\n                }\n\n                // if user presses mouse down the layer, fire elementMouseDown\n                if (d3.event.type === 'mousedown') {\n                \tdispatch.elementMouseDown({\n                \t\tmouseX: mouseX,\n                \t\tmouseY: mouseY,\n                \t\tpointXValue: pointXValue\n                \t});\n                }\n\n                // if user presses mouse down the layer, fire elementMouseUp\n                if (d3.event.type === 'mouseup') {\n                \tdispatch.elementMouseUp({\n                \t\tmouseX: mouseX,\n                \t\tmouseY: mouseY,\n                \t\tpointXValue: pointXValue\n                \t});\n                }\n            }\n\n            svgContainer\n                .on(\"touchmove\",mouseHandler)\n                .on(\"mousemove\",mouseHandler, true)\n                .on(\"mouseout\" ,mouseHandler,true)\n                .on(\"mousedown\" ,mouseHandler,true)\n                .on(\"mouseup\" ,mouseHandler,true)\n                .on(\"dblclick\" ,mouseHandler)\n                .on(\"click\", mouseHandler)\n            ;\n\n            layer.guideLine = null;\n            //Draws a vertical guideline at the given X postion.\n            layer.renderGuideLine = function(x) {\n                if (!showGuideLine) return;\n                if (layer.guideLine && layer.guideLine.attr(\"x1\") === x) return;\n                nv.dom.write(function() {\n                    var line = wrap.select(\".nv-interactiveGuideLine\")\n                        .selectAll(\"line\")\n                        .data((x != null) ? [nv.utils.NaNtoZero(x)] : [], String);\n                    line.enter()\n                        .append(\"line\")\n                        .attr(\"class\", \"nv-guideline\")\n                        .attr(\"x1\", function(d) { return d;})\n                        .attr(\"x2\", function(d) { return d;})\n                        .attr(\"y1\", availableHeight)\n                        .attr(\"y2\",0);\n                    line.exit().remove();\n                });\n            }\n        });\n    }\n\n    layer.dispatch = dispatch;\n    layer.tooltip = tooltip;\n\n    layer.margin = function(_) {\n        if (!arguments.length) return margin;\n        margin.top    = typeof _.top    != 'undefined' ? _.top    : margin.top;\n        margin.left   = typeof _.left   != 'undefined' ? _.left   : margin.left;\n        return layer;\n    };\n\n    layer.width = function(_) {\n        if (!arguments.length) return width;\n        width = _;\n        return layer;\n    };\n\n    layer.height = function(_) {\n        if (!arguments.length) return height;\n        height = _;\n        return layer;\n    };\n\n    layer.xScale = function(_) {\n        if (!arguments.length) return xScale;\n        xScale = _;\n        return layer;\n    };\n\n    layer.showGuideLine = function(_) {\n        if (!arguments.length) return showGuideLine;\n        showGuideLine = _;\n        return layer;\n    };\n\n    layer.svgContainer = function(_) {\n        if (!arguments.length) return svgContainer;\n        svgContainer = _;\n        return layer;\n    };\n\n    return layer;\n};\n\n/* Utility class that uses d3.bisect to find the index in a given array, where a search value can be inserted.\n This is different from normal bisectLeft; this function finds the nearest index to insert the search value.\n\n For instance, lets say your array is [1,2,3,5,10,30], and you search for 28.\n Normal d3.bisectLeft will return 4, because 28 is inserted after the number 10.  But interactiveBisect will return 5\n because 28 is closer to 30 than 10.\n\n Unit tests can be found in: interactiveBisectTest.html\n\n Has the following known issues:\n * Will not work if the data points move backwards (ie, 10,9,8,7, etc) or if the data points are in random order.\n * Won't work if there are duplicate x coordinate values.\n */\nnv.interactiveBisect = function (values, searchVal, xAccessor) {\n    \"use strict\";\n    if (! (values instanceof Array)) {\n        return null;\n    }\n    var _xAccessor;\n    if (typeof xAccessor !== 'function') {\n        _xAccessor = function(d) {\n            return d.x;\n        }\n    } else {\n        _xAccessor = xAccessor;\n    }\n    var _cmp = function(d, v) {\n        // Accessors are no longer passed the index of the element along with\n        // the element itself when invoked by d3.bisector.\n        //\n        // Starting at D3 v3.4.4, d3.bisector() started inspecting the\n        // function passed to determine if it should consider it an accessor\n        // or a comparator. This meant that accessors that take two arguments\n        // (expecting an index as the second parameter) are treated as\n        // comparators where the second argument is the search value against\n        // which the first argument is compared.\n        return _xAccessor(d) - v;\n    };\n\n    var bisect = d3.bisector(_cmp).left;\n    var index = d3.max([0, bisect(values,searchVal) - 1]);\n    var currentValue = _xAccessor(values[index]);\n\n    if (typeof currentValue === 'undefined') {\n        currentValue = index;\n    }\n\n    if (currentValue === searchVal) {\n        return index; //found exact match\n    }\n\n    var nextIndex = d3.min([index+1, values.length - 1]);\n    var nextValue = _xAccessor(values[nextIndex]);\n\n    if (typeof nextValue === 'undefined') {\n        nextValue = nextIndex;\n    }\n\n    if (Math.abs(nextValue - searchVal) >= Math.abs(currentValue - searchVal)) {\n        return index;\n    } else {\n        return nextIndex\n    }\n};\n\n/*\n Returns the index in the array \"values\" that is closest to searchVal.\n Only returns an index if searchVal is within some \"threshold\".\n Otherwise, returns null.\n */\nnv.nearestValueIndex = function (values, searchVal, threshold) {\n    \"use strict\";\n    var yDistMax = Infinity, indexToHighlight = null;\n    values.forEach(function(d,i) {\n        var delta = Math.abs(searchVal - d);\n        if ( d != null && delta <= yDistMax && delta < threshold) {\n            yDistMax = delta;\n            indexToHighlight = i;\n        }\n    });\n    return indexToHighlight;\n};\n\n/* Model which can be instantiated to handle tooltip rendering.\n Example usage:\n var tip = nv.models.tooltip().gravity('w').distance(23)\n .data(myDataObject);\n\n tip();    //just invoke the returned function to render tooltip.\n */\nnv.models.tooltip = function() {\n    \"use strict\";\n\n    /*\n    Tooltip data. If data is given in the proper format, a consistent tooltip is generated.\n    Example Format of data:\n    {\n        key: \"Date\",\n        value: \"August 2009\",\n        series: [\n            {key: \"Series 1\", value: \"Value 1\", color: \"#000\"},\n            {key: \"Series 2\", value: \"Value 2\", color: \"#00f\"}\n        ]\n    }\n    */\n    var id = \"nvtooltip-\" + Math.floor(Math.random() * 100000) // Generates a unique id when you create a new tooltip() object.\n        ,   data = null\n        ,   gravity = 'w'   // Can be 'n','s','e','w'. Determines how tooltip is positioned.\n        ,   distance = 25 // Distance to offset tooltip from the mouse location.\n        ,   snapDistance = 0   // Tolerance allowed before tooltip is moved from its current position (creates 'snapping' effect)\n        ,   classes = null  // Attaches additional CSS classes to the tooltip DIV that is created.\n        ,   hidden = true  // Start off hidden, toggle with hide/show functions below.\n        ,   hideDelay = 200  // Delay (in ms) before the tooltip hides after calling hide().\n        ,   tooltip = null // d3 select of the tooltip div.\n        ,   lastPosition = { left: null, top: null } // Last position the tooltip was in.\n        ,   enabled = true  // True -> tooltips are rendered. False -> don't render tooltips.\n        ,   duration = 100 // Tooltip movement duration, in ms.\n        ,   headerEnabled = true // If is to show the tooltip header.\n        ,   nvPointerEventsClass = \"nv-pointer-events-none\" // CSS class to specify whether element should not have mouse events.\n    ;\n\n    // Format function for the tooltip values column.\n    var valueFormatter = function(d, i) {\n        return d;\n    };\n\n    // Format function for the tooltip header value.\n    var headerFormatter = function(d) {\n        return d;\n    };\n\n    var keyFormatter = function(d, i) {\n        return d;\n    };\n\n    // By default, the tooltip model renders a beautiful table inside a DIV.\n    // You can override this function if a custom tooltip is desired.\n    var contentGenerator = function(d) {\n        if (d === null) {\n            return '';\n        }\n\n        var table = d3.select(document.createElement(\"table\"));\n        if (headerEnabled) {\n            var theadEnter = table.selectAll(\"thead\")\n                .data([d])\n                .enter().append(\"thead\");\n\n            theadEnter.append(\"tr\")\n                .append(\"td\")\n                .attr(\"colspan\", 3)\n                .append(\"strong\")\n                .classed(\"x-value\", true)\n                .html(headerFormatter(d.value));\n        }\n\n        var tbodyEnter = table.selectAll(\"tbody\")\n            .data([d])\n            .enter().append(\"tbody\");\n\n        var trowEnter = tbodyEnter.selectAll(\"tr\")\n                .data(function(p) { return p.series})\n                .enter()\n                .append(\"tr\")\n                .classed(\"highlight\", function(p) { return p.highlight});\n\n        trowEnter.append(\"td\")\n            .classed(\"legend-color-guide\",true)\n            .append(\"div\")\n            .style(\"background-color\", function(p) { return p.color});\n\n        trowEnter.append(\"td\")\n            .classed(\"key\",true)\n            .classed(\"total\",function(p) { return !!p.total})\n            .html(function(p, i) { return keyFormatter(p.key, i)});\n\n        trowEnter.append(\"td\")\n            .classed(\"value\",true)\n            .html(function(p, i) { return valueFormatter(p.value, i) });\n\n        trowEnter.filter(function (p,i) { return p.percent !== undefined }).append(\"td\")\n            .classed(\"percent\", true)\n            .html(function(p, i) { return \"(\" + d3.format('%')(p.percent) + \")\" });\n\n        trowEnter.selectAll(\"td\").each(function(p) {\n            if (p.highlight) {\n                var opacityScale = d3.scale.linear().domain([0,1]).range([\"#fff\",p.color]);\n                var opacity = 0.6;\n                d3.select(this)\n                    .style(\"border-bottom-color\", opacityScale(opacity))\n                    .style(\"border-top-color\", opacityScale(opacity))\n                ;\n            }\n        });\n\n        var html = table.node().outerHTML;\n        if (d.footer !== undefined)\n            html += \"<div class='footer'>\" + d.footer + \"</div>\";\n        return html;\n\n    };\n\n    /*\n     Function that returns the position (relative to the viewport/document.body)\n     the tooltip should be placed in.\n     Should return: {\n        left: <leftPos>,\n        top: <topPos>\n     }\n     */\n    var position = function() {\n        var pos = {\n            left: d3.event !== null ? d3.event.clientX : 0,\n            top: d3.event !== null ? d3.event.clientY : 0\n        };\n\n        if(getComputedStyle(document.body).transform != 'none') {\n            // Take the offset into account, as now the tooltip is relative\n            // to document.body.\n            var client = document.body.getBoundingClientRect();\n            pos.left -= client.left;\n            pos.top -= client.top;\n        }\n\n        return pos;\n    };\n\n    var dataSeriesExists = function(d) {\n        if (d && d.series) {\n            if (nv.utils.isArray(d.series)) {\n                return true;\n            }\n            // if object, it's okay just convert to array of the object\n            if (nv.utils.isObject(d.series)) {\n                d.series = [d.series];\n                return true;\n            }\n        }\n        return false;\n    };\n\n    // Calculates the gravity offset of the tooltip. Parameter is position of tooltip\n    // relative to the viewport.\n    var calcGravityOffset = function(pos) {\n        var height = tooltip.node().offsetHeight,\n            width = tooltip.node().offsetWidth,\n            clientWidth = document.documentElement.clientWidth, // Don't want scrollbars.\n            clientHeight = document.documentElement.clientHeight, // Don't want scrollbars.\n            left, top, tmp;\n\n        // calculate position based on gravity\n        switch (gravity) {\n            case 'e':\n                left = - width - distance;\n                top = - (height / 2);\n                if(pos.left + left < 0) left = distance;\n                if((tmp = pos.top + top) < 0) top -= tmp;\n                if((tmp = pos.top + top + height) > clientHeight) top -= tmp - clientHeight;\n                break;\n            case 'w':\n                left = distance;\n                top = - (height / 2);\n                if (pos.left + left + width > clientWidth) left = - width - distance;\n                if ((tmp = pos.top + top) < 0) top -= tmp;\n                if ((tmp = pos.top + top + height) > clientHeight) top -= tmp - clientHeight;\n                break;\n            case 'n':\n                left = - (width / 2) - 5; // - 5 is an approximation of the mouse's height.\n                top = distance;\n                if (pos.top + top + height > clientHeight) top = - height - distance;\n                if ((tmp = pos.left + left) < 0) left -= tmp;\n                if ((tmp = pos.left + left + width) > clientWidth) left -= tmp - clientWidth;\n                break;\n            case 's':\n                left = - (width / 2);\n                top = - height - distance;\n                if (pos.top + top < 0) top = distance;\n                if ((tmp = pos.left + left) < 0) left -= tmp;\n                if ((tmp = pos.left + left + width) > clientWidth) left -= tmp - clientWidth;\n                break;\n            case 'center':\n                left = - (width / 2);\n                top = - (height / 2);\n                break;\n            default:\n                left = 0;\n                top = 0;\n                break;\n        }\n\n        return { 'left': left, 'top': top };\n    };\n\n    /*\n     Positions the tooltip in the correct place, as given by the position() function.\n     */\n    var positionTooltip = function() {\n        nv.dom.read(function() {\n            var pos = position(),\n                gravityOffset = calcGravityOffset(pos),\n                left = pos.left + gravityOffset.left,\n                top = pos.top + gravityOffset.top;\n\n            // delay hiding a bit to avoid flickering\n            if (hidden) {\n                tooltip\n                    .interrupt()\n                    .transition()\n                    .delay(hideDelay)\n                    .duration(0)\n                    .style('opacity', 0);\n            } else {\n                // using tooltip.style('transform') returns values un-usable for tween\n                var old_translate = 'translate(' + lastPosition.left + 'px, ' + lastPosition.top + 'px)';\n                var new_translate = 'translate(' + Math.round(left) + 'px, ' + Math.round(top) + 'px)';\n                var translateInterpolator = d3.interpolateString(old_translate, new_translate);\n                var is_hidden = tooltip.style('opacity') < 0.1;\n\n                tooltip\n                    .interrupt() // cancel running transitions\n                    .transition()\n                    .duration(is_hidden ? 0 : duration)\n                    // using tween since some versions of d3 can't auto-tween a translate on a div\n                    .styleTween('transform', function (d) {\n                        return translateInterpolator;\n                    }, 'important')\n                    // Safari has its own `-webkit-transform` and does not support `transform`\n                    .styleTween('-webkit-transform', function (d) {\n                        return translateInterpolator;\n                    })\n                    .style('-ms-transform', new_translate)\n                    .style('opacity', 1);\n            }\n\n            lastPosition.left = left;\n            lastPosition.top = top;\n        });\n    };\n\n    // Creates new tooltip container, or uses existing one on DOM.\n    function initTooltip() {\n        if (!tooltip || !tooltip.node()) {\n            // Create new tooltip div if it doesn't exist on DOM.\n\n            var data = [1];\n            tooltip = d3.select(document.body).selectAll('.nvtooltip').data(data);\n\n            tooltip.enter().append('div')\n                   .attr(\"class\", \"nvtooltip \" + (classes ? classes : \"xy-tooltip\"))\n                   .attr(\"id\", id)\n                   .style(\"top\", 0).style(\"left\", 0)\n                   .style('opacity', 0)\n                   .style('position', 'fixed')\n                   .selectAll(\"div, table, td, tr\").classed(nvPointerEventsClass, true)\n                   .classed(nvPointerEventsClass, true);\n\n            tooltip.exit().remove()\n        }\n    }\n\n    // Draw the tooltip onto the DOM.\n    function nvtooltip() {\n        if (!enabled) return;\n        if (!dataSeriesExists(data)) return;\n\n        nv.dom.write(function () {\n            initTooltip();\n            // Generate data and set it into tooltip.\n            // Bonus - If you override contentGenerator and return falsey you can use something like\n            //         React or Knockout to bind the data for your tooltip.\n            var newContent = contentGenerator(data);\n            if (newContent) {\n                tooltip.node().innerHTML = newContent;\n            }\n\n            positionTooltip();\n        });\n\n        return nvtooltip;\n    }\n\n    nvtooltip.nvPointerEventsClass = nvPointerEventsClass;\n    nvtooltip.options = nv.utils.optionsFunc.bind(nvtooltip);\n\n    nvtooltip._options = Object.create({}, {\n        // simple read/write options\n        duration: {get: function(){return duration;}, set: function(_){duration=_;}},\n        gravity: {get: function(){return gravity;}, set: function(_){gravity=_;}},\n        distance: {get: function(){return distance;}, set: function(_){distance=_;}},\n        snapDistance: {get: function(){return snapDistance;}, set: function(_){snapDistance=_;}},\n        classes: {get: function(){return classes;}, set: function(_){classes=_;}},\n        enabled: {get: function(){return enabled;}, set: function(_){enabled=_;}},\n        hideDelay: {get: function(){return hideDelay;}, set: function(_){hideDelay=_;}},\n        contentGenerator: {get: function(){return contentGenerator;}, set: function(_){contentGenerator=_;}},\n        valueFormatter: {get: function(){return valueFormatter;}, set: function(_){valueFormatter=_;}},\n        headerFormatter: {get: function(){return headerFormatter;}, set: function(_){headerFormatter=_;}},\n        keyFormatter: {get: function(){return keyFormatter;}, set: function(_){keyFormatter=_;}},\n        headerEnabled: {get: function(){return headerEnabled;}, set: function(_){headerEnabled=_;}},\n        position: {get: function(){return position;}, set: function(_){position=_;}},\n\n        // Deprecated options\n        chartContainer: {get: function(){return document.body;}, set: function(_){\n            // deprecated after 1.8.3\n            nv.deprecated('chartContainer', 'feature removed after 1.8.3');\n        }},\n        fixedTop: {get: function(){return null;}, set: function(_){\n            // deprecated after 1.8.1\n            nv.deprecated('fixedTop', 'feature removed after 1.8.1');\n        }},\n        offset: {get: function(){return {left: 0, top: 0};}, set: function(_){\n            // deprecated after 1.8.1\n            nv.deprecated('offset', 'use chart.tooltip.distance() instead');\n        }},\n\n        // options with extra logic\n        hidden: {get: function(){return hidden;}, set: function(_){\n            if (hidden != _) {\n                hidden = !!_;\n                nvtooltip();\n            }\n        }},\n        data: {get: function(){return data;}, set: function(_){\n            // if showing a single data point, adjust data format with that\n            if (_.point) {\n                _.value = _.point.x;\n                _.series = _.series || {};\n                _.series.value = _.point.y;\n                _.series.color = _.point.color || _.series.color;\n            }\n            data = _;\n        }},\n\n        // read only properties\n        node: {get: function(){return tooltip.node();}, set: function(_){}},\n        id: {get: function(){return id;}, set: function(_){}}\n    });\n\n    nv.utils.initOptions(nvtooltip);\n    return nvtooltip;\n};\n\n\n/*\nGets the browser window size\n\nReturns object with height and width properties\n */\nnv.utils.windowSize = function() {\n    // Sane defaults\n    var size = {width: 640, height: 480};\n\n    // Most recent browsers use\n    if (window.innerWidth && window.innerHeight) {\n        size.width = window.innerWidth;\n        size.height = window.innerHeight;\n        return (size);\n    }\n\n    // IE can use depending on mode it is in\n    if (document.compatMode=='CSS1Compat' &&\n        document.documentElement &&\n        document.documentElement.offsetWidth ) {\n\n        size.width = document.documentElement.offsetWidth;\n        size.height = document.documentElement.offsetHeight;\n        return (size);\n    }\n\n    // Earlier IE uses Doc.body\n    if (document.body && document.body.offsetWidth) {\n        size.width = document.body.offsetWidth;\n        size.height = document.body.offsetHeight;\n        return (size);\n    }\n\n    return (size);\n};\n\n\n/* handle dumb browser quirks...  isinstance breaks if you use frames\ntypeof returns 'object' for null, NaN is a number, etc.\n */\nnv.utils.isArray = Array.isArray;\nnv.utils.isObject = function(a) {\n    return a !== null && typeof a === 'object';\n};\nnv.utils.isFunction = function(a) {\n    return typeof a === 'function';\n};\nnv.utils.isDate = function(a) {\n    return toString.call(a) === '[object Date]';\n};\nnv.utils.isNumber = function(a) {\n    return !isNaN(a) && typeof a === 'number';\n};\n\n\n/*\nBinds callback function to run when window is resized\n */\nnv.utils.windowResize = function(handler) {\n    if (window.addEventListener) {\n        window.addEventListener('resize', handler);\n    } else {\n        nv.log(\"ERROR: Failed to bind to window.resize with: \", handler);\n    }\n    // return object with clear function to remove the single added callback.\n    return {\n        callback: handler,\n        clear: function() {\n            window.removeEventListener('resize', handler);\n        }\n    }\n};\n\n\n/*\nBackwards compatible way to implement more d3-like coloring of graphs.\nCan take in nothing, an array, or a function/scale\nTo use a normal scale, get the range and pass that because we must be able\nto take two arguments and use the index to keep backward compatibility\n*/\nnv.utils.getColor = function(color) {\n    //if you pass in nothing, get default colors back\n    if (color === undefined) {\n        return nv.utils.defaultColor();\n\n    //if passed an array, turn it into a color scale\n    } else if(nv.utils.isArray(color)) {\n        var color_scale = d3.scale.ordinal().range(color);\n        return function(d, i) {\n            var key = i === undefined ? d : i;\n            return d.color || color_scale(key);\n        };\n\n    //if passed a function or scale, return it, or whatever it may be\n    //external libs, such as angularjs-nvd3-directives use this\n    } else {\n        //can't really help it if someone passes rubbish as color\n        return color;\n    }\n};\n\n\n/*\nDefault color chooser uses a color scale of 20 colors from D3\n https://github.com/mbostock/d3/wiki/Ordinal-Scales#categorical-colors\n */\nnv.utils.defaultColor = function() {\n    // get range of the scale so we'll turn it into our own function.\n    return nv.utils.getColor(d3.scale.category20().range());\n};\n\n\n/*\nReturns a color function that takes the result of 'getKey' for each series and\nlooks for a corresponding color from the dictionary\n*/\nnv.utils.customTheme = function(dictionary, getKey, defaultColors) {\n    // use default series.key if getKey is undefined\n    getKey = getKey || function(series) { return series.key };\n    defaultColors = defaultColors || d3.scale.category20().range();\n\n    // start at end of default color list and walk back to index 0\n    var defIndex = defaultColors.length;\n\n    return function(series, index) {\n        var key = getKey(series);\n        if (nv.utils.isFunction(dictionary[key])) {\n            return dictionary[key]();\n        } else if (dictionary[key] !== undefined) {\n            return dictionary[key];\n        } else {\n            // no match in dictionary, use a default color\n            if (!defIndex) {\n                // used all the default colors, start over\n                defIndex = defaultColors.length;\n            }\n            defIndex = defIndex - 1;\n            return defaultColors[defIndex];\n        }\n    };\n};\n\n\n/*\nFrom the PJAX example on d3js.org, while this is not really directly needed\nit's a very cool method for doing pjax, I may expand upon it a little bit,\nopen to suggestions on anything that may be useful\n*/\nnv.utils.pjax = function(links, content) {\n\n    var load = function(href) {\n        d3.html(href, function(fragment) {\n            var target = d3.select(content).node();\n            target.parentNode.replaceChild(\n                d3.select(fragment).select(content).node(),\n                target);\n            nv.utils.pjax(links, content);\n        });\n    };\n\n    d3.selectAll(links).on(\"click\", function() {\n        history.pushState(this.href, this.textContent, this.href);\n        load(this.href);\n        d3.event.preventDefault();\n    });\n\n    d3.select(window).on(\"popstate\", function() {\n        if (d3.event.state) {\n            load(d3.event.state);\n        }\n    });\n};\n\n\n/*\nFor when we want to approximate the width in pixels for an SVG:text element.\nMost common instance is when the element is in a display:none; container.\nForumla is : text.length * font-size * constant_factor\n*/\nnv.utils.calcApproxTextWidth = function (svgTextElem) {\n    if (nv.utils.isFunction(svgTextElem.style) && nv.utils.isFunction(svgTextElem.text)) {\n        var fontSize = parseInt(svgTextElem.style(\"font-size\").replace(\"px\",\"\"), 10);\n        var textLength = svgTextElem.text().length;\n        return nv.utils.NaNtoZero(textLength * fontSize * 0.5);\n    }\n    return 0;\n};\n\n\n/*\nNumbers that are undefined, null or NaN, convert them to zeros.\n*/\nnv.utils.NaNtoZero = function(n) {\n    if (!nv.utils.isNumber(n)\n        || isNaN(n)\n        || n === null\n        || n === Infinity\n        || n === -Infinity) {\n\n        return 0;\n    }\n    return n;\n};\n\n/*\nAdd a way to watch for d3 transition ends to d3\n*/\nd3.selection.prototype.watchTransition = function(renderWatch){\n    var args = [this].concat([].slice.call(arguments, 1));\n    return renderWatch.transition.apply(renderWatch, args);\n};\n\n\n/*\nHelper object to watch when d3 has rendered something\n*/\nnv.utils.renderWatch = function(dispatch, duration) {\n    if (!(this instanceof nv.utils.renderWatch)) {\n        return new nv.utils.renderWatch(dispatch, duration);\n    }\n\n    var _duration = duration !== undefined ? duration : 250;\n    var renderStack = [];\n    var self = this;\n\n    this.models = function(models) {\n        models = [].slice.call(arguments, 0);\n        models.forEach(function(model){\n            model.__rendered = false;\n            (function(m){\n                m.dispatch.on('renderEnd', function(arg){\n                    m.__rendered = true;\n                    self.renderEnd('model');\n                });\n            })(model);\n\n            if (renderStack.indexOf(model) < 0) {\n                renderStack.push(model);\n            }\n        });\n    return this;\n    };\n\n    this.reset = function(duration) {\n        if (duration !== undefined) {\n            _duration = duration;\n        }\n        renderStack = [];\n    };\n\n    this.transition = function(selection, args, duration) {\n        args = arguments.length > 1 ? [].slice.call(arguments, 1) : [];\n\n        if (args.length > 1) {\n            duration = args.pop();\n        } else {\n            duration = _duration !== undefined ? _duration : 250;\n        }\n        selection.__rendered = false;\n\n        if (renderStack.indexOf(selection) < 0) {\n            renderStack.push(selection);\n        }\n\n        if (duration === 0) {\n            selection.__rendered = true;\n            selection.delay = function() { return this; };\n            selection.duration = function() { return this; };\n            return selection;\n        } else {\n            if (selection.length === 0) {\n                selection.__rendered = true;\n            } else if (selection.every( function(d){ return !d.length; } )) {\n                selection.__rendered = true;\n            } else {\n                selection.__rendered = false;\n            }\n\n            var n = 0;\n            return selection\n                .transition()\n                .duration(duration)\n                .each(function(){ ++n; })\n                .each('end', function(d, i) {\n                    if (--n === 0) {\n                        selection.__rendered = true;\n                        self.renderEnd.apply(this, args);\n                    }\n                });\n        }\n    };\n\n    this.renderEnd = function() {\n        if (renderStack.every( function(d){ return d.__rendered; } )) {\n            renderStack.forEach( function(d){ d.__rendered = false; });\n            dispatch.renderEnd.apply(this, arguments);\n        }\n    }\n\n};\n\n\n/*\nTakes multiple objects and combines them into the first one (dst)\nexample:  nv.utils.deepExtend({a: 1}, {a: 2, b: 3}, {c: 4});\ngives:  {a: 2, b: 3, c: 4}\n*/\nnv.utils.deepExtend = function(dst){\n    var sources = arguments.length > 1 ? [].slice.call(arguments, 1) : [];\n    sources.forEach(function(source) {\n        for (var key in source) {\n            var isArray = nv.utils.isArray(dst[key]);\n            var isObject = nv.utils.isObject(dst[key]);\n            var srcObj = nv.utils.isObject(source[key]);\n\n            if (isObject && !isArray && srcObj) {\n                nv.utils.deepExtend(dst[key], source[key]);\n            } else {\n                dst[key] = source[key];\n            }\n        }\n    });\n};\n\n\n/*\nstate utility object, used to track d3 states in the models\n*/\nnv.utils.state = function(){\n    if (!(this instanceof nv.utils.state)) {\n        return new nv.utils.state();\n    }\n    var state = {};\n    var _self = this;\n    var _setState = function(){};\n    var _getState = function(){ return {}; };\n    var init = null;\n    var changed = null;\n\n    this.dispatch = d3.dispatch('change', 'set');\n\n    this.dispatch.on('set', function(state){\n        _setState(state, true);\n    });\n\n    this.getter = function(fn){\n        _getState = fn;\n        return this;\n    };\n\n    this.setter = function(fn, callback) {\n        if (!callback) {\n            callback = function(){};\n        }\n        _setState = function(state, update){\n            fn(state);\n            if (update) {\n                callback();\n            }\n        };\n        return this;\n    };\n\n    this.init = function(state){\n        init = init || {};\n        nv.utils.deepExtend(init, state);\n    };\n\n    var _set = function(){\n        var settings = _getState();\n\n        if (JSON.stringify(settings) === JSON.stringify(state)) {\n            return false;\n        }\n\n        for (var key in settings) {\n            if (state[key] === undefined) {\n                state[key] = {};\n            }\n            state[key] = settings[key];\n            changed = true;\n        }\n        return true;\n    };\n\n    this.update = function(){\n        if (init) {\n            _setState(init, false);\n            init = null;\n        }\n        if (_set.call(this)) {\n            this.dispatch.change(state);\n        }\n    };\n\n};\n\n\n/*\nSnippet of code you can insert into each nv.models.* to give you the ability to\ndo things like:\nchart.options({\n  showXAxis: true,\n  tooltips: true\n});\n\nTo enable in the chart:\nchart.options = nv.utils.optionsFunc.bind(chart);\n*/\nnv.utils.optionsFunc = function(args) {\n    if (args) {\n        d3.map(args).forEach((function(key,value) {\n            if (nv.utils.isFunction(this[key])) {\n                this[key](value);\n            }\n        }).bind(this));\n    }\n    return this;\n};\n\n\n/*\nnumTicks:  requested number of ticks\ndata:  the chart data\n\nreturns the number of ticks to actually use on X axis, based on chart data\nto avoid duplicate ticks with the same value\n*/\nnv.utils.calcTicksX = function(numTicks, data) {\n    // find max number of values from all data streams\n    var numValues = 1;\n    var i = 0;\n    for (i; i < data.length; i += 1) {\n        var stream_len = data[i] && data[i].values ? data[i].values.length : 0;\n        numValues = stream_len > numValues ? stream_len : numValues;\n    }\n    nv.log(\"Requested number of ticks: \", numTicks);\n    nv.log(\"Calculated max values to be: \", numValues);\n    // make sure we don't have more ticks than values to avoid duplicates\n    numTicks = numTicks > numValues ? numTicks = numValues - 1 : numTicks;\n    // make sure we have at least one tick\n    numTicks = numTicks < 1 ? 1 : numTicks;\n    // make sure it's an integer\n    numTicks = Math.floor(numTicks);\n    nv.log(\"Calculating tick count as: \", numTicks);\n    return numTicks;\n};\n\n\n/*\nreturns number of ticks to actually use on Y axis, based on chart data\n*/\nnv.utils.calcTicksY = function(numTicks, data) {\n    // currently uses the same logic but we can adjust here if needed later\n    return nv.utils.calcTicksX(numTicks, data);\n};\n\n\n/*\nAdd a particular option from an options object onto chart\nOptions exposed on a chart are a getter/setter function that returns chart\non set to mimic typical d3 option chaining, e.g. svg.option1('a').option2('b');\n\noption objects should be generated via Object.create() to provide\nthe option of manipulating data via get/set functions.\n*/\nnv.utils.initOption = function(chart, name) {\n    // if it's a call option, just call it directly, otherwise do get/set\n    if (chart._calls && chart._calls[name]) {\n        chart[name] = chart._calls[name];\n    } else {\n        chart[name] = function (_) {\n            if (!arguments.length) return chart._options[name];\n            chart._overrides[name] = true;\n            chart._options[name] = _;\n            return chart;\n        };\n        // calling the option as _option will ignore if set by option already\n        // so nvd3 can set options internally but the stop if set manually\n        chart['_' + name] = function(_) {\n            if (!arguments.length) return chart._options[name];\n            if (!chart._overrides[name]) {\n                chart._options[name] = _;\n            }\n            return chart;\n        }\n    }\n};\n\n\n/*\nAdd all options in an options object to the chart\n*/\nnv.utils.initOptions = function(chart) {\n    chart._overrides = chart._overrides || {};\n    var ops = Object.getOwnPropertyNames(chart._options || {});\n    var calls = Object.getOwnPropertyNames(chart._calls || {});\n    ops = ops.concat(calls);\n    for (var i in ops) {\n        nv.utils.initOption(chart, ops[i]);\n    }\n};\n\n\n/*\nInherit options from a D3 object\nd3.rebind makes calling the function on target actually call it on source\nAlso use _d3options so we can track what we inherit for documentation and chained inheritance\n*/\nnv.utils.inheritOptionsD3 = function(target, d3_source, oplist) {\n    target._d3options = oplist.concat(target._d3options || []);\n    oplist.unshift(d3_source);\n    oplist.unshift(target);\n    d3.rebind.apply(this, oplist);\n};\n\n\n/*\nRemove duplicates from an array\n*/\nnv.utils.arrayUnique = function(a) {\n    return a.sort().filter(function(item, pos) {\n        return !pos || item != a[pos - 1];\n    });\n};\n\n\n/*\nKeeps a list of custom symbols to draw from in addition to d3.svg.symbol\nNecessary since d3 doesn't let you extend its list -_-\nAdd new symbols by doing nv.utils.symbols.set('name', function(size){...});\n*/\nnv.utils.symbolMap = d3.map();\n\n\n/*\nReplaces d3.svg.symbol so that we can look both there and our own map\n */\nnv.utils.symbol = function() {\n    var type,\n        size = 64;\n    function symbol(d,i) {\n        var t = type.call(this,d,i);\n        var s = size.call(this,d,i);\n        if (d3.svg.symbolTypes.indexOf(t) !== -1) {\n            return d3.svg.symbol().type(t).size(s)();\n        } else {\n            return nv.utils.symbolMap.get(t)(s);\n        }\n    }\n    symbol.type = function(_) {\n        if (!arguments.length) return type;\n        type = d3.functor(_);\n        return symbol;\n    };\n    symbol.size = function(_) {\n        if (!arguments.length) return size;\n        size = d3.functor(_);\n        return symbol;\n    };\n    return symbol;\n};\n\n\n/*\nInherit option getter/setter functions from source to target\nd3.rebind makes calling the function on target actually call it on source\nAlso track via _inherited and _d3options so we can track what we inherit\nfor documentation generation purposes and chained inheritance\n*/\nnv.utils.inheritOptions = function(target, source) {\n    // inherit all the things\n    var ops = Object.getOwnPropertyNames(source._options || {});\n    var calls = Object.getOwnPropertyNames(source._calls || {});\n    var inherited = source._inherited || [];\n    var d3ops = source._d3options || [];\n    var args = ops.concat(calls).concat(inherited).concat(d3ops);\n    args.unshift(source);\n    args.unshift(target);\n    d3.rebind.apply(this, args);\n    // pass along the lists to keep track of them, don't allow duplicates\n    target._inherited = nv.utils.arrayUnique(ops.concat(calls).concat(inherited).concat(ops).concat(target._inherited || []));\n    target._d3options = nv.utils.arrayUnique(d3ops.concat(target._d3options || []));\n};\n\n\n/*\nRuns common initialize code on the svg before the chart builds\n*/\nnv.utils.initSVG = function(svg) {\n    svg.classed({'nvd3-svg':true});\n};\n\n\n/*\nSanitize and provide default for the container height.\n*/\nnv.utils.sanitizeHeight = function(height, container) {\n    return (height || parseInt(container.style('height'), 10) || 400);\n};\n\n\n/*\nSanitize and provide default for the container width.\n*/\nnv.utils.sanitizeWidth = function(width, container) {\n    return (width || parseInt(container.style('width'), 10) || 960);\n};\n\n\n/*\nCalculate the available height for a chart.\n*/\nnv.utils.availableHeight = function(height, container, margin) {\n    return Math.max(0,nv.utils.sanitizeHeight(height, container) - margin.top - margin.bottom);\n};\n\n/*\nCalculate the available width for a chart.\n*/\nnv.utils.availableWidth = function(width, container, margin) {\n    return Math.max(0,nv.utils.sanitizeWidth(width, container) - margin.left - margin.right);\n};\n\n/*\nClear any rendered chart components and display a chart's 'noData' message\n*/\nnv.utils.noData = function(chart, container) {\n    var opt = chart.options(),\n        margin = opt.margin(),\n        noData = opt.noData(),\n        data = (noData == null) ? [\"No Data Available.\"] : [noData],\n        height = nv.utils.availableHeight(null, container, margin),\n        width = nv.utils.availableWidth(null, container, margin),\n        x = margin.left + width/2,\n        y = margin.top + height/2;\n\n    //Remove any previously created chart components\n    container.selectAll('g').remove();\n\n    var noDataText = container.selectAll('.nv-noData').data(data);\n\n    noDataText.enter().append('text')\n        .attr('class', 'nvd3 nv-noData')\n        .attr('dy', '-.7em')\n        .style('text-anchor', 'middle');\n\n    noDataText\n        .attr('x', x)\n        .attr('y', y)\n        .text(function(t){ return t; });\n};\n\n/*\n Wrap long labels.\n */\nnv.utils.wrapTicks = function (text, width) {\n    text.each(function() {\n        var text = d3.select(this),\n            words = text.text().split(/\\s+/).reverse(),\n            word,\n            line = [],\n            lineNumber = 0,\n            lineHeight = 1.1,\n            y = text.attr(\"y\"),\n            dy = parseFloat(text.attr(\"dy\")),\n            tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n        while (word = words.pop()) {\n            line.push(word);\n            tspan.text(line.join(\" \"));\n            if (tspan.node().getComputedTextLength() > width) {\n                line.pop();\n                tspan.text(line.join(\" \"));\n                line = [word];\n                tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word);\n            }\n        }\n    });\n};\n\n/*\nCheck equality of 2 array\n*/\nnv.utils.arrayEquals = function (array1, array2) {\n    if (array1 === array2)\n        return true;\n\n    if (!array1 || !array2)\n        return false;\n\n    // compare lengths - can save a lot of time\n    if (array1.length != array2.length)\n        return false;\n\n    for (var i = 0,\n        l = array1.length; i < l; i++) {\n        // Check if we have nested arrays\n        if (array1[i] instanceof Array && array2[i] instanceof Array) {\n            // recurse into the nested arrays\n            if (!nv.arrayEquals(array1[i], array2[i]))\n                return false;\n        } else if (array1[i] != array2[i]) {\n            // Warning - two different object instances will never be equal: {x:20} != {x:20}\n            return false;\n        }\n    }\n    return true;\n};\nnv.models.axis = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var axis = d3.svg.axis();\n    var scale = d3.scale.linear();\n\n    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n        , width = 75 //only used for tickLabel currently\n        , height = 60 //only used for tickLabel currently\n        , axisLabelText = null\n        , showMaxMin = true //TODO: showMaxMin should be disabled on all ordinal scaled axes\n        , rotateLabels = 0\n        , rotateYLabel = true\n        , staggerLabels = false\n        , isOrdinal = false\n        , ticks = null\n        , axisLabelDistance = 0\n        , fontSize = undefined\n        , duration = 250\n        , dispatch = d3.dispatch('renderEnd')\n        ;\n    axis\n        .scale(scale)\n        .orient('bottom')\n        .tickFormat(function(d) { return d })\n    ;\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var scale0;\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n        renderWatch.reset();\n        selection.each(function(data) {\n            var container = d3.select(this);\n            nv.utils.initSVG(container);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-axis').data([data]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-axis');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            if (ticks !== null)\n                axis.ticks(ticks);\n            else if (axis.orient() == 'top' || axis.orient() == 'bottom')\n                axis.ticks(Math.abs(scale.range()[1] - scale.range()[0]) / 100);\n\n            //TODO: consider calculating width/height based on whether or not label is added, for reference in charts using this component\n            g.watchTransition(renderWatch, 'axis').call(axis);\n\n            scale0 = scale0 || axis.scale();\n\n            var fmt = axis.tickFormat();\n            if (fmt == null) {\n                fmt = scale0.tickFormat();\n            }\n\n            var axisLabel = g.selectAll('text.nv-axislabel')\n                .data([axisLabelText || null]);\n            axisLabel.exit().remove();\n\n            //only skip when fontSize is undefined so it can be cleared with a null or blank string\n            if (fontSize !== undefined) {\n                g.selectAll('g').select(\"text\").style('font-size', fontSize);\n            }\n\n            var xLabelMargin;\n            var axisMaxMin;\n            var w;\n            switch (axis.orient()) {\n                case 'top':\n                    axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n                  w = 0;\n                  if (scale.range().length === 1) {\n                    w = isOrdinal ? scale.range()[0] * 2 + scale.rangeBand() : 0;\n                  } else if (scale.range().length === 2) {\n                    w = isOrdinal ? scale.range()[0] + scale.range()[1] + scale.rangeBand() : scale.range()[1];\n                  } else if ( scale.range().length > 2){\n                    w = scale.range()[scale.range().length-1]+(scale.range()[1]-scale.range()[0]);\n                  };\n                    axisLabel\n                        .attr('text-anchor', 'middle')\n                        .attr('y', 0)\n                        .attr('x', w/2);\n                    if (showMaxMin) {\n                        axisMaxMin = wrap.selectAll('g.nv-axisMaxMin')\n                            .data(scale.domain());\n                        axisMaxMin.enter().append('g').attr('class',function(d,i){\n                                return ['nv-axisMaxMin','nv-axisMaxMin-x',(i == 0 ? 'nv-axisMin-x':'nv-axisMax-x')].join(' ')\n                        }).append('text');\n                        axisMaxMin.exit().remove();\n                        axisMaxMin\n                            .attr('transform', function(d,i) {\n                                return 'translate(' + nv.utils.NaNtoZero(scale(d)) + ',0)'\n                            })\n                            .select('text')\n                            .attr('dy', '-0.5em')\n                            .attr('y', -axis.tickPadding())\n                            .attr('text-anchor', 'middle')\n                            .text(function(d,i) {\n                                var v = fmt(d);\n                                return ('' + v).match('NaN') ? '' : v;\n                            });\n                        axisMaxMin.watchTransition(renderWatch, 'min-max top')\n                            .attr('transform', function(d,i) {\n                                return 'translate(' + nv.utils.NaNtoZero(scale.range()[i]) + ',0)'\n                            });\n                    }\n                    break;\n                case 'bottom':\n                    xLabelMargin = axisLabelDistance + 36;\n                    var maxTextWidth = 30;\n                    var textHeight = 0;\n                    var xTicks = g.selectAll('g').select(\"text\");\n                    var rotateLabelsRule = '';\n                    if (rotateLabels%360) {\n                        //Reset transform on ticks so textHeight can be calculated correctly\n                        xTicks.attr('transform', ''); \n                        //Calculate the longest xTick width\n                        xTicks.each(function(d,i){\n                            var box = this.getBoundingClientRect();\n                            var width = box.width;\n                            textHeight = box.height;\n                            if(width > maxTextWidth) maxTextWidth = width;\n                        });\n                        rotateLabelsRule = 'rotate(' + rotateLabels + ' 0,' + (textHeight/2 + axis.tickPadding()) + ')';\n                        //Convert to radians before calculating sin. Add 30 to margin for healthy padding.\n                        var sin = Math.abs(Math.sin(rotateLabels*Math.PI/180));\n                        xLabelMargin = (sin ? sin*maxTextWidth : maxTextWidth)+30;\n                        //Rotate all xTicks\n                        xTicks\n                            .attr('transform', rotateLabelsRule)\n                            .style('text-anchor', rotateLabels%360 > 0 ? 'start' : 'end');\n                    } else {\n                        if (staggerLabels) {\n                            xTicks\n                                .attr('transform', function(d,i) {\n                                    return 'translate(0,' + (i % 2 == 0 ? '0' : '12') + ')'\n                                });\n                        } else {\n                            xTicks.attr('transform', \"translate(0,0)\");\n                        }\n                    }\n                    axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n                    w = 0;\n                    if (scale.range().length === 1) {\n                        w = isOrdinal ? scale.range()[0] * 2 + scale.rangeBand() : 0;\n                    } else if (scale.range().length === 2) {\n                        w = isOrdinal ? scale.range()[0] + scale.range()[1] + scale.rangeBand() : scale.range()[1];\n                    } else if ( scale.range().length > 2){\n                        w = scale.range()[scale.range().length-1]+(scale.range()[1]-scale.range()[0]);\n                    };\n                    axisLabel\n                        .attr('text-anchor', 'middle')\n                        .attr('y', xLabelMargin)\n                        .attr('x', w/2);\n                    if (showMaxMin) {\n                        //if (showMaxMin && !isOrdinal) {\n                        axisMaxMin = wrap.selectAll('g.nv-axisMaxMin')\n                            //.data(scale.domain())\n                            .data([scale.domain()[0], scale.domain()[scale.domain().length - 1]]);\n                        axisMaxMin.enter().append('g').attr('class',function(d,i){\n                                return ['nv-axisMaxMin','nv-axisMaxMin-x',(i == 0 ? 'nv-axisMin-x':'nv-axisMax-x')].join(' ')\n                        }).append('text');\n                        axisMaxMin.exit().remove();\n                        axisMaxMin\n                            .attr('transform', function(d,i) {\n                                return 'translate(' + nv.utils.NaNtoZero((scale(d) + (isOrdinal ? scale.rangeBand() / 2 : 0))) + ',0)'\n                            })\n                            .select('text')\n                            .attr('dy', '.71em')\n                            .attr('y', axis.tickPadding())\n                            .attr('transform', rotateLabelsRule)\n                            .style('text-anchor', rotateLabels ? (rotateLabels%360 > 0 ? 'start' : 'end') : 'middle')\n                            .text(function(d,i) {\n                                var v = fmt(d);\n                                return ('' + v).match('NaN') ? '' : v;\n                            });\n                        axisMaxMin.watchTransition(renderWatch, 'min-max bottom')\n                            .attr('transform', function(d,i) {\n                                return 'translate(' + nv.utils.NaNtoZero((scale(d) + (isOrdinal ? scale.rangeBand() / 2 : 0))) + ',0)'\n                            });\n                    }\n\n                    break;\n                case 'right':\n                    axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n                    axisLabel\n                        .style('text-anchor', rotateYLabel ? 'middle' : 'begin')\n                        .attr('transform', rotateYLabel ? 'rotate(90)' : '')\n                        .attr('y', rotateYLabel ? (-Math.max(margin.right, width) + 12 - (axisLabelDistance || 0)) : -10) //TODO: consider calculating this based on largest tick width... OR at least expose this on chart\n                        .attr('x', rotateYLabel ? (d3.max(scale.range()) / 2) : axis.tickPadding());\n                    if (showMaxMin) {\n                        axisMaxMin = wrap.selectAll('g.nv-axisMaxMin')\n                            .data(scale.domain());\n                       \taxisMaxMin.enter().append('g').attr('class',function(d,i){\n                                return ['nv-axisMaxMin','nv-axisMaxMin-y',(i == 0 ? 'nv-axisMin-y':'nv-axisMax-y')].join(' ')\n                        }).append('text')\n                            .style('opacity', 0);\n                        axisMaxMin.exit().remove();\n                        axisMaxMin\n                            .attr('transform', function(d,i) {\n                                return 'translate(0,' + nv.utils.NaNtoZero(scale(d)) + ')'\n                            })\n                            .select('text')\n                            .attr('dy', '.32em')\n                            .attr('y', 0)\n                            .attr('x', axis.tickPadding())\n                            .style('text-anchor', 'start')\n                            .text(function(d, i) {\n                                var v = fmt(d);\n                                return ('' + v).match('NaN') ? '' : v;\n                            });\n                        axisMaxMin.watchTransition(renderWatch, 'min-max right')\n                            .attr('transform', function(d,i) {\n                                return 'translate(0,' + nv.utils.NaNtoZero(scale.range()[i]) + ')'\n                            })\n                            .select('text')\n                            .style('opacity', 1);\n                    }\n                    break;\n                case 'left':\n                    /*\n                     //For dynamically placing the label. Can be used with dynamically-sized chart axis margins\n                     var yTicks = g.selectAll('g').select(\"text\");\n                     yTicks.each(function(d,i){\n                     var labelPadding = this.getBoundingClientRect().width + axis.tickPadding() + 16;\n                     if(labelPadding > width) width = labelPadding;\n                     });\n                     */\n                    axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n                    axisLabel\n                        .style('text-anchor', rotateYLabel ? 'middle' : 'end')\n                        .attr('transform', rotateYLabel ? 'rotate(-90)' : '')\n                        .attr('y', rotateYLabel ? (-Math.max(margin.left, width) + 25 - (axisLabelDistance || 0)) : -10)\n                        .attr('x', rotateYLabel ? (-d3.max(scale.range()) / 2) : -axis.tickPadding());\n                    if (showMaxMin) {\n                        axisMaxMin = wrap.selectAll('g.nv-axisMaxMin')\n                            .data(scale.domain());\n                        axisMaxMin.enter().append('g').attr('class',function(d,i){\n                                return ['nv-axisMaxMin','nv-axisMaxMin-y',(i == 0 ? 'nv-axisMin-y':'nv-axisMax-y')].join(' ')\n                        }).append('text')\n                            .style('opacity', 0);\n                        axisMaxMin.exit().remove();\n                        axisMaxMin\n                            .attr('transform', function(d,i) {\n                                return 'translate(0,' + nv.utils.NaNtoZero(scale0(d)) + ')'\n                            })\n                            .select('text')\n                            .attr('dy', '.32em')\n                            .attr('y', 0)\n                            .attr('x', -axis.tickPadding())\n                            .attr('text-anchor', 'end')\n                            .text(function(d,i) {\n                                var v = fmt(d);\n                                return ('' + v).match('NaN') ? '' : v;\n                            });\n                        axisMaxMin.watchTransition(renderWatch, 'min-max right')\n                            .attr('transform', function(d,i) {\n                                return 'translate(0,' + nv.utils.NaNtoZero(scale.range()[i]) + ')'\n                            })\n                            .select('text')\n                            .style('opacity', 1);\n                    }\n                    break;\n            }\n            axisLabel.text(function(d) { return d });\n\n            if (showMaxMin && (axis.orient() === 'left' || axis.orient() === 'right')) {\n                //check if max and min overlap other values, if so, hide the values that overlap\n                g.selectAll('g') // the g's wrapping each tick\n                    .each(function(d,i) {\n                        d3.select(this).select('text').attr('opacity', 1);\n                        if (scale(d) < scale.range()[1] + 10 || scale(d) > scale.range()[0] - 10) { // 10 is assuming text height is 16... if d is 0, leave it!\n                            if (d > 1e-10 || d < -1e-10) // accounts for minor floating point errors... though could be problematic if the scale is EXTREMELY SMALL\n                                d3.select(this).attr('opacity', 0);\n\n                            d3.select(this).select('text').attr('opacity', 0); // Don't remove the ZERO line!!\n                        }\n                    });\n\n                //if Max and Min = 0 only show min, Issue #281\n                if (scale.domain()[0] == scale.domain()[1] && scale.domain()[0] == 0) {\n                    wrap.selectAll('g.nv-axisMaxMin').style('opacity', function (d, i) {\n                        return !i ? 1 : 0\n                    });\n                }\n            }\n\n            if (showMaxMin && (axis.orient() === 'top' || axis.orient() === 'bottom')) {\n                var maxMinRange = [];\n                wrap.selectAll('g.nv-axisMaxMin')\n                    .each(function(d,i) {\n                        try {\n                            if (i) // i== 1, max position\n                                maxMinRange.push(scale(d) - this.getBoundingClientRect().width - 4);  //assuming the max and min labels are as wide as the next tick (with an extra 4 pixels just in case)\n                            else // i==0, min position\n                                maxMinRange.push(scale(d) + this.getBoundingClientRect().width + 4)\n                        }catch (err) {\n                            if (i) // i== 1, max position\n                                maxMinRange.push(scale(d) - 4);  //assuming the max and min labels are as wide as the next tick (with an extra 4 pixels just in case)\n                            else // i==0, min position\n                                maxMinRange.push(scale(d) + 4);\n                        }\n                    });\n                // the g's wrapping each tick\n                g.selectAll('g').each(function(d, i) {\n                    if (scale(d) < maxMinRange[0] || scale(d) > maxMinRange[1]) {\n                        if (d > 1e-10 || d < -1e-10) // accounts for minor floating point errors... though could be problematic if the scale is EXTREMELY SMALL\n                            d3.select(this).remove();\n                        else\n                            d3.select(this).select('text').remove(); // Don't remove the ZERO line!!\n                    }\n                });\n            }\n\n            //Highlight zero tick line\n            g.selectAll('.tick')\n                .filter(function (d) {\n                    /*\n                    The filter needs to return only ticks at or near zero.\n                    Numbers like 0.00001 need to count as zero as well,\n                    and the arithmetic trick below solves that.\n                    */\n                    return !parseFloat(Math.round(d * 100000) / 1000000) && (d !== undefined)\n                }) \n                .classed('zero', true);\n            \n            //store old scales for use in transitions on update\n            scale0 = scale.copy();\n\n        });\n\n        renderWatch.renderEnd('axis immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    // expose chart's sub-components\n    chart.axis = axis;\n    chart.dispatch = dispatch;\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        axisLabelDistance: {get: function(){return axisLabelDistance;}, set: function(_){axisLabelDistance=_;}},\n        staggerLabels:     {get: function(){return staggerLabels;}, set: function(_){staggerLabels=_;}},\n        rotateLabels:      {get: function(){return rotateLabels;}, set: function(_){rotateLabels=_;}},\n        rotateYLabel:      {get: function(){return rotateYLabel;}, set: function(_){rotateYLabel=_;}},\n        showMaxMin:        {get: function(){return showMaxMin;}, set: function(_){showMaxMin=_;}},\n        axisLabel:         {get: function(){return axisLabelText;}, set: function(_){axisLabelText=_;}},\n        height:            {get: function(){return height;}, set: function(_){height=_;}},\n        ticks:             {get: function(){return ticks;}, set: function(_){ticks=_;}},\n        width:             {get: function(){return width;}, set: function(_){width=_;}},\n        fontSize:          {get: function(){return fontSize;}, set: function(_){fontSize=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top !== undefined    ? _.top    : margin.top;\n            margin.right  = _.right !== undefined  ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left !== undefined   ? _.left   : margin.left;\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration=_;\n            renderWatch.reset(duration);\n        }},\n        scale: {get: function(){return scale;}, set: function(_){\n            scale = _;\n            axis.scale(scale);\n            isOrdinal = typeof scale.rangeBands === 'function';\n            nv.utils.inheritOptionsD3(chart, scale, ['domain', 'range', 'rangeBand', 'rangeBands']);\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n    nv.utils.inheritOptionsD3(chart, axis, ['orient', 'tickValues', 'tickSubdivide', 'tickSize', 'tickPadding', 'tickFormat']);\n    nv.utils.inheritOptionsD3(chart, scale, ['domain', 'range', 'rangeBand', 'rangeBands']);\n\n    return chart;\n};\nnv.models.boxPlot = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 0, right: 0, bottom: 0, left: 0},\n        width = 960,\n        height = 500,\n        id = Math.floor(Math.random() * 10000), // Create semi-unique ID in case user doesn't select one\n        xScale = d3.scale.ordinal(),\n        yScale = d3.scale.linear(),\n        getX  = function(d) { return d.label }, // Default data model selectors.\n        getQ1 = function(d) { return d.values.Q1 },\n        getQ2 = function(d) { return d.values.Q2 },\n        getQ3 = function(d) { return d.values.Q3 },\n        getWl = function(d) { return d.values.whisker_low },\n        getWh = function(d) { return d.values.whisker_high },\n        getColor = function(d) { return d.color },\n        getOlItems  = function(d) { return d.values.outliers },\n        getOlValue = function(d, i, j) { return d },\n        getOlLabel = function(d, i, j) { return d },\n        getOlColor = function(d, i, j) { return undefined },\n        color = nv.utils.defaultColor(),\n        container = null,\n        xDomain, xRange,\n        yDomain, yRange,\n        dispatch = d3.dispatch('elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd'),\n        duration = 250,\n        maxBoxWidth = null;\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var xScale0, yScale0;\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n        renderWatch.reset();\n        selection.each(function(data) {\n            var availableWidth = width - margin.left - margin.right,\n                availableHeight = height - margin.top - margin.bottom;\n\n            container = d3.select(this);\n            nv.utils.initSVG(container);\n\n            // Setup Scales\n            xScale.domain(xDomain || data.map(function(d,i) { return getX(d,i); }))\n                .rangeBands(xRange || [0, availableWidth], 0.1);\n\n            // if we know yDomain, no need to calculate\n            var yData = []\n            if (!yDomain) {\n                // (y-range is based on quartiles, whiskers and outliers)\n                var values = [], yMin, yMax;\n                data.forEach(function (d, i) {\n                    var q1 = getQ1(d), q3 = getQ3(d), wl = getWl(d), wh = getWh(d);\n                    var olItems = getOlItems(d);\n                    if (olItems) {\n                        olItems.forEach(function (e, i) {\n                            values.push(getOlValue(e, i, undefined));\n                        });\n                    }\n                    if (wl) { values.push(wl) }\n                    if (q1) { values.push(q1) }\n                    if (q3) { values.push(q3) }\n                    if (wh) { values.push(wh) }\n                });\n                yMin = d3.min(values);\n                yMax = d3.max(values);\n                yData = [ yMin, yMax ] ;\n            }\n\n            yScale.domain(yDomain || yData);\n            yScale.range(yRange || [availableHeight, 0]);\n\n            //store old scales if they exist\n            xScale0 = xScale0 || xScale;\n            yScale0 = yScale0 || yScale.copy().range([yScale(0),yScale(0)]);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap').data([data]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap');\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            var boxplots = wrap.selectAll('.nv-boxplot').data(function(d) { return d });\n            var boxEnter = boxplots.enter().append('g').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6);\n            boxplots\n                .attr('class', 'nv-boxplot')\n                .attr('transform', function(d,i,j) { return 'translate(' + (xScale(getX(d,i)) + xScale.rangeBand() * 0.05) + ', 0)'; })\n                .classed('hover', function(d) { return d.hover });\n            boxplots\n                .watchTransition(renderWatch, 'nv-boxplot: boxplots')\n                .style('stroke-opacity', 1)\n                .style('fill-opacity', 0.75)\n                .delay(function(d,i) { return i * duration / data.length })\n                .attr('transform', function(d,i) {\n                    return 'translate(' + (xScale(getX(d,i)) + xScale.rangeBand() * 0.05) + ', 0)';\n                });\n            boxplots.exit().remove();\n\n            // ----- add the SVG elements for each boxPlot -----\n\n            // conditionally append whisker lines\n            boxEnter.each(function(d,i) {\n                var box = d3.select(this);\n                [getWl, getWh].forEach(function (f) {\n                    if (f(d)) {\n                        var key = (f === getWl) ? 'low' : 'high';\n                        box.append('line')\n                          .style('stroke', getColor(d) || color(d,i))\n                          .attr('class', 'nv-boxplot-whisker nv-boxplot-' + key);\n                        box.append('line')\n                          .style('stroke', getColor(d) || color(d,i))\n                          .attr('class', 'nv-boxplot-tick nv-boxplot-' + key);\n                    }\n                });\n            });\n\n            var box_width = function() { return (maxBoxWidth === null ? xScale.rangeBand() * 0.9 : Math.min(75, xScale.rangeBand() * 0.9)); };\n            var box_left  = function() { return xScale.rangeBand() * 0.45 - box_width()/2; };\n            var box_right = function() { return xScale.rangeBand() * 0.45 + box_width()/2; };\n\n            // update whisker lines and ticks\n            [getWl, getWh].forEach(function (f) {\n                var key = (f === getWl) ? 'low' : 'high';\n                var endpoint = (f === getWl) ? getQ1 : getQ3;\n                boxplots.select('line.nv-boxplot-whisker.nv-boxplot-' + key)\n                  .watchTransition(renderWatch, 'nv-boxplot: boxplots')\n                    .attr('x1', xScale.rangeBand() * 0.45 )\n                    .attr('y1', function(d,i) { return yScale(f(d)); })\n                    .attr('x2', xScale.rangeBand() * 0.45 )\n                    .attr('y2', function(d,i) { return yScale(endpoint(d)); });\n                boxplots.select('line.nv-boxplot-tick.nv-boxplot-' + key)\n                  .watchTransition(renderWatch, 'nv-boxplot: boxplots')\n                    .attr('x1', box_left )\n                    .attr('y1', function(d,i) { return yScale(f(d)); })\n                    .attr('x2', box_right )\n                    .attr('y2', function(d,i) { return yScale(f(d)); });\n            });\n\n            [getWl, getWh].forEach(function (f) {\n                var key = (f === getWl) ? 'low' : 'high';\n                boxEnter.selectAll('.nv-boxplot-' + key)\n                  .on('mouseover', function(d,i,j) {\n                      d3.select(this).classed('hover', true);\n                      dispatch.elementMouseover({\n                          series: { key: f(d), color: getColor(d) || color(d,j) },\n                          e: d3.event\n                      });\n                  })\n                  .on('mouseout', function(d,i,j) {\n                      d3.select(this).classed('hover', false);\n                      dispatch.elementMouseout({\n                          series: { key: f(d), color: getColor(d) || color(d,j) },\n                          e: d3.event\n                      });\n                  })\n                  .on('mousemove', function(d,i) {\n                      dispatch.elementMousemove({e: d3.event});\n                  });\n            });\n\n            // boxes\n            boxEnter.append('rect')\n                .attr('class', 'nv-boxplot-box')\n                // tooltip events\n                .on('mouseover', function(d,i) {\n                    d3.select(this).classed('hover', true);\n                    dispatch.elementMouseover({\n                        key: getX(d),\n                        value: getX(d),\n                        series: [\n                            { key: 'Q3', value: getQ3(d), color: getColor(d) || color(d,i) },\n                            { key: 'Q2', value: getQ2(d), color: getColor(d) || color(d,i) },\n                            { key: 'Q1', value: getQ1(d), color: getColor(d) || color(d,i) }\n                        ],\n                        data: d,\n                        index: i,\n                        e: d3.event\n                    });\n                })\n                .on('mouseout', function(d,i) {\n                    d3.select(this).classed('hover', false);\n                    dispatch.elementMouseout({\n                        key: getX(d),\n                        value: getX(d),\n                        series: [\n                            { key: 'Q3', value: getQ3(d), color: getColor(d) || color(d,i) },\n                            { key: 'Q2', value: getQ2(d), color: getColor(d) || color(d,i) },\n                            { key: 'Q1', value: getQ1(d), color: getColor(d) || color(d,i) }\n                        ],\n                        data: d,\n                        index: i,\n                        e: d3.event\n                    });\n                })\n                .on('mousemove', function(d,i) {\n                    dispatch.elementMousemove({e: d3.event});\n                });\n\n            // box transitions\n            boxplots.select('rect.nv-boxplot-box')\n              .watchTransition(renderWatch, 'nv-boxplot: boxes')\n                .attr('y', function(d,i) { return yScale(getQ3(d)); })\n                .attr('width', box_width)\n                .attr('x', box_left )\n                .attr('height', function(d,i) { return Math.abs(yScale(getQ3(d)) - yScale(getQ1(d))) || 1 })\n                .style('fill', function(d,i) { return getColor(d) || color(d,i) })\n                .style('stroke', function(d,i) { return getColor(d) || color(d,i) });\n\n            // median line\n            boxEnter.append('line').attr('class', 'nv-boxplot-median');\n\n            boxplots.select('line.nv-boxplot-median')\n              .watchTransition(renderWatch, 'nv-boxplot: boxplots line')\n                .attr('x1', box_left)\n                .attr('y1', function(d,i) { return yScale(getQ2(d)); })\n                .attr('x2', box_right)\n                .attr('y2', function(d,i) { return yScale(getQ2(d)); });\n\n            // outliers\n            var outliers = boxplots.selectAll('.nv-boxplot-outlier').data(function(d) {\n                return getOlItems(d) || [];\n            });\n            outliers.enter().append('circle')\n                .style('fill', function(d,i,j) { return getOlColor(d,i,j) || color(d,j) })\n                .style('stroke', function(d,i,j) { return getOlColor(d,i,j) || color(d,j) })\n                .style('z-index', 9000)\n                .on('mouseover', function(d,i,j) {\n                    d3.select(this).classed('hover', true);\n                    dispatch.elementMouseover({\n                        series: { key: getOlLabel(d,i,j), color: getOlColor(d,i,j) || color(d,j) },\n                        e: d3.event\n                    });\n                })\n                .on('mouseout', function(d,i,j) {\n                    d3.select(this).classed('hover', false);\n                    dispatch.elementMouseout({\n                        series: { key: getOlLabel(d,i,j), color: getOlColor(d,i,j) || color(d,j) },\n                        e: d3.event\n                    });\n                })\n                .on('mousemove', function(d,i) {\n                    dispatch.elementMousemove({e: d3.event});\n                });\n            outliers.attr('class', 'nv-boxplot-outlier');\n            outliers\n              .watchTransition(renderWatch, 'nv-boxplot: nv-boxplot-outlier')\n                .attr('cx', xScale.rangeBand() * 0.45)\n                .attr('cy', function(d,i,j) { return yScale(getOlValue(d,i,j)); })\n                .attr('r', '3');\n            outliers.exit().remove();\n\n            //store old scales for use in transitions on update\n            xScale0 = xScale.copy();\n            yScale0 = yScale.copy();\n        });\n\n        renderWatch.renderEnd('nv-boxplot immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:       {get: function(){return width;}, set: function(_){width=_;}},\n        height:      {get: function(){return height;}, set: function(_){height=_;}},\n        maxBoxWidth: {get: function(){return maxBoxWidth;}, set: function(_){maxBoxWidth=_;}},\n        x:           {get: function(){return getX;}, set: function(_){getX=_;}},\n        q1: {get: function(){return getQ1;}, set: function(_){getQ1=_;}},\n        q2: {get: function(){return getQ2;}, set: function(_){getQ2=_;}},\n        q3: {get: function(){return getQ3;}, set: function(_){getQ3=_;}},\n        wl: {get: function(){return getWl;}, set: function(_){getWl=_;}},\n        wh: {get: function(){return getWh;}, set: function(_){getWh=_;}},\n        itemColor:    {get: function(){return getColor;}, set: function(_){getColor=_;}},\n        outliers:     {get: function(){return getOlItems;}, set: function(_){getOlItems=_;}},\n        outlierValue: {get: function(){return getOlValue;}, set: function(_){getOlValue=_;}},\n        outlierLabel: {get: function(){return getOlLabel;}, set: function(_){getOlLabel=_;}},\n        outlierColor: {get: function(){return getOlColor;}, set: function(_){getOlColor=_;}},\n        xScale:  {get: function(){return xScale;}, set: function(_){xScale=_;}},\n        yScale:  {get: function(){return yScale;}, set: function(_){yScale=_;}},\n        xDomain: {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n        yDomain: {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n        xRange:  {get: function(){return xRange;}, set: function(_){xRange=_;}},\n        yRange:  {get: function(){return yRange;}, set: function(_){yRange=_;}},\n        id:          {get: function(){return id;}, set: function(_){id=_;}},\n        // rectClass: {get: function(){return rectClass;}, set: function(_){rectClass=_;}},\n        y: {\n            get: function() {\n                console.warn('BoxPlot \\'y\\' chart option is deprecated. Please use model overrides instead.');\n                return {};\n            },\n            set: function(_) {\n                console.warn('BoxPlot \\'y\\' chart option is deprecated. Please use model overrides instead.');\n            }\n        },\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\nnv.models.boxPlotChart = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var boxplot = nv.models.boxPlot(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis();\n\n    var margin = {top: 15, right: 10, bottom: 50, left: 60},\n        width = null,\n        height = null,\n        color = nv.utils.getColor(),\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        staggerLabels = false,\n        tooltip = nv.models.tooltip(),\n        x, y,\n        noData = 'No Data Available.',\n        dispatch = d3.dispatch('beforeUpdate', 'renderEnd'),\n        duration = 250;\n\n    xAxis\n        .orient('bottom')\n        .showMaxMin(false)\n        .tickFormat(function(d) { return d })\n    ;\n    yAxis\n        .orient((rightAlignYAxis) ? 'right' : 'left')\n        .tickFormat(d3.format(',.1f'))\n    ;\n\n    tooltip.duration(0);\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n        renderWatch.reset();\n        renderWatch.models(boxplot);\n        if (showXAxis) renderWatch.models(xAxis);\n        if (showYAxis) renderWatch.models(yAxis);\n\n        selection.each(function(data) {\n            var container = d3.select(this), that = this;\n            nv.utils.initSVG(container);\n            var availableWidth = (width  || parseInt(container.style('width')) || 960) - margin.left - margin.right;\n            var availableHeight = (height || parseInt(container.style('height')) || 400) - margin.top - margin.bottom;\n\n            chart.update = function() {\n                dispatch.beforeUpdate();\n                container.transition().duration(duration).call(chart);\n            };\n            chart.container = this;\n\n            // TODO still need to find a way to validate quartile data presence using boxPlot callbacks.\n            // Display No Data message if there's nothing to show. (quartiles required at minimum).\n            if (!data || !data.length) {\n                var noDataText = container.selectAll('.nv-noData').data([noData]);\n\n                noDataText.enter().append('text')\n                    .attr('class', 'nvd3 nv-noData')\n                    .attr('dy', '-.7em')\n                    .style('text-anchor', 'middle');\n\n                noDataText\n                    .attr('x', margin.left + availableWidth / 2)\n                    .attr('y', margin.top + availableHeight / 2)\n                    .text(function(d) { return d });\n\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n\n            // Setup Scales\n            x = boxplot.xScale();\n            y = boxplot.yScale().clamp(true);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-boxPlotWithAxes').data([data]);\n            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-boxPlotWithAxes').append('g');\n            var defsEnter = gEnter.append('defs');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-x nv-axis');\n            gEnter.append('g').attr('class', 'nv-y nv-axis')\n                .append('g').attr('class', 'nv-zeroLine')\n                .append('line');\n\n            gEnter.append('g').attr('class', 'nv-barsWrap');\n            g.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            if (rightAlignYAxis) {\n                g.select('.nv-y.nv-axis')\n                    .attr('transform', 'translate(' + availableWidth + ',0)');\n            }\n\n            // Main Chart Component(s)\n            boxplot.width(availableWidth).height(availableHeight);\n\n            var barsWrap = g.select('.nv-barsWrap')\n                .datum(data.filter(function(d) { return !d.disabled }))\n\n            barsWrap.transition().call(boxplot);\n\n            defsEnter.append('clipPath')\n                .attr('id', 'nv-x-label-clip-' + boxplot.id())\n                .append('rect');\n\n            g.select('#nv-x-label-clip-' + boxplot.id() + ' rect')\n                .attr('width', x.rangeBand() * (staggerLabels ? 2 : 1))\n                .attr('height', 16)\n                .attr('x', -x.rangeBand() / (staggerLabels ? 1 : 2 ));\n\n            // Setup Axes\n            if (showXAxis) {\n                xAxis\n                    .scale(x)\n                    .ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n                    .tickSize(-availableHeight, 0);\n\n                g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')');\n                g.select('.nv-x.nv-axis').call(xAxis);\n\n                var xTicks = g.select('.nv-x.nv-axis').selectAll('g');\n                if (staggerLabels) {\n                    xTicks\n                        .selectAll('text')\n                        .attr('transform', function(d,i,j) { return 'translate(0,' + (j % 2 === 0 ? '5' : '17') + ')' })\n                }\n            }\n\n            if (showYAxis) {\n                yAxis\n                    .scale(y)\n                    .ticks( Math.floor(availableHeight/36) ) // can't use nv.utils.calcTicksY with Object data\n                    .tickSize( -availableWidth, 0);\n\n                g.select('.nv-y.nv-axis').call(yAxis);\n            }\n\n            // Zero line\n            g.select('.nv-zeroLine line')\n                .attr('x1',0)\n                .attr('x2',availableWidth)\n                .attr('y1', y(0))\n                .attr('y2', y(0))\n            ;\n\n            //============================================================\n            // Event Handling/Dispatching (in chart's scope)\n            //------------------------------------------------------------\n        });\n\n        renderWatch.renderEnd('nv-boxplot chart immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n    boxplot.dispatch.on('elementMouseover.tooltip', function(evt) {\n        tooltip.data(evt).hidden(false);\n    });\n\n    boxplot.dispatch.on('elementMouseout.tooltip', function(evt) {\n        tooltip.data(evt).hidden(true);\n    });\n\n    boxplot.dispatch.on('elementMousemove.tooltip', function(evt) {\n        tooltip();\n    });\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.boxplot = boxplot;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.tooltip = tooltip;\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        staggerLabels: {get: function(){return staggerLabels;}, set: function(_){staggerLabels=_;}},\n        showXAxis: {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n        showYAxis: {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n        tooltipContent:    {get: function(){return tooltip;}, set: function(_){tooltip=_;}},\n        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n            boxplot.duration(duration);\n            xAxis.duration(duration);\n            yAxis.duration(duration);\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n            boxplot.color(color);\n        }},\n        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n            rightAlignYAxis = _;\n            yAxis.orient( (_) ? 'right' : 'left');\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, boxplot);\n    nv.utils.initOptions(chart);\n\n    return chart;\n}\n\n// Chart design based on the recommendations of Stephen Few. Implementation\n// based on the work of Clint Ivy, Jamie Love, and Jason Davies.\n// http://projects.instantcognition.com/protovis/bulletchart/\n\nnv.models.bullet = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n        , orient = 'left' // TODO top & bottom\n        , reverse = false\n        , ranges = function(d) { return d.ranges }\n        , markers = function(d) { return d.markers ? d.markers : [] }\n        , markerLines = function(d) { return d.markerLines ? d.markerLines : [0] }\n        , measures = function(d) { return d.measures }\n        , rangeLabels = function(d) { return d.rangeLabels ? d.rangeLabels : [] }\n        , markerLabels = function(d) { return d.markerLabels ? d.markerLabels : []  }\n        , markerLineLabels = function(d) { return d.markerLineLabels ? d.markerLineLabels : []  }\n        , measureLabels = function(d) { return d.measureLabels ? d.measureLabels : []  }\n        , forceX = [0] // List of numbers to Force into the X scale (ie. 0, or a max / min, etc.)\n        , width = 380\n        , height = 30\n        , container = null\n        , tickFormat = null\n        , color = nv.utils.getColor(['#1f77b4'])\n        , dispatch = d3.dispatch('elementMouseover', 'elementMouseout', 'elementMousemove')\n        , defaultRangeLabels = [\"Maximum\", \"Mean\", \"Minimum\"]\n        , legacyRangeClassNames = [\"Max\", \"Avg\", \"Min\"]\n        ;\n\n    function sortLabels(labels, values){\n        var lz = labels.slice();\n        labels.sort(function(a, b){\n            var iA = lz.indexOf(a);\n            var iB = lz.indexOf(b);\n            return d3.descending(values[iA], values[iB]);\n        });\n    };\n\n    function chart(selection) {\n        selection.each(function(d, i) {\n            var availableWidth = width - margin.left - margin.right,\n                availableHeight = height - margin.top - margin.bottom;\n\n            container = d3.select(this);\n            nv.utils.initSVG(container);\n\n            var rangez = ranges.call(this, d, i).slice(),\n                markerz = markers.call(this, d, i).slice(),\n                markerLinez = markerLines.call(this, d, i).slice().sort(d3.descending),\n                measurez = measures.call(this, d, i).slice(),\n                rangeLabelz = rangeLabels.call(this, d, i).slice(),\n                markerLabelz = markerLabels.call(this, d, i).slice(),\n                markerLineLabelz = markerLineLabels.call(this, d, i).slice(),\n                measureLabelz = measureLabels.call(this, d, i).slice();\n\n            // Sort labels according to their sorted values\n            sortLabels(rangeLabelz, rangez);\n            sortLabels(markerLabelz, markerz);\n            sortLabels(markerLineLabelz, markerLinez);\n            sortLabels(measureLabelz, measurez);\n\n            // sort values descending\n            rangez.sort(d3.descending);\n            markerz.sort(d3.descending);\n            measurez.sort(d3.descending);\n\n            // Setup Scales\n            // Compute the new x-scale.\n            var x1 = d3.scale.linear()\n                .domain( d3.extent(d3.merge([forceX, rangez])) )\n                .range(reverse ? [availableWidth, 0] : [0, availableWidth]);\n\n            // Retrieve the old x-scale, if this is an update.\n            var x0 = this.__chart__ || d3.scale.linear()\n                .domain([0, Infinity])\n                .range(x1.range());\n\n            // Stash the new scale.\n            this.__chart__ = x1;\n\n            var rangeMin = d3.min(rangez), //rangez[2]\n                rangeMax = d3.max(rangez), //rangez[0]\n                rangeAvg = rangez[1];\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-bullet').data([d]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-bullet');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            for(var i=0,il=rangez.length; i<il; i++){\n                var rangeClassNames = 'nv-range nv-range'+i;\n                if(i <= 2){\n                    rangeClassNames = rangeClassNames + ' nv-range'+legacyRangeClassNames[i];\n                }\n                gEnter.append('rect').attr('class', rangeClassNames);\n            }\n\n            gEnter.append('rect').attr('class', 'nv-measure');\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            var w0 = function(d) { return Math.abs(x0(d) - x0(0)) }, // TODO: could optimize by precalculating x0(0) and x1(0)\n                w1 = function(d) { return Math.abs(x1(d) - x1(0)) };\n            var xp0 = function(d) { return d < 0 ? x0(d) : x0(0) },\n                xp1 = function(d) { return d < 0 ? x1(d) : x1(0) };\n\n            for(var i=0,il=rangez.length; i<il; i++){\n                var range = rangez[i];\n                g.select('rect.nv-range'+i)\n                    .attr('height', availableHeight)\n                    .attr('width', w1(range))\n                    .attr('x', xp1(range))\n                    .datum(range)\n            }\n\n            g.select('rect.nv-measure')\n                .style('fill', color)\n                .attr('height', availableHeight / 3)\n                .attr('y', availableHeight / 3)\n                .attr('width', measurez < 0 ?\n                    x1(0) - x1(measurez[0])\n                    : x1(measurez[0]) - x1(0))\n                .attr('x', xp1(measurez))\n                .on('mouseover', function() {\n                    dispatch.elementMouseover({\n                        value: measurez[0],\n                        label: measureLabelz[0] || 'Current',\n                        color: d3.select(this).style(\"fill\")\n                    })\n                })\n                .on('mousemove', function() {\n                    dispatch.elementMousemove({\n                        value: measurez[0],\n                        label: measureLabelz[0] || 'Current',\n                        color: d3.select(this).style(\"fill\")\n                    })\n                })\n                .on('mouseout', function() {\n                    dispatch.elementMouseout({\n                        value: measurez[0],\n                        label: measureLabelz[0] || 'Current',\n                        color: d3.select(this).style(\"fill\")\n                    })\n                });\n\n            var h3 =  availableHeight / 6;\n\n            var markerData = markerz.map( function(marker, index) {\n                return {value: marker, label: markerLabelz[index]}\n            });\n            gEnter\n              .selectAll(\"path.nv-markerTriangle\")\n              .data(markerData)\n              .enter()\n              .append('path')\n              .attr('class', 'nv-markerTriangle')\n              .attr('d', 'M0,' + h3 + 'L' + h3 + ',' + (-h3) + ' ' + (-h3) + ',' + (-h3) + 'Z')\n              .on('mouseover', function(d) {\n                dispatch.elementMouseover({\n                  value: d.value,\n                  label: d.label || 'Previous',\n                  color: d3.select(this).style(\"fill\"),\n                  pos: [x1(d.value), availableHeight/2]\n                })\n\n              })\n              .on('mousemove', function(d) {\n                  dispatch.elementMousemove({\n                      value: d.value,\n                      label: d.label || 'Previous',\n                      color: d3.select(this).style(\"fill\")\n                  })\n              })\n              .on('mouseout', function(d, i) {\n                  dispatch.elementMouseout({\n                      value: d.value,\n                      label: d.label || 'Previous',\n                      color: d3.select(this).style(\"fill\")\n                  })\n              });\n\n            g.selectAll(\"path.nv-markerTriangle\")\n              .data(markerData)\n              .attr('transform', function(d) { return 'translate(' + x1(d.value) + ',' + (availableHeight / 2) + ')' });\n\n            var markerLinesData = markerLinez.map( function(marker, index) {\n                return {value: marker, label: markerLineLabelz[index]}\n            });\n            gEnter\n              .selectAll(\"path.nv-markerLine\")\n              .data(markerLinesData)\n              .enter()\n              .append('line')\n              .attr('cursor', '')\n              .attr('class', 'nv-markerLine')\n              .attr('x1', function(d) { return x1(d.value) })\n              .attr('y1', '2')\n              .attr('x2', function(d) { return x1(d.value) })\n              .attr('y2', availableHeight - 2)\n              .on('mouseover', function(d) {\n                dispatch.elementMouseover({\n                  value: d.value,\n                  label: d.label || 'Previous',\n                  color: d3.select(this).style(\"fill\"),\n                  pos: [x1(d.value), availableHeight/2]\n                })\n\n              })\n              .on('mousemove', function(d) {\n                  dispatch.elementMousemove({\n                      value: d.value,\n                      label: d.label || 'Previous',\n                      color: d3.select(this).style(\"fill\")\n                  })\n              })\n              .on('mouseout', function(d, i) {\n                  dispatch.elementMouseout({\n                      value: d.value,\n                      label: d.label || 'Previous',\n                      color: d3.select(this).style(\"fill\")\n                  })\n              });\n\n            g.selectAll(\"path.nv-markerLines\")\n              .data(markerLinesData)\n              .attr('transform', function(d) { return 'translate(' + x1(d.value) + ',' + (availableHeight / 2) + ')' });\n\n            wrap.selectAll('.nv-range')\n                .on('mouseover', function(d,i) {\n                    var label = rangeLabelz[i] || defaultRangeLabels[i];\n                    dispatch.elementMouseover({\n                        value: d,\n                        label: label,\n                        color: d3.select(this).style(\"fill\")\n                    })\n                })\n                .on('mousemove', function() {\n                    dispatch.elementMousemove({\n                        value: measurez[0],\n                        label: measureLabelz[0] || 'Previous',\n                        color: d3.select(this).style(\"fill\")\n                    })\n                })\n                .on('mouseout', function(d,i) {\n                    var label = rangeLabelz[i] || defaultRangeLabels[i];\n                    dispatch.elementMouseout({\n                        value: d,\n                        label: label,\n                        color: d3.select(this).style(\"fill\")\n                    })\n                });\n        });\n\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        ranges:      {get: function(){return ranges;}, set: function(_){ranges=_;}}, // ranges (bad, satisfactory, good)\n        markers:     {get: function(){return markers;}, set: function(_){markers=_;}}, // markers (previous, goal)\n        measures: {get: function(){return measures;}, set: function(_){measures=_;}}, // measures (actual, forecast)\n        forceX:      {get: function(){return forceX;}, set: function(_){forceX=_;}},\n        width:    {get: function(){return width;}, set: function(_){width=_;}},\n        height:    {get: function(){return height;}, set: function(_){height=_;}},\n        tickFormat:    {get: function(){return tickFormat;}, set: function(_){tickFormat=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        orient: {get: function(){return orient;}, set: function(_){ // left, right, top, bottom\n            orient = _;\n            reverse = orient == 'right' || orient == 'bottom';\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n    return chart;\n};\n\n\n\n// Chart design based on the recommendations of Stephen Few. Implementation\n// based on the work of Clint Ivy, Jamie Love, and Jason Davies.\n// http://projects.instantcognition.com/protovis/bulletchart/\nnv.models.bulletChart = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var bullet = nv.models.bullet();\n    var tooltip = nv.models.tooltip();\n\n    var orient = 'left' // TODO top & bottom\n        , reverse = false\n        , margin = {top: 5, right: 40, bottom: 20, left: 120}\n        , ranges = function(d) { return d.ranges }\n        , markers = function(d) { return d.markers ? d.markers : [] }\n        , measures = function(d) { return d.measures }\n        , width = null\n        , height = 55\n        , tickFormat = null\n\t, ticks = null\n        , noData = null\n        , dispatch = d3.dispatch()\n        ;\n\n    tooltip\n        .duration(0)\n        .headerEnabled(false);\n\n    function chart(selection) {\n        selection.each(function(d, i) {\n            var container = d3.select(this);\n            nv.utils.initSVG(container);\n\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = height - margin.top - margin.bottom,\n                that = this;\n\n            chart.update = function() { chart(selection) };\n            chart.container = this;\n\n            // Display No Data message if there's nothing to show.\n            if (!d || !ranges.call(this, d, i)) {\n                nv.utils.noData(chart, container)\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n\n            var rangez = ranges.call(this, d, i).slice().sort(d3.descending),\n                markerz = markers.call(this, d, i).slice().sort(d3.descending),\n                measurez = measures.call(this, d, i).slice().sort(d3.descending);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-bulletChart').data([d]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-bulletChart');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-bulletWrap');\n            gEnter.append('g').attr('class', 'nv-titles');\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            // Compute the new x-scale.\n            var x1 = d3.scale.linear()\n                .domain([0, Math.max(rangez[0], (markerz[0] || 0), measurez[0])])  // TODO: need to allow forceX and forceY, and xDomain, yDomain\n                .range(reverse ? [availableWidth, 0] : [0, availableWidth]);\n\n            // Retrieve the old x-scale, if this is an update.\n            var x0 = this.__chart__ || d3.scale.linear()\n                .domain([0, Infinity])\n                .range(x1.range());\n\n            // Stash the new scale.\n            this.__chart__ = x1;\n\n            var w0 = function(d) { return Math.abs(x0(d) - x0(0)) }, // TODO: could optimize by precalculating x0(0) and x1(0)\n                w1 = function(d) { return Math.abs(x1(d) - x1(0)) };\n\n            var title = gEnter.select('.nv-titles').append('g')\n                .attr('text-anchor', 'end')\n                .attr('transform', 'translate(-6,' + (height - margin.top - margin.bottom) / 2 + ')');\n            title.append('text')\n                .attr('class', 'nv-title')\n                .text(function(d) { return d.title; });\n\n            title.append('text')\n                .attr('class', 'nv-subtitle')\n                .attr('dy', '1em')\n                .text(function(d) { return d.subtitle; });\n\n            bullet\n                .width(availableWidth)\n                .height(availableHeight)\n\n            var bulletWrap = g.select('.nv-bulletWrap');\n            d3.transition(bulletWrap).call(bullet);\n\n            // Compute the tick format.\n            var format = tickFormat || x1.tickFormat( availableWidth / 100 );\n\n            // Update the tick groups.\n            var tick = g.selectAll('g.nv-tick')\n                .data(x1.ticks( ticks ? ticks : (availableWidth / 50) ), function(d) {\n                    return this.textContent || format(d);\n                });\n\n            // Initialize the ticks with the old scale, x0.\n            var tickEnter = tick.enter().append('g')\n                .attr('class', 'nv-tick')\n                .attr('transform', function(d) { return 'translate(' + x0(d) + ',0)' })\n                .style('opacity', 1e-6);\n\n            tickEnter.append('line')\n                .attr('y1', availableHeight)\n                .attr('y2', availableHeight * 7 / 6);\n\n            tickEnter.append('text')\n                .attr('text-anchor', 'middle')\n                .attr('dy', '1em')\n                .attr('y', availableHeight * 7 / 6)\n                .text(format);\n\n            // Transition the updating ticks to the new scale, x1.\n            var tickUpdate = d3.transition(tick)\n                .attr('transform', function(d) { return 'translate(' + x1(d) + ',0)' })\n                .style('opacity', 1);\n\n            tickUpdate.select('line')\n                .attr('y1', availableHeight)\n                .attr('y2', availableHeight * 7 / 6);\n\n            tickUpdate.select('text')\n                .attr('y', availableHeight * 7 / 6);\n\n            // Transition the exiting ticks to the new scale, x1.\n            d3.transition(tick.exit())\n                .attr('transform', function(d) { return 'translate(' + x1(d) + ',0)' })\n                .style('opacity', 1e-6)\n                .remove();\n        });\n\n        d3.timer.flush();\n        return chart;\n    }\n\n    //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n    bullet.dispatch.on('elementMouseover.tooltip', function(evt) {\n        evt['series'] = {\n            key: evt.label,\n            value: evt.value,\n            color: evt.color\n        };\n        tooltip.data(evt).hidden(false);\n    });\n\n    bullet.dispatch.on('elementMouseout.tooltip', function(evt) {\n        tooltip.hidden(true);\n    });\n\n    bullet.dispatch.on('elementMousemove.tooltip', function(evt) {\n        tooltip();\n    });\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.bullet = bullet;\n    chart.dispatch = dispatch;\n    chart.tooltip = tooltip;\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        ranges:      {get: function(){return ranges;}, set: function(_){ranges=_;}}, // ranges (bad, satisfactory, good)\n        markers:     {get: function(){return markers;}, set: function(_){markers=_;}}, // markers (previous, goal)\n        measures: {get: function(){return measures;}, set: function(_){measures=_;}}, // measures (actual, forecast)\n        width:    {get: function(){return width;}, set: function(_){width=_;}},\n        height:    {get: function(){return height;}, set: function(_){height=_;}},\n        tickFormat:    {get: function(){return tickFormat;}, set: function(_){tickFormat=_;}},\n        ticks:    {get: function(){return ticks;}, set: function(_){ticks=_;}},\n        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        orient: {get: function(){return orient;}, set: function(_){ // left, right, top, bottom\n            orient = _;\n            reverse = orient == 'right' || orient == 'bottom';\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, bullet);\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n\n\n\nnv.models.candlestickBar = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n        , width = null\n        , height = null\n        , id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n        , container\n        , x = d3.scale.linear()\n        , y = d3.scale.linear()\n        , getX = function(d) { return d.x }\n        , getY = function(d) { return d.y }\n        , getOpen = function(d) { return d.open }\n        , getClose = function(d) { return d.close }\n        , getHigh = function(d) { return d.high }\n        , getLow = function(d) { return d.low }\n        , forceX = []\n        , forceY = []\n        , padData     = false // If true, adds half a data points width to front and back, for lining up a line chart with a bar chart\n        , clipEdge = true\n        , color = nv.utils.defaultColor()\n        , interactive = false\n        , xDomain\n        , yDomain\n        , xRange\n        , yRange\n        , dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd', 'chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove')\n        ;\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    function chart(selection) {\n        selection.each(function(data) {\n            container = d3.select(this);\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            nv.utils.initSVG(container);\n\n            // Width of the candlestick bars.\n            var barWidth = (availableWidth / data[0].values.length) * .45;\n\n            // Setup Scales\n            x.domain(xDomain || d3.extent(data[0].values.map(getX).concat(forceX) ));\n\n            if (padData)\n                x.range(xRange || [availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5)  / data[0].values.length ]);\n            else\n                x.range(xRange || [5 + barWidth / 2, availableWidth - barWidth / 2 - 5]);\n\n            y.domain(yDomain || [\n                    d3.min(data[0].values.map(getLow).concat(forceY)),\n                    d3.max(data[0].values.map(getHigh).concat(forceY))\n                ]\n            ).range(yRange || [availableHeight, 0]);\n\n            // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n            if (x.domain()[0] === x.domain()[1])\n                x.domain()[0] ?\n                    x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01])\n                    : x.domain([-1,1]);\n\n            if (y.domain()[0] === y.domain()[1])\n                y.domain()[0] ?\n                    y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01])\n                    : y.domain([-1,1]);\n\n            // Setup containers and skeleton of chart\n            var wrap = d3.select(this).selectAll('g.nv-wrap.nv-candlestickBar').data([data[0].values]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-candlestickBar');\n            var defsEnter = wrapEnter.append('defs');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-ticks');\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            container\n                .on('click', function(d,i) {\n                    dispatch.chartClick({\n                        data: d,\n                        index: i,\n                        pos: d3.event,\n                        id: id\n                    });\n                });\n\n            defsEnter.append('clipPath')\n                .attr('id', 'nv-chart-clip-path-' + id)\n                .append('rect');\n\n            wrap.select('#nv-chart-clip-path-' + id + ' rect')\n                .attr('width', availableWidth)\n                .attr('height', availableHeight);\n\n            g   .attr('clip-path', clipEdge ? 'url(#nv-chart-clip-path-' + id + ')' : '');\n\n            var ticks = wrap.select('.nv-ticks').selectAll('.nv-tick')\n                .data(function(d) { return d });\n            ticks.exit().remove();\n\n            var tickGroups = ticks.enter().append('g');\n\n            // The colors are currently controlled by CSS.\n            ticks\n                .attr('class', function(d, i, j) { return (getOpen(d, i) > getClose(d, i) ? 'nv-tick negative' : 'nv-tick positive') + ' nv-tick-' + j + '-' + i});\n\n            var lines = tickGroups.append('line')\n                .attr('class', 'nv-candlestick-lines')\n                .attr('transform', function(d, i) { return 'translate(' + x(getX(d, i)) + ',0)'; })\n                .attr('x1', 0)\n                .attr('y1', function(d, i) { return y(getHigh(d, i)); })\n                .attr('x2', 0)\n                .attr('y2', function(d, i) { return y(getLow(d, i)); });\n\n            var rects = tickGroups.append('rect')\n                .attr('class', 'nv-candlestick-rects nv-bars')\n                .attr('transform', function(d, i) {\n                    return 'translate(' + (x(getX(d, i)) - barWidth/2) + ','\n                    + (y(getY(d, i)) - (getOpen(d, i) > getClose(d, i) ? (y(getClose(d, i)) - y(getOpen(d, i))) : 0))\n                    + ')';\n                })\n                .attr('x', 0)\n                .attr('y', 0)\n                .attr('width', barWidth)\n                .attr('height', function(d, i) {\n                    var open = getOpen(d, i);\n                    var close = getClose(d, i);\n                    return open > close ? y(close) - y(open) : y(open) - y(close);\n                });\n\n            ticks.select('.nv-candlestick-lines').transition()\n                .attr('transform', function(d, i) { return 'translate(' + x(getX(d, i)) + ',0)'; })\n                .attr('x1', 0)\n                .attr('y1', function(d, i) { return y(getHigh(d, i)); })\n                .attr('x2', 0)\n                .attr('y2', function(d, i) { return y(getLow(d, i)); });\n\n            ticks.select('.nv-candlestick-rects').transition()\n                .attr('transform', function(d, i) {\n                    return 'translate(' + (x(getX(d, i)) - barWidth/2) + ','\n                    + (y(getY(d, i)) - (getOpen(d, i) > getClose(d, i) ? (y(getClose(d, i)) - y(getOpen(d, i))) : 0))\n                    + ')';\n                })\n                .attr('x', 0)\n                .attr('y', 0)\n                .attr('width', barWidth)\n                .attr('height', function(d, i) {\n                    var open = getOpen(d, i);\n                    var close = getClose(d, i);\n                    return open > close ? y(close) - y(open) : y(open) - y(close);\n                });\n        });\n\n        return chart;\n    }\n\n\n    //Create methods to allow outside functions to highlight a specific bar.\n    chart.highlightPoint = function(pointIndex, isHoverOver) {\n        chart.clearHighlights();\n        container.select(\".nv-candlestickBar .nv-tick-0-\" + pointIndex)\n            .classed(\"hover\", isHoverOver)\n        ;\n    };\n\n    chart.clearHighlights = function() {\n        container.select(\".nv-candlestickBar .nv-tick.hover\")\n            .classed(\"hover\", false)\n        ;\n    };\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:    {get: function(){return width;}, set: function(_){width=_;}},\n        height:   {get: function(){return height;}, set: function(_){height=_;}},\n        xScale:   {get: function(){return x;}, set: function(_){x=_;}},\n        yScale:   {get: function(){return y;}, set: function(_){y=_;}},\n        xDomain:  {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n        yDomain:  {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n        xRange:   {get: function(){return xRange;}, set: function(_){xRange=_;}},\n        yRange:   {get: function(){return yRange;}, set: function(_){yRange=_;}},\n        forceX:   {get: function(){return forceX;}, set: function(_){forceX=_;}},\n        forceY:   {get: function(){return forceY;}, set: function(_){forceY=_;}},\n        padData:  {get: function(){return padData;}, set: function(_){padData=_;}},\n        clipEdge: {get: function(){return clipEdge;}, set: function(_){clipEdge=_;}},\n        id:       {get: function(){return id;}, set: function(_){id=_;}},\n        interactive: {get: function(){return interactive;}, set: function(_){interactive=_;}},\n\n        x:     {get: function(){return getX;}, set: function(_){getX=_;}},\n        y:     {get: function(){return getY;}, set: function(_){getY=_;}},\n        open:  {get: function(){return getOpen();}, set: function(_){getOpen=_;}},\n        close: {get: function(){return getClose();}, set: function(_){getClose=_;}},\n        high:  {get: function(){return getHigh;}, set: function(_){getHigh=_;}},\n        low:   {get: function(){return getLow;}, set: function(_){getLow=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    != undefined ? _.top    : margin.top;\n            margin.right  = _.right  != undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom != undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   != undefined ? _.left   : margin.left;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n    return chart;\n};\n\nnv.models.cumulativeLineChart = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var lines = nv.models.line()\n        , xAxis = nv.models.axis()\n        , yAxis = nv.models.axis()\n        , legend = nv.models.legend()\n        , controls = nv.models.legend()\n        , interactiveLayer = nv.interactiveGuideline()\n        , tooltip = nv.models.tooltip()\n        ;\n\n    var margin = {top: 30, right: 30, bottom: 50, left: 60}\n        , color = nv.utils.defaultColor()\n        , width = null\n        , height = null\n        , showLegend = true\n        , showXAxis = true\n        , showYAxis = true\n        , rightAlignYAxis = false\n        , showControls = true\n        , useInteractiveGuideline = false\n        , rescaleY = true\n        , x //can be accessed via chart.xScale()\n        , y //can be accessed via chart.yScale()\n        , id = lines.id()\n        , state = nv.utils.state()\n        , defaultState = null\n        , noData = null\n        , average = function(d) { return d.average }\n        , dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd')\n        , transitionDuration = 250\n        , duration = 250\n        , noErrorCheck = false  //if set to TRUE, will bypass an error check in the indexify function.\n        ;\n\n    state.index = 0;\n    state.rescaleY = rescaleY;\n\n    xAxis.orient('bottom').tickPadding(7);\n    yAxis.orient((rightAlignYAxis) ? 'right' : 'left');\n\n    tooltip.valueFormatter(function(d, i) {\n        return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function(d, i) {\n        return xAxis.tickFormat()(d, i);\n    });\n\n    controls.updateState(false);\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var dx = d3.scale.linear()\n        , index = {i: 0, x: 0}\n        , renderWatch = nv.utils.renderWatch(dispatch, duration)\n        ;\n\n    var stateGetter = function(data) {\n        return function(){\n            return {\n                active: data.map(function(d) { return !d.disabled }),\n                index: index.i,\n                rescaleY: rescaleY\n            };\n        }\n    };\n\n    var stateSetter = function(data) {\n        return function(state) {\n            if (state.index !== undefined)\n                index.i = state.index;\n            if (state.rescaleY !== undefined)\n                rescaleY = state.rescaleY;\n            if (state.active !== undefined)\n                data.forEach(function(series,i) {\n                    series.disabled = !state.active[i];\n                });\n        }\n    };\n\n    function chart(selection) {\n        renderWatch.reset();\n        renderWatch.models(lines);\n        if (showXAxis) renderWatch.models(xAxis);\n        if (showYAxis) renderWatch.models(yAxis);\n        selection.each(function(data) {\n            var container = d3.select(this);\n            nv.utils.initSVG(container);\n            container.classed('nv-chart-' + id, true);\n            var that = this;\n\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            chart.update = function() {\n                if (duration === 0)\n                    container.call(chart);\n                else\n                    container.transition().duration(duration).call(chart)\n            };\n            chart.container = this;\n\n            state\n                .setter(stateSetter(data), chart.update)\n                .getter(stateGetter(data))\n                .update();\n\n            // DEPRECATED set state.disableddisabled\n            state.disabled = data.map(function(d) { return !!d.disabled });\n\n            if (!defaultState) {\n                var key;\n                defaultState = {};\n                for (key in state) {\n                    if (state[key] instanceof Array)\n                        defaultState[key] = state[key].slice(0);\n                    else\n                        defaultState[key] = state[key];\n                }\n            }\n\n            var indexDrag = d3.behavior.drag()\n                .on('dragstart', dragStart)\n                .on('drag', dragMove)\n                .on('dragend', dragEnd);\n\n\n            function dragStart(d,i) {\n                d3.select(chart.container)\n                    .style('cursor', 'ew-resize');\n            }\n\n            function dragMove(d,i) {\n                index.x = d3.event.x;\n                index.i = Math.round(dx.invert(index.x));\n                updateZero();\n            }\n\n            function dragEnd(d,i) {\n                d3.select(chart.container)\n                    .style('cursor', 'auto');\n\n                // update state and send stateChange with new index\n                state.index = index.i;\n                dispatch.stateChange(state);\n            }\n\n            // Display No Data message if there's nothing to show.\n            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n                nv.utils.noData(chart, container)\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n\n            // Setup Scales\n            x = lines.xScale();\n            y = lines.yScale();\n\n            if (!rescaleY) {\n                var seriesDomains = data\n                    .filter(function(series) { return !series.disabled })\n                    .map(function(series,i) {\n                        var initialDomain = d3.extent(series.values, lines.y());\n\n                        //account for series being disabled when losing 95% or more\n                        if (initialDomain[0] < -.95) initialDomain[0] = -.95;\n\n                        return [\n                                (initialDomain[0] - initialDomain[1]) / (1 + initialDomain[1]),\n                                (initialDomain[1] - initialDomain[0]) / (1 + initialDomain[0])\n                        ];\n                    });\n\n                var completeDomain = [\n                    d3.min(seriesDomains, function(d) { return d[0] }),\n                    d3.max(seriesDomains, function(d) { return d[1] })\n                ];\n\n                lines.yDomain(completeDomain);\n            } else {\n                lines.yDomain(null);\n            }\n\n            dx.domain([0, data[0].values.length - 1]) //Assumes all series have same length\n                .range([0, availableWidth])\n                .clamp(true);\n\n            var data = indexify(index.i, data);\n\n            // Setup containers and skeleton of chart\n            var interactivePointerEvents = (useInteractiveGuideline) ? \"none\" : \"all\";\n            var wrap = container.selectAll('g.nv-wrap.nv-cumulativeLine').data([data]);\n            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-cumulativeLine').append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-interactive');\n            gEnter.append('g').attr('class', 'nv-x nv-axis').style(\"pointer-events\",\"none\");\n            gEnter.append('g').attr('class', 'nv-y nv-axis');\n            gEnter.append('g').attr('class', 'nv-background');\n            gEnter.append('g').attr('class', 'nv-linesWrap').style(\"pointer-events\",interactivePointerEvents);\n            gEnter.append('g').attr('class', 'nv-avgLinesWrap').style(\"pointer-events\",\"none\");\n            gEnter.append('g').attr('class', 'nv-legendWrap');\n            gEnter.append('g').attr('class', 'nv-controlsWrap');\n\n            // Legend\n            if (!showLegend) {\n                g.select('.nv-legendWrap').selectAll('*').remove();\n            } else {\n                legend.width(availableWidth);\n\n                g.select('.nv-legendWrap')\n                    .datum(data)\n                    .call(legend);\n\n                if (legend.height() > margin.top) {\n                    margin.top = legend.height();\n                    availableHeight = nv.utils.availableHeight(height, container, margin);\n                }\n\n                g.select('.nv-legendWrap')\n                    .attr('transform', 'translate(0,' + (-margin.top) +')')\n            }\n\n            // Controls\n            if (!showControls) {\n                 g.select('.nv-controlsWrap').selectAll('*').remove();\n            } else {\n                var controlsData = [\n                    { key: 'Re-scale y-axis', disabled: !rescaleY }\n                ];\n\n                controls\n                    .width(140)\n                    .color(['#444', '#444', '#444'])\n                    .rightAlign(false)\n                    .margin({top: 5, right: 0, bottom: 5, left: 20})\n                ;\n\n                g.select('.nv-controlsWrap')\n                    .datum(controlsData)\n                    .attr('transform', 'translate(0,' + (-margin.top) +')')\n                    .call(controls);\n            }\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            if (rightAlignYAxis) {\n                g.select(\".nv-y.nv-axis\")\n                    .attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n            }\n\n            // Show error if series goes below 100%\n            var tempDisabled = data.filter(function(d) { return d.tempDisabled });\n\n            wrap.select('.tempDisabled').remove(); //clean-up and prevent duplicates\n            if (tempDisabled.length) {\n                wrap.append('text').attr('class', 'tempDisabled')\n                    .attr('x', availableWidth / 2)\n                    .attr('y', '-.71em')\n                    .style('text-anchor', 'end')\n                    .text(tempDisabled.map(function(d) { return d.key }).join(', ') + ' values cannot be calculated for this time period.');\n            }\n\n            //Set up interactive layer\n            if (useInteractiveGuideline) {\n                interactiveLayer\n                    .width(availableWidth)\n                    .height(availableHeight)\n                    .margin({left:margin.left,top:margin.top})\n                    .svgContainer(container)\n                    .xScale(x);\n                wrap.select(\".nv-interactive\").call(interactiveLayer);\n            }\n\n            gEnter.select('.nv-background')\n                .append('rect');\n\n            g.select('.nv-background rect')\n                .attr('width', availableWidth)\n                .attr('height', availableHeight);\n\n            lines\n                //.x(function(d) { return d.x })\n                .y(function(d) { return d.display.y })\n                .width(availableWidth)\n                .height(availableHeight)\n                .color(data.map(function(d,i) {\n                    return d.color || color(d, i);\n                }).filter(function(d,i) { return !data[i].disabled && !data[i].tempDisabled; }));\n\n            var linesWrap = g.select('.nv-linesWrap')\n                .datum(data.filter(function(d) { return  !d.disabled && !d.tempDisabled }));\n\n            linesWrap.call(lines);\n\n            //Store a series index number in the data array.\n            data.forEach(function(d,i) {\n                d.seriesIndex = i;\n            });\n\n            var avgLineData = data.filter(function(d) {\n                return !d.disabled && !!average(d);\n            });\n\n            var avgLines = g.select(\".nv-avgLinesWrap\").selectAll(\"line\")\n                .data(avgLineData, function(d) { return d.key; });\n\n            var getAvgLineY = function(d) {\n                //If average lines go off the svg element, clamp them to the svg bounds.\n                var yVal = y(average(d));\n                if (yVal < 0) return 0;\n                if (yVal > availableHeight) return availableHeight;\n                return yVal;\n            };\n\n            avgLines.enter()\n                .append('line')\n                .style('stroke-width',2)\n                .style('stroke-dasharray','10,10')\n                .style('stroke',function (d,i) {\n                    return lines.color()(d,d.seriesIndex);\n                })\n                .attr('x1',0)\n                .attr('x2',availableWidth)\n                .attr('y1', getAvgLineY)\n                .attr('y2', getAvgLineY);\n\n            avgLines\n                .style('stroke-opacity',function(d){\n                    //If average lines go offscreen, make them transparent\n                    var yVal = y(average(d));\n                    if (yVal < 0 || yVal > availableHeight) return 0;\n                    return 1;\n                })\n                .attr('x1',0)\n                .attr('x2',availableWidth)\n                .attr('y1', getAvgLineY)\n                .attr('y2', getAvgLineY);\n\n            avgLines.exit().remove();\n\n            //Create index line\n            var indexLine = linesWrap.selectAll('.nv-indexLine')\n                .data([index]);\n            indexLine.enter().append('rect').attr('class', 'nv-indexLine')\n                .attr('width', 3)\n                .attr('x', -2)\n                .attr('fill', 'red')\n                .attr('fill-opacity', .5)\n                .style(\"pointer-events\",\"all\")\n                .call(indexDrag);\n\n            indexLine\n                .attr('transform', function(d) { return 'translate(' + dx(d.i) + ',0)' })\n                .attr('height', availableHeight);\n\n            // Setup Axes\n            if (showXAxis) {\n                xAxis\n                    .scale(x)\n                    ._ticks( nv.utils.calcTicksX(availableWidth/70, data) )\n                    .tickSize(-availableHeight, 0);\n\n                g.select('.nv-x.nv-axis')\n                    .attr('transform', 'translate(0,' + y.range()[0] + ')');\n                g.select('.nv-x.nv-axis')\n                    .call(xAxis);\n            }\n\n            if (showYAxis) {\n                yAxis\n                    .scale(y)\n                    ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n                    .tickSize( -availableWidth, 0);\n\n                g.select('.nv-y.nv-axis')\n                    .call(yAxis);\n            }\n\n            //============================================================\n            // Event Handling/Dispatching (in chart's scope)\n            //------------------------------------------------------------\n\n            function updateZero() {\n                indexLine\n                    .data([index]);\n\n                //When dragging the index line, turn off line transitions.\n                // Then turn them back on when done dragging.\n                var oldDuration = chart.duration();\n                chart.duration(0);\n                chart.update();\n                chart.duration(oldDuration);\n            }\n\n            g.select('.nv-background rect')\n                .on('click', function() {\n                    index.x = d3.mouse(this)[0];\n                    index.i = Math.round(dx.invert(index.x));\n\n                    // update state and send stateChange with new index\n                    state.index = index.i;\n                    dispatch.stateChange(state);\n\n                    updateZero();\n                });\n\n            lines.dispatch.on('elementClick', function(e) {\n                index.i = e.pointIndex;\n                index.x = dx(index.i);\n\n                // update state and send stateChange with new index\n                state.index = index.i;\n                dispatch.stateChange(state);\n\n                updateZero();\n            });\n\n            controls.dispatch.on('legendClick', function(d,i) {\n                d.disabled = !d.disabled;\n                rescaleY = !d.disabled;\n\n                state.rescaleY = rescaleY;\n                dispatch.stateChange(state);\n                chart.update();\n            });\n\n            legend.dispatch.on('stateChange', function(newState) {\n                for (var key in newState)\n                    state[key] = newState[key];\n                dispatch.stateChange(state);\n                chart.update();\n            });\n\n            interactiveLayer.dispatch.on('elementMousemove', function(e) {\n                lines.clearHighlights();\n                var singlePoint, pointIndex, pointXLocation, allData = [];\n\n                data\n                    .filter(function(series, i) {\n                        series.seriesIndex = i;\n                        return !series.disabled;\n                    })\n                    .forEach(function(series,i) {\n                        pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n                        lines.highlightPoint(i, pointIndex, true);\n                        var point = series.values[pointIndex];\n                        if (typeof point === 'undefined') return;\n                        if (typeof singlePoint === 'undefined') singlePoint = point;\n                        if (typeof pointXLocation === 'undefined') pointXLocation = chart.xScale()(chart.x()(point,pointIndex));\n                        allData.push({\n                            key: series.key,\n                            value: chart.y()(point, pointIndex),\n                            color: color(series,series.seriesIndex)\n                        });\n                    });\n\n                //Highlight the tooltip entry based on which point the mouse is closest to.\n                if (allData.length > 2) {\n                    var yValue = chart.yScale().invert(e.mouseY);\n                    var domainExtent = Math.abs(chart.yScale().domain()[0] - chart.yScale().domain()[1]);\n                    var threshold = 0.03 * domainExtent;\n                    var indexToHighlight = nv.nearestValueIndex(allData.map(function(d){return d.value}),yValue,threshold);\n                    if (indexToHighlight !== null)\n                        allData[indexToHighlight].highlight = true;\n                }\n\n                var xValue = xAxis.tickFormat()(chart.x()(singlePoint,pointIndex), pointIndex);\n                interactiveLayer.tooltip\n                    .valueFormatter(function(d,i) {\n                        return yAxis.tickFormat()(d);\n                    })\n                    .data(\n                    {\n                        value: xValue,\n                        series: allData\n                    }\n                )();\n\n                interactiveLayer.renderGuideLine(pointXLocation);\n            });\n\n            interactiveLayer.dispatch.on(\"elementMouseout\",function(e) {\n                lines.clearHighlights();\n            });\n\n            // Update chart from a state object passed to event handler\n            dispatch.on('changeState', function(e) {\n                if (typeof e.disabled !== 'undefined') {\n                    data.forEach(function(series,i) {\n                        series.disabled = e.disabled[i];\n                    });\n\n                    state.disabled = e.disabled;\n                }\n\n                if (typeof e.index !== 'undefined') {\n                    index.i = e.index;\n                    index.x = dx(index.i);\n\n                    state.index = e.index;\n\n                    indexLine\n                        .data([index]);\n                }\n\n                if (typeof e.rescaleY !== 'undefined') {\n                    rescaleY = e.rescaleY;\n                }\n\n                chart.update();\n            });\n\n        });\n\n        renderWatch.renderEnd('cumulativeLineChart immediate');\n\n        return chart;\n    }\n\n    //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n    lines.dispatch.on('elementMouseover.tooltip', function(evt) {\n        var point = {\n            x: chart.x()(evt.point),\n            y: chart.y()(evt.point),\n            color: evt.point.color\n        };\n        evt.point = point;\n        tooltip.data(evt).hidden(false);\n    });\n\n    lines.dispatch.on('elementMouseout.tooltip', function(evt) {\n        tooltip.hidden(true)\n    });\n\n    //============================================================\n    // Functions\n    //------------------------------------------------------------\n\n    var indexifyYGetter = null;\n    /* Normalize the data according to an index point. */\n    function indexify(idx, data) {\n        if (!indexifyYGetter) indexifyYGetter = lines.y();\n        return data.map(function(line, i) {\n            if (!line.values) {\n                return line;\n            }\n            var indexValue = line.values[idx];\n            if (indexValue == null) {\n                return line;\n            }\n            var v = indexifyYGetter(indexValue, idx);\n\n            //TODO: implement check below, and disable series if series loses 100% or more cause divide by 0 issue\n            if (v < -.95 && !noErrorCheck) {\n                //if a series loses more than 100%, calculations fail.. anything close can cause major distortion (but is mathematically correct till it hits 100)\n\n                line.tempDisabled = true;\n                return line;\n            }\n\n            line.tempDisabled = false;\n\n            line.values = line.values.map(function(point, pointIndex) {\n                point.display = {'y': (indexifyYGetter(point, pointIndex) - v) / (1 + v) };\n                return point;\n            });\n\n            return line;\n        })\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    // expose chart's sub-components\n    chart.dispatch = dispatch;\n    chart.lines = lines;\n    chart.legend = legend;\n    chart.controls = controls;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.interactiveLayer = interactiveLayer;\n    chart.state = state;\n    chart.tooltip = tooltip;\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        rescaleY:     {get: function(){return rescaleY;}, set: function(_){rescaleY=_;}},\n        showControls:     {get: function(){return showControls;}, set: function(_){showControls=_;}},\n        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n        average: {get: function(){return average;}, set: function(_){average=_;}},\n        defaultState:    {get: function(){return defaultState;}, set: function(_){defaultState=_;}},\n        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n        showXAxis:    {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n        showYAxis:    {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n        noErrorCheck:    {get: function(){return noErrorCheck;}, set: function(_){noErrorCheck=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n            legend.color(color);\n        }},\n        useInteractiveGuideline: {get: function(){return useInteractiveGuideline;}, set: function(_){\n            useInteractiveGuideline = _;\n            if (_ === true) {\n                chart.interactive(false);\n                chart.useVoronoi(false);\n            }\n        }},\n        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n            rightAlignYAxis = _;\n            yAxis.orient( (_) ? 'right' : 'left');\n        }},\n        duration:    {get: function(){return duration;}, set: function(_){\n            duration = _;\n            lines.duration(duration);\n            xAxis.duration(duration);\n            yAxis.duration(duration);\n            renderWatch.reset(duration);\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, lines);\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n//TODO: consider deprecating by adding necessary features to multiBar model\nnv.models.discreteBar = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n        , width = 960\n        , height = 500\n        , id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n        , container\n        , x = d3.scale.ordinal()\n        , y = d3.scale.linear()\n        , getX = function(d) { return d.x }\n        , getY = function(d) { return d.y }\n        , forceY = [0] // 0 is forced by default.. this makes sense for the majority of bar graphs... user can always do chart.forceY([]) to remove\n        , color = nv.utils.defaultColor()\n        , showValues = false\n        , valueFormat = d3.format(',.2f')\n        , xDomain\n        , yDomain\n        , xRange\n        , yRange\n        , dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd')\n        , rectClass = 'discreteBar'\n        , duration = 250\n        ;\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var x0, y0;\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n        renderWatch.reset();\n        selection.each(function(data) {\n            var availableWidth = width - margin.left - margin.right,\n                availableHeight = height - margin.top - margin.bottom;\n\n            container = d3.select(this);\n            nv.utils.initSVG(container);\n\n            //add series index to each data point for reference\n            data.forEach(function(series, i) {\n                series.values.forEach(function(point) {\n                    point.series = i;\n                });\n            });\n\n            // Setup Scales\n            // remap and flatten the data for use in calculating the scales' domains\n            var seriesData = (xDomain && yDomain) ? [] : // if we know xDomain and yDomain, no need to calculate\n                data.map(function(d) {\n                    return d.values.map(function(d,i) {\n                        return { x: getX(d,i), y: getY(d,i), y0: d.y0 }\n                    })\n                });\n\n            x   .domain(xDomain || d3.merge(seriesData).map(function(d) { return d.x }))\n                .rangeBands(xRange || [0, availableWidth], .1);\n            y   .domain(yDomain || d3.extent(d3.merge(seriesData).map(function(d) { return d.y }).concat(forceY)));\n\n            // If showValues, pad the Y axis range to account for label height\n            if (showValues) y.range(yRange || [availableHeight - (y.domain()[0] < 0 ? 12 : 0), y.domain()[1] > 0 ? 12 : 0]);\n            else y.range(yRange || [availableHeight, 0]);\n\n            //store old scales if they exist\n            x0 = x0 || x;\n            y0 = y0 || y.copy().range([y(0),y(0)]);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-discretebar').data([data]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-discretebar');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-groups');\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            //TODO: by definition, the discrete bar should not have multiple groups, will modify/remove later\n            var groups = wrap.select('.nv-groups').selectAll('.nv-group')\n                .data(function(d) { return d }, function(d) { return d.key });\n            groups.enter().append('g')\n                .style('stroke-opacity', 1e-6)\n                .style('fill-opacity', 1e-6);\n            groups.exit()\n                .watchTransition(renderWatch, 'discreteBar: exit groups')\n                .style('stroke-opacity', 1e-6)\n                .style('fill-opacity', 1e-6)\n                .remove();\n            groups\n                .attr('class', function(d,i) { return 'nv-group nv-series-' + i })\n                .classed('hover', function(d) { return d.hover });\n            groups\n                .watchTransition(renderWatch, 'discreteBar: groups')\n                .style('stroke-opacity', 1)\n                .style('fill-opacity', .75);\n\n            var bars = groups.selectAll('g.nv-bar')\n                .data(function(d) { return d.values });\n            bars.exit().remove();\n\n            var barsEnter = bars.enter().append('g')\n                .attr('transform', function(d,i,j) {\n                    return 'translate(' + (x(getX(d,i)) + x.rangeBand() * .05 ) + ', ' + y(0) + ')'\n                })\n                .on('mouseover', function(d,i) { //TODO: figure out why j works above, but not here\n                    d3.select(this).classed('hover', true);\n                    dispatch.elementMouseover({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                })\n                .on('mouseout', function(d,i) {\n                    d3.select(this).classed('hover', false);\n                    dispatch.elementMouseout({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                })\n                .on('mousemove', function(d,i) {\n                    dispatch.elementMousemove({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                })\n                .on('click', function(d,i) {\n                    var element = this;\n                    dispatch.elementClick({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\"),\n                        event: d3.event,\n                        element: element\n                    });\n                    d3.event.stopPropagation();\n                })\n                .on('dblclick', function(d,i) {\n                    dispatch.elementDblClick({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                    d3.event.stopPropagation();\n                });\n\n            barsEnter.append('rect')\n                .attr('height', 0)\n                .attr('width', x.rangeBand() * .9 / data.length )\n\n            if (showValues) {\n                barsEnter.append('text')\n                    .attr('text-anchor', 'middle')\n                ;\n\n                bars.select('text')\n                    .text(function(d,i) { return valueFormat(getY(d,i)) })\n                    .watchTransition(renderWatch, 'discreteBar: bars text')\n                    .attr('x', x.rangeBand() * .9 / 2)\n                    .attr('y', function(d,i) { return getY(d,i) < 0 ? y(getY(d,i)) - y(0) + 12 : -4 })\n\n                ;\n            } else {\n                bars.selectAll('text').remove();\n            }\n\n            bars\n                .attr('class', function(d,i) { return getY(d,i) < 0 ? 'nv-bar negative' : 'nv-bar positive' })\n                .style('fill', function(d,i) { return d.color || color(d,i) })\n                .style('stroke', function(d,i) { return d.color || color(d,i) })\n                .select('rect')\n                .attr('class', rectClass)\n                .watchTransition(renderWatch, 'discreteBar: bars rect')\n                .attr('width', x.rangeBand() * .9 / data.length);\n            bars.watchTransition(renderWatch, 'discreteBar: bars')\n                //.delay(function(d,i) { return i * 1200 / data[0].values.length })\n                .attr('transform', function(d,i) {\n                    var left = x(getX(d,i)) + x.rangeBand() * .05,\n                        top = getY(d,i) < 0 ?\n                            y(0) :\n                                y(0) - y(getY(d,i)) < 1 ?\n                            y(0) - 1 : //make 1 px positive bars show up above y=0\n                            y(getY(d,i));\n\n                    return 'translate(' + left + ', ' + top + ')'\n                })\n                .select('rect')\n                .attr('height', function(d,i) {\n                    return  Math.max(Math.abs(y(getY(d,i)) - y(0)), 1)\n                });\n\n\n            //store old scales for use in transitions on update\n            x0 = x.copy();\n            y0 = y.copy();\n\n        });\n\n        renderWatch.renderEnd('discreteBar immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:   {get: function(){return width;}, set: function(_){width=_;}},\n        height:  {get: function(){return height;}, set: function(_){height=_;}},\n        forceY:  {get: function(){return forceY;}, set: function(_){forceY=_;}},\n        showValues: {get: function(){return showValues;}, set: function(_){showValues=_;}},\n        x:       {get: function(){return getX;}, set: function(_){getX=_;}},\n        y:       {get: function(){return getY;}, set: function(_){getY=_;}},\n        xScale:  {get: function(){return x;}, set: function(_){x=_;}},\n        yScale:  {get: function(){return y;}, set: function(_){y=_;}},\n        xDomain: {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n        yDomain: {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n        xRange:  {get: function(){return xRange;}, set: function(_){xRange=_;}},\n        yRange:  {get: function(){return yRange;}, set: function(_){yRange=_;}},\n        valueFormat:    {get: function(){return valueFormat;}, set: function(_){valueFormat=_;}},\n        id:          {get: function(){return id;}, set: function(_){id=_;}},\n        rectClass: {get: function(){return rectClass;}, set: function(_){rectClass=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n\nnv.models.discreteBarChart = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var discretebar = nv.models.discreteBar()\n        , xAxis = nv.models.axis()\n        , yAxis = nv.models.axis()\n\t, legend = nv.models.legend()\n        , tooltip = nv.models.tooltip()\n        ;\n\n    var margin = {top: 15, right: 10, bottom: 50, left: 60}\n        , width = null\n        , height = null\n        , color = nv.utils.getColor()\n\t, showLegend = false\n        , showXAxis = true\n        , showYAxis = true\n        , rightAlignYAxis = false\n        , staggerLabels = false\n        , wrapLabels = false\n        , rotateLabels = 0\n        , x\n        , y\n        , noData = null\n        , dispatch = d3.dispatch('beforeUpdate','renderEnd')\n        , duration = 250\n        ;\n\n    xAxis\n        .orient('bottom')\n        .showMaxMin(false)\n        .tickFormat(function(d) { return d })\n    ;\n    yAxis\n        .orient((rightAlignYAxis) ? 'right' : 'left')\n        .tickFormat(d3.format(',.1f'))\n    ;\n\n    tooltip\n        .duration(0)\n        .headerEnabled(false)\n        .valueFormatter(function(d, i) {\n            return yAxis.tickFormat()(d, i);\n        })\n        .keyFormatter(function(d, i) {\n            return xAxis.tickFormat()(d, i);\n        });\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n        renderWatch.reset();\n        renderWatch.models(discretebar);\n        if (showXAxis) renderWatch.models(xAxis);\n        if (showYAxis) renderWatch.models(yAxis);\n\n        selection.each(function(data) {\n            var container = d3.select(this),\n                that = this;\n            nv.utils.initSVG(container);\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            chart.update = function() {\n                dispatch.beforeUpdate();\n                container.transition().duration(duration).call(chart);\n            };\n            chart.container = this;\n\n            // Display No Data message if there's nothing to show.\n            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n                nv.utils.noData(chart, container);\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n\n            // Setup Scales\n            x = discretebar.xScale();\n            y = discretebar.yScale().clamp(true);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-discreteBarWithAxes').data([data]);\n            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-discreteBarWithAxes').append('g');\n            var defsEnter = gEnter.append('defs');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-x nv-axis');\n            gEnter.append('g').attr('class', 'nv-y nv-axis')\n                .append('g').attr('class', 'nv-zeroLine')\n                .append('line');\n\n            gEnter.append('g').attr('class', 'nv-barsWrap');\n\t    gEnter.append('g').attr('class', 'nv-legendWrap');\n\n            g.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            // Legend\n            if (!showLegend) {\n                g.select('.nv-legendWrap').selectAll('*').remove();\n            } else {\n                legend.width(availableWidth);\n\n                g.select('.nv-legendWrap')\n                    .datum(data)\n                    .call(legend);\n\n                if (legend.height() > margin.top) {\n                    margin.top = legend.height();\n                    availableHeight = nv.utils.availableHeight(height, container, margin);\n                }\n\n                wrap.select('.nv-legendWrap')\n                    .attr('transform', 'translate(0,' + (-margin.top) +')')\n            }\n\n            if (rightAlignYAxis) {\n                g.select(\".nv-y.nv-axis\")\n                    .attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n            }\n\n            // Main Chart Component(s)\n            discretebar\n                .width(availableWidth)\n                .height(availableHeight);\n\n            var barsWrap = g.select('.nv-barsWrap')\n                .datum(data.filter(function(d) { return !d.disabled }));\n\n            barsWrap.transition().call(discretebar);\n\n\n            defsEnter.append('clipPath')\n                .attr('id', 'nv-x-label-clip-' + discretebar.id())\n                .append('rect');\n\n            g.select('#nv-x-label-clip-' + discretebar.id() + ' rect')\n                .attr('width', x.rangeBand() * (staggerLabels ? 2 : 1))\n                .attr('height', 16)\n                .attr('x', -x.rangeBand() / (staggerLabels ? 1 : 2 ));\n\n            // Setup Axes\n            if (showXAxis) {\n                xAxis\n                    .scale(x)\n                    ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n                    .tickSize(-availableHeight, 0);\n\n                g.select('.nv-x.nv-axis')\n                    .attr('transform', 'translate(0,' + (y.range()[0] + ((discretebar.showValues() && y.domain()[0] < 0) ? 16 : 0)) + ')');\n                g.select('.nv-x.nv-axis').call(xAxis);\n\n                var xTicks = g.select('.nv-x.nv-axis').selectAll('g');\n                if (staggerLabels) {\n                    xTicks\n                        .selectAll('text')\n                        .attr('transform', function(d,i,j) { return 'translate(0,' + (j % 2 == 0 ? '5' : '17') + ')' })\n                }\n\n                if (rotateLabels) {\n                    xTicks\n                        .selectAll('.tick text')\n                        .attr('transform', 'rotate(' + rotateLabels + ' 0,0)')\n                        .style('text-anchor', rotateLabels > 0 ? 'start' : 'end');\n                }\n\n                if (wrapLabels) {\n                    g.selectAll('.tick text')\n                        .call(nv.utils.wrapTicks, chart.xAxis.rangeBand())\n                }\n            }\n\n            if (showYAxis) {\n                yAxis\n                    .scale(y)\n                    ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n                    .tickSize( -availableWidth, 0);\n\n                g.select('.nv-y.nv-axis').call(yAxis);\n            }\n\n            // Zero line\n            g.select(\".nv-zeroLine line\")\n                .attr(\"x1\",0)\n                .attr(\"x2\",(rightAlignYAxis) ? -availableWidth : availableWidth)\n                .attr(\"y1\", y(0))\n                .attr(\"y2\", y(0))\n            ;\n        });\n\n        renderWatch.renderEnd('discreteBar chart immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n    discretebar.dispatch.on('elementMouseover.tooltip', function(evt) {\n        evt['series'] = {\n            key: chart.x()(evt.data),\n            value: chart.y()(evt.data),\n            color: evt.color\n        };\n        tooltip.data(evt).hidden(false);\n    });\n\n    discretebar.dispatch.on('elementMouseout.tooltip', function(evt) {\n        tooltip.hidden(true);\n    });\n\n    discretebar.dispatch.on('elementMousemove.tooltip', function(evt) {\n        tooltip();\n    });\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.discretebar = discretebar;\n    chart.legend = legend;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.tooltip = tooltip;\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n\tshowLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n        staggerLabels: {get: function(){return staggerLabels;}, set: function(_){staggerLabels=_;}},\n        rotateLabels:  {get: function(){return rotateLabels;}, set: function(_){rotateLabels=_;}},\n        wrapLabels:  {get: function(){return wrapLabels;}, set: function(_){wrapLabels=!!_;}},\n        showXAxis: {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n        showYAxis: {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n            discretebar.duration(duration);\n            xAxis.duration(duration);\n            yAxis.duration(duration);\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n            discretebar.color(color);\n\t    legend.color(color);\n        }},\n        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n            rightAlignYAxis = _;\n            yAxis.orient( (_) ? 'right' : 'left');\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, discretebar);\n    nv.utils.initOptions(chart);\n\n    return chart;\n}\n\nnv.models.distribution = function() {\n    \"use strict\";\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n        , width = 400 //technically width or height depending on x or y....\n        , size = 8\n        , axis = 'x' // 'x' or 'y'... horizontal or vertical\n        , getData = function(d) { return d[axis] }  // defaults d.x or d.y\n        , color = nv.utils.defaultColor()\n        , scale = d3.scale.linear()\n        , domain\n        , duration = 250\n        , dispatch = d3.dispatch('renderEnd')\n        ;\n\n    //============================================================\n\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var scale0;\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    //============================================================\n\n\n    function chart(selection) {\n        renderWatch.reset();\n        selection.each(function(data) {\n            var availableLength = width - (axis === 'x' ? margin.left + margin.right : margin.top + margin.bottom),\n                naxis = axis == 'x' ? 'y' : 'x',\n                container = d3.select(this);\n            nv.utils.initSVG(container);\n\n            //------------------------------------------------------------\n            // Setup Scales\n\n            scale0 = scale0 || scale;\n\n            //------------------------------------------------------------\n\n\n            //------------------------------------------------------------\n            // Setup containers and skeleton of chart\n\n            var wrap = container.selectAll('g.nv-distribution').data([data]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-distribution');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')\n\n            //------------------------------------------------------------\n\n\n            var distWrap = g.selectAll('g.nv-dist')\n                .data(function(d) { return d }, function(d) { return d.key });\n\n            distWrap.enter().append('g');\n            distWrap\n                .attr('class', function(d,i) { return 'nv-dist nv-series-' + i })\n                .style('stroke', function(d,i) { return color(d, i) });\n\n            var dist = distWrap.selectAll('line.nv-dist' + axis)\n                .data(function(d) { return d.values })\n            dist.enter().append('line')\n                .attr(axis + '1', function(d,i) { return scale0(getData(d,i)) })\n                .attr(axis + '2', function(d,i) { return scale0(getData(d,i)) })\n            renderWatch.transition(distWrap.exit().selectAll('line.nv-dist' + axis), 'dist exit')\n                // .transition()\n                .attr(axis + '1', function(d,i) { return scale(getData(d,i)) })\n                .attr(axis + '2', function(d,i) { return scale(getData(d,i)) })\n                .style('stroke-opacity', 0)\n                .remove();\n            dist\n                .attr('class', function(d,i) { return 'nv-dist' + axis + ' nv-dist' + axis + '-' + i })\n                .attr(naxis + '1', 0)\n                .attr(naxis + '2', size);\n            renderWatch.transition(dist, 'dist')\n                // .transition()\n                .attr(axis + '1', function(d,i) { return scale(getData(d,i)) })\n                .attr(axis + '2', function(d,i) { return scale(getData(d,i)) })\n\n\n            scale0 = scale.copy();\n\n        });\n        renderWatch.renderEnd('distribution immediate');\n        return chart;\n    }\n\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart.dispatch = dispatch;\n\n    chart.margin = function(_) {\n        if (!arguments.length) return margin;\n        margin.top    = typeof _.top    != 'undefined' ? _.top    : margin.top;\n        margin.right  = typeof _.right  != 'undefined' ? _.right  : margin.right;\n        margin.bottom = typeof _.bottom != 'undefined' ? _.bottom : margin.bottom;\n        margin.left   = typeof _.left   != 'undefined' ? _.left   : margin.left;\n        return chart;\n    };\n\n    chart.width = function(_) {\n        if (!arguments.length) return width;\n        width = _;\n        return chart;\n    };\n\n    chart.axis = function(_) {\n        if (!arguments.length) return axis;\n        axis = _;\n        return chart;\n    };\n\n    chart.size = function(_) {\n        if (!arguments.length) return size;\n        size = _;\n        return chart;\n    };\n\n    chart.getData = function(_) {\n        if (!arguments.length) return getData;\n        getData = d3.functor(_);\n        return chart;\n    };\n\n    chart.scale = function(_) {\n        if (!arguments.length) return scale;\n        scale = _;\n        return chart;\n    };\n\n    chart.color = function(_) {\n        if (!arguments.length) return color;\n        color = nv.utils.getColor(_);\n        return chart;\n    };\n\n    chart.duration = function(_) {\n        if (!arguments.length) return duration;\n        duration = _;\n        renderWatch.reset(duration);\n        return chart;\n    };\n    //============================================================\n\n\n    return chart;\n}\nnv.models.focus = function(content) {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var content = content || nv.models.line()\n        , xAxis = nv.models.axis()\n        , yAxis = nv.models.axis()\n        , brush = d3.svg.brush()\n        ;\n\n    var margin = {top: 10, right: 0, bottom: 30, left: 0}\n        , color = nv.utils.defaultColor()\n        , width = null\n        , height = 70\n        , showXAxis = true\n        , showYAxis = false\n        , rightAlignYAxis = false\n        , ticks = null\n        , x\n        , y\n        , brushExtent = null\n        , duration = 250\n        , dispatch = d3.dispatch('brush', 'onBrush', 'renderEnd')\n        ;\n\n    content.interactive(false);\n    content.pointActive(function(d) { return false; });\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n        renderWatch.reset();\n        renderWatch.models(content);\n        if (showXAxis) renderWatch.models(xAxis);\n        if (showYAxis) renderWatch.models(yAxis);\n\n        selection.each(function(data) {\n            var container = d3.select(this);\n            nv.utils.initSVG(container);\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = height - margin.top - margin.bottom;\n\n            chart.update = function() { \n                if( duration === 0 ) {\n                    container.call( chart );\n                } else {\n                    container.transition().duration(duration).call(chart);\n                }\n            };\n            chart.container = this;\n\n            // Setup Scales\n            x = content.xScale();\n            y = content.yScale();\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-focus').data([data]);\n            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-focus').append('g');\n            var g = wrap.select('g');\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            gEnter.append('g').attr('class', 'nv-background').append('rect');\n            gEnter.append('g').attr('class', 'nv-x nv-axis');\n            gEnter.append('g').attr('class', 'nv-y nv-axis');\n            gEnter.append('g').attr('class', 'nv-contentWrap');\n            gEnter.append('g').attr('class', 'nv-brushBackground');\n            gEnter.append('g').attr('class', 'nv-x nv-brush');\n\n            if (rightAlignYAxis) {\n                g.select(\".nv-y.nv-axis\")\n                    .attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n            }\n\n            g.select('.nv-background rect')\n                .attr('width', availableWidth)\n                .attr('height', availableHeight);\n                \n            content\n                .width(availableWidth)\n                .height(availableHeight)\n                .color(data.map(function(d,i) {\n                    return d.color || color(d, i);\n                }).filter(function(d,i) { return !data[i].disabled; }));\n\n            var contentWrap = g.select('.nv-contentWrap')\n                .datum(data.filter(function(d) { return !d.disabled; }));\n\n            d3.transition(contentWrap).call(content);\n            \n            // Setup Brush\n            brush\n                .x(x)\n                .on('brush', function() {\n                    onBrush();\n                });\n\n            if (brushExtent) brush.extent(brushExtent);\n\n            var brushBG = g.select('.nv-brushBackground').selectAll('g')\n                .data([brushExtent || brush.extent()]);\n    \n            var brushBGenter = brushBG.enter()\n                .append('g');\n\n            brushBGenter.append('rect')\n                .attr('class', 'left')\n                .attr('x', 0)\n                .attr('y', 0)\n                .attr('height', availableHeight);\n\n            brushBGenter.append('rect')\n                .attr('class', 'right')\n                .attr('x', 0)\n                .attr('y', 0)\n                .attr('height', availableHeight);\n\n            var gBrush = g.select('.nv-x.nv-brush')\n                .call(brush);\n            gBrush.selectAll('rect')\n                .attr('height', availableHeight);\n            gBrush.selectAll('.resize').append('path').attr('d', resizePath);\n\n            onBrush();\n\n            g.select('.nv-background rect')\n                .attr('width', availableWidth)\n                .attr('height', availableHeight);\n\n            if (showXAxis) {\n                xAxis.scale(x)\n                    ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n                    .tickSize(-availableHeight, 0);\n  \n                g.select('.nv-x.nv-axis')\n                    .attr('transform', 'translate(0,' + y.range()[0] + ')');\n                d3.transition(g.select('.nv-x.nv-axis'))\n                    .call(xAxis);\n            }\n\n            if (showYAxis) {\n                yAxis\n                    .scale(y)\n                    ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n                    .tickSize( -availableWidth, 0);\n\n                d3.transition(g.select('.nv-y.nv-axis'))\n                    .call(yAxis);\n            }\n            \n            g.select('.nv-x.nv-axis')\n                .attr('transform', 'translate(0,' + y.range()[0] + ')');\n\n            //============================================================\n            // Event Handling/Dispatching (in chart's scope)\n            //------------------------------------------------------------\n\n            //============================================================\n            // Functions\n            //------------------------------------------------------------\n    \n            // Taken from crossfilter (http://square.github.com/crossfilter/)\n            function resizePath(d) {\n                var e = +(d == 'e'),\n                    x = e ? 1 : -1,\n                    y = availableHeight / 3;\n                return 'M' + (0.5 * x) + ',' + y\n                    + 'A6,6 0 0 ' + e + ' ' + (6.5 * x) + ',' + (y + 6)\n                    + 'V' + (2 * y - 6)\n                    + 'A6,6 0 0 ' + e + ' ' + (0.5 * x) + ',' + (2 * y)\n                    + 'Z'\n                    + 'M' + (2.5 * x) + ',' + (y + 8)\n                    + 'V' + (2 * y - 8)\n                    + 'M' + (4.5 * x) + ',' + (y + 8)\n                    + 'V' + (2 * y - 8);\n            }\n    \n    \n            function updateBrushBG() {\n                if (!brush.empty()) brush.extent(brushExtent);\n                brushBG\n                    .data([brush.empty() ? x.domain() : brushExtent])\n                    .each(function(d,i) {\n                        var leftWidth = x(d[0]) - x.range()[0],\n                            rightWidth = availableWidth - x(d[1]);\n                        d3.select(this).select('.left')\n                            .attr('width',  leftWidth < 0 ? 0 : leftWidth);\n    \n                        d3.select(this).select('.right')\n                            .attr('x', x(d[1]))\n                            .attr('width', rightWidth < 0 ? 0 : rightWidth);\n                    });\n            }\n    \n    \n            function onBrush() {\n                brushExtent = brush.empty() ? null : brush.extent();\n                var extent = brush.empty() ? x.domain() : brush.extent();\n    \n                //The brush extent cannot be less than one.  If it is, don't update the line chart.\n                if (Math.abs(extent[0] - extent[1]) <= 1) {\n                    return;\n                }\n    \n                dispatch.brush({extent: extent, brush: brush});\n \n                updateBrushBG();\n                dispatch.onBrush(extent);\n            }\n\n\n        });\n\n        renderWatch.renderEnd('focus immediate');\n        return chart;\n    }\n\n\n    //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    // expose chart's sub-components\n    chart.dispatch = dispatch;\n    chart.content = content;\n    chart.brush = brush;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        showXAxis:      {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n        showYAxis:    {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n        brushExtent: {get: function(){return brushExtent;}, set: function(_){brushExtent=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n            content.duration(duration);\n            xAxis.duration(duration);\n            yAxis.duration(duration);\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n            content.color(color);\n        }},\n        interpolate: {get: function(){return content.interpolate();}, set: function(_){\n            content.interpolate(_);\n        }},\n        xTickFormat: {get: function(){return xAxis.tickFormat();}, set: function(_){\n            xAxis.tickFormat(_);\n        }},\n        yTickFormat: {get: function(){return yAxis.tickFormat();}, set: function(_){\n            yAxis.tickFormat(_);\n        }},\n        x: {get: function(){return content.x();}, set: function(_){\n            content.x(_);\n        }},\n        y: {get: function(){return content.y();}, set: function(_){\n            content.y(_);\n        }},\n        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n            rightAlignYAxis = _;\n            yAxis.orient( rightAlignYAxis ? 'right' : 'left');\n        }},\n    });\n\n    nv.utils.inheritOptions(chart, content);\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\nnv.models.forceDirectedGraph = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n    var margin = {top: 2, right: 0, bottom: 2, left: 0}\n        , width = 400\n        , height = 32\n        , container = null\n        , dispatch = d3.dispatch('renderEnd')\n        , color = nv.utils.getColor(['#000'])\n        , tooltip      = nv.models.tooltip()\n        , noData = null\n        // Force directed graph specific parameters [default values]\n        , linkStrength = 0.1\n        , friction = 0.9\n        , linkDist = 30\n        , charge = -120\n        , gravity = 0.1\n        , theta = 0.8\n        , alpha = 0.1\n        , radius = 5\n        // These functions allow to add extra attributes to ndes and links\n        ,nodeExtras = function(nodes) { /* Do nothing */ }\n        ,linkExtras = function(links) { /* Do nothing */ }\n        ;\n\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n        renderWatch.reset();\n\n        selection.each(function(data) {\n          container = d3.select(this);\n          nv.utils.initSVG(container);\n\n          var availableWidth = nv.utils.availableWidth(width, container, margin),\n              availableHeight = nv.utils.availableHeight(height, container, margin);\n\n          container\n                  .attr(\"width\", availableWidth)\n                  .attr(\"height\", availableHeight);\n\n          // Display No Data message if there's nothing to show.\n          if (!data || !data.links || !data.nodes) {\n              nv.utils.noData(chart, container)\n              return chart;\n          } else {\n              container.selectAll('.nv-noData').remove();\n          }\n          container.selectAll('*').remove();\n\n          // Collect names of all fields in the nodes\n          var nodeFieldSet = new Set();\n          data.nodes.forEach(function(node) {\n            var keys = Object.keys(node);\n            keys.forEach(function(key) {\n              nodeFieldSet.add(key);\n            });\n          });\n\n          var force = d3.layout.force()\n                .nodes(data.nodes)\n                .links(data.links)\n                .size([availableWidth, availableHeight])\n                .linkStrength(linkStrength)\n                .friction(friction)\n                .linkDistance(linkDist)\n                .charge(charge)\n                .gravity(gravity)\n                .theta(theta)\n                .alpha(alpha)\n                .start();\n\n          var link = container.selectAll(\".link\")\n                .data(data.links)\n                .enter().append(\"line\")\n                .attr(\"class\", \"nv-force-link\")\n                .style(\"stroke-width\", function(d) { return Math.sqrt(d.value); });\n\n          var node = container.selectAll(\".node\")\n                .data(data.nodes)\n                .enter()\n                .append(\"g\")\n                .attr(\"class\", \"nv-force-node\")\n                .call(force.drag);\n\n          node\n            .append(\"circle\")\n            .attr(\"r\", radius)\n            .style(\"fill\", function(d) { return color(d) } )\n            .on(\"mouseover\", function(evt) {\n              container.select('.nv-series-' + evt.seriesIndex + ' .nv-distx-' + evt.pointIndex)\n                  .attr('y1', evt.py);\n              container.select('.nv-series-' + evt.seriesIndex + ' .nv-disty-' + evt.pointIndex)\n                  .attr('x2', evt.px);\n\n              // Add 'series' object to\n              var nodeColor = color(evt);\n              evt.series = [];\n              nodeFieldSet.forEach(function(field) {\n                evt.series.push({\n                  color: nodeColor,\n                  key:   field,\n                  value: evt[field]\n                });\n              });\n              tooltip.data(evt).hidden(false);\n            })\n            .on(\"mouseout\",  function(d) {\n              tooltip.hidden(true);\n            });\n\n          tooltip.headerFormatter(function(d) {return \"Node\";});\n\n          // Apply extra attributes to nodes and links (if any)\n          linkExtras(link);\n          nodeExtras(node);\n\n          force.on(\"tick\", function() {\n              link.attr(\"x1\", function(d) { return d.source.x; })\n                  .attr(\"y1\", function(d) { return d.source.y; })\n                  .attr(\"x2\", function(d) { return d.target.x; })\n                  .attr(\"y2\", function(d) { return d.target.y; });\n\n              node.attr(\"transform\", function(d) {\n                return \"translate(\" + d.x + \", \" + d.y + \")\";\n              });\n            });\n        });\n\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:     {get: function(){return width;}, set: function(_){width=_;}},\n        height:    {get: function(){return height;}, set: function(_){height=_;}},\n\n        // Force directed graph specific parameters\n        linkStrength:{get: function(){return linkStrength;}, set: function(_){linkStrength=_;}},\n        friction:    {get: function(){return friction;}, set: function(_){friction=_;}},\n        linkDist:    {get: function(){return linkDist;}, set: function(_){linkDist=_;}},\n        charge:      {get: function(){return charge;}, set: function(_){charge=_;}},\n        gravity:     {get: function(){return gravity;}, set: function(_){gravity=_;}},\n        theta:       {get: function(){return theta;}, set: function(_){theta=_;}},\n        alpha:       {get: function(){return alpha;}, set: function(_){alpha=_;}},\n        radius:      {get: function(){return radius;}, set: function(_){radius=_;}},\n\n        //functor options\n        x: {get: function(){return getX;}, set: function(_){getX=d3.functor(_);}},\n        y: {get: function(){return getY;}, set: function(_){getY=d3.functor(_);}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }},\n        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n        nodeExtras: {get: function(){return nodeExtras;}, set: function(_){\n            nodeExtras = _;\n        }},\n        linkExtras: {get: function(){return linkExtras;}, set: function(_){\n            linkExtras = _;\n        }}\n    });\n\n    chart.dispatch = dispatch;\n    chart.tooltip = tooltip;\n    nv.utils.initOptions(chart);\n    return chart;\n};\nnv.models.furiousLegend = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 5, right: 0, bottom: 5, left: 0}\n        , width = 400\n        , height = 20\n        , getKey = function(d) { return d.key }\n        , keyFormatter = function (d) { return d }\n        , color = nv.utils.getColor()\n        , maxKeyLength = 20 //default value for key lengths\n        , align = true\n        , padding = 28 //define how much space between legend items. - recommend 32 for furious version\n        , rightAlign = true\n        , updateState = true   //If true, legend will update data.disabled and trigger a 'stateChange' dispatch.\n        , radioButtonMode = false   //If true, clicking legend items will cause it to behave like a radio button. (only one can be selected at a time)\n        , expanded = false\n        , dispatch = d3.dispatch('legendClick', 'legendDblclick', 'legendMouseover', 'legendMouseout', 'stateChange')\n        , vers = 'classic' //Options are \"classic\" and \"furious\"\n        ;\n\n    function chart(selection) {\n        selection.each(function(data) {\n            var availableWidth = width - margin.left - margin.right,\n                container = d3.select(this);\n            nv.utils.initSVG(container);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-legend').data([data]);\n            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-legend').append('g');\n            var g = wrap.select('g');\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            var series = g.selectAll('.nv-series')\n                .data(function(d) {\n                    if(vers != 'furious') return d;\n\n                    return d.filter(function(n) {\n                        return expanded ? true : !n.disengaged;\n                    });\n                });\n            var seriesEnter = series.enter().append('g').attr('class', 'nv-series')\n\n            var seriesShape;\n\n            if(vers == 'classic') {\n                seriesEnter.append('circle')\n                    .style('stroke-width', 2)\n                    .attr('class','nv-legend-symbol')\n                    .attr('r', 5);\n\n                seriesShape = series.select('circle');\n            } else if (vers == 'furious') {\n                seriesEnter.append('rect')\n                    .style('stroke-width', 2)\n                    .attr('class','nv-legend-symbol')\n                    .attr('rx', 3)\n                    .attr('ry', 3);\n\n                seriesShape = series.select('rect');\n\n                seriesEnter.append('g')\n                    .attr('class', 'nv-check-box')\n                    .property('innerHTML','<path d=\"M0.5,5 L22.5,5 L22.5,26.5 L0.5,26.5 L0.5,5 Z\" class=\"nv-box\"></path><path d=\"M5.5,12.8618467 L11.9185089,19.2803556 L31,0.198864511\" class=\"nv-check\"></path>')\n                    .attr('transform', 'translate(-10,-8)scale(0.5)');\n\n                var seriesCheckbox = series.select('.nv-check-box');\n\n                seriesCheckbox.each(function(d,i) {\n                    d3.select(this).selectAll('path')\n                        .attr('stroke', setTextColor(d,i));\n                });\n            }\n\n            seriesEnter.append('text')\n                .attr('text-anchor', 'start')\n                .attr('class','nv-legend-text')\n                .attr('dy', '.32em')\n                .attr('dx', '8');\n\n            var seriesText = series.select('text.nv-legend-text');\n\n            series\n                .on('mouseover', function(d,i) {\n                    dispatch.legendMouseover(d,i);  //TODO: Make consistent with other event objects\n                })\n                .on('mouseout', function(d,i) {\n                    dispatch.legendMouseout(d,i);\n                })\n                .on('click', function(d,i) {\n                    dispatch.legendClick(d,i);\n                    // make sure we re-get data in case it was modified\n                    var data = series.data();\n                    if (updateState) {\n                        if(vers =='classic') {\n                            if (radioButtonMode) {\n                                //Radio button mode: set every series to disabled,\n                                //  and enable the clicked series.\n                                data.forEach(function(series) { series.disabled = true});\n                                d.disabled = false;\n                            }\n                            else {\n                                d.disabled = !d.disabled;\n                                if (data.every(function(series) { return series.disabled})) {\n                                    //the default behavior of NVD3 legends is, if every single series\n                                    // is disabled, turn all series' back on.\n                                    data.forEach(function(series) { series.disabled = false});\n                                }\n                            }\n                        } else if(vers == 'furious') {\n                            if(expanded) {\n                                d.disengaged = !d.disengaged;\n                                d.userDisabled = d.userDisabled == undefined ? !!d.disabled : d.userDisabled;\n                                d.disabled = d.disengaged || d.userDisabled;\n                            } else if (!expanded) {\n                                d.disabled = !d.disabled;\n                                d.userDisabled = d.disabled;\n                                var engaged = data.filter(function(d) { return !d.disengaged; });\n                                if (engaged.every(function(series) { return series.userDisabled })) {\n                                    //the default behavior of NVD3 legends is, if every single series\n                                    // is disabled, turn all series' back on.\n                                    data.forEach(function(series) {\n                                        series.disabled = series.userDisabled = false;\n                                    });\n                                }\n                            }\n                        }\n                        dispatch.stateChange({\n                            disabled: data.map(function(d) { return !!d.disabled }),\n                            disengaged: data.map(function(d) { return !!d.disengaged })\n                        });\n\n                    }\n                })\n                .on('dblclick', function(d,i) {\n                    if(vers == 'furious' && expanded) return;\n                    dispatch.legendDblclick(d,i);\n                    if (updateState) {\n                        // make sure we re-get data in case it was modified\n                        var data = series.data();\n                        //the default behavior of NVD3 legends, when double clicking one,\n                        // is to set all other series' to false, and make the double clicked series enabled.\n                        data.forEach(function(series) {\n                            series.disabled = true;\n                            if(vers == 'furious') series.userDisabled = series.disabled;\n                        });\n                        d.disabled = false;\n                        if(vers == 'furious') d.userDisabled = d.disabled;\n                        dispatch.stateChange({\n                            disabled: data.map(function(d) { return !!d.disabled })\n                        });\n                    }\n                });\n\n            series.classed('nv-disabled', function(d) { return d.userDisabled });\n            series.exit().remove();\n\n            seriesText\n                .attr('fill', setTextColor)\n                .text(function (d) { return keyFormatter(getKey(d)) });\n\n            //TODO: implement fixed-width and max-width options (max-width is especially useful with the align option)\n            // NEW ALIGNING CODE, TODO: clean up\n\n            var versPadding;\n            switch(vers) {\n                case 'furious' :\n                    versPadding = 23;\n                    break;\n                case 'classic' :\n                    versPadding = 20;\n            }\n\n            if (align) {\n\n                var seriesWidths = [];\n                series.each(function(d,i) {\n                    var legendText;\n                    if (keyFormatter(getKey(d)) && keyFormatter(getKey(d)).length > maxKeyLength) {\n                        var trimmedKey = keyFormatter(getKey(d)).substring(0, maxKeyLength);\n                        legendText = d3.select(this).select('text').text(trimmedKey + \"...\");\n                        d3.select(this).append(\"svg:title\").text(keyFormatter(getKey(d)));\n                    } else {\n                        legendText = d3.select(this).select('text');\n                    }\n                    var nodeTextLength;\n                    try {\n                        nodeTextLength = legendText.node().getComputedTextLength();\n                        // If the legendText is display:none'd (nodeTextLength == 0), simulate an error so we approximate, instead\n                        if(nodeTextLength <= 0) throw Error();\n                    }\n                    catch(e) {\n                        nodeTextLength = nv.utils.calcApproxTextWidth(legendText);\n                    }\n\n                    seriesWidths.push(nodeTextLength + padding);\n                });\n\n                var seriesPerRow = 0;\n                var legendWidth = 0;\n                var columnWidths = [];\n\n                while ( legendWidth < availableWidth && seriesPerRow < seriesWidths.length) {\n                    columnWidths[seriesPerRow] = seriesWidths[seriesPerRow];\n                    legendWidth += seriesWidths[seriesPerRow++];\n                }\n                if (seriesPerRow === 0) seriesPerRow = 1; //minimum of one series per row\n\n                while ( legendWidth > availableWidth && seriesPerRow > 1 ) {\n                    columnWidths = [];\n                    seriesPerRow--;\n\n                    for (var k = 0; k < seriesWidths.length; k++) {\n                        if (seriesWidths[k] > (columnWidths[k % seriesPerRow] || 0) )\n                            columnWidths[k % seriesPerRow] = seriesWidths[k];\n                    }\n\n                    legendWidth = columnWidths.reduce(function(prev, cur, index, array) {\n                        return prev + cur;\n                    });\n                }\n\n                var xPositions = [];\n                for (var i = 0, curX = 0; i < seriesPerRow; i++) {\n                    xPositions[i] = curX;\n                    curX += columnWidths[i];\n                }\n\n                series\n                    .attr('transform', function(d, i) {\n                        return 'translate(' + xPositions[i % seriesPerRow] + ',' + (5 + Math.floor(i / seriesPerRow) * versPadding) + ')';\n                    });\n\n                //position legend as far right as possible within the total width\n                if (rightAlign) {\n                    g.attr('transform', 'translate(' + (width - margin.right - legendWidth) + ',' + margin.top + ')');\n                }\n                else {\n                    g.attr('transform', 'translate(0' + ',' + margin.top + ')');\n                }\n\n                height = margin.top + margin.bottom + (Math.ceil(seriesWidths.length / seriesPerRow) * versPadding);\n\n            } else {\n\n                var ypos = 5,\n                    newxpos = 5,\n                    maxwidth = 0,\n                    xpos;\n                series\n                    .attr('transform', function(d, i) {\n                        var length = d3.select(this).select('text').node().getComputedTextLength() + padding;\n                        xpos = newxpos;\n\n                        if (width < margin.left + margin.right + xpos + length) {\n                            newxpos = xpos = 5;\n                            ypos += versPadding;\n                        }\n\n                        newxpos += length;\n                        if (newxpos > maxwidth) maxwidth = newxpos;\n\n                        return 'translate(' + xpos + ',' + ypos + ')';\n                    });\n\n                //position legend as far right as possible within the total width\n                g.attr('transform', 'translate(' + (width - margin.right - maxwidth) + ',' + margin.top + ')');\n\n                height = margin.top + margin.bottom + ypos + 15;\n            }\n\n            if(vers == 'furious') {\n                // Size rectangles after text is placed\n                seriesShape\n                    .attr('width', function(d,i) {\n                        return seriesText[0][i].getComputedTextLength() + 27;\n                    })\n                    .attr('height', 18)\n                    .attr('y', -9)\n                    .attr('x', -15)\n            }\n\n            seriesShape\n                .style('fill', setBGColor)\n                .style('stroke', function(d,i) { return d.color || color(d, i) });\n        });\n\n        function setTextColor(d,i) {\n            if(vers != 'furious') return '#000';\n            if(expanded) {\n                return d.disengaged ? color(d,i) : '#fff';\n            } else if (!expanded) {\n                return !!d.disabled ? color(d,i) : '#fff';\n            }\n        }\n\n        function setBGColor(d,i) {\n            if(expanded && vers == 'furious') {\n                return d.disengaged ? '#fff' : color(d,i);\n            } else {\n                return !!d.disabled ? '#fff' : color(d,i);\n            }\n        }\n\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:          {get: function(){return width;}, set: function(_){width=_;}},\n        height:         {get: function(){return height;}, set: function(_){height=_;}},\n        key:            {get: function(){return getKey;}, set: function(_){getKey=_;}},\n        keyFormatter:   {get: function(){return keyFormatter;}, set: function(_){keyFormatter=_;}},\n        align:          {get: function(){return align;}, set: function(_){align=_;}},\n        rightAlign:     {get: function(){return rightAlign;}, set: function(_){rightAlign=_;}},\n        maxKeyLength:   {get: function(){return maxKeyLength;}, set: function(_){maxKeyLength=_;}},\n        padding:        {get: function(){return padding;}, set: function(_){padding=_;}},\n        updateState:    {get: function(){return updateState;}, set: function(_){updateState=_;}},\n        radioButtonMode:{get: function(){return radioButtonMode;}, set: function(_){radioButtonMode=_;}},\n        expanded:       {get: function(){return expanded;}, set: function(_){expanded=_;}},\n        vers:           {get: function(){return vers;}, set: function(_){vers=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n//TODO: consider deprecating and using multibar with single series for this\nnv.models.historicalBar = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n        , width = null\n        , height = null\n        , id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n        , container = null\n        , x = d3.scale.linear()\n        , y = d3.scale.linear()\n        , getX = function(d) { return d.x }\n        , getY = function(d) { return d.y }\n        , forceX = []\n        , forceY = [0]\n        , padData = false\n        , clipEdge = true\n        , color = nv.utils.defaultColor()\n        , xDomain\n        , yDomain\n        , xRange\n        , yRange\n        , dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd')\n        , interactive = true\n        ;\n\n    var renderWatch = nv.utils.renderWatch(dispatch, 0);\n\n    function chart(selection) {\n        selection.each(function(data) {\n            renderWatch.reset();\n\n            container = d3.select(this);\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            nv.utils.initSVG(container);\n\n            // Setup Scales\n            x.domain(xDomain || d3.extent(data[0].values.map(getX).concat(forceX) ));\n\n            if (padData)\n                x.range(xRange || [availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5)  / data[0].values.length ]);\n            else\n                x.range(xRange || [0, availableWidth]);\n\n            y.domain(yDomain || d3.extent(data[0].values.map(getY).concat(forceY) ))\n                .range(yRange || [availableHeight, 0]);\n\n            // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n            if (x.domain()[0] === x.domain()[1])\n                x.domain()[0] ?\n                    x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01])\n                    : x.domain([-1,1]);\n\n            if (y.domain()[0] === y.domain()[1])\n                y.domain()[0] ?\n                    y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01])\n                    : y.domain([-1,1]);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-historicalBar-' + id).data([data[0].values]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-historicalBar-' + id);\n            var defsEnter = wrapEnter.append('defs');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-bars');\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            container\n                .on('click', function(d,i) {\n                    dispatch.chartClick({\n                        data: d,\n                        index: i,\n                        pos: d3.event,\n                        id: id\n                    });\n                });\n\n            defsEnter.append('clipPath')\n                .attr('id', 'nv-chart-clip-path-' + id)\n                .append('rect');\n\n            wrap.select('#nv-chart-clip-path-' + id + ' rect')\n                .attr('width', availableWidth)\n                .attr('height', availableHeight);\n\n            g.attr('clip-path', clipEdge ? 'url(#nv-chart-clip-path-' + id + ')' : '');\n\n            var bars = wrap.select('.nv-bars').selectAll('.nv-bar')\n                .data(function(d) { return d }, function(d,i) {return getX(d,i)});\n            bars.exit().remove();\n\n            bars.enter().append('rect')\n                .attr('x', 0 )\n                .attr('y', function(d,i) {  return nv.utils.NaNtoZero(y(Math.max(0, getY(d,i)))) })\n                .attr('height', function(d,i) { return nv.utils.NaNtoZero(Math.abs(y(getY(d,i)) - y(0))) })\n                .attr('transform', function(d,i) { return 'translate(' + (x(getX(d,i)) - availableWidth / data[0].values.length * .45) + ',0)'; })\n                .on('mouseover', function(d,i) {\n                    if (!interactive) return;\n                    d3.select(this).classed('hover', true);\n                    dispatch.elementMouseover({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n\n                })\n                .on('mouseout', function(d,i) {\n                    if (!interactive) return;\n                    d3.select(this).classed('hover', false);\n                    dispatch.elementMouseout({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                })\n                .on('mousemove', function(d,i) {\n                    if (!interactive) return;\n                    dispatch.elementMousemove({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                })\n                .on('click', function(d,i) {\n                    if (!interactive) return;\n                    dispatch.elementClick({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                    d3.event.stopPropagation();\n                })\n                .on('dblclick', function(d,i) {\n                    if (!interactive) return;\n                    dispatch.elementDblClick({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                    d3.event.stopPropagation();\n                });\n\n            bars\n                .attr('fill', function(d,i) { return color(d, i); })\n                .attr('class', function(d,i,j) { return (getY(d,i) < 0 ? 'nv-bar negative' : 'nv-bar positive') + ' nv-bar-' + j + '-' + i })\n                .watchTransition(renderWatch, 'bars')\n                .attr('transform', function(d,i) { return 'translate(' + (x(getX(d,i)) - availableWidth / data[0].values.length * .45) + ',0)'; })\n                //TODO: better width calculations that don't assume always uniform data spacing;w\n                .attr('width', (availableWidth / data[0].values.length) * .9 );\n\n            bars.watchTransition(renderWatch, 'bars')\n                .attr('y', function(d,i) {\n                    var rval = getY(d,i) < 0 ?\n                        y(0) :\n                            y(0) - y(getY(d,i)) < 1 ?\n                        y(0) - 1 :\n                        y(getY(d,i));\n                    return nv.utils.NaNtoZero(rval);\n                })\n                .attr('height', function(d,i) { return nv.utils.NaNtoZero(Math.max(Math.abs(y(getY(d,i)) - y(0)),1)) });\n\n        });\n\n        renderWatch.renderEnd('historicalBar immediate');\n        return chart;\n    }\n\n    //Create methods to allow outside functions to highlight a specific bar.\n    chart.highlightPoint = function(pointIndex, isHoverOver) {\n        container\n            .select(\".nv-bars .nv-bar-0-\" + pointIndex)\n            .classed(\"hover\", isHoverOver)\n        ;\n    };\n\n    chart.clearHighlights = function() {\n        container\n            .select(\".nv-bars .nv-bar.hover\")\n            .classed(\"hover\", false)\n        ;\n    };\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:   {get: function(){return width;}, set: function(_){width=_;}},\n        height:  {get: function(){return height;}, set: function(_){height=_;}},\n        forceX:  {get: function(){return forceX;}, set: function(_){forceX=_;}},\n        forceY:  {get: function(){return forceY;}, set: function(_){forceY=_;}},\n        padData: {get: function(){return padData;}, set: function(_){padData=_;}},\n        x:       {get: function(){return getX;}, set: function(_){getX=_;}},\n        y:       {get: function(){return getY;}, set: function(_){getY=_;}},\n        xScale:  {get: function(){return x;}, set: function(_){x=_;}},\n        yScale:  {get: function(){return y;}, set: function(_){y=_;}},\n        xDomain: {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n        yDomain: {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n        xRange:  {get: function(){return xRange;}, set: function(_){xRange=_;}},\n        yRange:  {get: function(){return yRange;}, set: function(_){yRange=_;}},\n        clipEdge:    {get: function(){return clipEdge;}, set: function(_){clipEdge=_;}},\n        id:          {get: function(){return id;}, set: function(_){id=_;}},\n        interactive: {get: function(){return interactive;}, set: function(_){interactive=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n\nnv.models.historicalBarChart = function(bar_model) {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var bars = bar_model || nv.models.historicalBar()\n        , xAxis = nv.models.axis()\n        , yAxis = nv.models.axis()\n        , legend = nv.models.legend()\n        , interactiveLayer = nv.interactiveGuideline()\n        , tooltip = nv.models.tooltip()\n        ;\n\n\n    var margin = {top: 30, right: 90, bottom: 50, left: 90}\n        , color = nv.utils.defaultColor()\n        , width = null\n        , height = null\n        , showLegend = false\n        , showXAxis = true\n        , showYAxis = true\n        , rightAlignYAxis = false\n        , useInteractiveGuideline = false\n        , x\n        , y\n        , state = {}\n        , defaultState = null\n        , noData = null\n        , dispatch = d3.dispatch('tooltipHide', 'stateChange', 'changeState', 'renderEnd')\n        , transitionDuration = 250\n        ;\n\n    xAxis.orient('bottom').tickPadding(7);\n    yAxis.orient( (rightAlignYAxis) ? 'right' : 'left');\n    tooltip\n        .duration(0)\n        .headerEnabled(false)\n        .valueFormatter(function(d, i) {\n            return yAxis.tickFormat()(d, i);\n        })\n        .headerFormatter(function(d, i) {\n            return xAxis.tickFormat()(d, i);\n        });\n\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, 0);\n\n    function chart(selection) {\n        selection.each(function(data) {\n            renderWatch.reset();\n            renderWatch.models(bars);\n            if (showXAxis) renderWatch.models(xAxis);\n            if (showYAxis) renderWatch.models(yAxis);\n\n            var container = d3.select(this),\n                that = this;\n            nv.utils.initSVG(container);\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            chart.update = function() { container.transition().duration(transitionDuration).call(chart) };\n            chart.container = this;\n\n            //set state.disabled\n            state.disabled = data.map(function(d) { return !!d.disabled });\n\n            if (!defaultState) {\n                var key;\n                defaultState = {};\n                for (key in state) {\n                    if (state[key] instanceof Array)\n                        defaultState[key] = state[key].slice(0);\n                    else\n                        defaultState[key] = state[key];\n                }\n            }\n\n            // Display noData message if there's nothing to show.\n            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n                nv.utils.noData(chart, container)\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n\n            // Setup Scales\n            x = bars.xScale();\n            y = bars.yScale();\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-historicalBarChart').data([data]);\n            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-historicalBarChart').append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-x nv-axis');\n            gEnter.append('g').attr('class', 'nv-y nv-axis');\n            gEnter.append('g').attr('class', 'nv-barsWrap');\n            gEnter.append('g').attr('class', 'nv-legendWrap');\n            gEnter.append('g').attr('class', 'nv-interactive');\n\n            // Legend\n            if (!showLegend) {\n                g.select('.nv-legendWrap').selectAll('*').remove();\n            } else {\n                legend.width(availableWidth);\n\n                g.select('.nv-legendWrap')\n                    .datum(data)\n                    .call(legend);\n\n                if (legend.height() > margin.top) {\n                    margin.top = legend.height();\n                    availableHeight = nv.utils.availableHeight(height, container, margin);\n                }\n\n                wrap.select('.nv-legendWrap')\n                    .attr('transform', 'translate(0,' + (-margin.top) +')')\n            }\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            if (rightAlignYAxis) {\n                g.select(\".nv-y.nv-axis\")\n                    .attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n            }\n\n            //Set up interactive layer\n            if (useInteractiveGuideline) {\n                interactiveLayer\n                    .width(availableWidth)\n                    .height(availableHeight)\n                    .margin({left:margin.left, top:margin.top})\n                    .svgContainer(container)\n                    .xScale(x);\n                wrap.select(\".nv-interactive\").call(interactiveLayer);\n            }\n            bars\n                .width(availableWidth)\n                .height(availableHeight)\n                .color(data.map(function(d,i) {\n                    return d.color || color(d, i);\n                }).filter(function(d,i) { return !data[i].disabled }));\n\n            var barsWrap = g.select('.nv-barsWrap')\n                .datum(data.filter(function(d) { return !d.disabled }));\n            barsWrap.transition().call(bars);\n\n            // Setup Axes\n            if (showXAxis) {\n                xAxis\n                    .scale(x)\n                    ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n                    .tickSize(-availableHeight, 0);\n\n                g.select('.nv-x.nv-axis')\n                    .attr('transform', 'translate(0,' + y.range()[0] + ')');\n                g.select('.nv-x.nv-axis')\n                    .transition()\n                    .call(xAxis);\n            }\n\n            if (showYAxis) {\n                yAxis\n                    .scale(y)\n                    ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n                    .tickSize( -availableWidth, 0);\n\n                g.select('.nv-y.nv-axis')\n                    .transition()\n                    .call(yAxis);\n            }\n\n            //============================================================\n            // Event Handling/Dispatching (in chart's scope)\n            //------------------------------------------------------------\n\n            interactiveLayer.dispatch.on('elementMousemove', function(e) {\n                bars.clearHighlights();\n\n                var singlePoint, pointIndex, pointXLocation, allData = [];\n                data\n                    .filter(function(series, i) {\n                        series.seriesIndex = i;\n                        return !series.disabled;\n                    })\n                    .forEach(function(series,i) {\n                        pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n                        bars.highlightPoint(pointIndex,true);\n                        var point = series.values[pointIndex];\n                        if (point === undefined) return;\n                        if (singlePoint === undefined) singlePoint = point;\n                        if (pointXLocation === undefined) pointXLocation = chart.xScale()(chart.x()(point,pointIndex));\n                        allData.push({\n                            key: series.key,\n                            value: chart.y()(point, pointIndex),\n                            color: color(series,series.seriesIndex),\n                            data: series.values[pointIndex]\n                        });\n                    });\n\n                var xValue = xAxis.tickFormat()(chart.x()(singlePoint,pointIndex));\n                interactiveLayer.tooltip\n                    .valueFormatter(function(d,i) {\n                        return yAxis.tickFormat()(d);\n                    })\n                    .data({\n                        value: xValue,\n                        index: pointIndex,\n                        series: allData\n                    })();\n\n                interactiveLayer.renderGuideLine(pointXLocation);\n\n            });\n\n            interactiveLayer.dispatch.on(\"elementMouseout\",function(e) {\n                dispatch.tooltipHide();\n                bars.clearHighlights();\n            });\n\n            legend.dispatch.on('legendClick', function(d,i) {\n                d.disabled = !d.disabled;\n\n                if (!data.filter(function(d) { return !d.disabled }).length) {\n                    data.map(function(d) {\n                        d.disabled = false;\n                        wrap.selectAll('.nv-series').classed('disabled', false);\n                        return d;\n                    });\n                }\n\n                state.disabled = data.map(function(d) { return !!d.disabled });\n                dispatch.stateChange(state);\n\n                selection.transition().call(chart);\n            });\n\n            legend.dispatch.on('legendDblclick', function(d) {\n                //Double clicking should always enable current series, and disabled all others.\n                data.forEach(function(d) {\n                    d.disabled = true;\n                });\n                d.disabled = false;\n\n                state.disabled = data.map(function(d) { return !!d.disabled });\n                dispatch.stateChange(state);\n                chart.update();\n            });\n\n            dispatch.on('changeState', function(e) {\n                if (typeof e.disabled !== 'undefined') {\n                    data.forEach(function(series,i) {\n                        series.disabled = e.disabled[i];\n                    });\n\n                    state.disabled = e.disabled;\n                }\n\n                chart.update();\n            });\n        });\n\n        renderWatch.renderEnd('historicalBarChart immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n    bars.dispatch.on('elementMouseover.tooltip', function(evt) {\n        evt['series'] = {\n            key: chart.x()(evt.data),\n            value: chart.y()(evt.data),\n            color: evt.color\n        };\n        tooltip.data(evt).hidden(false);\n    });\n\n    bars.dispatch.on('elementMouseout.tooltip', function(evt) {\n        tooltip.hidden(true);\n    });\n\n    bars.dispatch.on('elementMousemove.tooltip', function(evt) {\n        tooltip();\n    });\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    // expose chart's sub-components\n    chart.dispatch = dispatch;\n    chart.bars = bars;\n    chart.legend = legend;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.interactiveLayer = interactiveLayer;\n    chart.tooltip = tooltip;\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n        showXAxis: {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n        showYAxis: {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n        defaultState:    {get: function(){return defaultState;}, set: function(_){defaultState=_;}},\n        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n            legend.color(color);\n            bars.color(color);\n        }},\n        duration:    {get: function(){return transitionDuration;}, set: function(_){\n            transitionDuration=_;\n            renderWatch.reset(transitionDuration);\n            yAxis.duration(transitionDuration);\n            xAxis.duration(transitionDuration);\n        }},\n        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n            rightAlignYAxis = _;\n            yAxis.orient( (_) ? 'right' : 'left');\n        }},\n        useInteractiveGuideline: {get: function(){return useInteractiveGuideline;}, set: function(_){\n            useInteractiveGuideline = _;\n            if (_ === true) {\n                chart.interactive(false);\n            }\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, bars);\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n\n\n// ohlcChart is just a historical chart with ohlc bars and some tweaks\nnv.models.ohlcBarChart = function() {\n    var chart = nv.models.historicalBarChart(nv.models.ohlcBar());\n\n    // special default tooltip since we show multiple values per x\n    chart.useInteractiveGuideline(true);\n    chart.interactiveLayer.tooltip.contentGenerator(function(data) {\n        // we assume only one series exists for this chart\n        var d = data.series[0].data;\n        // match line colors as defined in nv.d3.css\n        var color = d.open < d.close ? \"2ca02c\" : \"d62728\";\n        return '' +\n            '<h3 style=\"color: #' + color + '\">' + data.value + '</h3>' +\n            '<table>' +\n            '<tr><td>open:</td><td>' + chart.yAxis.tickFormat()(d.open) + '</td></tr>' +\n            '<tr><td>close:</td><td>' + chart.yAxis.tickFormat()(d.close) + '</td></tr>' +\n            '<tr><td>high</td><td>' + chart.yAxis.tickFormat()(d.high) + '</td></tr>' +\n            '<tr><td>low:</td><td>' + chart.yAxis.tickFormat()(d.low) + '</td></tr>' +\n            '</table>';\n    });\n    return chart;\n};\n\n// candlestickChart is just a historical chart with candlestick bars and some tweaks\nnv.models.candlestickBarChart = function() {\n    var chart = nv.models.historicalBarChart(nv.models.candlestickBar());\n\n    // special default tooltip since we show multiple values per x\n    chart.useInteractiveGuideline(true);\n    chart.interactiveLayer.tooltip.contentGenerator(function(data) {\n        // we assume only one series exists for this chart\n        var d = data.series[0].data;\n        // match line colors as defined in nv.d3.css\n        var color = d.open < d.close ? \"2ca02c\" : \"d62728\";\n        return '' +\n            '<h3 style=\"color: #' + color + '\">' + data.value + '</h3>' +\n            '<table>' +\n            '<tr><td>open:</td><td>' + chart.yAxis.tickFormat()(d.open) + '</td></tr>' +\n            '<tr><td>close:</td><td>' + chart.yAxis.tickFormat()(d.close) + '</td></tr>' +\n            '<tr><td>high</td><td>' + chart.yAxis.tickFormat()(d.high) + '</td></tr>' +\n            '<tr><td>low:</td><td>' + chart.yAxis.tickFormat()(d.low) + '</td></tr>' +\n            '</table>';\n    });\n    return chart;\n};\nnv.models.legend = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 5, right: 0, bottom: 5, left: 0}\n        , width = 400\n        , height = 20\n        , getKey = function(d) { return d.key }\n        , keyFormatter = function (d) { return d }\n        , color = nv.utils.getColor()\n        , maxKeyLength = 20 //default value for key lengths\n        , align = true\n        , padding = 32 //define how much space between legend items. - recommend 32 for furious version\n        , rightAlign = true\n        , updateState = true   //If true, legend will update data.disabled and trigger a 'stateChange' dispatch.\n        , radioButtonMode = false   //If true, clicking legend items will cause it to behave like a radio button. (only one can be selected at a time)\n        , expanded = false\n        , dispatch = d3.dispatch('legendClick', 'legendDblclick', 'legendMouseover', 'legendMouseout', 'stateChange')\n        , vers = 'classic' //Options are \"classic\" and \"furious\"\n        ;\n\n    function chart(selection) {\n        selection.each(function(data) {\n            var availableWidth = width - margin.left - margin.right,\n                container = d3.select(this);\n            nv.utils.initSVG(container);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-legend').data([data]);\n            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-legend').append('g');\n            var g = wrap.select('g');\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            var series = g.selectAll('.nv-series')\n                .data(function(d) {\n                    if(vers != 'furious') return d;\n\n                    return d.filter(function(n) {\n                        return expanded ? true : !n.disengaged;\n                    });\n                });\n\n            var seriesEnter = series.enter().append('g').attr('class', 'nv-series');\n            var seriesShape;\n\n            var versPadding;\n            switch(vers) {\n                case 'furious' :\n                    versPadding = 23;\n                    break;\n                case 'classic' :\n                    versPadding = 20;\n            }\n\n            if(vers == 'classic') {\n                seriesEnter.append('circle')\n                    .style('stroke-width', 2)\n                    .attr('class','nv-legend-symbol')\n                    .attr('r', 5);\n\n                seriesShape = series.select('.nv-legend-symbol');\n            } else if (vers == 'furious') {\n                seriesEnter.append('rect')\n                    .style('stroke-width', 2)\n                    .attr('class','nv-legend-symbol')\n                    .attr('rx', 3)\n                    .attr('ry', 3);\n                seriesShape = series.select('.nv-legend-symbol');\n\n                seriesEnter.append('g')\n                    .attr('class', 'nv-check-box')\n                    .property('innerHTML','<path d=\"M0.5,5 L22.5,5 L22.5,26.5 L0.5,26.5 L0.5,5 Z\" class=\"nv-box\"></path><path d=\"M5.5,12.8618467 L11.9185089,19.2803556 L31,0.198864511\" class=\"nv-check\"></path>')\n                    .attr('transform', 'translate(-10,-8)scale(0.5)');\n\n                var seriesCheckbox = series.select('.nv-check-box');\n\n                seriesCheckbox.each(function(d,i) {\n                    d3.select(this).selectAll('path')\n                        .attr('stroke', setTextColor(d,i));\n                });\n            }\n\n            seriesEnter.append('text')\n                .attr('text-anchor', 'start')\n                .attr('class','nv-legend-text')\n                .attr('dy', '.32em')\n                .attr('dx', '8');\n\n            var seriesText = series.select('text.nv-legend-text');\n\n            series\n                .on('mouseover', function(d,i) {\n                    dispatch.legendMouseover(d,i);  //TODO: Make consistent with other event objects\n                })\n                .on('mouseout', function(d,i) {\n                    dispatch.legendMouseout(d,i);\n                })\n                .on('click', function(d,i) {\n                    dispatch.legendClick(d,i);\n                    // make sure we re-get data in case it was modified\n                    var data = series.data();\n                    if (updateState) {\n                        if(vers =='classic') {\n                            if (radioButtonMode) {\n                                //Radio button mode: set every series to disabled,\n                                //  and enable the clicked series.\n                                data.forEach(function(series) { series.disabled = true});\n                                d.disabled = false;\n                            }\n                            else {\n                                d.disabled = !d.disabled;\n                                if (data.every(function(series) { return series.disabled})) {\n                                    //the default behavior of NVD3 legends is, if every single series\n                                    // is disabled, turn all series' back on.\n                                    data.forEach(function(series) { series.disabled = false});\n                                }\n                            }\n                        } else if(vers == 'furious') {\n                            if(expanded) {\n                                d.disengaged = !d.disengaged;\n                                d.userDisabled = d.userDisabled == undefined ? !!d.disabled : d.userDisabled;\n                                d.disabled = d.disengaged || d.userDisabled;\n                            } else if (!expanded) {\n                                d.disabled = !d.disabled;\n                                d.userDisabled = d.disabled;\n                                var engaged = data.filter(function(d) { return !d.disengaged; });\n                                if (engaged.every(function(series) { return series.userDisabled })) {\n                                    //the default behavior of NVD3 legends is, if every single series\n                                    // is disabled, turn all series' back on.\n                                    data.forEach(function(series) {\n                                        series.disabled = series.userDisabled = false;\n                                    });\n                                }\n                            }\n                        }\n                        dispatch.stateChange({\n                            disabled: data.map(function(d) { return !!d.disabled }),\n                            disengaged: data.map(function(d) { return !!d.disengaged })\n                        });\n\n                    }\n                })\n                .on('dblclick', function(d,i) {\n                    if(vers == 'furious' && expanded) return;\n                    dispatch.legendDblclick(d,i);\n                    if (updateState) {\n                        // make sure we re-get data in case it was modified\n                        var data = series.data();\n                        //the default behavior of NVD3 legends, when double clicking one,\n                        // is to set all other series' to false, and make the double clicked series enabled.\n                        data.forEach(function(series) {\n                            series.disabled = true;\n                            if(vers == 'furious') series.userDisabled = series.disabled;\n                        });\n                        d.disabled = false;\n                        if(vers == 'furious') d.userDisabled = d.disabled;\n                        dispatch.stateChange({\n                            disabled: data.map(function(d) { return !!d.disabled })\n                        });\n                    }\n                });\n\n            series.classed('nv-disabled', function(d) { return d.userDisabled });\n            series.exit().remove();\n\n            seriesText\n                .attr('fill', setTextColor)\n                .text(function (d) { return keyFormatter(getKey(d)) });\n\n            //TODO: implement fixed-width and max-width options (max-width is especially useful with the align option)\n            // NEW ALIGNING CODE, TODO: clean up\n            var legendWidth = 0;\n            if (align) {\n\n                var seriesWidths = [];\n                series.each(function(d,i) {\n                    var legendText;\n                    if (keyFormatter(getKey(d)) && keyFormatter(getKey(d)).length > maxKeyLength) {\n                        var trimmedKey = keyFormatter(getKey(d)).substring(0, maxKeyLength);\n                        legendText = d3.select(this).select('text').text(trimmedKey + \"...\");\n                        d3.select(this).append(\"svg:title\").text(keyFormatter(getKey(d)));\n                    } else {\n                        legendText = d3.select(this).select('text');\n                    }\n                    var nodeTextLength;\n                    try {\n                        nodeTextLength = legendText.node().getComputedTextLength();\n                        // If the legendText is display:none'd (nodeTextLength == 0), simulate an error so we approximate, instead\n                        if(nodeTextLength <= 0) throw Error();\n                    }\n                    catch(e) {\n                        nodeTextLength = nv.utils.calcApproxTextWidth(legendText);\n                    }\n\n                    seriesWidths.push(nodeTextLength + padding);\n                });\n\n                var seriesPerRow = 0;\n                var columnWidths = [];\n                legendWidth = 0;\n\n                while ( legendWidth < availableWidth && seriesPerRow < seriesWidths.length) {\n                    columnWidths[seriesPerRow] = seriesWidths[seriesPerRow];\n                    legendWidth += seriesWidths[seriesPerRow++];\n                }\n                if (seriesPerRow === 0) seriesPerRow = 1; //minimum of one series per row\n\n                while ( legendWidth > availableWidth && seriesPerRow > 1 ) {\n                    columnWidths = [];\n                    seriesPerRow--;\n\n                    for (var k = 0; k < seriesWidths.length; k++) {\n                        if (seriesWidths[k] > (columnWidths[k % seriesPerRow] || 0) )\n                            columnWidths[k % seriesPerRow] = seriesWidths[k];\n                    }\n\n                    legendWidth = columnWidths.reduce(function(prev, cur, index, array) {\n                        return prev + cur;\n                    });\n                }\n\n                var xPositions = [];\n                for (var i = 0, curX = 0; i < seriesPerRow; i++) {\n                    xPositions[i] = curX;\n                    curX += columnWidths[i];\n                }\n\n                series\n                    .attr('transform', function(d, i) {\n                        return 'translate(' + xPositions[i % seriesPerRow] + ',' + (5 + Math.floor(i / seriesPerRow) * versPadding) + ')';\n                    });\n\n                //position legend as far right as possible within the total width\n                if (rightAlign) {\n                    g.attr('transform', 'translate(' + (width - margin.right - legendWidth) + ',' + margin.top + ')');\n                }\n                else {\n                    g.attr('transform', 'translate(0' + ',' + margin.top + ')');\n                }\n\n                height = margin.top + margin.bottom + (Math.ceil(seriesWidths.length / seriesPerRow) * versPadding);\n\n            } else {\n\n                var ypos = 5,\n                    newxpos = 5,\n                    maxwidth = 0,\n                    xpos;\n                series\n                    .attr('transform', function(d, i) {\n                        var length = d3.select(this).select('text').node().getComputedTextLength() + padding;\n                        xpos = newxpos;\n\n                        if (width < margin.left + margin.right + xpos + length) {\n                            newxpos = xpos = 5;\n                            ypos += versPadding;\n                        }\n\n                        newxpos += length;\n                        if (newxpos > maxwidth) maxwidth = newxpos;\n\n                        if(legendWidth < xpos + maxwidth) {\n                            legendWidth = xpos + maxwidth;\n                        }\n                        return 'translate(' + xpos + ',' + ypos + ')';\n                    });\n\n                //position legend as far right as possible within the total width\n                g.attr('transform', 'translate(' + (width - margin.right - maxwidth) + ',' + margin.top + ')');\n\n                height = margin.top + margin.bottom + ypos + 15;\n            }\n\n            if(vers == 'furious') {\n                // Size rectangles after text is placed\n                seriesShape\n                    .attr('width', function(d,i) {\n                        return seriesText[0][i].getComputedTextLength() + 27;\n                    })\n                    .attr('height', 18)\n                    .attr('y', -9)\n                    .attr('x', -15);\n\n                // The background for the expanded legend (UI)\n                gEnter.insert('rect',':first-child')\n                    .attr('class', 'nv-legend-bg')\n                    .attr('fill', '#eee')\n                    // .attr('stroke', '#444')\n                    .attr('opacity',0);\n\n                var seriesBG = g.select('.nv-legend-bg');\n\n                seriesBG\n                .transition().duration(300)\n                    .attr('x', -versPadding )\n                    .attr('width', legendWidth + versPadding - 12)\n                    .attr('height', height + 10)\n                    .attr('y', -margin.top - 10)\n                    .attr('opacity', expanded ? 1 : 0);\n\n\n            }\n\n            seriesShape\n                .style('fill', setBGColor)\n                .style('fill-opacity', setBGOpacity)\n                .style('stroke', setBGColor);\n        });\n\n        function setTextColor(d,i) {\n            if(vers != 'furious') return '#000';\n            if(expanded) {\n                return d.disengaged ? '#000' : '#fff';\n            } else if (!expanded) {\n                if(!d.color) d.color = color(d,i);\n                return !!d.disabled ? d.color : '#fff';\n            }\n        }\n\n        function setBGColor(d,i) {\n            if(expanded && vers == 'furious') {\n                return d.disengaged ? '#eee' : d.color || color(d,i);\n            } else {\n                return d.color || color(d,i);\n            }\n        }\n\n\n        function setBGOpacity(d,i) {\n            if(expanded && vers == 'furious') {\n                return 1;\n            } else {\n                return !!d.disabled ? 0 : 1;\n            }\n        }\n\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:          {get: function(){return width;}, set: function(_){width=_;}},\n        height:         {get: function(){return height;}, set: function(_){height=_;}},\n        key:            {get: function(){return getKey;}, set: function(_){getKey=_;}},\n        keyFormatter:   {get: function(){return keyFormatter;}, set: function(_){keyFormatter=_;}},\n        align:          {get: function(){return align;}, set: function(_){align=_;}},\n        maxKeyLength:   {get: function(){return maxKeyLength;}, set: function(_){maxKeyLength=_;}},\n        rightAlign:     {get: function(){return rightAlign;}, set: function(_){rightAlign=_;}},\n        padding:        {get: function(){return padding;}, set: function(_){padding=_;}},\n        updateState:    {get: function(){return updateState;}, set: function(_){updateState=_;}},\n        radioButtonMode:{get: function(){return radioButtonMode;}, set: function(_){radioButtonMode=_;}},\n        expanded:       {get: function(){return expanded;}, set: function(_){expanded=_;}},\n        vers:           {get: function(){return vers;}, set: function(_){vers=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n\nnv.models.line = function() {\n    \"use strict\";\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var  scatter = nv.models.scatter()\n        ;\n\n    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n        , width = 960\n        , height = 500\n        , container = null\n        , strokeWidth = 1.5\n        , color = nv.utils.defaultColor() // a function that returns a color\n        , getX = function(d) { return d.x } // accessor to get the x value from a data point\n        , getY = function(d) { return d.y } // accessor to get the y value from a data point\n        , defined = function(d,i) { return !isNaN(getY(d,i)) && getY(d,i) !== null } // allows a line to be not continuous when it is not defined\n        , isArea = function(d) { return d.area } // decides if a line is an area or just a line\n        , clipEdge = false // if true, masks lines within x and y scale\n        , x //can be accessed via chart.xScale()\n        , y //can be accessed via chart.yScale()\n        , interpolate = \"linear\" // controls the line interpolation\n        , duration = 250\n        , dispatch = d3.dispatch('elementClick', 'elementMouseover', 'elementMouseout', 'renderEnd')\n        ;\n\n    scatter\n        .pointSize(16) // default size\n        .pointDomain([16,256]) //set to speed up calculation, needs to be unset if there is a custom size accessor\n    ;\n\n    //============================================================\n\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var x0, y0 //used to store previous scales\n        , renderWatch = nv.utils.renderWatch(dispatch, duration)\n        ;\n\n    //============================================================\n\n\n    function chart(selection) {\n        renderWatch.reset();\n        renderWatch.models(scatter);\n        selection.each(function(data) {\n            container = d3.select(this);\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin);\n            nv.utils.initSVG(container);\n\n            // Setup Scales\n            x = scatter.xScale();\n            y = scatter.yScale();\n\n            x0 = x0 || x;\n            y0 = y0 || y;\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-line').data([data]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-line');\n            var defsEnter = wrapEnter.append('defs');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-groups');\n            gEnter.append('g').attr('class', 'nv-scatterWrap');\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            scatter\n                .width(availableWidth)\n                .height(availableHeight);\n\n            var scatterWrap = wrap.select('.nv-scatterWrap');\n            scatterWrap.call(scatter);\n\n            defsEnter.append('clipPath')\n                .attr('id', 'nv-edge-clip-' + scatter.id())\n                .append('rect');\n\n            wrap.select('#nv-edge-clip-' + scatter.id() + ' rect')\n                .attr('width', availableWidth)\n                .attr('height', (availableHeight > 0) ? availableHeight : 0);\n\n            g   .attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + scatter.id() + ')' : '');\n            scatterWrap\n                .attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + scatter.id() + ')' : '');\n\n            var groups = wrap.select('.nv-groups').selectAll('.nv-group')\n                .data(function(d) { return d }, function(d) { return d.key });\n            groups.enter().append('g')\n                .style('stroke-opacity', 1e-6)\n                .style('stroke-width', function(d) { return d.strokeWidth || strokeWidth })\n                .style('fill-opacity', 1e-6);\n\n            groups.exit().remove();\n\n            groups\n                .attr('class', function(d,i) {\n                    return (d.classed || '') + ' nv-group nv-series-' + i;\n                })\n                .classed('hover', function(d) { return d.hover })\n                .style('fill', function(d,i){ return color(d, i) })\n                .style('stroke', function(d,i){ return color(d, i)});\n            groups.watchTransition(renderWatch, 'line: groups')\n                .style('stroke-opacity', 1)\n                .style('fill-opacity', function(d) { return d.fillOpacity || .5});\n\n            var areaPaths = groups.selectAll('path.nv-area')\n                .data(function(d) { return isArea(d) ? [d] : [] }); // this is done differently than lines because I need to check if series is an area\n            areaPaths.enter().append('path')\n                .attr('class', 'nv-area')\n                .attr('d', function(d) {\n                    return d3.svg.area()\n                        .interpolate(interpolate)\n                        .defined(defined)\n                        .x(function(d,i) { return nv.utils.NaNtoZero(x0(getX(d,i))) })\n                        .y0(function(d,i) { return nv.utils.NaNtoZero(y0(getY(d,i))) })\n                        .y1(function(d,i) { return y0( y.domain()[0] <= 0 ? y.domain()[1] >= 0 ? 0 : y.domain()[1] : y.domain()[0] ) })\n                        //.y1(function(d,i) { return y0(0) }) //assuming 0 is within y domain.. may need to tweak this\n                        .apply(this, [d.values])\n                });\n            groups.exit().selectAll('path.nv-area')\n                .remove();\n\n            areaPaths.watchTransition(renderWatch, 'line: areaPaths')\n                .attr('d', function(d) {\n                    return d3.svg.area()\n                        .interpolate(interpolate)\n                        .defined(defined)\n                        .x(function(d,i) { return nv.utils.NaNtoZero(x(getX(d,i))) })\n                        .y0(function(d,i) { return nv.utils.NaNtoZero(y(getY(d,i))) })\n                        .y1(function(d,i) { return y( y.domain()[0] <= 0 ? y.domain()[1] >= 0 ? 0 : y.domain()[1] : y.domain()[0] ) })\n                        //.y1(function(d,i) { return y0(0) }) //assuming 0 is within y domain.. may need to tweak this\n                        .apply(this, [d.values])\n                });\n\n            var linePaths = groups.selectAll('path.nv-line')\n                .data(function(d) { return [d.values] });\n\n            linePaths.enter().append('path')\n                .attr('class', 'nv-line')\n                .attr('d',\n                    d3.svg.line()\n                    .interpolate(interpolate)\n                    .defined(defined)\n                    .x(function(d,i) { return nv.utils.NaNtoZero(x0(getX(d,i))) })\n                    .y(function(d,i) { return nv.utils.NaNtoZero(y0(getY(d,i))) })\n            );\n\n            linePaths.watchTransition(renderWatch, 'line: linePaths')\n                .attr('d',\n                    d3.svg.line()\n                    .interpolate(interpolate)\n                    .defined(defined)\n                    .x(function(d,i) { return nv.utils.NaNtoZero(x(getX(d,i))) })\n                    .y(function(d,i) { return nv.utils.NaNtoZero(y(getY(d,i))) })\n            );\n\n            //store old scales for use in transitions on update\n            x0 = x.copy();\n            y0 = y.copy();\n        });\n        renderWatch.renderEnd('line immediate');\n        return chart;\n    }\n\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.scatter = scatter;\n    // Pass through events\n    scatter.dispatch.on('elementClick', function(){ dispatch.elementClick.apply(this, arguments); });\n    scatter.dispatch.on('elementMouseover', function(){ dispatch.elementMouseover.apply(this, arguments); });\n    scatter.dispatch.on('elementMouseout', function(){ dispatch.elementMouseout.apply(this, arguments); });\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        defined: {get: function(){return defined;}, set: function(_){defined=_;}},\n        interpolate:      {get: function(){return interpolate;}, set: function(_){interpolate=_;}},\n        clipEdge:    {get: function(){return clipEdge;}, set: function(_){clipEdge=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n            scatter.duration(duration);\n        }},\n        isArea: {get: function(){return isArea;}, set: function(_){\n            isArea = d3.functor(_);\n        }},\n        x: {get: function(){return getX;}, set: function(_){\n            getX = _;\n            scatter.x(_);\n        }},\n        y: {get: function(){return getY;}, set: function(_){\n            getY = _;\n            scatter.y(_);\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n            scatter.color(color);\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, scatter);\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\nnv.models.lineChart = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var lines = nv.models.line()\n        , xAxis = nv.models.axis()\n        , yAxis = nv.models.axis()\n        , legend = nv.models.legend()\n        , interactiveLayer = nv.interactiveGuideline()\n        , tooltip = nv.models.tooltip()\n        , focus = nv.models.focus(nv.models.line())\n        ;\n\n    var margin = {top: 30, right: 20, bottom: 50, left: 60}\n        , color = nv.utils.defaultColor()\n        , width = null\n        , height = null\n        , showLegend = true\n        , legendPosition = 'top'\n        , showXAxis = true\n        , showYAxis = true\n        , rightAlignYAxis = false\n        , useInteractiveGuideline = false\n        , x\n        , y\n        , focusEnable = false\n        , state = nv.utils.state()\n        , defaultState = null\n        , noData = null\n        , dispatch = d3.dispatch('tooltipShow', 'tooltipHide', 'stateChange', 'changeState', 'renderEnd')\n        , duration = 250\n        ;\n\n    // set options on sub-objects for this chart\n    xAxis.orient('bottom').tickPadding(7);\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n\n    lines.clipEdge(true).duration(0);\n\n    tooltip.valueFormatter(function(d, i) {\n        return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function(d, i) {\n        return xAxis.tickFormat()(d, i);\n    });\n\n    interactiveLayer.tooltip.valueFormatter(function(d, i) {\n        return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function(d, i) {\n        return xAxis.tickFormat()(d, i);\n    });\n\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    var stateGetter = function(data) {\n        return function(){\n            return {\n                active: data.map(function(d) { return !d.disabled; })\n            };\n        };\n    };\n\n    var stateSetter = function(data) {\n        return function(state) {\n            if (state.active !== undefined)\n                data.forEach(function(series,i) {\n                    series.disabled = !state.active[i];\n                });\n        };\n    };\n\n    function chart(selection) {\n        renderWatch.reset();\n        renderWatch.models(lines);\n        if (showXAxis) renderWatch.models(xAxis);\n        if (showYAxis) renderWatch.models(yAxis);\n\n        selection.each(function(data) {\n            var container = d3.select(this);\n            nv.utils.initSVG(container);\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n            chart.update = function() {\n                if( duration === 0 ) {\n                    container.call( chart );\n                } else {\n                    container.transition().duration(duration).call(chart);\n                }\n            };\n            chart.container = this;\n\n            state\n                .setter(stateSetter(data), chart.update)\n                .getter(stateGetter(data))\n                .update();\n\n            // DEPRECATED set state.disabled\n            state.disabled = data.map(function(d) { return !!d.disabled; });\n\n            if (!defaultState) {\n                var key;\n                defaultState = {};\n                for (key in state) {\n                    if (state[key] instanceof Array)\n                        defaultState[key] = state[key].slice(0);\n                    else\n                        defaultState[key] = state[key];\n                }\n            }\n\n            // Display noData message if there's nothing to show.\n            if (!data || !data.length || !data.filter(function(d) { return d.values.length; }).length) {\n                nv.utils.noData(chart, container);\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n\n            /* Update `main' graph on brush update. */\n            focus.dispatch.on(\"onBrush\", function(extent) {\n                onBrush(extent);\n            });\n\n            // Setup Scales\n            x = lines.xScale();\n            y = lines.yScale();\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-lineChart').data([data]);\n            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-lineChart').append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-legendWrap');\n\n            var focusEnter = gEnter.append('g').attr('class', 'nv-focus');\n            focusEnter.append('g').attr('class', 'nv-background').append('rect');\n            focusEnter.append('g').attr('class', 'nv-x nv-axis');\n            focusEnter.append('g').attr('class', 'nv-y nv-axis');\n            focusEnter.append('g').attr('class', 'nv-linesWrap');\n            focusEnter.append('g').attr('class', 'nv-interactive');\n\n            var contextEnter = gEnter.append('g').attr('class', 'nv-focusWrap');\n\n            // Legend\n            if (!showLegend) {\n                g.select('.nv-legendWrap').selectAll('*').remove();\n            } else {\n                legend.width(availableWidth);\n\n                g.select('.nv-legendWrap')\n                    .datum(data)\n                    .call(legend);\n\n                if (legendPosition === 'bottom') {\n                    wrap.select('.nv-legendWrap')\n                        .attr('transform', 'translate(0,' + availableHeight +')');\n                } else if (legendPosition === 'top') {\n                    if (legend.height() > margin.top) {\n                        margin.top = legend.height();\n                        availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n                    }\n\n                    wrap.select('.nv-legendWrap')\n                        .attr('transform', 'translate(0,' + (-margin.top) +')');\n                }\n            }\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            if (rightAlignYAxis) {\n                g.select(\".nv-y.nv-axis\")\n                    .attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n            }\n\n            //Set up interactive layer\n            if (useInteractiveGuideline) {\n                interactiveLayer\n                    .width(availableWidth)\n                    .height(availableHeight)\n                    .margin({left:margin.left, top:margin.top})\n                    .svgContainer(container)\n                    .xScale(x);\n                wrap.select(\".nv-interactive\").call(interactiveLayer);\n            }\n\n            g.select('.nv-focus .nv-background rect')\n                .attr('width', availableWidth)\n                .attr('height', availableHeight);\n\n            lines\n                .width(availableWidth)\n                .height(availableHeight)\n                .color(data.map(function(d,i) {\n                    return d.color || color(d, i);\n                }).filter(function(d,i) { return !data[i].disabled; }));\n\n            var linesWrap = g.select('.nv-linesWrap')\n                .datum(data.filter(function(d) { return !d.disabled; }));\n\n\n            // Setup Main (Focus) Axes\n            if (showXAxis) {\n                xAxis\n                    .scale(x)\n                    ._ticks(nv.utils.calcTicksX(availableWidth/100, data) )\n                    .tickSize(-availableHeight, 0);\n            }\n\n            if (showYAxis) {\n                yAxis\n                    .scale(y)\n                    ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n                    .tickSize( -availableWidth, 0);\n            }\n\n            //============================================================\n            // Update Axes\n            //============================================================\n            function updateXAxis() {\n              if(showXAxis) {\n                g.select('.nv-focus .nv-x.nv-axis')\n                  .transition()\n                  .duration(duration)\n                  .call(xAxis)\n                ;\n              }\n            }\n\n            function updateYAxis() {\n              if(showYAxis) {\n                g.select('.nv-focus .nv-y.nv-axis')\n                  .transition()\n                  .duration(duration)\n                  .call(yAxis)\n                ;\n              }\n            }\n\n            g.select('.nv-focus .nv-x.nv-axis')\n                .attr('transform', 'translate(0,' + availableHeight + ')');\n\n            //============================================================\n            // Update Focus\n            //============================================================\n            if(!focusEnable) {\n                linesWrap.call(lines);\n                updateXAxis();\n                updateYAxis();\n            } else {\n                focus.width(availableWidth);\n                g.select('.nv-focusWrap')\n                    .attr('transform', 'translate(0,' + ( availableHeight + margin.bottom + focus.margin().top) + ')')\n                    .datum(data.filter(function(d) { return !d.disabled; }))\n                    .call(focus);\n                var extent = focus.brush.empty() ? focus.xDomain() : focus.brush.extent();\n                if(extent !== null){\n                    onBrush(extent);\n                }\n            }\n            //============================================================\n            // Event Handling/Dispatching (in chart's scope)\n            //------------------------------------------------------------\n\n            legend.dispatch.on('stateChange', function(newState) {\n                for (var key in newState)\n                    state[key] = newState[key];\n                dispatch.stateChange(state);\n                chart.update();\n            });\n\n            interactiveLayer.dispatch.on('elementMousemove', function(e) {\n                lines.clearHighlights();\n                var singlePoint, pointIndex, pointXLocation, allData = [];\n                data\n                    .filter(function(series, i) {\n                        series.seriesIndex = i;\n                        return !series.disabled && !series.disableTooltip;\n                    })\n                    .forEach(function(series,i) {\n                        var extent = focusEnable ? (focus.brush.empty() ? focus.xScale().domain() : focus.brush.extent()) : x.domain();\n                        var currentValues = series.values.filter(function(d,i) {\n                            return lines.x()(d,i) >= extent[0] && lines.x()(d,i) <= extent[1];\n                        });\n\n                        pointIndex = nv.interactiveBisect(currentValues, e.pointXValue, lines.x());\n                        var point = currentValues[pointIndex];\n                        var pointYValue = chart.y()(point, pointIndex);\n                        if (pointYValue !== null) {\n                            lines.highlightPoint(series.seriesIndex, pointIndex, true);\n                        }\n                        if (point === undefined) return;\n                        if (singlePoint === undefined) singlePoint = point;\n                        if (pointXLocation === undefined) pointXLocation = chart.xScale()(chart.x()(point,pointIndex));\n                        allData.push({\n                            key: series.key,\n                            value: pointYValue,\n                            color: color(series,series.seriesIndex),\n                            data: point\n                        });\n                    });\n                //Highlight the tooltip entry based on which point the mouse is closest to.\n                if (allData.length > 2) {\n                    var yValue = chart.yScale().invert(e.mouseY);\n                    var domainExtent = Math.abs(chart.yScale().domain()[0] - chart.yScale().domain()[1]);\n                    var threshold = 0.03 * domainExtent;\n                    var indexToHighlight = nv.nearestValueIndex(allData.map(function(d){return d.value;}),yValue,threshold);\n                    if (indexToHighlight !== null)\n                        allData[indexToHighlight].highlight = true;\n                }\n\n                var defaultValueFormatter = function(d,i) {\n                    return d == null ? \"N/A\" : yAxis.tickFormat()(d);\n                };\n\n                interactiveLayer.tooltip\n                    .valueFormatter(interactiveLayer.tooltip.valueFormatter() || defaultValueFormatter)\n                    .data({\n                        value: chart.x()( singlePoint,pointIndex ),\n                        index: pointIndex,\n                        series: allData\n                    })();\n\n                interactiveLayer.renderGuideLine(pointXLocation);\n\n            });\n\n            interactiveLayer.dispatch.on('elementClick', function(e) {\n                var pointXLocation, allData = [];\n\n                data.filter(function(series, i) {\n                    series.seriesIndex = i;\n                    return !series.disabled;\n                }).forEach(function(series) {\n                    var pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n                    var point = series.values[pointIndex];\n                    if (typeof point === 'undefined') return;\n                    if (typeof pointXLocation === 'undefined') pointXLocation = chart.xScale()(chart.x()(point,pointIndex));\n                    var yPos = chart.yScale()(chart.y()(point,pointIndex));\n                    allData.push({\n                        point: point,\n                        pointIndex: pointIndex,\n                        pos: [pointXLocation, yPos],\n                        seriesIndex: series.seriesIndex,\n                        series: series\n                    });\n                });\n\n                lines.dispatch.elementClick(allData);\n            });\n\n            interactiveLayer.dispatch.on(\"elementMouseout\",function(e) {\n                lines.clearHighlights();\n            });\n\n            dispatch.on('changeState', function(e) {\n                if (typeof e.disabled !== 'undefined' && data.length === e.disabled.length) {\n                    data.forEach(function(series,i) {\n                        series.disabled = e.disabled[i];\n                    });\n\n                    state.disabled = e.disabled;\n                }\n                chart.update();\n            });\n\n            //============================================================\n            // Functions\n            //------------------------------------------------------------\n\n            // Taken from crossfilter (http://square.github.com/crossfilter/)\n            function resizePath(d) {\n                var e = +(d == 'e'),\n                    x = e ? 1 : -1,\n                    y = availableHeight / 3;\n                return 'M' + (0.5 * x) + ',' + y\n                    + 'A6,6 0 0 ' + e + ' ' + (6.5 * x) + ',' + (y + 6)\n                    + 'V' + (2 * y - 6)\n                    + 'A6,6 0 0 ' + e + ' ' + (0.5 * x) + ',' + (2 * y)\n                    + 'Z'\n                    + 'M' + (2.5 * x) + ',' + (y + 8)\n                    + 'V' + (2 * y - 8)\n                    + 'M' + (4.5 * x) + ',' + (y + 8)\n                    + 'V' + (2 * y - 8);\n            }\n\n            function onBrush(extent) {\n                // Update Main (Focus)\n                var focusLinesWrap = g.select('.nv-focus .nv-linesWrap')\n                    .datum(\n                    data.filter(function(d) { return !d.disabled; })\n                        .map(function(d,i) {\n                            return {\n                                key: d.key,\n                                area: d.area,\n                                classed: d.classed,\n                                values: d.values.filter(function(d,i) {\n                                    return lines.x()(d,i) >= extent[0] && lines.x()(d,i) <= extent[1];\n                                }),\n                                disableTooltip: d.disableTooltip\n                            };\n                        })\n                );\n                focusLinesWrap.transition().duration(duration).call(lines);\n\n                // Update Main (Focus) Axes\n                updateXAxis();\n                updateYAxis();\n            }\n        });\n\n        renderWatch.renderEnd('lineChart immediate');\n        return chart;\n    }\n\n\n    //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n    lines.dispatch.on('elementMouseover.tooltip', function(evt) {\n        if(!evt.series.disableTooltip){\n            tooltip.data(evt).hidden(false);\n        }\n    });\n\n    lines.dispatch.on('elementMouseout.tooltip', function(evt) {\n        tooltip.hidden(true);\n    });\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    // expose chart's sub-components\n    chart.dispatch = dispatch;\n    chart.lines = lines;\n    chart.legend = legend;\n    chart.focus = focus;\n    chart.xAxis = xAxis;\n    chart.x2Axis = focus.xAxis\n    chart.yAxis = yAxis;\n    chart.y2Axis = focus.yAxis\n    chart.interactiveLayer = interactiveLayer;\n    chart.tooltip = tooltip;\n    chart.state = state;\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n        legendPosition: {get: function(){return legendPosition;}, set: function(_){legendPosition=_;}},\n        showXAxis:      {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n        showYAxis:    {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n        defaultState:    {get: function(){return defaultState;}, set: function(_){defaultState=_;}},\n        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n        // Focus options, mostly passed onto focus model.\n        focusEnable:    {get: function(){return focusEnable;}, set: function(_){focusEnable=_;}},\n        focusHeight:     {get: function(){return focus.height();}, set: function(_){focus.height(_);}},\n        focusShowAxisX:    {get: function(){return focus.showXAxis();}, set: function(_){focus.showXAxis(_);}},\n        focusShowAxisY:    {get: function(){return focus.showYAxis();}, set: function(_){focus.showYAxis(_);}},\n        brushExtent: {get: function(){return focus.brushExtent();}, set: function(_){focus.brushExtent(_);}},\n\n        // options that require extra logic in the setter\n        focusMargin: {get: function(){return focus.margin}, set: function(_){\n            focus.margin.top    = _.top    !== undefined ? _.top    : focus.margin.top;\n            focus.margin.right  = _.right  !== undefined ? _.right  : focus.margin.right;\n            focus.margin.bottom = _.bottom !== undefined ? _.bottom : focus.margin.bottom;\n            focus.margin.left   = _.left   !== undefined ? _.left   : focus.margin.left;\n        }},\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n            lines.duration(duration);\n            focus.duration(duration);\n            xAxis.duration(duration);\n            yAxis.duration(duration);\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n            legend.color(color);\n            lines.color(color);\n            focus.color(color);\n        }},\n        interpolate: {get: function(){return lines.interpolate();}, set: function(_){\n            lines.interpolate(_);\n            focus.interpolate(_);\n        }},\n        xTickFormat: {get: function(){return xAxis.tickFormat();}, set: function(_){\n            xAxis.tickFormat(_);\n            focus.xTickFormat(_);\n        }},\n        yTickFormat: {get: function(){return yAxis.tickFormat();}, set: function(_){\n            yAxis.tickFormat(_);\n            focus.yTickFormat(_);\n        }},\n        x: {get: function(){return lines.x();}, set: function(_){\n            lines.x(_);\n            focus.x(_);\n        }},\n        y: {get: function(){return lines.y();}, set: function(_){\n            lines.y(_);\n            focus.y(_);\n        }},\n        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n            rightAlignYAxis = _;\n            yAxis.orient( rightAlignYAxis ? 'right' : 'left');\n        }},\n        useInteractiveGuideline: {get: function(){return useInteractiveGuideline;}, set: function(_){\n            useInteractiveGuideline = _;\n            if (useInteractiveGuideline) {\n                lines.interactive(false);\n                lines.useVoronoi(false);\n            }\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, lines);\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n\nnv.models.lineWithFocusChart = function() {\n  return nv.models.lineChart()\n    .margin({ bottom: 30 })\n    .focusEnable( true );\n};\nnv.models.linePlusBarChart = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var lines = nv.models.line()\n        , lines2 = nv.models.line()\n        , bars = nv.models.historicalBar()\n        , bars2 = nv.models.historicalBar()\n        , xAxis = nv.models.axis()\n        , x2Axis = nv.models.axis()\n        , y1Axis = nv.models.axis()\n        , y2Axis = nv.models.axis()\n        , y3Axis = nv.models.axis()\n        , y4Axis = nv.models.axis()\n        , legend = nv.models.legend()\n        , brush = d3.svg.brush()\n        , tooltip = nv.models.tooltip()\n        ;\n\n    var margin = {top: 30, right: 30, bottom: 30, left: 60}\n        , margin2 = {top: 0, right: 30, bottom: 20, left: 60}\n        , width = null\n        , height = null\n        , getX = function(d) { return d.x }\n        , getY = function(d) { return d.y }\n        , color = nv.utils.defaultColor()\n        , showLegend = true\n        , focusEnable = true\n        , focusShowAxisY = false\n        , focusShowAxisX = true\n        , focusHeight = 50\n        , extent\n        , brushExtent = null\n        , x\n        , x2\n        , y1\n        , y2\n        , y3\n        , y4\n        , noData = null\n        , dispatch = d3.dispatch('brush', 'stateChange', 'changeState')\n        , transitionDuration = 0\n        , state = nv.utils.state()\n        , defaultState = null\n        , legendLeftAxisHint = ' (left axis)'\n        , legendRightAxisHint = ' (right axis)'\n        , switchYAxisOrder = false\n        ;\n\n    lines.clipEdge(true);\n    lines2.interactive(false);\n    // We don't want any points emitted for the focus chart's scatter graph.\n    lines2.pointActive(function(d) { return false });\n    xAxis.orient('bottom').tickPadding(5);\n    y1Axis.orient('left');\n    y2Axis.orient('right');\n    x2Axis.orient('bottom').tickPadding(5);\n    y3Axis.orient('left');\n    y4Axis.orient('right');\n\n    tooltip.headerEnabled(true).headerFormatter(function(d, i) {\n        return xAxis.tickFormat()(d, i);\n    });\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var getBarsAxis = function() {\n        return switchYAxisOrder\n            ? { main: y2Axis, focus: y4Axis }\n            : { main: y1Axis, focus: y3Axis }\n    }\n\n    var getLinesAxis = function() {\n        return switchYAxisOrder\n            ? { main: y1Axis, focus: y3Axis }\n            : { main: y2Axis, focus: y4Axis }\n    }\n\n    var stateGetter = function(data) {\n        return function(){\n            return {\n                active: data.map(function(d) { return !d.disabled })\n            };\n        }\n    };\n\n    var stateSetter = function(data) {\n        return function(state) {\n            if (state.active !== undefined)\n                data.forEach(function(series,i) {\n                    series.disabled = !state.active[i];\n                });\n        }\n    };\n\n    var allDisabled = function(data) {\n      return data.every(function(series) {\n        return series.disabled;\n      });\n    }\n\n    function chart(selection) {\n        selection.each(function(data) {\n            var container = d3.select(this),\n                that = this;\n            nv.utils.initSVG(container);\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight1 = nv.utils.availableHeight(height, container, margin)\n                    - (focusEnable ? focusHeight : 0),\n                availableHeight2 = focusHeight - margin2.top - margin2.bottom;\n\n            chart.update = function() { container.transition().duration(transitionDuration).call(chart); };\n            chart.container = this;\n\n            state\n                .setter(stateSetter(data), chart.update)\n                .getter(stateGetter(data))\n                .update();\n\n            // DEPRECATED set state.disableddisabled\n            state.disabled = data.map(function(d) { return !!d.disabled });\n\n            if (!defaultState) {\n                var key;\n                defaultState = {};\n                for (key in state) {\n                    if (state[key] instanceof Array)\n                        defaultState[key] = state[key].slice(0);\n                    else\n                        defaultState[key] = state[key];\n                }\n            }\n\n            // Display No Data message if there's nothing to show.\n            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n                nv.utils.noData(chart, container)\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n\n            // Setup Scales\n            var dataBars = data.filter(function(d) { return !d.disabled && d.bar });\n            var dataLines = data.filter(function(d) { return !d.bar }); // removed the !d.disabled clause here to fix Issue #240\n\n            if (dataBars.length && !switchYAxisOrder) {\n                x = bars.xScale();\n            } else {\n                x = lines.xScale();\n            }\n\n            x2 = x2Axis.scale();\n\n            // select the scales and series based on the position of the yAxis\n            y1 = switchYAxisOrder ? lines.yScale() : bars.yScale();\n            y2 = switchYAxisOrder ? bars.yScale() : lines.yScale();\n            y3 = switchYAxisOrder ? lines2.yScale() : bars2.yScale();\n            y4 = switchYAxisOrder ? bars2.yScale() : lines2.yScale();\n\n            var series1 = data\n                .filter(function(d) { return !d.disabled && (switchYAxisOrder ? !d.bar : d.bar) })\n                .map(function(d) {\n                    return d.values.map(function(d,i) {\n                        return { x: getX(d,i), y: getY(d,i) }\n                    })\n                });\n\n            var series2 = data\n                .filter(function(d) { return !d.disabled && (switchYAxisOrder ? d.bar : !d.bar) })\n                .map(function(d) {\n                    return d.values.map(function(d,i) {\n                        return { x: getX(d,i), y: getY(d,i) }\n                    })\n                });\n\n            x.range([0, availableWidth]);\n\n            x2  .domain(d3.extent(d3.merge(series1.concat(series2)), function(d) { return d.x } ))\n                .range([0, availableWidth]);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-linePlusBar').data([data]);\n            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-linePlusBar').append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-legendWrap');\n\n            // this is the main chart\n            var focusEnter = gEnter.append('g').attr('class', 'nv-focus');\n            focusEnter.append('g').attr('class', 'nv-x nv-axis');\n            focusEnter.append('g').attr('class', 'nv-y1 nv-axis');\n            focusEnter.append('g').attr('class', 'nv-y2 nv-axis');\n            focusEnter.append('g').attr('class', 'nv-barsWrap');\n            focusEnter.append('g').attr('class', 'nv-linesWrap');\n\n            // context chart is where you can focus in\n            var contextEnter = gEnter.append('g').attr('class', 'nv-context');\n            contextEnter.append('g').attr('class', 'nv-x nv-axis');\n            contextEnter.append('g').attr('class', 'nv-y1 nv-axis');\n            contextEnter.append('g').attr('class', 'nv-y2 nv-axis');\n            contextEnter.append('g').attr('class', 'nv-barsWrap');\n            contextEnter.append('g').attr('class', 'nv-linesWrap');\n            contextEnter.append('g').attr('class', 'nv-brushBackground');\n            contextEnter.append('g').attr('class', 'nv-x nv-brush');\n\n            //============================================================\n            // Legend\n            //------------------------------------------------------------\n\n            if (!showLegend) {\n                g.select('.nv-legendWrap').selectAll('*').remove();\n            } else {\n                var legendWidth = legend.align() ? availableWidth / 2 : availableWidth;\n                var legendXPosition = legend.align() ? legendWidth : 0;\n\n                legend.width(legendWidth);\n\n                g.select('.nv-legendWrap')\n                    .datum(data.map(function(series) {\n                        series.originalKey = series.originalKey === undefined ? series.key : series.originalKey;\n                        if(switchYAxisOrder) {\n                            series.key = series.originalKey + (series.bar ? legendRightAxisHint : legendLeftAxisHint);\n                        } else {\n                            series.key = series.originalKey + (series.bar ? legendLeftAxisHint : legendRightAxisHint);\n                        }\n                        return series;\n                    }))\n                    .call(legend);\n\n                if (legend.height() > margin.top) {\n                    margin.top = legend.height();\n                    // FIXME: shouldn't this be \"- (focusEnabled ? focusHeight : 0)\"?\n                    availableHeight1 = nv.utils.availableHeight(height, container, margin) - focusHeight;\n                }\n\n                g.select('.nv-legendWrap')\n                    .attr('transform', 'translate(' + legendXPosition + ',' + (-margin.top) +')');\n            }\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            //============================================================\n            // Context chart (focus chart) components\n            //------------------------------------------------------------\n\n            // hide or show the focus context chart\n            g.select('.nv-context').style('display', focusEnable ? 'initial' : 'none');\n\n            bars2\n                .width(availableWidth)\n                .height(availableHeight2)\n                .color(data.map(function (d, i) {\n                    return d.color || color(d, i);\n                }).filter(function (d, i) {\n                    return !data[i].disabled && data[i].bar\n                }));\n            lines2\n                .width(availableWidth)\n                .height(availableHeight2)\n                .color(data.map(function (d, i) {\n                    return d.color || color(d, i);\n                }).filter(function (d, i) {\n                    return !data[i].disabled && !data[i].bar\n                }));\n\n            var bars2Wrap = g.select('.nv-context .nv-barsWrap')\n                .datum(dataBars.length ? dataBars : [\n                    {values: []}\n                ]);\n            var lines2Wrap = g.select('.nv-context .nv-linesWrap')\n                .datum(allDisabled(dataLines) ?\n                       [{values: []}] :\n                       dataLines.filter(function(dataLine) {\n                         return !dataLine.disabled;\n                       }));\n\n            g.select('.nv-context')\n                .attr('transform', 'translate(0,' + ( availableHeight1 + margin.bottom + margin2.top) + ')');\n\n            bars2Wrap.transition().call(bars2);\n            lines2Wrap.transition().call(lines2);\n\n            // context (focus chart) axis controls\n            if (focusShowAxisX) {\n                x2Axis\n                    ._ticks( nv.utils.calcTicksX(availableWidth / 100, data))\n                    .tickSize(-availableHeight2, 0);\n                g.select('.nv-context .nv-x.nv-axis')\n                    .attr('transform', 'translate(0,' + y3.range()[0] + ')');\n                g.select('.nv-context .nv-x.nv-axis').transition()\n                    .call(x2Axis);\n            }\n\n            if (focusShowAxisY) {\n                y3Axis\n                    .scale(y3)\n                    ._ticks( availableHeight2 / 36 )\n                    .tickSize( -availableWidth, 0);\n                y4Axis\n                    .scale(y4)\n                    ._ticks( availableHeight2 / 36 )\n                    .tickSize(dataBars.length ? 0 : -availableWidth, 0); // Show the y2 rules only if y1 has none\n\n                g.select('.nv-context .nv-y3.nv-axis')\n                    .style('opacity', dataBars.length ? 1 : 0)\n                    .attr('transform', 'translate(0,' + x2.range()[0] + ')');\n                g.select('.nv-context .nv-y2.nv-axis')\n                    .style('opacity', dataLines.length ? 1 : 0)\n                    .attr('transform', 'translate(' + x2.range()[1] + ',0)');\n\n                g.select('.nv-context .nv-y1.nv-axis').transition()\n                    .call(y3Axis);\n                g.select('.nv-context .nv-y2.nv-axis').transition()\n                    .call(y4Axis);\n            }\n\n            // Setup Brush\n            brush.x(x2).on('brush', onBrush);\n\n            if (brushExtent) brush.extent(brushExtent);\n\n            var brushBG = g.select('.nv-brushBackground').selectAll('g')\n                .data([brushExtent || brush.extent()]);\n\n            var brushBGenter = brushBG.enter()\n                .append('g');\n\n            brushBGenter.append('rect')\n                .attr('class', 'left')\n                .attr('x', 0)\n                .attr('y', 0)\n                .attr('height', availableHeight2);\n\n            brushBGenter.append('rect')\n                .attr('class', 'right')\n                .attr('x', 0)\n                .attr('y', 0)\n                .attr('height', availableHeight2);\n\n            var gBrush = g.select('.nv-x.nv-brush')\n                .call(brush);\n            gBrush.selectAll('rect')\n                //.attr('y', -5)\n                .attr('height', availableHeight2);\n            gBrush.selectAll('.resize').append('path').attr('d', resizePath);\n\n            //============================================================\n            // Event Handling/Dispatching (in chart's scope)\n            //------------------------------------------------------------\n\n            legend.dispatch.on('stateChange', function(newState) {\n                for (var key in newState)\n                    state[key] = newState[key];\n                dispatch.stateChange(state);\n                chart.update();\n            });\n\n            // Update chart from a state object passed to event handler\n            dispatch.on('changeState', function(e) {\n                if (typeof e.disabled !== 'undefined') {\n                    data.forEach(function(series,i) {\n                        series.disabled = e.disabled[i];\n                    });\n                    state.disabled = e.disabled;\n                }\n                chart.update();\n            });\n\n            //============================================================\n            // Functions\n            //------------------------------------------------------------\n\n            // Taken from crossfilter (http://square.github.com/crossfilter/)\n            function resizePath(d) {\n                var e = +(d == 'e'),\n                    x = e ? 1 : -1,\n                    y = availableHeight2 / 3;\n                return 'M' + (.5 * x) + ',' + y\n                    + 'A6,6 0 0 ' + e + ' ' + (6.5 * x) + ',' + (y + 6)\n                    + 'V' + (2 * y - 6)\n                    + 'A6,6 0 0 ' + e + ' ' + (.5 * x) + ',' + (2 * y)\n                    + 'Z'\n                    + 'M' + (2.5 * x) + ',' + (y + 8)\n                    + 'V' + (2 * y - 8)\n                    + 'M' + (4.5 * x) + ',' + (y + 8)\n                    + 'V' + (2 * y - 8);\n            }\n\n\n            function updateBrushBG() {\n                if (!brush.empty()) brush.extent(brushExtent);\n                brushBG\n                    .data([brush.empty() ? x2.domain() : brushExtent])\n                    .each(function(d,i) {\n                        var leftWidth = x2(d[0]) - x2.range()[0],\n                            rightWidth = x2.range()[1] - x2(d[1]);\n                        d3.select(this).select('.left')\n                            .attr('width',  leftWidth < 0 ? 0 : leftWidth);\n\n                        d3.select(this).select('.right')\n                            .attr('x', x2(d[1]))\n                            .attr('width', rightWidth < 0 ? 0 : rightWidth);\n                    });\n            }\n\n            function onBrush() {\n                brushExtent = brush.empty() ? null : brush.extent();\n                extent = brush.empty() ? x2.domain() : brush.extent();\n                dispatch.brush({extent: extent, brush: brush});\n                updateBrushBG();\n\n                // Prepare Main (Focus) Bars and Lines\n                bars\n                    .width(availableWidth)\n                    .height(availableHeight1)\n                    .color(data.map(function(d,i) {\n                        return d.color || color(d, i);\n                    }).filter(function(d,i) { return !data[i].disabled && data[i].bar }));\n\n                lines\n                    .width(availableWidth)\n                    .height(availableHeight1)\n                    .color(data.map(function(d,i) {\n                        return d.color || color(d, i);\n                    }).filter(function(d,i) { return !data[i].disabled && !data[i].bar }));\n\n                var focusBarsWrap = g.select('.nv-focus .nv-barsWrap')\n                    .datum(!dataBars.length ? [{values:[]}] :\n                        dataBars\n                            .map(function(d,i) {\n                                return {\n                                    key: d.key,\n                                    values: d.values.filter(function(d,i) {\n                                        return bars.x()(d,i) >= extent[0] && bars.x()(d,i) <= extent[1];\n                                    })\n                                }\n                            })\n                );\n\n                var focusLinesWrap = g.select('.nv-focus .nv-linesWrap')\n                    .datum(allDisabled(dataLines) ? [{values:[]}] :\n                           dataLines\n                           .filter(function(dataLine) { return !dataLine.disabled; })\n                           .map(function(d,i) {\n                                return {\n                                    area: d.area,\n                                    fillOpacity: d.fillOpacity,\n                                    strokeWidth: d.strokeWidth,\n                                    key: d.key,\n                                    values: d.values.filter(function(d,i) {\n                                        return lines.x()(d,i) >= extent[0] && lines.x()(d,i) <= extent[1];\n                                    })\n                                }\n                            })\n                );\n\n                // Update Main (Focus) X Axis\n                if (dataBars.length && !switchYAxisOrder) {\n                    x = bars.xScale();\n                } else {\n                    x = lines.xScale();\n                }\n\n                xAxis\n                    .scale(x)\n                    ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n                    .tickSize(-availableHeight1, 0);\n\n                xAxis.domain([Math.ceil(extent[0]), Math.floor(extent[1])]);\n\n                g.select('.nv-x.nv-axis').transition().duration(transitionDuration)\n                    .call(xAxis);\n\n                // Update Main (Focus) Bars and Lines\n                focusBarsWrap.transition().duration(transitionDuration).call(bars);\n                focusLinesWrap.transition().duration(transitionDuration).call(lines);\n\n                // Setup and Update Main (Focus) Y Axes\n                g.select('.nv-focus .nv-x.nv-axis')\n                    .attr('transform', 'translate(0,' + y1.range()[0] + ')');\n\n                y1Axis\n                    .scale(y1)\n                    ._ticks( nv.utils.calcTicksY(availableHeight1/36, data) )\n                    .tickSize(-availableWidth, 0);\n                y2Axis\n                    .scale(y2)\n                    ._ticks( nv.utils.calcTicksY(availableHeight1/36, data) );\n\n                // Show the y2 rules only if y1 has none\n                if(!switchYAxisOrder) {\n                    y2Axis.tickSize(dataBars.length ? 0 : -availableWidth, 0);\n                } else {\n                    y2Axis.tickSize(dataLines.length ? 0 : -availableWidth, 0);\n                }\n\n                // Calculate opacity of the axis\n                var barsOpacity = dataBars.length ? 1 : 0;\n                var linesOpacity = dataLines.length && !allDisabled(dataLines) ? 1 : 0;\n\n                var y1Opacity = switchYAxisOrder ? linesOpacity : barsOpacity;\n                var y2Opacity = switchYAxisOrder ? barsOpacity : linesOpacity;\n\n                g.select('.nv-focus .nv-y1.nv-axis')\n                    .style('opacity', y1Opacity);\n                g.select('.nv-focus .nv-y2.nv-axis')\n                    .style('opacity', y2Opacity)\n                    .attr('transform', 'translate(' + x.range()[1] + ',0)');\n\n                g.select('.nv-focus .nv-y1.nv-axis').transition().duration(transitionDuration)\n                    .call(y1Axis);\n                g.select('.nv-focus .nv-y2.nv-axis').transition().duration(transitionDuration)\n                    .call(y2Axis);\n            }\n\n            onBrush();\n\n        });\n\n        return chart;\n    }\n\n    //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n    lines.dispatch.on('elementMouseover.tooltip', function(evt) {\n        tooltip\n            .duration(100)\n            .valueFormatter(function(d, i) {\n                return getLinesAxis().main.tickFormat()(d, i);\n            })\n            .data(evt)\n            .hidden(false);\n    });\n\n    lines.dispatch.on('elementMouseout.tooltip', function(evt) {\n        tooltip.hidden(true)\n    });\n\n    bars.dispatch.on('elementMouseover.tooltip', function(evt) {\n        evt.value = chart.x()(evt.data);\n        evt['series'] = {\n            value: chart.y()(evt.data),\n            color: evt.color\n        };\n        tooltip\n            .duration(0)\n            .valueFormatter(function(d, i) {\n                return getBarsAxis().main.tickFormat()(d, i);\n            })\n            .data(evt)\n            .hidden(false);\n    });\n\n    bars.dispatch.on('elementMouseout.tooltip', function(evt) {\n        tooltip.hidden(true);\n    });\n\n    bars.dispatch.on('elementMousemove.tooltip', function(evt) {\n        tooltip();\n    });\n\n    //============================================================\n\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    // expose chart's sub-components\n    chart.dispatch = dispatch;\n    chart.legend = legend;\n    chart.lines = lines;\n    chart.lines2 = lines2;\n    chart.bars = bars;\n    chart.bars2 = bars2;\n    chart.xAxis = xAxis;\n    chart.x2Axis = x2Axis;\n    chart.y1Axis = y1Axis;\n    chart.y2Axis = y2Axis;\n    chart.y3Axis = y3Axis;\n    chart.y4Axis = y4Axis;\n    chart.tooltip = tooltip;\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n        brushExtent:    {get: function(){return brushExtent;}, set: function(_){brushExtent=_;}},\n        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n        focusEnable:    {get: function(){return focusEnable;}, set: function(_){focusEnable=_;}},\n        focusHeight:    {get: function(){return focusHeight;}, set: function(_){focusHeight=_;}},\n        focusShowAxisX:    {get: function(){return focusShowAxisX;}, set: function(_){focusShowAxisX=_;}},\n        focusShowAxisY:    {get: function(){return focusShowAxisY;}, set: function(_){focusShowAxisY=_;}},\n        legendLeftAxisHint:    {get: function(){return legendLeftAxisHint;}, set: function(_){legendLeftAxisHint=_;}},\n        legendRightAxisHint:    {get: function(){return legendRightAxisHint;}, set: function(_){legendRightAxisHint=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        focusMargin: {get: function(){return margin2;}, set: function(_){\n            margin2.top    = _.top    !== undefined ? _.top    : margin2.top;\n            margin2.right  = _.right  !== undefined ? _.right  : margin2.right;\n            margin2.bottom = _.bottom !== undefined ? _.bottom : margin2.bottom;\n            margin2.left   = _.left   !== undefined ? _.left   : margin2.left;\n        }},\n        duration: {get: function(){return transitionDuration;}, set: function(_){\n            transitionDuration = _;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n            legend.color(color);\n        }},\n        x: {get: function(){return getX;}, set: function(_){\n            getX = _;\n            lines.x(_);\n            lines2.x(_);\n            bars.x(_);\n            bars2.x(_);\n        }},\n        y: {get: function(){return getY;}, set: function(_){\n            getY = _;\n            lines.y(_);\n            lines2.y(_);\n            bars.y(_);\n            bars2.y(_);\n        }},\n        switchYAxisOrder:    {get: function(){return switchYAxisOrder;}, set: function(_){\n            // Switch the tick format for the yAxis\n            if(switchYAxisOrder !== _) {\n                var y1 = y1Axis;\n                y1Axis = y2Axis;\n                y2Axis = y1;\n\n                var y3 = y3Axis;\n                y3Axis = y4Axis;\n                y4Axis = y3;\n            }\n            switchYAxisOrder=_;\n\n            y1Axis.orient('left');\n            y2Axis.orient('right');\n            y3Axis.orient('left');\n            y4Axis.orient('right');\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, lines);\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n\nnv.models.multiBar = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n        , width = 960\n        , height = 500\n        , x = d3.scale.ordinal()\n        , y = d3.scale.linear()\n        , id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n        , container = null\n        , getX = function(d) { return d.x }\n        , getY = function(d) { return d.y }\n        , forceY = [0] // 0 is forced by default.. this makes sense for the majority of bar graphs... user can always do chart.forceY([]) to remove\n        , clipEdge = true\n        , stacked = false\n        , stackOffset = 'zero' // options include 'silhouette', 'wiggle', 'expand', 'zero', or a custom function\n        , color = nv.utils.defaultColor()\n        , hideable = false\n        , barColor = null // adding the ability to set the color for each rather than the whole group\n        , disabled // used in conjunction with barColor to communicate from multiBarHorizontalChart what series are disabled\n        , duration = 500\n        , xDomain\n        , yDomain\n        , xRange\n        , yRange\n        , groupSpacing = 0.1\n        , fillOpacity = 0.75\n        , dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd')\n        ;\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var x0, y0 //used to store previous scales\n        , renderWatch = nv.utils.renderWatch(dispatch, duration)\n        ;\n\n    var last_datalength = 0;\n\n    function chart(selection) {\n        renderWatch.reset();\n        selection.each(function(data) {\n            var availableWidth = width - margin.left - margin.right,\n                availableHeight = height - margin.top - margin.bottom;\n\n            container = d3.select(this);\n            nv.utils.initSVG(container);\n            var nonStackableCount = 0;\n            // This function defines the requirements for render complete\n            var endFn = function(d, i) {\n                if (d.series === data.length - 1 && i === data[0].values.length - 1)\n                    return true;\n                return false;\n            };\n\n            if(hideable && data.length) hideable = [{\n                values: data[0].values.map(function(d) {\n                        return {\n                            x: d.x,\n                            y: 0,\n                            series: d.series,\n                            size: 0.01\n                        };}\n                )}];\n\n            if (stacked) {\n                var parsed = d3.layout.stack()\n                    .offset(stackOffset)\n                    .values(function(d){ return d.values })\n                    .y(getY)\n                (!data.length && hideable ? hideable : data);\n\n                parsed.forEach(function(series, i){\n                    // if series is non-stackable, use un-parsed data\n                    if (series.nonStackable) {\n                        data[i].nonStackableSeries = nonStackableCount++;\n                        parsed[i] = data[i];\n                    } else {\n                        // don't stack this seires on top of the nonStackable seriees\n                        if (i > 0 && parsed[i - 1].nonStackable){\n                            parsed[i].values.map(function(d,j){\n                                d.y0 -= parsed[i - 1].values[j].y;\n                                d.y1 = d.y0 + d.y;\n                            });\n                        }\n                    }\n                });\n                data = parsed;\n            }\n            //add series index and key to each data point for reference\n            data.forEach(function(series, i) {\n                series.values.forEach(function(point) {\n                    point.series = i;\n                    point.key = series.key;\n                });\n            });\n\n            // HACK for negative value stacking\n            if (stacked && data.length > 0) {\n                data[0].values.map(function(d,i) {\n                    var posBase = 0, negBase = 0;\n                    data.map(function(d, idx) {\n                        if (!data[idx].nonStackable) {\n                            var f = d.values[i]\n                            f.size = Math.abs(f.y);\n                            if (f.y<0)  {\n                                f.y1 = negBase;\n                                negBase = negBase - f.size;\n                            } else\n                            {\n                                f.y1 = f.size + posBase;\n                                posBase = posBase + f.size;\n                            }\n                        }\n\n                    });\n                });\n            }\n            // Setup Scales\n            // remap and flatten the data for use in calculating the scales' domains\n            var seriesData = (xDomain && yDomain) ? [] : // if we know xDomain and yDomain, no need to calculate\n                data.map(function(d, idx) {\n                    return d.values.map(function(d,i) {\n                        return { x: getX(d,i), y: getY(d,i), y0: d.y0, y1: d.y1, idx:idx }\n                    })\n                });\n\n            x.domain(xDomain || d3.merge(seriesData).map(function(d) { return d.x }))\n                .rangeBands(xRange || [0, availableWidth], groupSpacing);\n\n            y.domain(yDomain || d3.extent(d3.merge(seriesData).map(function(d) {\n                var domain = d.y;\n                // increase the domain range if this series is stackable\n                if (stacked && !data[d.idx].nonStackable) {\n                    if (d.y > 0){\n                        domain = d.y1\n                    } else {\n                        domain = d.y1 + d.y\n                    }\n                }\n                return domain;\n            }).concat(forceY)))\n            .range(yRange || [availableHeight, 0]);\n\n            // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n            if (x.domain()[0] === x.domain()[1])\n                x.domain()[0] ?\n                    x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01])\n                    : x.domain([-1,1]);\n\n            if (y.domain()[0] === y.domain()[1])\n                y.domain()[0] ?\n                    y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01])\n                    : y.domain([-1,1]);\n\n            x0 = x0 || x;\n            y0 = y0 || y;\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-multibar').data([data]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multibar');\n            var defsEnter = wrapEnter.append('defs');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-groups');\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            defsEnter.append('clipPath')\n                .attr('id', 'nv-edge-clip-' + id)\n                .append('rect');\n            wrap.select('#nv-edge-clip-' + id + ' rect')\n                .attr('width', availableWidth)\n                .attr('height', availableHeight);\n\n            g.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + id + ')' : '');\n\n            var groups = wrap.select('.nv-groups').selectAll('.nv-group')\n                .data(function(d) { return d }, function(d,i) { return i });\n            groups.enter().append('g')\n                .style('stroke-opacity', 1e-6)\n                .style('fill-opacity', 1e-6);\n\n            var exitTransition = renderWatch\n                .transition(groups.exit().selectAll('rect.nv-bar'), 'multibarExit', Math.min(100, duration))\n                .attr('y', function(d, i, j) {\n                    var yVal = y0(0) || 0;\n                    if (stacked) {\n                        if (data[d.series] && !data[d.series].nonStackable) {\n                            yVal = y0(d.y0);\n                        }\n                    }\n                    return yVal;\n                })\n                .attr('height', 0)\n                .remove();\n            if (exitTransition.delay)\n                exitTransition.delay(function(d,i) {\n                    var delay = i * (duration / (last_datalength + 1)) - i;\n                    return delay;\n                });\n            groups\n                .attr('class', function(d,i) { return 'nv-group nv-series-' + i })\n                .classed('hover', function(d) { return d.hover })\n                .style('fill', function(d,i){ return color(d, i) })\n                .style('stroke', function(d,i){ return color(d, i) });\n            groups\n                .style('stroke-opacity', 1)\n                .style('fill-opacity', fillOpacity);\n\n            var bars = groups.selectAll('rect.nv-bar')\n                .data(function(d) { return (hideable && !data.length) ? hideable.values : d.values });\n            bars.exit().remove();\n\n            var barsEnter = bars.enter().append('rect')\n                    .attr('class', function(d,i) { return getY(d,i) < 0 ? 'nv-bar negative' : 'nv-bar positive'})\n                    .attr('x', function(d,i,j) {\n                        return stacked && !data[j].nonStackable ? 0 : (j * x.rangeBand() / data.length )\n                    })\n                    .attr('y', function(d,i,j) { return y0(stacked && !data[j].nonStackable ? d.y0 : 0) || 0 })\n                    .attr('height', 0)\n                    .attr('width', function(d,i,j) { return x.rangeBand() / (stacked && !data[j].nonStackable ? 1 : data.length) })\n                    .attr('transform', function(d,i) { return 'translate(' + x(getX(d,i)) + ',0)'; })\n                ;\n            bars\n                .style('fill', function(d,i,j){ return color(d, j, i);  })\n                .style('stroke', function(d,i,j){ return color(d, j, i); })\n                .on('mouseover', function(d,i) { //TODO: figure out why j works above, but not here\n                    d3.select(this).classed('hover', true);\n                    dispatch.elementMouseover({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                })\n                .on('mouseout', function(d,i) {\n                    d3.select(this).classed('hover', false);\n                    dispatch.elementMouseout({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                })\n                .on('mousemove', function(d,i) {\n                    dispatch.elementMousemove({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                })\n                .on('click', function(d,i) {\n                    var element = this;\n                    dispatch.elementClick({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\"),\n                        event: d3.event,\n                        element: element\n                    });\n                    d3.event.stopPropagation();\n                })\n                .on('dblclick', function(d,i) {\n                    dispatch.elementDblClick({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                    d3.event.stopPropagation();\n                });\n            bars\n                .attr('class', function(d,i) { return getY(d,i) < 0 ? 'nv-bar negative' : 'nv-bar positive'})\n                .attr('transform', function(d,i) { return 'translate(' + x(getX(d,i)) + ',0)'; })\n\n            if (barColor) {\n                if (!disabled) disabled = data.map(function() { return true });\n                bars\n                    .style('fill', function(d,i,j) { return d3.rgb(barColor(d,i)).darker(  disabled.map(function(d,i) { return i }).filter(function(d,i){ return !disabled[i]  })[j]   ).toString(); })\n                    .style('stroke', function(d,i,j) { return d3.rgb(barColor(d,i)).darker(  disabled.map(function(d,i) { return i }).filter(function(d,i){ return !disabled[i]  })[j]   ).toString(); });\n            }\n\n            var barSelection =\n                bars.watchTransition(renderWatch, 'multibar', Math.min(250, duration))\n                    .delay(function(d,i) {\n                        return i * duration / data[0].values.length;\n                    });\n            if (stacked){\n                barSelection\n                    .attr('y', function(d,i,j) {\n                        var yVal = 0;\n                        // if stackable, stack it on top of the previous series\n                        if (!data[j].nonStackable) {\n                            yVal = y(d.y1);\n                        } else {\n                            if (getY(d,i) < 0){\n                                yVal = y(0);\n                            } else {\n                                if (y(0) - y(getY(d,i)) < -1){\n                                    yVal = y(0) - 1;\n                                } else {\n                                    yVal = y(getY(d, i)) || 0;\n                                }\n                            }\n                        }\n                        return yVal;\n                    })\n                    .attr('height', function(d,i,j) {\n                        if (!data[j].nonStackable) {\n                            return Math.max(Math.abs(y(d.y+d.y0) - y(d.y0)), 0);\n                        } else {\n                            return Math.max(Math.abs(y(getY(d,i)) - y(0)), 0) || 0;\n                        }\n                    })\n                    .attr('x', function(d,i,j) {\n                        var width = 0;\n                        if (data[j].nonStackable) {\n                            width = d.series * x.rangeBand() / data.length;\n                            if (data.length !== nonStackableCount){\n                                width = data[j].nonStackableSeries * x.rangeBand()/(nonStackableCount*2);\n                            }\n                        }\n                        return width;\n                    })\n                    .attr('width', function(d,i,j){\n                        if (!data[j].nonStackable) {\n                            return x.rangeBand();\n                        } else {\n                            // if all series are nonStacable, take the full width\n                            var width = (x.rangeBand() / nonStackableCount);\n                            // otherwise, nonStackable graph will be only taking the half-width\n                            // of the x rangeBand\n                            if (data.length !== nonStackableCount) {\n                                width = x.rangeBand()/(nonStackableCount*2);\n                            }\n                            return width;\n                        }\n                    });\n            }\n            else {\n                barSelection\n                    .attr('x', function(d,i) {\n                        return d.series * x.rangeBand() / data.length;\n                    })\n                    .attr('width', x.rangeBand() / data.length)\n                    .attr('y', function(d,i) {\n                        return getY(d,i) < 0 ?\n                            y(0) :\n                                y(0) - y(getY(d,i)) < 1 ?\n                            y(0) - 1 :\n                            y(getY(d,i)) || 0;\n                    })\n                    .attr('height', function(d,i) {\n                        return Math.max(Math.abs(y(getY(d,i)) - y(0)),1) || 0;\n                    });\n            }\n\n            //store old scales for use in transitions on update\n            x0 = x.copy();\n            y0 = y.copy();\n\n            // keep track of the last data value length for transition calculations\n            if (data[0] && data[0].values) {\n                last_datalength = data[0].values.length;\n            }\n\n        });\n\n        renderWatch.renderEnd('multibar immediate');\n\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:   {get: function(){return width;}, set: function(_){width=_;}},\n        height:  {get: function(){return height;}, set: function(_){height=_;}},\n        x:       {get: function(){return getX;}, set: function(_){getX=_;}},\n        y:       {get: function(){return getY;}, set: function(_){getY=_;}},\n        xScale:  {get: function(){return x;}, set: function(_){x=_;}},\n        yScale:  {get: function(){return y;}, set: function(_){y=_;}},\n        xDomain: {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n        yDomain: {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n        xRange:  {get: function(){return xRange;}, set: function(_){xRange=_;}},\n        yRange:  {get: function(){return yRange;}, set: function(_){yRange=_;}},\n        forceY:  {get: function(){return forceY;}, set: function(_){forceY=_;}},\n        stacked: {get: function(){return stacked;}, set: function(_){stacked=_;}},\n        stackOffset: {get: function(){return stackOffset;}, set: function(_){stackOffset=_;}},\n        clipEdge:    {get: function(){return clipEdge;}, set: function(_){clipEdge=_;}},\n        disabled:    {get: function(){return disabled;}, set: function(_){disabled=_;}},\n        id:          {get: function(){return id;}, set: function(_){id=_;}},\n        hideable:    {get: function(){return hideable;}, set: function(_){hideable=_;}},\n        groupSpacing:{get: function(){return groupSpacing;}, set: function(_){groupSpacing=_;}},\n        fillOpacity: {get: function(){return fillOpacity;}, set: function(_){fillOpacity=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }},\n        barColor:  {get: function(){return barColor;}, set: function(_){\n            barColor = _ ? nv.utils.getColor(_) : null;\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\nnv.models.multiBarChart = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var multibar = nv.models.multiBar()\n        , xAxis = nv.models.axis()\n        , yAxis = nv.models.axis()\n        , interactiveLayer = nv.interactiveGuideline()\n        , legend = nv.models.legend()\n        , controls = nv.models.legend()\n        , tooltip = nv.models.tooltip()\n        ;\n\n    var margin = {top: 30, right: 20, bottom: 50, left: 60}\n        , width = null\n        , height = null\n        , color = nv.utils.defaultColor()\n        , showControls = true\n        , controlLabels = {}\n        , showLegend = true\n        , showXAxis = true\n        , showYAxis = true\n        , rightAlignYAxis = false\n        , reduceXTicks = true // if false a tick will show for every data point\n        , staggerLabels = false\n        , wrapLabels = false\n        , rotateLabels = 0\n        , x //can be accessed via chart.xScale()\n        , y //can be accessed via chart.yScale()\n        , state = nv.utils.state()\n        , defaultState = null\n        , noData = null\n        , dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd')\n        , controlWidth = function() { return showControls ? 180 : 0 }\n        , duration = 250\n        , useInteractiveGuideline = false\n        ;\n\n    state.stacked = false // DEPRECATED Maintained for backward compatibility\n\n    multibar.stacked(false);\n    xAxis\n        .orient('bottom')\n        .tickPadding(7)\n        .showMaxMin(false)\n        .tickFormat(function(d) { return d })\n    ;\n    yAxis\n        .orient((rightAlignYAxis) ? 'right' : 'left')\n        .tickFormat(d3.format(',.1f'))\n    ;\n\n    tooltip\n        .duration(0)\n        .valueFormatter(function(d, i) {\n            return yAxis.tickFormat()(d, i);\n        })\n        .headerFormatter(function(d, i) {\n            return xAxis.tickFormat()(d, i);\n        });\n\n    controls.updateState(false);\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n    var stacked = false;\n\n    var stateGetter = function(data) {\n        return function(){\n            return {\n                active: data.map(function(d) { return !d.disabled }),\n                stacked: stacked\n            };\n        }\n    };\n\n    var stateSetter = function(data) {\n        return function(state) {\n            if (state.stacked !== undefined)\n                stacked = state.stacked;\n            if (state.active !== undefined)\n                data.forEach(function(series,i) {\n                    series.disabled = !state.active[i];\n                });\n        }\n    };\n\n    function chart(selection) {\n        renderWatch.reset();\n        renderWatch.models(multibar);\n        if (showXAxis) renderWatch.models(xAxis);\n        if (showYAxis) renderWatch.models(yAxis);\n\n        selection.each(function(data) {\n            var container = d3.select(this),\n                that = this;\n            nv.utils.initSVG(container);\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            chart.update = function() {\n                if (duration === 0)\n                    container.call(chart);\n                else\n                    container.transition()\n                        .duration(duration)\n                        .call(chart);\n            };\n            chart.container = this;\n\n            state\n                .setter(stateSetter(data), chart.update)\n                .getter(stateGetter(data))\n                .update();\n\n            // DEPRECATED set state.disableddisabled\n            state.disabled = data.map(function(d) { return !!d.disabled });\n\n            if (!defaultState) {\n                var key;\n                defaultState = {};\n                for (key in state) {\n                    if (state[key] instanceof Array)\n                        defaultState[key] = state[key].slice(0);\n                    else\n                        defaultState[key] = state[key];\n                }\n            }\n\n            // Display noData message if there's nothing to show.\n            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n                nv.utils.noData(chart, container)\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n\n            // Setup Scales\n            x = multibar.xScale();\n            y = multibar.yScale();\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-multiBarWithLegend').data([data]);\n            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multiBarWithLegend').append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-x nv-axis');\n            gEnter.append('g').attr('class', 'nv-y nv-axis');\n            gEnter.append('g').attr('class', 'nv-barsWrap');\n            gEnter.append('g').attr('class', 'nv-legendWrap');\n            gEnter.append('g').attr('class', 'nv-controlsWrap');\n            gEnter.append('g').attr('class', 'nv-interactive');\n\n            // Legend\n            if (!showLegend) {\n                g.select('.nv-legendWrap').selectAll('*').remove();\n            } else {\n                legend.width(availableWidth - controlWidth());\n\n                g.select('.nv-legendWrap')\n                    .datum(data)\n                    .call(legend);\n\n                if (legend.height() > margin.top) {\n                    margin.top = legend.height();\n                    availableHeight = nv.utils.availableHeight(height, container, margin);\n                }\n\n                g.select('.nv-legendWrap')\n                    .attr('transform', 'translate(' + controlWidth() + ',' + (-margin.top) +')');\n            }\n\n            // Controls\n            if (!showControls) {\n                 g.select('.nv-controlsWrap').selectAll('*').remove();\n            } else {\n                var controlsData = [\n                    { key: controlLabels.grouped || 'Grouped', disabled: multibar.stacked() },\n                    { key: controlLabels.stacked || 'Stacked', disabled: !multibar.stacked() }\n                ];\n\n                controls.width(controlWidth()).color(['#444', '#444', '#444']);\n                g.select('.nv-controlsWrap')\n                    .datum(controlsData)\n                    .attr('transform', 'translate(0,' + (-margin.top) +')')\n                    .call(controls);\n            }\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n            if (rightAlignYAxis) {\n                g.select(\".nv-y.nv-axis\")\n                    .attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n            }\n\n            // Main Chart Component(s)\n            multibar\n                .disabled(data.map(function(series) { return series.disabled }))\n                .width(availableWidth)\n                .height(availableHeight)\n                .color(data.map(function(d,i) {\n                    return d.color || color(d, i);\n                }).filter(function(d,i) { return !data[i].disabled }));\n\n\n            var barsWrap = g.select('.nv-barsWrap')\n                .datum(data.filter(function(d) { return !d.disabled }));\n\n            barsWrap.call(multibar);\n\n            // Setup Axes\n            if (showXAxis) {\n                xAxis\n                    .scale(x)\n                    ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n                    .tickSize(-availableHeight, 0);\n\n                g.select('.nv-x.nv-axis')\n                    .attr('transform', 'translate(0,' + y.range()[0] + ')');\n                g.select('.nv-x.nv-axis')\n                    .call(xAxis);\n\n                var xTicks = g.select('.nv-x.nv-axis > g').selectAll('g');\n\n                xTicks\n                    .selectAll('line, text')\n                    .style('opacity', 1)\n\n                if (staggerLabels) {\n                    var getTranslate = function(x,y) {\n                        return \"translate(\" + x + \",\" + y + \")\";\n                    };\n\n                    var staggerUp = 5, staggerDown = 17;  //pixels to stagger by\n                    // Issue #140\n                    xTicks\n                        .selectAll(\"text\")\n                        .attr('transform', function(d,i,j) {\n                            return  getTranslate(0, (j % 2 == 0 ? staggerUp : staggerDown));\n                        });\n\n                    var totalInBetweenTicks = d3.selectAll(\".nv-x.nv-axis .nv-wrap g g text\")[0].length;\n                    g.selectAll(\".nv-x.nv-axis .nv-axisMaxMin text\")\n                        .attr(\"transform\", function(d,i) {\n                            return getTranslate(0, (i === 0 || totalInBetweenTicks % 2 !== 0) ? staggerDown : staggerUp);\n                        });\n                }\n\n                if (wrapLabels) {\n                    g.selectAll('.tick text')\n                        .call(nv.utils.wrapTicks, chart.xAxis.rangeBand())\n                }\n\n                if (reduceXTicks)\n                    xTicks\n                        .filter(function(d,i) {\n                            return i % Math.ceil(data[0].values.length / (availableWidth / 100)) !== 0;\n                        })\n                        .selectAll('text, line')\n                        .style('opacity', 0);\n\n                if(rotateLabels)\n                    xTicks\n                        .selectAll('.tick text')\n                        .attr('transform', 'rotate(' + rotateLabels + ' 0,0)')\n                        .style('text-anchor', rotateLabels > 0 ? 'start' : 'end');\n\n                g.select('.nv-x.nv-axis').selectAll('g.nv-axisMaxMin text')\n                    .style('opacity', 1);\n            }\n\n            if (showYAxis) {\n                yAxis\n                    .scale(y)\n                    ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n                    .tickSize( -availableWidth, 0);\n\n                g.select('.nv-y.nv-axis')\n                    .call(yAxis);\n            }\n\n            //Set up interactive layer\n            if (useInteractiveGuideline) {\n                interactiveLayer\n                    .width(availableWidth)\n                    .height(availableHeight)\n                    .margin({left:margin.left, top:margin.top})\n                    .svgContainer(container)\n                    .xScale(x);\n                wrap.select(\".nv-interactive\").call(interactiveLayer);\n            }\n\n            //============================================================\n            // Event Handling/Dispatching (in chart's scope)\n            //------------------------------------------------------------\n\n            legend.dispatch.on('stateChange', function(newState) {\n                for (var key in newState)\n                    state[key] = newState[key];\n                dispatch.stateChange(state);\n                chart.update();\n            });\n\n            controls.dispatch.on('legendClick', function(d,i) {\n                if (!d.disabled) return;\n                controlsData = controlsData.map(function(s) {\n                    s.disabled = true;\n                    return s;\n                });\n                d.disabled = false;\n\n                switch (d.key) {\n                    case 'Grouped':\n                    case controlLabels.grouped:\n                        multibar.stacked(false);\n                        break;\n                    case 'Stacked':\n                    case controlLabels.stacked:\n                        multibar.stacked(true);\n                        break;\n                }\n\n                state.stacked = multibar.stacked();\n                dispatch.stateChange(state);\n                chart.update();\n            });\n\n            // Update chart from a state object passed to event handler\n            dispatch.on('changeState', function(e) {\n                if (typeof e.disabled !== 'undefined') {\n                    data.forEach(function(series,i) {\n                        series.disabled = e.disabled[i];\n                    });\n                    state.disabled = e.disabled;\n                }\n                if (typeof e.stacked !== 'undefined') {\n                    multibar.stacked(e.stacked);\n                    state.stacked = e.stacked;\n                    stacked = e.stacked;\n                }\n                chart.update();\n            });\n\n            if (useInteractiveGuideline) {\n                interactiveLayer.dispatch.on('elementMousemove', function(e) {\n                    if (e.pointXValue == undefined) return;\n\n                    var singlePoint, pointIndex, pointXLocation, xValue, allData = [];\n                    data\n                        .filter(function(series, i) {\n                            series.seriesIndex = i;\n                            return !series.disabled;\n                        })\n                        .forEach(function(series,i) {\n                            pointIndex = x.domain().indexOf(e.pointXValue)\n\n                            var point = series.values[pointIndex];\n                            if (point === undefined) return;\n\n                            xValue = point.x;\n                            if (singlePoint === undefined) singlePoint = point;\n                            if (pointXLocation === undefined) pointXLocation = e.mouseX\n                            allData.push({\n                                key: series.key,\n                                value: chart.y()(point, pointIndex),\n                                color: color(series,series.seriesIndex),\n                                data: series.values[pointIndex]\n                            });\n                        });\n\n                    interactiveLayer.tooltip\n                        .data({\n                            value: xValue,\n                            index: pointIndex,\n                            series: allData\n                        })();\n\n                    interactiveLayer.renderGuideLine(pointXLocation);\n                });\n\n                interactiveLayer.dispatch.on(\"elementMouseout\",function(e) {\n                    interactiveLayer.tooltip.hidden(true);\n                });\n            }\n            else {\n                multibar.dispatch.on('elementMouseover.tooltip', function(evt) {\n                    evt.value = chart.x()(evt.data);\n                    evt['series'] = {\n                        key: evt.data.key,\n                        value: chart.y()(evt.data),\n                        color: evt.color\n                    };\n                    tooltip.data(evt).hidden(false);\n                });\n\n                multibar.dispatch.on('elementMouseout.tooltip', function(evt) {\n                    tooltip.hidden(true);\n                });\n\n                multibar.dispatch.on('elementMousemove.tooltip', function(evt) {\n                    tooltip();\n                });\n            }\n        });\n\n        renderWatch.renderEnd('multibarchart immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    // expose chart's sub-components\n    chart.dispatch = dispatch;\n    chart.multibar = multibar;\n    chart.legend = legend;\n    chart.controls = controls;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.state = state;\n    chart.tooltip = tooltip;\n    chart.interactiveLayer = interactiveLayer;\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n        showControls: {get: function(){return showControls;}, set: function(_){showControls=_;}},\n        controlLabels: {get: function(){return controlLabels;}, set: function(_){controlLabels=_;}},\n        showXAxis:      {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n        showYAxis:    {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n        defaultState:    {get: function(){return defaultState;}, set: function(_){defaultState=_;}},\n        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n        reduceXTicks:    {get: function(){return reduceXTicks;}, set: function(_){reduceXTicks=_;}},\n        rotateLabels:    {get: function(){return rotateLabels;}, set: function(_){rotateLabels=_;}},\n        staggerLabels:    {get: function(){return staggerLabels;}, set: function(_){staggerLabels=_;}},\n        wrapLabels:   {get: function(){return wrapLabels;}, set: function(_){wrapLabels=!!_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            multibar.duration(duration);\n            xAxis.duration(duration);\n            yAxis.duration(duration);\n            renderWatch.reset(duration);\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n            legend.color(color);\n        }},\n        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n            rightAlignYAxis = _;\n            yAxis.orient( rightAlignYAxis ? 'right' : 'left');\n        }},\n        useInteractiveGuideline: {get: function(){return useInteractiveGuideline;}, set: function(_){\n            useInteractiveGuideline = _;\n        }},\n        barColor:  {get: function(){return multibar.barColor;}, set: function(_){\n            multibar.barColor(_);\n            legend.color(function(d,i) {return d3.rgb('#ccc').darker(i * 1.5).toString();})\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, multibar);\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n\nnv.models.multiBarHorizontal = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n        , width = 960\n        , height = 500\n        , id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n        , container = null\n        , x = d3.scale.ordinal()\n        , y = d3.scale.linear()\n        , getX = function(d) { return d.x }\n        , getY = function(d) { return d.y }\n        , getYerr = function(d) { return d.yErr }\n        , forceY = [0] // 0 is forced by default.. this makes sense for the majority of bar graphs... user can always do chart.forceY([]) to remove\n        , color = nv.utils.defaultColor()\n        , barColor = null // adding the ability to set the color for each rather than the whole group\n        , disabled // used in conjunction with barColor to communicate from multiBarHorizontalChart what series are disabled\n        , stacked = false\n        , showValues = false\n        , showBarLabels = false\n        , valuePadding = 60\n        , groupSpacing = 0.1\n        , fillOpacity = 0.75\n        , valueFormat = d3.format(',.2f')\n        , delay = 1200\n        , xDomain\n        , yDomain\n        , xRange\n        , yRange\n        , duration = 250\n        , dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd')\n        ;\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var x0, y0; //used to store previous scales\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n        renderWatch.reset();\n        selection.each(function(data) {\n            var availableWidth = width - margin.left - margin.right,\n                availableHeight = height - margin.top - margin.bottom;\n\n            container = d3.select(this);\n            nv.utils.initSVG(container);\n\n            if (stacked)\n                data = d3.layout.stack()\n                    .offset('zero')\n                    .values(function(d){ return d.values })\n                    .y(getY)\n                (data);\n\n            //add series index and key to each data point for reference\n            data.forEach(function(series, i) {\n                series.values.forEach(function(point) {\n                    point.series = i;\n                    point.key = series.key;\n                });\n            });\n\n            // HACK for negative value stacking\n            if (stacked)\n                data[0].values.map(function(d,i) {\n                    var posBase = 0, negBase = 0;\n                    data.map(function(d) {\n                        var f = d.values[i]\n                        f.size = Math.abs(f.y);\n                        if (f.y<0)  {\n                            f.y1 = negBase - f.size;\n                            negBase = negBase - f.size;\n                        } else\n                        {\n                            f.y1 = posBase;\n                            posBase = posBase + f.size;\n                        }\n                    });\n                });\n\n            // Setup Scales\n            // remap and flatten the data for use in calculating the scales' domains\n            var seriesData = (xDomain && yDomain) ? [] : // if we know xDomain and yDomain, no need to calculate\n                data.map(function(d) {\n                    return d.values.map(function(d,i) {\n                        return { x: getX(d,i), y: getY(d,i), y0: d.y0, y1: d.y1 }\n                    })\n                });\n\n            x.domain(xDomain || d3.merge(seriesData).map(function(d) { return d.x }))\n                .rangeBands(xRange || [0, availableHeight], groupSpacing);\n\n            y.domain(yDomain || d3.extent(d3.merge(seriesData).map(function(d) { return stacked ? (d.y > 0 ? d.y1 + d.y : d.y1 ) : d.y }).concat(forceY)))\n\n            if (showValues && !stacked)\n                y.range(yRange || [(y.domain()[0] < 0 ? valuePadding : 0), availableWidth - (y.domain()[1] > 0 ? valuePadding : 0) ]);\n            else\n                y.range(yRange || [0, availableWidth]);\n\n            x0 = x0 || x;\n            y0 = y0 || d3.scale.linear().domain(y.domain()).range([y(0),y(0)]);\n\n            // Setup containers and skeleton of chart\n            var wrap = d3.select(this).selectAll('g.nv-wrap.nv-multibarHorizontal').data([data]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multibarHorizontal');\n            var defsEnter = wrapEnter.append('defs');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-groups');\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            var groups = wrap.select('.nv-groups').selectAll('.nv-group')\n                .data(function(d) { return d }, function(d,i) { return i });\n            groups.enter().append('g')\n                .style('stroke-opacity', 1e-6)\n                .style('fill-opacity', 1e-6);\n            groups.exit().watchTransition(renderWatch, 'multibarhorizontal: exit groups')\n                .style('stroke-opacity', 1e-6)\n                .style('fill-opacity', 1e-6)\n                .remove();\n            groups\n                .attr('class', function(d,i) { return 'nv-group nv-series-' + i })\n                .classed('hover', function(d) { return d.hover })\n                .style('fill', function(d,i){ return color(d, i) })\n                .style('stroke', function(d,i){ return color(d, i) });\n            groups.watchTransition(renderWatch, 'multibarhorizontal: groups')\n                .style('stroke-opacity', 1)\n                .style('fill-opacity', fillOpacity);\n\n            var bars = groups.selectAll('g.nv-bar')\n                .data(function(d) { return d.values });\n            bars.exit().remove();\n\n            var barsEnter = bars.enter().append('g')\n                .attr('transform', function(d,i,j) {\n                    return 'translate(' + y0(stacked ? d.y0 : 0) + ',' + (stacked ? 0 : (j * x.rangeBand() / data.length ) + x(getX(d,i))) + ')'\n                });\n\n            barsEnter.append('rect')\n                .attr('width', 0)\n                .attr('height', x.rangeBand() / (stacked ? 1 : data.length) )\n\n            bars\n                .on('mouseover', function(d,i) { //TODO: figure out why j works above, but not here\n                    d3.select(this).classed('hover', true);\n                    dispatch.elementMouseover({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                })\n                .on('mouseout', function(d,i) {\n                    d3.select(this).classed('hover', false);\n                    dispatch.elementMouseout({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                })\n                .on('mouseout', function(d,i) {\n                    dispatch.elementMouseout({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                })\n                .on('mousemove', function(d,i) {\n                    dispatch.elementMousemove({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                })\n                .on('click', function(d,i) {\n                    var element = this;\n                    dispatch.elementClick({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\"),\n                        event: d3.event,\n                        element: element\n                    });\n                    d3.event.stopPropagation();\n                })\n                .on('dblclick', function(d,i) {\n                    dispatch.elementDblClick({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                    d3.event.stopPropagation();\n                });\n\n            if (getYerr(data[0],0)) {\n                barsEnter.append('polyline');\n\n                bars.select('polyline')\n                    .attr('fill', 'none')\n                    .attr('points', function(d,i) {\n                        var xerr = getYerr(d,i)\n                            , mid = 0.8 * x.rangeBand() / ((stacked ? 1 : data.length) * 2);\n                        xerr = xerr.length ? xerr : [-Math.abs(xerr), Math.abs(xerr)];\n                        xerr = xerr.map(function(e) { return y(e) - y(0); });\n                        var a = [[xerr[0],-mid], [xerr[0],mid], [xerr[0],0], [xerr[1],0], [xerr[1],-mid], [xerr[1],mid]];\n                        return a.map(function (path) { return path.join(',') }).join(' ');\n                    })\n                    .attr('transform', function(d,i) {\n                        var mid = x.rangeBand() / ((stacked ? 1 : data.length) * 2);\n                        return 'translate(' + (getY(d,i) < 0 ? 0 : y(getY(d,i)) - y(0)) + ', ' + mid + ')'\n                    });\n            }\n\n            barsEnter.append('text');\n\n            if (showValues && !stacked) {\n                bars.select('text')\n                    .attr('text-anchor', function(d,i) { return getY(d,i) < 0 ? 'end' : 'start' })\n                    .attr('y', x.rangeBand() / (data.length * 2))\n                    .attr('dy', '.32em')\n                    .text(function(d,i) {\n                        var t = valueFormat(getY(d,i))\n                            , yerr = getYerr(d,i);\n                        if (yerr === undefined)\n                            return t;\n                        if (!yerr.length)\n                            return t + '±' + valueFormat(Math.abs(yerr));\n                        return t + '+' + valueFormat(Math.abs(yerr[1])) + '-' + valueFormat(Math.abs(yerr[0]));\n                    });\n                bars.watchTransition(renderWatch, 'multibarhorizontal: bars')\n                    .select('text')\n                    .attr('x', function(d,i) { return getY(d,i) < 0 ? -4 : y(getY(d,i)) - y(0) + 4 })\n            } else {\n                bars.selectAll('text').text('');\n            }\n\n            if (showBarLabels && !stacked) {\n                barsEnter.append('text').classed('nv-bar-label',true);\n                bars.select('text.nv-bar-label')\n                    .attr('text-anchor', function(d,i) { return getY(d,i) < 0 ? 'start' : 'end' })\n                    .attr('y', x.rangeBand() / (data.length * 2))\n                    .attr('dy', '.32em')\n                    .text(function(d,i) { return getX(d,i) });\n                bars.watchTransition(renderWatch, 'multibarhorizontal: bars')\n                    .select('text.nv-bar-label')\n                    .attr('x', function(d,i) { return getY(d,i) < 0 ? y(0) - y(getY(d,i)) + 4 : -4 });\n            }\n            else {\n                bars.selectAll('text.nv-bar-label').text('');\n            }\n\n            bars\n                .attr('class', function(d,i) { return getY(d,i) < 0 ? 'nv-bar negative' : 'nv-bar positive'})\n\n            if (barColor) {\n                if (!disabled) disabled = data.map(function() { return true });\n                bars\n                    .style('fill', function(d,i,j) { return d3.rgb(barColor(d,i)).darker(  disabled.map(function(d,i) { return i }).filter(function(d,i){ return !disabled[i]  })[j]   ).toString(); })\n                    .style('stroke', function(d,i,j) { return d3.rgb(barColor(d,i)).darker(  disabled.map(function(d,i) { return i }).filter(function(d,i){ return !disabled[i]  })[j]   ).toString(); });\n            }\n\n            if (stacked)\n                bars.watchTransition(renderWatch, 'multibarhorizontal: bars')\n                    .attr('transform', function(d,i) {\n                        return 'translate(' + y(d.y1) + ',' + x(getX(d,i)) + ')'\n                    })\n                    .select('rect')\n                    .attr('width', function(d,i) {\n                        return Math.abs(y(getY(d,i) + d.y0) - y(d.y0)) || 0\n                    })\n                    .attr('height', x.rangeBand() );\n            else\n                bars.watchTransition(renderWatch, 'multibarhorizontal: bars')\n                    .attr('transform', function(d,i) {\n                        //TODO: stacked must be all positive or all negative, not both?\n                        return 'translate(' +\n                            (getY(d,i) < 0 ? y(getY(d,i)) : y(0))\n                            + ',' +\n                            (d.series * x.rangeBand() / data.length\n                                +\n                                x(getX(d,i)) )\n                            + ')'\n                    })\n                    .select('rect')\n                    .attr('height', x.rangeBand() / data.length )\n                    .attr('width', function(d,i) {\n                        return Math.max(Math.abs(y(getY(d,i)) - y(0)),1) || 0\n                    });\n\n            //store old scales for use in transitions on update\n            x0 = x.copy();\n            y0 = y.copy();\n\n        });\n\n        renderWatch.renderEnd('multibarHorizontal immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:   {get: function(){return width;}, set: function(_){width=_;}},\n        height:  {get: function(){return height;}, set: function(_){height=_;}},\n        x:       {get: function(){return getX;}, set: function(_){getX=_;}},\n        y:       {get: function(){return getY;}, set: function(_){getY=_;}},\n        yErr:       {get: function(){return getYerr;}, set: function(_){getYerr=_;}},\n        xScale:  {get: function(){return x;}, set: function(_){x=_;}},\n        yScale:  {get: function(){return y;}, set: function(_){y=_;}},\n        xDomain: {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n        yDomain: {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n        xRange:  {get: function(){return xRange;}, set: function(_){xRange=_;}},\n        yRange:  {get: function(){return yRange;}, set: function(_){yRange=_;}},\n        forceY:  {get: function(){return forceY;}, set: function(_){forceY=_;}},\n        stacked: {get: function(){return stacked;}, set: function(_){stacked=_;}},\n        showValues: {get: function(){return showValues;}, set: function(_){showValues=_;}},\n        // this shows the group name, seems pointless?\n        //showBarLabels:    {get: function(){return showBarLabels;}, set: function(_){showBarLabels=_;}},\n        disabled:     {get: function(){return disabled;}, set: function(_){disabled=_;}},\n        id:           {get: function(){return id;}, set: function(_){id=_;}},\n        valueFormat:  {get: function(){return valueFormat;}, set: function(_){valueFormat=_;}},\n        valuePadding: {get: function(){return valuePadding;}, set: function(_){valuePadding=_;}},\n        groupSpacing: {get: function(){return groupSpacing;}, set: function(_){groupSpacing=_;}},\n        fillOpacity:  {get: function(){return fillOpacity;}, set: function(_){fillOpacity=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }},\n        barColor:  {get: function(){return barColor;}, set: function(_){\n            barColor = _ ? nv.utils.getColor(_) : null;\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n\nnv.models.multiBarHorizontalChart = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var multibar = nv.models.multiBarHorizontal()\n        , xAxis = nv.models.axis()\n        , yAxis = nv.models.axis()\n        , legend = nv.models.legend().height(30)\n        , controls = nv.models.legend().height(30)\n        , tooltip = nv.models.tooltip()\n        ;\n\n    var margin = {top: 30, right: 20, bottom: 50, left: 60}\n        , width = null\n        , height = null\n        , color = nv.utils.defaultColor()\n        , showControls = true\n        , controlLabels = {}\n        , showLegend = true\n        , showXAxis = true\n        , showYAxis = true\n        , stacked = false\n        , x //can be accessed via chart.xScale()\n        , y //can be accessed via chart.yScale()\n        , state = nv.utils.state()\n        , defaultState = null\n        , noData = null\n        , dispatch = d3.dispatch('stateChange', 'changeState','renderEnd')\n        , controlWidth = function() { return showControls ? 180 : 0 }\n        , duration = 250\n        ;\n\n    state.stacked = false; // DEPRECATED Maintained for backward compatibility\n\n    multibar.stacked(stacked);\n\n    xAxis\n        .orient('left')\n        .tickPadding(5)\n        .showMaxMin(false)\n        .tickFormat(function(d) { return d })\n    ;\n    yAxis\n        .orient('bottom')\n        .tickFormat(d3.format(',.1f'))\n    ;\n\n    tooltip\n        .duration(0)\n        .valueFormatter(function(d, i) {\n            return yAxis.tickFormat()(d, i);\n        })\n        .headerFormatter(function(d, i) {\n            return xAxis.tickFormat()(d, i);\n        });\n\n    controls.updateState(false);\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var stateGetter = function(data) {\n        return function(){\n            return {\n                active: data.map(function(d) { return !d.disabled }),\n                stacked: stacked\n            };\n        }\n    };\n\n    var stateSetter = function(data) {\n        return function(state) {\n            if (state.stacked !== undefined)\n                stacked = state.stacked;\n            if (state.active !== undefined)\n                data.forEach(function(series,i) {\n                    series.disabled = !state.active[i];\n                });\n        }\n    };\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n        renderWatch.reset();\n        renderWatch.models(multibar);\n        if (showXAxis) renderWatch.models(xAxis);\n        if (showYAxis) renderWatch.models(yAxis);\n\n        selection.each(function(data) {\n            var container = d3.select(this),\n                that = this;\n            nv.utils.initSVG(container);\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            chart.update = function() { container.transition().duration(duration).call(chart) };\n            chart.container = this;\n\n            stacked = multibar.stacked();\n\n            state\n                .setter(stateSetter(data), chart.update)\n                .getter(stateGetter(data))\n                .update();\n\n            // DEPRECATED set state.disableddisabled\n            state.disabled = data.map(function(d) { return !!d.disabled });\n\n            if (!defaultState) {\n                var key;\n                defaultState = {};\n                for (key in state) {\n                    if (state[key] instanceof Array)\n                        defaultState[key] = state[key].slice(0);\n                    else\n                        defaultState[key] = state[key];\n                }\n            }\n\n            // Display No Data message if there's nothing to show.\n            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n                nv.utils.noData(chart, container)\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n\n            // Setup Scales\n            x = multibar.xScale();\n            y = multibar.yScale().clamp(true);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-multiBarHorizontalChart').data([data]);\n            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multiBarHorizontalChart').append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-x nv-axis');\n            gEnter.append('g').attr('class', 'nv-y nv-axis')\n                .append('g').attr('class', 'nv-zeroLine')\n                .append('line');\n            gEnter.append('g').attr('class', 'nv-barsWrap');\n            gEnter.append('g').attr('class', 'nv-legendWrap');\n            gEnter.append('g').attr('class', 'nv-controlsWrap');\n\n            // Legend\n            if (!showLegend) {\n                g.select('.nv-legendWrap').selectAll('*').remove();\n            } else {\n                legend.width(availableWidth - controlWidth());\n\n                g.select('.nv-legendWrap')\n                    .datum(data)\n                    .call(legend);\n\n                if (legend.height() > margin.top) {\n                    margin.top = legend.height();\n                    availableHeight = nv.utils.availableHeight(height, container, margin);\n                }\n\n                g.select('.nv-legendWrap')\n                    .attr('transform', 'translate(' + controlWidth() + ',' + (-margin.top) +')');\n            }\n\n            // Controls\n            if (!showControls) {\n                 g.select('.nv-controlsWrap').selectAll('*').remove();\n            } else {\n                var controlsData = [\n                    { key: controlLabels.grouped || 'Grouped', disabled: multibar.stacked() },\n                    { key: controlLabels.stacked || 'Stacked', disabled: !multibar.stacked() }\n                ];\n\n                controls.width(controlWidth()).color(['#444', '#444', '#444']);\n                g.select('.nv-controlsWrap')\n                    .datum(controlsData)\n                    .attr('transform', 'translate(0,' + (-margin.top) +')')\n                    .call(controls);\n            }\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            // Main Chart Component(s)\n            multibar\n                .disabled(data.map(function(series) { return series.disabled }))\n                .width(availableWidth)\n                .height(availableHeight)\n                .color(data.map(function(d,i) {\n                    return d.color || color(d, i);\n                }).filter(function(d,i) { return !data[i].disabled }));\n\n            var barsWrap = g.select('.nv-barsWrap')\n                .datum(data.filter(function(d) { return !d.disabled }));\n\n            barsWrap.transition().call(multibar);\n\n            // Setup Axes\n            if (showXAxis) {\n                xAxis\n                    .scale(x)\n                    ._ticks( nv.utils.calcTicksY(availableHeight/24, data) )\n                    .tickSize(-availableWidth, 0);\n\n                g.select('.nv-x.nv-axis').call(xAxis);\n\n                var xTicks = g.select('.nv-x.nv-axis').selectAll('g');\n\n                xTicks\n                    .selectAll('line, text');\n            }\n\n            if (showYAxis) {\n                yAxis\n                    .scale(y)\n                    ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n                    .tickSize( -availableHeight, 0);\n\n                g.select('.nv-y.nv-axis')\n                    .attr('transform', 'translate(0,' + availableHeight + ')');\n                g.select('.nv-y.nv-axis').call(yAxis);\n            }\n\n            // Zero line\n            g.select(\".nv-zeroLine line\")\n                .attr(\"x1\", y(0))\n                .attr(\"x2\", y(0))\n                .attr(\"y1\", 0)\n                .attr(\"y2\", -availableHeight)\n            ;\n\n            //============================================================\n            // Event Handling/Dispatching (in chart's scope)\n            //------------------------------------------------------------\n\n            legend.dispatch.on('stateChange', function(newState) {\n                for (var key in newState)\n                    state[key] = newState[key];\n                dispatch.stateChange(state);\n                chart.update();\n            });\n\n            controls.dispatch.on('legendClick', function(d,i) {\n                if (!d.disabled) return;\n                controlsData = controlsData.map(function(s) {\n                    s.disabled = true;\n                    return s;\n                });\n                d.disabled = false;\n\n                switch (d.key) {\n                    case 'Grouped':\n                    case controlLabels.grouped:\n                        multibar.stacked(false);\n                        break;\n                    case 'Stacked':\n                    case controlLabels.stacked:\n                        multibar.stacked(true);\n                        break;\n                }\n\n                state.stacked = multibar.stacked();\n                dispatch.stateChange(state);\n                stacked = multibar.stacked();\n\n                chart.update();\n            });\n\n            // Update chart from a state object passed to event handler\n            dispatch.on('changeState', function(e) {\n\n                if (typeof e.disabled !== 'undefined') {\n                    data.forEach(function(series,i) {\n                        series.disabled = e.disabled[i];\n                    });\n\n                    state.disabled = e.disabled;\n                }\n\n                if (typeof e.stacked !== 'undefined') {\n                    multibar.stacked(e.stacked);\n                    state.stacked = e.stacked;\n                    stacked = e.stacked;\n                }\n\n                chart.update();\n            });\n        });\n        renderWatch.renderEnd('multibar horizontal chart immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n    multibar.dispatch.on('elementMouseover.tooltip', function(evt) {\n        evt.value = chart.x()(evt.data);\n        evt['series'] = {\n            key: evt.data.key,\n            value: chart.y()(evt.data),\n            color: evt.color\n        };\n        tooltip.data(evt).hidden(false);\n    });\n\n    multibar.dispatch.on('elementMouseout.tooltip', function(evt) {\n        tooltip.hidden(true);\n    });\n\n    multibar.dispatch.on('elementMousemove.tooltip', function(evt) {\n        tooltip();\n    });\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    // expose chart's sub-components\n    chart.dispatch = dispatch;\n    chart.multibar = multibar;\n    chart.legend = legend;\n    chart.controls = controls;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.state = state;\n    chart.tooltip = tooltip;\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n        showControls: {get: function(){return showControls;}, set: function(_){showControls=_;}},\n        controlLabels: {get: function(){return controlLabels;}, set: function(_){controlLabels=_;}},\n        showXAxis:      {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n        showYAxis:    {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n        defaultState:    {get: function(){return defaultState;}, set: function(_){defaultState=_;}},\n        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n            multibar.duration(duration);\n            xAxis.duration(duration);\n            yAxis.duration(duration);\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n            legend.color(color);\n        }},\n        barColor:  {get: function(){return multibar.barColor;}, set: function(_){\n            multibar.barColor(_);\n            legend.color(function(d,i) {return d3.rgb('#ccc').darker(i * 1.5).toString();})\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, multibar);\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\nnv.models.multiChart = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 30, right: 20, bottom: 50, left: 60},\n        color = nv.utils.defaultColor(),\n        width = null,\n        height = null,\n        showLegend = true,\n        noData = null,\n        yDomain1,\n        yDomain2,\n        getX = function(d) { return d.x },\n        getY = function(d) { return d.y},\n        interpolate = 'linear',\n        useVoronoi = true,\n        interactiveLayer = nv.interactiveGuideline(),\n        useInteractiveGuideline = false,\n        legendRightAxisHint = ' (right axis)'\n        ;\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var x = d3.scale.linear(),\n        yScale1 = d3.scale.linear(),\n        yScale2 = d3.scale.linear(),\n\n        lines1 = nv.models.line().yScale(yScale1),\n        lines2 = nv.models.line().yScale(yScale2),\n\n        scatters1 = nv.models.scatter().yScale(yScale1),\n        scatters2 = nv.models.scatter().yScale(yScale2),\n\n        bars1 = nv.models.multiBar().stacked(false).yScale(yScale1),\n        bars2 = nv.models.multiBar().stacked(false).yScale(yScale2),\n\n        stack1 = nv.models.stackedArea().yScale(yScale1),\n        stack2 = nv.models.stackedArea().yScale(yScale2),\n\n        xAxis = nv.models.axis().scale(x).orient('bottom').tickPadding(5),\n        yAxis1 = nv.models.axis().scale(yScale1).orient('left'),\n        yAxis2 = nv.models.axis().scale(yScale2).orient('right'),\n\n        legend = nv.models.legend().height(30),\n        tooltip = nv.models.tooltip(),\n        dispatch = d3.dispatch();\n\n    var charts = [lines1, lines2, scatters1, scatters2, bars1, bars2, stack1, stack2];\n\n    function chart(selection) {\n        selection.each(function(data) {\n            var container = d3.select(this),\n                that = this;\n            nv.utils.initSVG(container);\n\n            chart.update = function() { container.transition().call(chart); };\n            chart.container = this;\n\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            var dataLines1 = data.filter(function(d) {return d.type == 'line' && d.yAxis == 1});\n            var dataLines2 = data.filter(function(d) {return d.type == 'line' && d.yAxis == 2});\n            var dataScatters1 = data.filter(function(d) {return d.type == 'scatter' && d.yAxis == 1});\n            var dataScatters2 = data.filter(function(d) {return d.type == 'scatter' && d.yAxis == 2});\n            var dataBars1 =  data.filter(function(d) {return d.type == 'bar'  && d.yAxis == 1});\n            var dataBars2 =  data.filter(function(d) {return d.type == 'bar'  && d.yAxis == 2});\n            var dataStack1 = data.filter(function(d) {return d.type == 'area' && d.yAxis == 1});\n            var dataStack2 = data.filter(function(d) {return d.type == 'area' && d.yAxis == 2});\n\n            // Display noData message if there's nothing to show.\n            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n                nv.utils.noData(chart, container);\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n\n            var series1 = data.filter(function(d) {return !d.disabled && d.yAxis == 1})\n                .map(function(d) {\n                    return d.values.map(function(d,i) {\n                        return { x: getX(d), y: getY(d) }\n                    })\n                });\n\n            var series2 = data.filter(function(d) {return !d.disabled && d.yAxis == 2})\n                .map(function(d) {\n                    return d.values.map(function(d,i) {\n                        return { x: getX(d), y: getY(d) }\n                    })\n                });\n\n            x   .domain(d3.extent(d3.merge(series1.concat(series2)), function(d) { return d.x }))\n                .range([0, availableWidth]);\n\n            var wrap = container.selectAll('g.wrap.multiChart').data([data]);\n            var gEnter = wrap.enter().append('g').attr('class', 'wrap nvd3 multiChart').append('g');\n\n            gEnter.append('g').attr('class', 'nv-x nv-axis');\n            gEnter.append('g').attr('class', 'nv-y1 nv-axis');\n            gEnter.append('g').attr('class', 'nv-y2 nv-axis');\n            gEnter.append('g').attr('class', 'stack1Wrap');\n            gEnter.append('g').attr('class', 'stack2Wrap');\n            gEnter.append('g').attr('class', 'bars1Wrap');\n            gEnter.append('g').attr('class', 'bars2Wrap');\n            gEnter.append('g').attr('class', 'scatters1Wrap');\n            gEnter.append('g').attr('class', 'scatters2Wrap');\n            gEnter.append('g').attr('class', 'lines1Wrap');\n            gEnter.append('g').attr('class', 'lines2Wrap');\n            gEnter.append('g').attr('class', 'legendWrap');\n            gEnter.append('g').attr('class', 'nv-interactive');\n\n            var g = wrap.select('g');\n\n            var color_array = data.map(function(d,i) {\n                return data[i].color || color(d, i);\n            });\n\n            // Legend\n            if (!showLegend) {\n                g.select('.legendWrap').selectAll('*').remove();\n            } else {\n                var legendWidth = legend.align() ? availableWidth / 2 : availableWidth;\n                var legendXPosition = legend.align() ? legendWidth : 0;\n\n                legend.width(legendWidth);\n                legend.color(color_array);\n\n                g.select('.legendWrap')\n                    .datum(data.map(function(series) {\n                        series.originalKey = series.originalKey === undefined ? series.key : series.originalKey;\n                        series.key = series.originalKey + (series.yAxis == 1 ? '' : legendRightAxisHint);\n                        return series;\n                    }))\n                    .call(legend);\n\n                if (legend.height() > margin.top) {\n                    margin.top = legend.height();\n                    availableHeight = nv.utils.availableHeight(height, container, margin);\n                }\n\n                g.select('.legendWrap')\n                    .attr('transform', 'translate(' + legendXPosition + ',' + (-margin.top) +')');\n            }\n\n            lines1\n                .width(availableWidth)\n                .height(availableHeight)\n                .interpolate(interpolate)\n                .color(color_array.filter(function(d,i) { return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'line'}));\n            lines2\n                .width(availableWidth)\n                .height(availableHeight)\n                .interpolate(interpolate)\n                .color(color_array.filter(function(d,i) { return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'line'}));\n            scatters1\n                .width(availableWidth)\n                .height(availableHeight)\n                .color(color_array.filter(function(d,i) { return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'scatter'}));\n            scatters2\n                .width(availableWidth)\n                .height(availableHeight)\n                .color(color_array.filter(function(d,i) { return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'scatter'}));\n            bars1\n                .width(availableWidth)\n                .height(availableHeight)\n                .color(color_array.filter(function(d,i) { return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'bar'}));\n            bars2\n                .width(availableWidth)\n                .height(availableHeight)\n                .color(color_array.filter(function(d,i) { return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'bar'}));\n            stack1\n                .width(availableWidth)\n                .height(availableHeight)\n                .interpolate(interpolate)\n                .color(color_array.filter(function(d,i) { return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'area'}));\n            stack2\n                .width(availableWidth)\n                .height(availableHeight)\n                .interpolate(interpolate)\n                .color(color_array.filter(function(d,i) { return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'area'}));\n\n            g.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            var lines1Wrap = g.select('.lines1Wrap')\n                .datum(dataLines1.filter(function(d){return !d.disabled}));\n            var scatters1Wrap = g.select('.scatters1Wrap')\n                .datum(dataScatters1.filter(function(d){return !d.disabled}));\n            var bars1Wrap = g.select('.bars1Wrap')\n                .datum(dataBars1.filter(function(d){return !d.disabled}));\n            var stack1Wrap = g.select('.stack1Wrap')\n                .datum(dataStack1.filter(function(d){return !d.disabled}));\n            var lines2Wrap = g.select('.lines2Wrap')\n                .datum(dataLines2.filter(function(d){return !d.disabled}));\n            var scatters2Wrap = g.select('.scatters2Wrap')\n                .datum(dataScatters2.filter(function(d){return !d.disabled}));\n            var bars2Wrap = g.select('.bars2Wrap')\n                .datum(dataBars2.filter(function(d){return !d.disabled}));\n            var stack2Wrap = g.select('.stack2Wrap')\n                .datum(dataStack2.filter(function(d){return !d.disabled}));\n\n            var extraValue1 = dataStack1.length ? dataStack1.map(function(a){return a.values}).reduce(function(a,b){\n                return a.map(function(aVal,i){return {x: aVal.x, y: aVal.y + b[i].y}})\n            }).concat([{x:0, y:0}]) : [];\n            var extraValue2 = dataStack2.length ? dataStack2.map(function(a){return a.values}).reduce(function(a,b){\n                return a.map(function(aVal,i){return {x: aVal.x, y: aVal.y + b[i].y}})\n            }).concat([{x:0, y:0}]) : [];\n\n            yScale1 .domain(yDomain1 || d3.extent(d3.merge(series1).concat(extraValue1), function(d) { return d.y } ))\n                .range([0, availableHeight]);\n\n            yScale2 .domain(yDomain2 || d3.extent(d3.merge(series2).concat(extraValue2), function(d) { return d.y } ))\n                .range([0, availableHeight]);\n\n            lines1.yDomain(yScale1.domain());\n            scatters1.yDomain(yScale1.domain());\n            bars1.yDomain(yScale1.domain());\n            stack1.yDomain(yScale1.domain());\n\n            lines2.yDomain(yScale2.domain());\n            scatters2.yDomain(yScale2.domain());\n            bars2.yDomain(yScale2.domain());\n            stack2.yDomain(yScale2.domain());\n\n            if(dataStack1.length){d3.transition(stack1Wrap).call(stack1);}\n            if(dataStack2.length){d3.transition(stack2Wrap).call(stack2);}\n\n            if(dataBars1.length){d3.transition(bars1Wrap).call(bars1);}\n            if(dataBars2.length){d3.transition(bars2Wrap).call(bars2);}\n\n            if(dataLines1.length){d3.transition(lines1Wrap).call(lines1);}\n            if(dataLines2.length){d3.transition(lines2Wrap).call(lines2);}\n\n            if(dataScatters1.length){d3.transition(scatters1Wrap).call(scatters1);}\n            if(dataScatters2.length){d3.transition(scatters2Wrap).call(scatters2);}\n\n            xAxis\n                ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n                .tickSize(-availableHeight, 0);\n\n            g.select('.nv-x.nv-axis')\n                .attr('transform', 'translate(0,' + availableHeight + ')');\n            d3.transition(g.select('.nv-x.nv-axis'))\n                .call(xAxis);\n\n            yAxis1\n                ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n                .tickSize( -availableWidth, 0);\n\n\n            d3.transition(g.select('.nv-y1.nv-axis'))\n                .call(yAxis1);\n\n            yAxis2\n                ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n                .tickSize( -availableWidth, 0);\n\n            d3.transition(g.select('.nv-y2.nv-axis'))\n                .call(yAxis2);\n\n            g.select('.nv-y1.nv-axis')\n                .classed('nv-disabled', series1.length ? false : true)\n                .attr('transform', 'translate(' + x.range()[0] + ',0)');\n\n            g.select('.nv-y2.nv-axis')\n                .classed('nv-disabled', series2.length ? false : true)\n                .attr('transform', 'translate(' + x.range()[1] + ',0)');\n\n            legend.dispatch.on('stateChange', function(newState) {\n                chart.update();\n            });\n\n            if(useInteractiveGuideline){\n                interactiveLayer\n                    .width(availableWidth)\n                    .height(availableHeight)\n                    .margin({left:margin.left, top:margin.top})\n                    .svgContainer(container)\n                    .xScale(x);\n                wrap.select(\".nv-interactive\").call(interactiveLayer);\n            }\n\n            //============================================================\n            // Event Handling/Dispatching\n            //------------------------------------------------------------\n\n            function mouseover_line(evt) {\n                var yaxis = data[evt.seriesIndex].yAxis === 2 ? yAxis2 : yAxis1;\n                evt.value = evt.point.x;\n                evt.series = {\n                    value: evt.point.y,\n                    color: evt.point.color,\n                    key: evt.series.key\n                };\n                tooltip\n                    .duration(0)\n                    .headerFormatter(function(d, i) {\n                    \treturn xAxis.tickFormat()(d, i);\n                    })\n                    .valueFormatter(function(d, i) {\n                        return yaxis.tickFormat()(d, i);\n                    })\n                    .data(evt)\n                    .hidden(false);\n            }\n\n            function mouseover_scatter(evt) {\n                var yaxis = data[evt.seriesIndex].yAxis === 2 ? yAxis2 : yAxis1;\n                evt.value = evt.point.x;\n                evt.series = {\n                    value: evt.point.y,\n                    color: evt.point.color,\n                    key: evt.series.key\n                };\n                tooltip\n                    .duration(100)\n                    .headerFormatter(function(d, i) {\n                    \treturn xAxis.tickFormat()(d, i);\n                    })\n                    .valueFormatter(function(d, i) {\n                        return yaxis.tickFormat()(d, i);\n                    })\n                    .data(evt)\n                    .hidden(false);\n            }\n\n            function mouseover_stack(evt) {\n                var yaxis = data[evt.seriesIndex].yAxis === 2 ? yAxis2 : yAxis1;\n                evt.point['x'] = stack1.x()(evt.point);\n                evt.point['y'] = stack1.y()(evt.point);\n                tooltip\n                    .duration(0)\n                    .headerFormatter(function(d, i) {\n                    \treturn xAxis.tickFormat()(d, i);\n                    })\n                    .valueFormatter(function(d, i) {\n                        return yaxis.tickFormat()(d, i);\n                    })\n                    .data(evt)\n                    .hidden(false);\n            }\n\n            function mouseover_bar(evt) {\n                var yaxis = data[evt.data.series].yAxis === 2 ? yAxis2 : yAxis1;\n\n                evt.value = bars1.x()(evt.data);\n                evt['series'] = {\n                    value: bars1.y()(evt.data),\n                    color: evt.color,\n                    key: evt.data.key\n                };\n                tooltip\n                    .duration(0)\n                    .headerFormatter(function(d, i) {\n                    \treturn xAxis.tickFormat()(d, i);\n                    })\n                    .valueFormatter(function(d, i) {\n                        return yaxis.tickFormat()(d, i);\n                    })\n                    .data(evt)\n                    .hidden(false);\n            }\n\n\n\n            function clearHighlights() {\n              for(var i=0, il=charts.length; i < il; i++){\n                var chart = charts[i];\n                try {\n                  chart.clearHighlights();\n                } catch(e){}\n              }\n            }\n\n            function highlightPoint(serieIndex, pointIndex, b){\n              for(var i=0, il=charts.length; i < il; i++){\n                var chart = charts[i];\n                try {\n                  chart.highlightPoint(serieIndex, pointIndex, b);\n                } catch(e){}\n              }\n            }\n\n            if(useInteractiveGuideline){\n                interactiveLayer.dispatch.on('elementMousemove', function(e) {\n                    clearHighlights();\n                    var singlePoint, pointIndex, pointXLocation, allData = [];\n                    data\n                    .filter(function(series, i) {\n                        series.seriesIndex = i;\n                        return !series.disabled;\n                    })\n                    .forEach(function(series,i) {\n                        var extent = x.domain();\n                        var currentValues = series.values.filter(function(d,i) {\n                            return chart.x()(d,i) >= extent[0] && chart.x()(d,i) <= extent[1];\n                        });\n\n                        pointIndex = nv.interactiveBisect(currentValues, e.pointXValue, chart.x());\n                        var point = currentValues[pointIndex];\n                        var pointYValue = chart.y()(point, pointIndex);\n                        if (pointYValue !== null) {\n                            highlightPoint(i, pointIndex, true);\n                        }\n                        if (point === undefined) return;\n                        if (singlePoint === undefined) singlePoint = point;\n                        if (pointXLocation === undefined) pointXLocation = x(chart.x()(point,pointIndex));\n                        allData.push({\n                            key: series.key,\n                            value: pointYValue,\n                            color: color(series,series.seriesIndex),\n                            data: point,\n                            yAxis: series.yAxis == 2 ? yAxis2 : yAxis1\n                        });\n                    });\n\n                    var defaultValueFormatter = function(d,i) {\n                        var yAxis = allData[i].yAxis;\n                        return d == null ? \"N/A\" : yAxis.tickFormat()(d);\n                    };\n\n                    interactiveLayer.tooltip\n                        .headerFormatter(function(d, i) {\n                            return xAxis.tickFormat()(d, i);\n                        })\n                        .valueFormatter(interactiveLayer.tooltip.valueFormatter() || defaultValueFormatter)\n                        .data({\n                            value: chart.x()( singlePoint,pointIndex ),\n                            index: pointIndex,\n                            series: allData\n                        })();\n\n                    interactiveLayer.renderGuideLine(pointXLocation);\n                });\n\n                interactiveLayer.dispatch.on(\"elementMouseout\",function(e) {\n                    clearHighlights();\n                });\n            } else {\n                lines1.dispatch.on('elementMouseover.tooltip', mouseover_line);\n                lines2.dispatch.on('elementMouseover.tooltip', mouseover_line);\n                lines1.dispatch.on('elementMouseout.tooltip', function(evt) {\n                    tooltip.hidden(true)\n                });\n                lines2.dispatch.on('elementMouseout.tooltip', function(evt) {\n                    tooltip.hidden(true)\n                });\n\n                scatters1.dispatch.on('elementMouseover.tooltip', mouseover_scatter);\n                scatters2.dispatch.on('elementMouseover.tooltip', mouseover_scatter);\n                scatters1.dispatch.on('elementMouseout.tooltip', function(evt) {\n                    tooltip.hidden(true)\n                });\n                scatters2.dispatch.on('elementMouseout.tooltip', function(evt) {\n                    tooltip.hidden(true)\n                });\n\n                stack1.dispatch.on('elementMouseover.tooltip', mouseover_stack);\n                stack2.dispatch.on('elementMouseover.tooltip', mouseover_stack);\n                stack1.dispatch.on('elementMouseout.tooltip', function(evt) {\n                    tooltip.hidden(true)\n                });\n                stack2.dispatch.on('elementMouseout.tooltip', function(evt) {\n                    tooltip.hidden(true)\n                });\n\n                bars1.dispatch.on('elementMouseover.tooltip', mouseover_bar);\n                bars2.dispatch.on('elementMouseover.tooltip', mouseover_bar);\n\n                bars1.dispatch.on('elementMouseout.tooltip', function(evt) {\n                    tooltip.hidden(true);\n                });\n                bars2.dispatch.on('elementMouseout.tooltip', function(evt) {\n                    tooltip.hidden(true);\n                });\n                bars1.dispatch.on('elementMousemove.tooltip', function(evt) {\n                    tooltip();\n                });\n                bars2.dispatch.on('elementMousemove.tooltip', function(evt) {\n                    tooltip();\n                });\n            }\n        });\n\n        return chart;\n    }\n\n    //============================================================\n    // Global getters and setters\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.legend = legend;\n    chart.lines1 = lines1;\n    chart.lines2 = lines2;\n    chart.scatters1 = scatters1;\n    chart.scatters2 = scatters2;\n    chart.bars1 = bars1;\n    chart.bars2 = bars2;\n    chart.stack1 = stack1;\n    chart.stack2 = stack2;\n    chart.xAxis = xAxis;\n    chart.yAxis1 = yAxis1;\n    chart.yAxis2 = yAxis2;\n    chart.tooltip = tooltip;\n    chart.interactiveLayer = interactiveLayer;\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n        yDomain1:      {get: function(){return yDomain1;}, set: function(_){yDomain1=_;}},\n        yDomain2:    {get: function(){return yDomain2;}, set: function(_){yDomain2=_;}},\n        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n        interpolate:    {get: function(){return interpolate;}, set: function(_){interpolate=_;}},\n        legendRightAxisHint:    {get: function(){return legendRightAxisHint;}, set: function(_){legendRightAxisHint=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }},\n        x: {get: function(){return getX;}, set: function(_){\n            getX = _;\n            lines1.x(_);\n            lines2.x(_);\n            scatters1.x(_);\n            scatters2.x(_);\n            bars1.x(_);\n            bars2.x(_);\n            stack1.x(_);\n            stack2.x(_);\n        }},\n        y: {get: function(){return getY;}, set: function(_){\n            getY = _;\n            lines1.y(_);\n            lines2.y(_);\n            scatters1.y(_);\n            scatters2.y(_);\n            stack1.y(_);\n            stack2.y(_);\n            bars1.y(_);\n            bars2.y(_);\n        }},\n        useVoronoi: {get: function(){return useVoronoi;}, set: function(_){\n            useVoronoi=_;\n            lines1.useVoronoi(_);\n            lines2.useVoronoi(_);\n            stack1.useVoronoi(_);\n            stack2.useVoronoi(_);\n        }},\n\n        useInteractiveGuideline: {get: function(){return useInteractiveGuideline;}, set: function(_){\n            useInteractiveGuideline = _;\n            if (useInteractiveGuideline) {\n                lines1.interactive(false);\n                lines1.useVoronoi(false);\n                lines2.interactive(false);\n                lines2.useVoronoi(false);\n                stack1.interactive(false);\n                stack1.useVoronoi(false);\n                stack2.interactive(false);\n                stack2.useVoronoi(false);\n                scatters1.interactive(false);\n                scatters2.interactive(false);\n            }\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n\nnv.models.ohlcBar = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n        , width = null\n        , height = null\n        , id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n        , container = null\n        , x = d3.scale.linear()\n        , y = d3.scale.linear()\n        , getX = function(d) { return d.x }\n        , getY = function(d) { return d.y }\n        , getOpen = function(d) { return d.open }\n        , getClose = function(d) { return d.close }\n        , getHigh = function(d) { return d.high }\n        , getLow = function(d) { return d.low }\n        , forceX = []\n        , forceY = []\n        , padData     = false // If true, adds half a data points width to front and back, for lining up a line chart with a bar chart\n        , clipEdge = true\n        , color = nv.utils.defaultColor()\n        , interactive = false\n        , xDomain\n        , yDomain\n        , xRange\n        , yRange\n        , dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd', 'chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove')\n        ;\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    function chart(selection) {\n        selection.each(function(data) {\n            container = d3.select(this);\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            nv.utils.initSVG(container);\n\n            // ohlc bar width.\n            var w = (availableWidth / data[0].values.length) * .9;\n\n            // Setup Scales\n            x.domain(xDomain || d3.extent(data[0].values.map(getX).concat(forceX) ));\n\n            if (padData)\n                x.range(xRange || [availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5)  / data[0].values.length ]);\n            else\n                x.range(xRange || [5 + w/2, availableWidth - w/2 - 5]);\n\n            y.domain(yDomain || [\n                    d3.min(data[0].values.map(getLow).concat(forceY)),\n                    d3.max(data[0].values.map(getHigh).concat(forceY))\n                ]\n            ).range(yRange || [availableHeight, 0]);\n\n            // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n            if (x.domain()[0] === x.domain()[1])\n                x.domain()[0] ?\n                    x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01])\n                    : x.domain([-1,1]);\n\n            if (y.domain()[0] === y.domain()[1])\n                y.domain()[0] ?\n                    y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01])\n                    : y.domain([-1,1]);\n\n            // Setup containers and skeleton of chart\n            var wrap = d3.select(this).selectAll('g.nv-wrap.nv-ohlcBar').data([data[0].values]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-ohlcBar');\n            var defsEnter = wrapEnter.append('defs');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-ticks');\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            container\n                .on('click', function(d,i) {\n                    dispatch.chartClick({\n                        data: d,\n                        index: i,\n                        pos: d3.event,\n                        id: id\n                    });\n                });\n\n            defsEnter.append('clipPath')\n                .attr('id', 'nv-chart-clip-path-' + id)\n                .append('rect');\n\n            wrap.select('#nv-chart-clip-path-' + id + ' rect')\n                .attr('width', availableWidth)\n                .attr('height', availableHeight);\n\n            g   .attr('clip-path', clipEdge ? 'url(#nv-chart-clip-path-' + id + ')' : '');\n\n            var ticks = wrap.select('.nv-ticks').selectAll('.nv-tick')\n                .data(function(d) { return d });\n            ticks.exit().remove();\n\n            ticks.enter().append('path')\n                .attr('class', function(d,i,j) { return (getOpen(d,i) > getClose(d,i) ? 'nv-tick negative' : 'nv-tick positive') + ' nv-tick-' + j + '-' + i })\n                .attr('d', function(d,i) {\n                    return 'm0,0l0,'\n                        + (y(getOpen(d,i))\n                            - y(getHigh(d,i)))\n                        + 'l'\n                        + (-w/2)\n                        + ',0l'\n                        + (w/2)\n                        + ',0l0,'\n                        + (y(getLow(d,i)) - y(getOpen(d,i)))\n                        + 'l0,'\n                        + (y(getClose(d,i))\n                            - y(getLow(d,i)))\n                        + 'l'\n                        + (w/2)\n                        + ',0l'\n                        + (-w/2)\n                        + ',0z';\n                })\n                .attr('transform', function(d,i) { return 'translate(' + x(getX(d,i)) + ',' + y(getHigh(d,i)) + ')'; })\n                .attr('fill', function(d,i) { return color[0]; })\n                .attr('stroke', function(d,i) { return color[0]; })\n                .attr('x', 0 )\n                .attr('y', function(d,i) {  return y(Math.max(0, getY(d,i))) })\n                .attr('height', function(d,i) { return Math.abs(y(getY(d,i)) - y(0)) });\n\n            // the bar colors are controlled by CSS currently\n            ticks.attr('class', function(d,i,j) {\n                return (getOpen(d,i) > getClose(d,i) ? 'nv-tick negative' : 'nv-tick positive') + ' nv-tick-' + j + '-' + i;\n            });\n\n            d3.transition(ticks)\n                .attr('transform', function(d,i) { return 'translate(' + x(getX(d,i)) + ',' + y(getHigh(d,i)) + ')'; })\n                .attr('d', function(d,i) {\n                    var w = (availableWidth / data[0].values.length) * .9;\n                    return 'm0,0l0,'\n                        + (y(getOpen(d,i))\n                            - y(getHigh(d,i)))\n                        + 'l'\n                        + (-w/2)\n                        + ',0l'\n                        + (w/2)\n                        + ',0l0,'\n                        + (y(getLow(d,i))\n                            - y(getOpen(d,i)))\n                        + 'l0,'\n                        + (y(getClose(d,i))\n                            - y(getLow(d,i)))\n                        + 'l'\n                        + (w/2)\n                        + ',0l'\n                        + (-w/2)\n                        + ',0z';\n                });\n        });\n\n        return chart;\n    }\n\n\n    //Create methods to allow outside functions to highlight a specific bar.\n    chart.highlightPoint = function(pointIndex, isHoverOver) {\n        chart.clearHighlights();\n        container.select(\".nv-ohlcBar .nv-tick-0-\" + pointIndex)\n            .classed(\"hover\", isHoverOver)\n        ;\n    };\n\n    chart.clearHighlights = function() {\n        container.select(\".nv-ohlcBar .nv-tick.hover\")\n            .classed(\"hover\", false)\n        ;\n    };\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:    {get: function(){return width;}, set: function(_){width=_;}},\n        height:   {get: function(){return height;}, set: function(_){height=_;}},\n        xScale:   {get: function(){return x;}, set: function(_){x=_;}},\n        yScale:   {get: function(){return y;}, set: function(_){y=_;}},\n        xDomain:  {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n        yDomain:  {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n        xRange:   {get: function(){return xRange;}, set: function(_){xRange=_;}},\n        yRange:   {get: function(){return yRange;}, set: function(_){yRange=_;}},\n        forceX:   {get: function(){return forceX;}, set: function(_){forceX=_;}},\n        forceY:   {get: function(){return forceY;}, set: function(_){forceY=_;}},\n        padData:  {get: function(){return padData;}, set: function(_){padData=_;}},\n        clipEdge: {get: function(){return clipEdge;}, set: function(_){clipEdge=_;}},\n        id:       {get: function(){return id;}, set: function(_){id=_;}},\n        interactive: {get: function(){return interactive;}, set: function(_){interactive=_;}},\n\n        x:     {get: function(){return getX;}, set: function(_){getX=_;}},\n        y:     {get: function(){return getY;}, set: function(_){getY=_;}},\n        open:  {get: function(){return getOpen();}, set: function(_){getOpen=_;}},\n        close: {get: function(){return getClose();}, set: function(_){getClose=_;}},\n        high:  {get: function(){return getHigh;}, set: function(_){getHigh=_;}},\n        low:   {get: function(){return getLow;}, set: function(_){getLow=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    != undefined ? _.top    : margin.top;\n            margin.right  = _.right  != undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom != undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   != undefined ? _.left   : margin.left;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n    return chart;\n};\n// Code adapted from Jason Davies' \"Parallel Coordinates\"\n// http://bl.ocks.org/jasondavies/1341281\nnv.models.parallelCoordinates = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 30, right: 0, bottom: 10, left: 0}\n        , width = null\n        , height = null\n        , availableWidth = null\n        , availableHeight = null\n        , x = d3.scale.ordinal()\n        , y = {}\n        , undefinedValuesLabel = \"undefined values\"\n        , dimensionData = []\n        , enabledDimensions = []\n        , dimensionNames = []\n        , displayBrush = true\n        , color = nv.utils.defaultColor()\n        , filters = []\n        , active = []\n        , dragging = []\n        , axisWithUndefinedValues = []\n        , lineTension = 1\n        , foreground\n        , background\n        , dimensions\n        , line = d3.svg.line()\n        , axis = d3.svg.axis()\n        , dispatch = d3.dispatch('brushstart', 'brush', 'brushEnd', 'dimensionsOrder', \"stateChange\", 'elementClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd', 'activeChanged')\n        ;\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n        renderWatch.reset();\n        selection.each(function(data) {\n            var container = d3.select(this);\n            availableWidth = nv.utils.availableWidth(width, container, margin);\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            nv.utils.initSVG(container);\n\n           //Convert old data to new format (name, values)\n            if (data[0].values === undefined) {\n                var newData = [];\n                data.forEach(function (d) {\n                        var val = {};\n                        var key = Object.keys(d);\n                        key.forEach(function (k) { if (k !== \"name\") val[k] = d[k] });\n                        newData.push({ key: d.name, values: val });\n                });\n                data = newData;\n            }\n\n            var dataValues = data.map(function (d) {return d.values});\n            if (active.length === 0) {\n                active = data;\n            }; //set all active before first brush call\n            \n            dimensionNames = dimensionData.sort(function (a, b) { return a.currentPosition - b.currentPosition; }).map(function (d) { return d.key });\n            enabledDimensions = dimensionData.filter(function (d) { return !d.disabled; });\n            \n            // Setup Scales\n            x.rangePoints([0, availableWidth], 1).domain(enabledDimensions.map(function (d) { return d.key; }));\n\n            //Set as true if all values on an axis are missing.\n            // Extract the list of dimensions and create a scale for each.\n            var oldDomainMaxValue = {};\n            var displayMissingValuesline = false;\n            var currentTicks = [];\n            \n            dimensionNames.forEach(function(d) {\n                var extent = d3.extent(dataValues, function (p) { return +p[d]; });\n                var min = extent[0];\n                var max = extent[1];\n                var onlyUndefinedValues = false;\n                //If there is no values to display on an axis, set the extent to 0\n                if (isNaN(min) || isNaN(max)) {\n                    onlyUndefinedValues = true;\n                    min = 0;\n                    max = 0;\n                }\n                //Scale axis if there is only one value\n                if (min === max) {\n                    min = min - 1;\n                    max = max + 1;\n                }\n                var f = filters.filter(function (k) { return k.dimension == d; });\n                if (f.length !== 0) {\n                    //If there is only NaN values, keep the existing domain.\n                    if (onlyUndefinedValues) {\n                        min = y[d].domain()[0];\n                        max = y[d].domain()[1];\n                    }\n                        //If the brush extent is > max (< min), keep the extent value.\n                    else if (!f[0].hasOnlyNaN && displayBrush) {\n                        min = min > f[0].extent[0] ? f[0].extent[0] : min;\n                        max = max < f[0].extent[1] ? f[0].extent[1] : max;\n                    }\n                        //If there is NaN values brushed be sure the brush extent is on the domain.\n                    else if (f[0].hasNaN) {\n                        max = max < f[0].extent[1] ? f[0].extent[1] : max;\n                        oldDomainMaxValue[d] = y[d].domain()[1];\n                        displayMissingValuesline = true;\n                    }\n                }\n                //Use 90% of (availableHeight - 12) for the axis range, 12 reprensenting the space necessary to display \"undefined values\" text.\n                //The remaining 10% are used to display the missingValue line.\n                y[d] = d3.scale.linear()\n                    .domain([min, max])\n                    .range([(availableHeight - 12) * 0.9, 0]);\n\n                axisWithUndefinedValues = [];\n                y[d].brush = d3.svg.brush().y(y[d]).on('brushstart', brushstart).on('brush', brush).on('brushend', brushend);\n            });\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-parallelCoordinates').data([data]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-parallelCoordinates');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-parallelCoordinates background');\n            gEnter.append('g').attr('class', 'nv-parallelCoordinates foreground');\n            gEnter.append('g').attr('class', 'nv-parallelCoordinates missingValuesline');\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            line.interpolate('cardinal').tension(lineTension);\n            axis.orient('left');\n            var axisDrag = d3.behavior.drag()\n                        .on('dragstart', dragStart)\n                        .on('drag', dragMove)\n                        .on('dragend', dragEnd);\n\n            //Add missing value line at the bottom of the chart\n            var missingValuesline, missingValueslineText;\n            var step = x.range()[1] - x.range()[0];\n            if (!isNaN(step)) {\n                var lineData = [0 + step / 2, availableHeight - 12, availableWidth - step / 2, availableHeight - 12];\n                missingValuesline = wrap.select('.missingValuesline').selectAll('line').data([lineData]);\n                missingValuesline.enter().append('line');\n                missingValuesline.exit().remove();\n                missingValuesline.attr(\"x1\", function(d) { return d[0]; })\n                        .attr(\"y1\", function(d) { return d[1]; })\n                        .attr(\"x2\", function(d) { return d[2]; })\n                        .attr(\"y2\", function(d) { return d[3]; });\n    \n                //Add the text \"undefined values\" under the missing value line\n                missingValueslineText = wrap.select('.missingValuesline').selectAll('text').data([undefinedValuesLabel]);\n                missingValueslineText.append('text').data([undefinedValuesLabel]);\n                missingValueslineText.enter().append('text');\n                missingValueslineText.exit().remove();\n                missingValueslineText.attr(\"y\", availableHeight)\n                        //To have the text right align with the missingValues line, substract 92 representing the text size.\n                        .attr(\"x\", availableWidth - 92 - step / 2)\n                        .text(function(d) { return d; });\n            }\n            // Add grey background lines for context.\n            background = wrap.select('.background').selectAll('path').data(data);\n            background.enter().append('path');\n            background.exit().remove();\n            background.attr('d', path);\n\n            // Add blue foreground lines for focus.\n            foreground = wrap.select('.foreground').selectAll('path').data(data);\n            foreground.enter().append('path')\n            foreground.exit().remove();\n            foreground.attr('d', path)\n                .style(\"stroke-width\", function (d, i) {\n                if (isNaN(d.strokeWidth)) { d.strokeWidth = 1;} return d.strokeWidth;})\n                .attr('stroke', function (d, i) { return d.color || color(d, i); });\n            foreground.on(\"mouseover\", function (d, i) {\n                d3.select(this).classed('hover', true).style(\"stroke-width\", d.strokeWidth + 2 + \"px\").style(\"stroke-opacity\", 1);\n                dispatch.elementMouseover({\n                    label: d.name,\n                    color: d.color || color(d, i),\n                    values: d.values,\n                    dimensions: enabledDimensions\n                });\n\n            });\n            foreground.on(\"mouseout\", function (d, i) {\n                d3.select(this).classed('hover', false).style(\"stroke-width\", d.strokeWidth + \"px\").style(\"stroke-opacity\", 0.7);\n                dispatch.elementMouseout({\n                    label: d.name,\n                    index: i\n                });\n            });\n            foreground.on('mousemove', function (d, i) {\n                dispatch.elementMousemove();\n            });\n            foreground.on('click', function (d) {\n                dispatch.elementClick({\n                    id: d.id\n                });\n            });\n            // Add a group element for each dimension.\n            dimensions = g.selectAll('.dimension').data(enabledDimensions);\n            var dimensionsEnter = dimensions.enter().append('g').attr('class', 'nv-parallelCoordinates dimension');\n\n            dimensions.attr('transform', function(d) { return 'translate(' + x(d.key) + ',0)'; });\n            dimensionsEnter.append('g').attr('class', 'nv-axis');\n\n            // Add an axis and title.\n            dimensionsEnter.append('text')\n                .attr('class', 'nv-label')\n                .style(\"cursor\", \"move\")\n                .attr('dy', '-1em')\n                .attr('text-anchor', 'middle')\n                .on(\"mouseover\", function(d, i) {\n                    dispatch.elementMouseover({\n                        label: d.tooltip || d.key,\n                        color: d.color \n                    });\n                })\n                .on(\"mouseout\", function(d, i) {\n                    dispatch.elementMouseout({\n                        label: d.tooltip\n                    });\n                })\n                .on('mousemove', function (d, i) {\n                    dispatch.elementMousemove();\n                })\n                .call(axisDrag);\n\n            dimensionsEnter.append('g').attr('class', 'nv-brushBackground');\n            dimensions.exit().remove();\n            dimensions.select('.nv-label').text(function (d) { return d.key });\n\n            // Add and store a brush for each axis.\n            restoreBrush(displayBrush);\n\n            var actives = dimensionNames.filter(function (p) { return !y[p].brush.empty(); }),\n                    extents = actives.map(function (p) { return y[p].brush.extent(); });\n            var formerActive = active.slice(0);\n\n            //Restore active values\n            active = [];\n            foreground.style(\"display\", function (d) {\n                var isActive = actives.every(function (p, i) {\n                    if ((isNaN(d.values[p]) || isNaN(parseFloat(d.values[p]))) && extents[i][0] == y[p].brush.y().domain()[0]) {\n                        return true;\n                    }\n                    return (extents[i][0] <= d.values[p] && d.values[p] <= extents[i][1]) && !isNaN(parseFloat(d.values[p]));\n                });\n                if (isActive)\n                    active.push(d);\n                return !isActive ? \"none\" : null;\n\n            });\n\n            if (filters.length > 0 || !nv.utils.arrayEquals(active, formerActive)) {\n               dispatch.activeChanged(active);\n            }\n\n            // Returns the path for a given data point.\n            function path(d) {\n                return line(enabledDimensions.map(function (p) {\n                    //If value if missing, put the value on the missing value line\n                    if (isNaN(d.values[p.key]) || isNaN(parseFloat(d.values[p.key])) || displayMissingValuesline) {\n                        var domain = y[p.key].domain();\n                        var range = y[p.key].range();\n                        var min = domain[0] - (domain[1] - domain[0]) / 9;\n\n                        //If it's not already the case, allow brush to select undefined values\n                        if (axisWithUndefinedValues.indexOf(p.key) < 0) {\n\n                            var newscale = d3.scale.linear().domain([min, domain[1]]).range([availableHeight - 12, range[1]]);\n                            y[p.key].brush.y(newscale);\n                            axisWithUndefinedValues.push(p.key);\n                        }\n                        if (isNaN(d.values[p.key]) || isNaN(parseFloat(d.values[p.key]))) {\n                            return [x(p.key), y[p.key](min)];\n                        }\n                    }\n\n                    //If parallelCoordinate contain missing values show the missing values line otherwise, hide it.\n                    if (missingValuesline !== undefined) {\n                        if (axisWithUndefinedValues.length > 0 || displayMissingValuesline) {\n                            missingValuesline.style(\"display\", \"inline\");\n                            missingValueslineText.style(\"display\", \"inline\");\n                        } else {\n                            missingValuesline.style(\"display\", \"none\");\n                            missingValueslineText.style(\"display\", \"none\");\n                        }\n                    }\n                    return [x(p.key), y[p.key](d.values[p.key])];\n                }));\n            }\n\n            function restoreBrush(visible) {\n                filters.forEach(function (f) {\n                    //If filter brushed NaN values, keep the brush on the bottom of the axis.\n                    var brushDomain = y[f.dimension].brush.y().domain();\n                    if (f.hasOnlyNaN) {\n                        f.extent[1] = (y[f.dimension].domain()[1] - brushDomain[0]) * (f.extent[1] - f.extent[0]) / (oldDomainMaxValue[f.dimension] - f.extent[0]) + brushDomain[0];\n                    }\n                    if (f.hasNaN) {\n                        f.extent[0] = brushDomain[0];\n                    }\n                    if (visible)\n                        y[f.dimension].brush.extent(f.extent);\n                });\n                \n                dimensions.select('.nv-brushBackground')\n                    .each(function (d) {\n                        d3.select(this).call(y[d.key].brush);\n\n                    })\n                    .selectAll('rect')\n                    .attr('x', -8)\n                    .attr('width', 16);\n                \n                updateTicks();\n            }\n            \n            // Handles a brush event, toggling the display of foreground lines.\n            function brushstart() {\n                //If brush aren't visible, show it before brushing again.\n                if (displayBrush === false) {\n                    displayBrush = true;\n                    restoreBrush(true);\n                }\n            }\n            \n            // Handles a brush event, toggling the display of foreground lines.\n            function brush() {\n                actives = dimensionNames.filter(function (p) { return !y[p].brush.empty(); });\n                extents = actives.map(function(p) { return y[p].brush.extent(); });\n\n                filters = []; //erase current filters\n                actives.forEach(function(d,i) {\n                    filters[i] = {\n                        dimension: d,\n                        extent: extents[i],\n                        hasNaN: false,\n                        hasOnlyNaN: false\n                    }\n                });\n\n                active = []; //erase current active list\n                foreground.style('display', function(d) {\n                    var isActive = actives.every(function(p, i) {\n                        if ((isNaN(d.values[p]) || isNaN(parseFloat(d.values[p]))) && extents[i][0] == y[p].brush.y().domain()[0]) return true;\n                        return (extents[i][0] <= d.values[p] && d.values[p] <= extents[i][1]) && !isNaN(parseFloat(d.values[p]));\n                    });\n                    if (isActive) active.push(d);\n                    return isActive ? null : 'none';\n                });\n                \n                updateTicks();\n                \n                dispatch.brush({\n                    filters: filters,\n                    active: active\n                });\n            }\n            function brushend() {\n                var hasActiveBrush = actives.length > 0 ? true : false;\n                filters.forEach(function (f) {\n                    if (f.extent[0] === y[f.dimension].brush.y().domain()[0] && axisWithUndefinedValues.indexOf(f.dimension) >= 0)\n                        f.hasNaN = true;\n                    if (f.extent[1] < y[f.dimension].domain()[0])\n                        f.hasOnlyNaN = true;\n                });\n                dispatch.brushEnd(active, hasActiveBrush);\n            }           \n            function updateTicks() {\n                dimensions.select('.nv-axis')\n                    .each(function (d, i) {\n                        var f = filters.filter(function (k) { return k.dimension == d.key; });\n                        currentTicks[d.key] = y[d.key].domain();\n                        \n                        //If brush are available, display brush extent\n                        if (f.length != 0 && displayBrush)\n                        {\n                            currentTicks[d.key] = [];\n                            if (f[0].extent[1] > y[d.key].domain()[0]) \n                                currentTicks[d.key] = [f[0].extent[1]];\n                            if (f[0].extent[0] >= y[d.key].domain()[0])\n                                currentTicks[d.key].push(f[0].extent[0]);    \n                        }\n                            \n                        d3.select(this).call(axis.scale(y[d.key]).tickFormat(d.format).tickValues(currentTicks[d.key]));\n                });\n            }\n            function dragStart(d) {\n                dragging[d.key] = this.parentNode.__origin__ = x(d.key);\n                background.attr(\"visibility\", \"hidden\");\n            }\n            function dragMove(d) {\n                dragging[d.key] = Math.min(availableWidth, Math.max(0, this.parentNode.__origin__ += d3.event.x));\n                foreground.attr(\"d\", path);\n                enabledDimensions.sort(function (a, b) { return dimensionPosition(a.key) - dimensionPosition(b.key); });\n                enabledDimensions.forEach(function (d, i) { return d.currentPosition = i; });\n                x.domain(enabledDimensions.map(function (d) { return d.key; }));\n                dimensions.attr(\"transform\", function(d) { return \"translate(\" + dimensionPosition(d.key) + \")\"; });\n            }\n            function dragEnd(d, i) {\n                delete this.parentNode.__origin__;\n                delete dragging[d.key];\n                d3.select(this.parentNode).attr(\"transform\", \"translate(\" + x(d.key) + \")\");\n                foreground\n                  .attr(\"d\", path);\n                background\n                  .attr(\"d\", path)\n                  .attr(\"visibility\", null);\n\n                dispatch.dimensionsOrder(enabledDimensions);\n            }\n            function dimensionPosition(d) {\n                var v = dragging[d];\n                return v == null ? x(d) : v;\n            }\n        });\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:         {get: function(){return width;},           set: function(_){width= _;}},\n        height:        {get: function(){return height;},          set: function(_){height= _;}},\n        dimensionData: { get: function () { return dimensionData; }, set: function (_) { dimensionData = _; } },\n        displayBrush: { get: function () { return displayBrush; }, set: function (_) { displayBrush = _; } },\n        filters: { get: function () { return filters; }, set: function (_) { filters = _; } },\n        active: { get: function () { return active; }, set: function (_) { active = _; } },\n        lineTension:   {get: function(){return lineTension;},     set: function(_){lineTension = _;}},\n        undefinedValuesLabel : {get: function(){return undefinedValuesLabel;}, set: function(_){undefinedValuesLabel=_;}},\n        \n        // deprecated options\n        dimensions: {get: function () { return dimensionData.map(function (d){return d.key}); }, set: function (_) {\n            // deprecated after 1.8.1\n            nv.deprecated('dimensions', 'use dimensionData instead');\n            if (dimensionData.length === 0) {\n                _.forEach(function (k) { dimensionData.push({ key: k }) })\n            } else {\n                _.forEach(function (k, i) { dimensionData[i].key= k })\n            }\n        }},\n        dimensionNames: {get: function () { return dimensionData.map(function (d){return d.key}); }, set: function (_) {\n            // deprecated after 1.8.1\n            nv.deprecated('dimensionNames', 'use dimensionData instead');\n            dimensionNames = [];\n            if (dimensionData.length === 0) {\n                _.forEach(function (k) { dimensionData.push({ key: k }) })\n            } else {\n                _.forEach(function (k, i) { dimensionData[i].key = k })\n            }\n \n        }},\n        dimensionFormats: {get: function () { return dimensionData.map(function (d) { return d.format }); }, set: function (_) {\n            // deprecated after 1.8.1\n            nv.deprecated('dimensionFormats', 'use dimensionData instead');\n            if (dimensionData.length === 0) {\n                _.forEach(function (f) { dimensionData.push({ format: f }) })\n            } else {\n                _.forEach(function (f, i) { dimensionData[i].format = f })\n            }\n\n        }},\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    =  _.top    !== undefined ? _.top    : margin.top;\n            margin.right  =  _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom =  _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   =  _.left   !== undefined ? _.left   : margin.left;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }}\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n};\nnv.models.parallelCoordinatesChart = function () {\n        \"use strict\";\n        //============================================================\n        // Public Variables with Default Settings\n        //------------------------------------------------------------\n\n        var parallelCoordinates = nv.models.parallelCoordinates()\n        var legend = nv.models.legend()\n        var tooltip = nv.models.tooltip();\n        var dimensionTooltip = nv.models.tooltip();\n\n        var margin = { top: 0, right: 0, bottom: 0, left: 0 }\n        , width = null\n\t\t, height = null\n        , showLegend = true\n\t\t, color = nv.utils.defaultColor()\n        , state = nv.utils.state()\n        , dimensionData = []\n        , displayBrush = true\n        , defaultState = null\n        , noData = null\n        , nanValue = \"undefined\"\n        , dispatch = d3.dispatch('dimensionsOrder', 'brushEnd', 'stateChange', 'changeState', 'renderEnd')\n        , controlWidth = function () { return showControls ? 180 : 0 }\n        ;\n\n\t    //============================================================\n\n\t\t//============================================================\n        // Private Variables\n        //------------------------------------------------------------\n\n        var renderWatch = nv.utils.renderWatch(dispatch);\n\n        var stateGetter = function(data) {\n            return function() {\n                return {\n                    active: data.map(function(d) { return !d.disabled })\n                };\n            }\n        };\n\n        var stateSetter = function(data) {\n            return function(state) {\n                if(state.active !== undefined) {\n                    data.forEach(function(series, i) {\n                        series.disabled = !state.active[i];\n                    });\n                }\n            }\n        };\n\n        tooltip.contentGenerator(function(data) {\n            var str = '<table><thead><tr><td class=\"legend-color-guide\"><div style=\"background-color:' + data.color + '\"></div></td><td><strong>' + data.key + '</strong></td></tr></thead>';\n            if(data.series.length !== 0)\n            {\n                str = str + '<tbody><tr><td height =\"10px\"></td></tr>';\n                data.series.forEach(function(d){\n                    str = str + '<tr><td class=\"legend-color-guide\"><div style=\"background-color:' + d.color + '\"></div></td><td class=\"key\">' + d.key + '</td><td class=\"value\">' + d.value + '</td></tr>';\n                });\n                str = str + '</tbody>';\n            }\n            str = str + '</table>';\n            return str;\n        });\n\n        //============================================================\n        // Chart function\n        //------------------------------------------------------------\n\n        function chart(selection) {\n            renderWatch.reset();\n            renderWatch.models(parallelCoordinates);\n\n            selection.each(function(data) {\n                var container = d3.select(this);\n                nv.utils.initSVG(container);\n\n                var that = this;\n\n                var availableWidth = nv.utils.availableWidth(width, container, margin),\n                    availableHeight = nv.utils.availableHeight(height, container, margin);\n\n                chart.update = function() { container.call(chart); };\n                chart.container = this;\n\n                state.setter(stateSetter(dimensionData), chart.update)\n                    .getter(stateGetter(dimensionData))\n                    .update();\n\n                //set state.disabled\n                state.disabled = dimensionData.map(function (d) { return !!d.disabled });\n\n                //Keep dimensions position in memory\n                dimensionData = dimensionData.map(function (d) {d.disabled = !!d.disabled; return d});\n                dimensionData.forEach(function (d, i) {\n                    d.originalPosition = isNaN(d.originalPosition) ? i : d.originalPosition;\n                    d.currentPosition = isNaN(d.currentPosition) ? i : d.currentPosition;\n                });\n\n               if (!defaultState) {\n                    var key;\n                    defaultState = {};\n                    for(key in state) {\n                        if(state[key] instanceof Array)\n                            defaultState[key] = state[key].slice(0);\n                        else\n                            defaultState[key] = state[key];\n                    }\n                }\n\n                // Display No Data message if there's nothing to show.\n                if(!data || !data.length) {\n                    nv.utils.noData(chart, container);\n                    return chart;\n                } else {\n                    container.selectAll('.nv-noData').remove();\n                }\n\n                //------------------------------------------------------------\n                // Setup containers and skeleton of chart\n\n                var wrap = container.selectAll('g.nv-wrap.nv-parallelCoordinatesChart').data([data]);\n                var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-parallelCoordinatesChart').append('g');\n\n                var g = wrap.select('g');\n\n                gEnter.append('g').attr('class', 'nv-parallelCoordinatesWrap');\n                gEnter.append('g').attr('class', 'nv-legendWrap');\n\n                g.select(\"rect\")\n                    .attr(\"width\", availableWidth)\n                    .attr(\"height\", (availableHeight > 0) ? availableHeight : 0);\n\n                // Legend\n                if (!showLegend) {\n                    g.select('.nv-legendWrap').selectAll('*').remove();\n                } else {\n                    legend.width(availableWidth)\n                        .color(function (d) { return \"rgb(188,190,192)\"; });\n\n                    g.select('.nv-legendWrap')\n                        .datum(dimensionData.sort(function (a, b) { return a.originalPosition - b.originalPosition; }))\n                        .call(legend);\n\n                    if (legend.height() > margin.top) {\n                        margin.top = legend.height();\n                        availableHeight = nv.utils.availableHeight(height, container, margin);\n                    }\n                    wrap.select('.nv-legendWrap')\n                       .attr('transform', 'translate( 0 ,' + (-margin.top) + ')');\n                }\n                wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n                // Main Chart Component(s)\n                parallelCoordinates\n                    .width(availableWidth)\n                    .height(availableHeight)\n                    .dimensionData(dimensionData)\n                    .displayBrush(displayBrush);\n\n\t\t        var parallelCoordinatesWrap = g.select('.nv-parallelCoordinatesWrap ')\n                  .datum(data);\n\n\t\t        parallelCoordinatesWrap.transition().call(parallelCoordinates);\n\n\t\t\t\t//============================================================\n                // Event Handling/Dispatching (in chart's scope)\n                //------------------------------------------------------------\n                //Display reset brush button\n\t\t        parallelCoordinates.dispatch.on('brushEnd', function (active, hasActiveBrush) {\n\t\t            if (hasActiveBrush) {\n\t\t                displayBrush = true;\n\t\t                dispatch.brushEnd(active);\n\t\t            } else {\n\n\t\t                displayBrush = false;\n\t\t            }\n\t\t        });\n\n\t\t        legend.dispatch.on('stateChange', function(newState) {\n\t\t            for(var key in newState) {\n\t\t                state[key] = newState[key];\n\t\t            }\n\t\t            dispatch.stateChange(state);\n\t\t            chart.update();\n\t\t        });\n\n                //Update dimensions order and display reset sorting button\n\t\t        parallelCoordinates.dispatch.on('dimensionsOrder', function (e) {\n\t\t            dimensionData.sort(function (a, b) { return a.currentPosition - b.currentPosition; });\n\t\t            var isSorted = false;\n\t\t            dimensionData.forEach(function (d, i) {\n\t\t                d.currentPosition = i;\n\t\t                if (d.currentPosition !== d.originalPosition)\n\t\t                    isSorted = true;\n\t\t            });\n\t\t            dispatch.dimensionsOrder(dimensionData, isSorted);\n\t\t        });\n\n\t\t\t\t// Update chart from a state object passed to event handler\n                dispatch.on('changeState', function (e) {\n\n                    if (typeof e.disabled !== 'undefined') {\n                        dimensionData.forEach(function (series, i) {\n                            series.disabled = e.disabled[i];\n                        });\n                        state.disabled = e.disabled;\n                    }\n                    chart.update();\n                });\n            });\n\n            renderWatch.renderEnd('parraleleCoordinateChart immediate');\n            return chart;\n        }\n\n\t\t//============================================================\n        // Event Handling/Dispatching (out of chart's scope)\n        //------------------------------------------------------------\n\n        parallelCoordinates.dispatch.on('elementMouseover.tooltip', function (evt) {\n            var tp = {\n                key: evt.label,\n                color: evt.color,\n                series: []\n             }\n            if(evt.values){\n                Object.keys(evt.values).forEach(function (d) {\n                    var dim = evt.dimensions.filter(function (dd) {return dd.key === d;})[0];\n                    if(dim){\n                        var v;\n                        if (isNaN(evt.values[d]) || isNaN(parseFloat(evt.values[d]))) {\n                            v = nanValue;\n                        } else {\n                            v = dim.format(evt.values[d]);\n                        }\n                        tp.series.push({ idx: dim.currentPosition, key: d, value: v, color: dim.color });\n                    }\n                });\n                tp.series.sort(function(a,b) {return a.idx - b.idx});\n             }\n            tooltip.data(tp).hidden(false);\n        });\n\n        parallelCoordinates.dispatch.on('elementMouseout.tooltip', function(evt) {\n            tooltip.hidden(true)\n        });\n\n        parallelCoordinates.dispatch.on('elementMousemove.tooltip', function () {\n            tooltip();\n        });\n\t\t //============================================================\n        // Expose Public Variables\n        //------------------------------------------------------------\n\n\t\t// expose chart's sub-components\n        chart.dispatch = dispatch;\n        chart.parallelCoordinates = parallelCoordinates;\n        chart.legend = legend;\n        chart.tooltip = tooltip;\n        chart.options = nv.utils.optionsFunc.bind(chart);\n\n        chart._options = Object.create({}, {\n            // simple options, just get/set the necessary values\n            width: { get: function () { return width; }, set: function (_) { width = _; } },\n            height: { get: function () { return height; }, set: function (_) { height = _; } },\n            showLegend: { get: function () { return showLegend; }, set: function (_) { showLegend = _; } },\n            defaultState: { get: function () { return defaultState; }, set: function (_) { defaultState = _; } },\n            dimensionData: { get: function () { return dimensionData; }, set: function (_) { dimensionData = _; } },\n            displayBrush: { get: function () { return displayBrush; }, set: function (_) { displayBrush = _; } },\n            noData: { get: function () { return noData; }, set: function (_) { noData = _; } },\n            nanValue: { get: function () { return nanValue; }, set: function (_) { nanValue = _; } },\n\n            // options that require extra logic in the setter\n            margin: {\n                get: function () { return margin; },\n                set: function (_) {\n                    margin.top = _.top !== undefined ? _.top : margin.top;\n                    margin.right = _.right !== undefined ? _.right : margin.right;\n                    margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n                    margin.left = _.left !== undefined ? _.left : margin.left;\n                }\n            },\n            color: {get: function(){return color;}, set: function(_){\n                    color = nv.utils.getColor(_);\n                    legend.color(color);\n                    parallelCoordinates.color(color);\n                }}\n        });\n\n        nv.utils.inheritOptions(chart, parallelCoordinates);\n        nv.utils.initOptions(chart);\n\n        return chart;\n    };\nnv.models.pie = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n        , width = 500\n        , height = 500\n        , getX = function(d) { return d.x }\n        , getY = function(d) { return d.y }\n        , id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n        , container = null\n        , color = nv.utils.defaultColor()\n        , valueFormat = d3.format(',.2f')\n        , showLabels = true\n        , labelsOutside = false\n        , labelType = \"key\"\n        , labelThreshold = .02 //if slice percentage is under this, don't show label\n        , donut = false\n        , title = false\n        , growOnHover = true\n        , titleOffset = 0\n        , labelSunbeamLayout = false\n        , startAngle = false\n        , padAngle = false\n        , endAngle = false\n        , cornerRadius = 0\n        , donutRatio = 0.5\n        , duration = 250\n        , arcsRadius = []\n        , dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd')\n        ;\n\n    var arcs = [];\n    var arcsOver = [];\n\n    //============================================================\n    // chart function\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n        renderWatch.reset();\n        selection.each(function(data) {\n            var availableWidth = width - margin.left - margin.right\n                , availableHeight = height - margin.top - margin.bottom\n                , radius = Math.min(availableWidth, availableHeight) / 2\n                , arcsRadiusOuter = []\n                , arcsRadiusInner = []\n                ;\n\n            container = d3.select(this)\n            if (arcsRadius.length === 0) {\n                var outer = radius - radius / 5;\n                var inner = donutRatio * radius;\n                for (var i = 0; i < data[0].length; i++) {\n                    arcsRadiusOuter.push(outer);\n                    arcsRadiusInner.push(inner);\n                }\n            } else {\n                if(growOnHover){\n                    arcsRadiusOuter = arcsRadius.map(function (d) { return (d.outer - d.outer / 5) * radius; });\n                    arcsRadiusInner = arcsRadius.map(function (d) { return (d.inner - d.inner / 5) * radius; });\n                    donutRatio = d3.min(arcsRadius.map(function (d) { return (d.inner - d.inner / 5); }));\n                } else {\n                    arcsRadiusOuter = arcsRadius.map(function (d) { return d.outer * radius; });\n                    arcsRadiusInner = arcsRadius.map(function (d) { return d.inner * radius; });\n                    donutRatio = d3.min(arcsRadius.map(function (d) { return d.inner; }));\n                }\n            }\n            nv.utils.initSVG(container);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('.nv-wrap.nv-pie').data(data);\n            var wrapEnter = wrap.enter().append('g').attr('class','nvd3 nv-wrap nv-pie nv-chart-' + id);\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n            var g_pie = gEnter.append('g').attr('class', 'nv-pie');\n            gEnter.append('g').attr('class', 'nv-pieLabels');\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n            g.select('.nv-pie').attr('transform', 'translate(' + availableWidth / 2 + ',' + availableHeight / 2 + ')');\n            g.select('.nv-pieLabels').attr('transform', 'translate(' + availableWidth / 2 + ',' + availableHeight / 2 + ')');\n\n            //\n            container.on('click', function(d,i) {\n                dispatch.chartClick({\n                    data: d,\n                    index: i,\n                    pos: d3.event,\n                    id: id\n                });\n            });\n\n            arcs = [];\n            arcsOver = [];\n            for (var i = 0; i < data[0].length; i++) {\n\n                var arc = d3.svg.arc().outerRadius(arcsRadiusOuter[i]);\n                var arcOver = d3.svg.arc().outerRadius(arcsRadiusOuter[i] + 5);\n\n                if (startAngle !== false) {\n                    arc.startAngle(startAngle);\n                    arcOver.startAngle(startAngle);\n                }\n                if (endAngle !== false) {\n                    arc.endAngle(endAngle);\n                    arcOver.endAngle(endAngle);\n                }\n                if (donut) {\n                    arc.innerRadius(arcsRadiusInner[i]);\n                    arcOver.innerRadius(arcsRadiusInner[i]);\n                }\n\n                if (arc.cornerRadius && cornerRadius) {\n                    arc.cornerRadius(cornerRadius);\n                    arcOver.cornerRadius(cornerRadius);\n                }\n\n                arcs.push(arc);\n                arcsOver.push(arcOver);\n            }\n\n            // Setup the Pie chart and choose the data element\n            var pie = d3.layout.pie()\n                .sort(null)\n                .value(function(d) { return d.disabled ? 0 : getY(d) });\n\n            // padAngle added in d3 3.5\n            if (pie.padAngle && padAngle) {\n                pie.padAngle(padAngle);\n            }\n\n            // if title is specified and donut, put it in the middle\n            if (donut && title) {\n                g_pie.append(\"text\").attr('class', 'nv-pie-title');\n\n                wrap.select('.nv-pie-title')\n                    .style(\"text-anchor\", \"middle\")\n                    .text(function (d) {\n                        return title;\n                    })\n                    .style(\"font-size\", (Math.min(availableWidth, availableHeight)) * donutRatio * 2 / (title.length + 2) + \"px\")\n                    .attr(\"dy\", \"0.35em\") // trick to vertically center text\n                    .attr('transform', function(d, i) {\n                        return 'translate(0, '+ titleOffset + ')';\n                    });\n            }\n\n            var slices = wrap.select('.nv-pie').selectAll('.nv-slice').data(pie);\n            var pieLabels = wrap.select('.nv-pieLabels').selectAll('.nv-label').data(pie);\n\n            slices.exit().remove();\n            pieLabels.exit().remove();\n\n            var ae = slices.enter().append('g');\n            ae.attr('class', 'nv-slice');\n            ae.on('mouseover', function(d, i) {\n                d3.select(this).classed('hover', true);\n                if (growOnHover) {\n                    d3.select(this).select(\"path\").transition()\n                        .duration(70)\n                        .attr(\"d\", arcsOver[i]);\n                }\n                dispatch.elementMouseover({\n                    data: d.data,\n                    index: i,\n                    color: d3.select(this).style(\"fill\"),\n                    percent: (d.endAngle - d.startAngle) / (2 * Math.PI)\n                });\n            });\n            ae.on('mouseout', function(d, i) {\n                d3.select(this).classed('hover', false);\n                if (growOnHover) {\n                    d3.select(this).select(\"path\").transition()\n                        .duration(50)\n                        .attr(\"d\", arcs[i]);\n                }\n                dispatch.elementMouseout({data: d.data, index: i});\n            });\n            ae.on('mousemove', function(d, i) {\n                dispatch.elementMousemove({data: d.data, index: i});\n            });\n            ae.on('click', function(d, i) {\n                var element = this;\n                dispatch.elementClick({\n                    data: d.data,\n                    index: i,\n                    color: d3.select(this).style(\"fill\"),\n                    event: d3.event,\n                    element: element\n                });\n            });\n            ae.on('dblclick', function(d, i) {\n                dispatch.elementDblClick({\n                    data: d.data,\n                    index: i,\n                    color: d3.select(this).style(\"fill\")\n                });\n            });\n\n            slices.attr('fill', function(d,i) { return color(d.data, i); });\n            slices.attr('stroke', function(d,i) { return color(d.data, i); });\n\n            var paths = ae.append('path').each(function(d) {\n                this._current = d;\n            });\n\n            slices.select('path')\n                .transition()\n                .duration(duration)\n                .attr('d', function (d, i) { return arcs[i](d); })\n                .attrTween('d', arcTween);\n\n            if (showLabels) {\n                // This does the normal label\n                var labelsArc = [];\n                for (var i = 0; i < data[0].length; i++) {\n                    labelsArc.push(arcs[i]);\n\n                    if (labelsOutside) {\n                        if (donut) {\n                            labelsArc[i] = d3.svg.arc().outerRadius(arcs[i].outerRadius());\n                            if (startAngle !== false) labelsArc[i].startAngle(startAngle);\n                            if (endAngle !== false) labelsArc[i].endAngle(endAngle);\n                        }\n                    } else if (!donut) {\n                            labelsArc[i].innerRadius(0);\n                    }\n                }\n\n                pieLabels.enter().append(\"g\").classed(\"nv-label\",true).each(function(d,i) {\n                    var group = d3.select(this);\n\n                    group.attr('transform', function (d, i) {\n                        if (labelSunbeamLayout) {\n                            d.outerRadius = arcsRadiusOuter[i] + 10; // Set Outer Coordinate\n                            d.innerRadius = arcsRadiusOuter[i] + 15; // Set Inner Coordinate\n                            var rotateAngle = (d.startAngle + d.endAngle) / 2 * (180 / Math.PI);\n                            if ((d.startAngle + d.endAngle) / 2 < Math.PI) {\n                                rotateAngle -= 90;\n                            } else {\n                                rotateAngle += 90;\n                            }\n                            return 'translate(' + labelsArc[i].centroid(d) + ') rotate(' + rotateAngle + ')';\n                        } else {\n                            d.outerRadius = radius + 10; // Set Outer Coordinate\n                            d.innerRadius = radius + 15; // Set Inner Coordinate\n                            return 'translate(' + labelsArc[i].centroid(d) + ')'\n                        }\n                    });\n\n                    group.append('rect')\n                        .style('stroke', '#fff')\n                        .style('fill', '#fff')\n                        .attr(\"rx\", 3)\n                        .attr(\"ry\", 3);\n\n                    group.append('text')\n                        .style('text-anchor', labelSunbeamLayout ? ((d.startAngle + d.endAngle) / 2 < Math.PI ? 'start' : 'end') : 'middle') //center the text on it's origin or begin/end if orthogonal aligned\n                        .style('fill', '#000')\n                });\n\n                var labelLocationHash = {};\n                var avgHeight = 14;\n                var avgWidth = 140;\n                var createHashKey = function(coordinates) {\n                    return Math.floor(coordinates[0]/avgWidth) * avgWidth + ',' + Math.floor(coordinates[1]/avgHeight) * avgHeight;\n                };\n                var getSlicePercentage = function(d) {\n                    return (d.endAngle - d.startAngle) / (2 * Math.PI);\n                };\n\n                pieLabels.watchTransition(renderWatch, 'pie labels').attr('transform', function (d, i) {\n                    if (labelSunbeamLayout) {\n                        d.outerRadius = arcsRadiusOuter[i] + 10; // Set Outer Coordinate\n                        d.innerRadius = arcsRadiusOuter[i] + 15; // Set Inner Coordinate\n                        var rotateAngle = (d.startAngle + d.endAngle) / 2 * (180 / Math.PI);\n                        if ((d.startAngle + d.endAngle) / 2 < Math.PI) {\n                            rotateAngle -= 90;\n                        } else {\n                            rotateAngle += 90;\n                        }\n                        return 'translate(' + labelsArc[i].centroid(d) + ') rotate(' + rotateAngle + ')';\n                    } else {\n                        d.outerRadius = radius + 10; // Set Outer Coordinate\n                        d.innerRadius = radius + 15; // Set Inner Coordinate\n\n                        /*\n                        Overlapping pie labels are not good. What this attempts to do is, prevent overlapping.\n                        Each label location is hashed, and if a hash collision occurs, we assume an overlap.\n                        Adjust the label's y-position to remove the overlap.\n                        */\n                        var center = labelsArc[i].centroid(d);\n                        var percent = getSlicePercentage(d);\n                        if (d.value && percent >= labelThreshold) {\n                            var hashKey = createHashKey(center);\n                            if (labelLocationHash[hashKey]) {\n                                center[1] -= avgHeight;\n                            }\n                            labelLocationHash[createHashKey(center)] = true;\n                        }\n                        return 'translate(' + center + ')'\n                    }\n                });\n\n                pieLabels.select(\".nv-label text\")\n                    .style('text-anchor', function(d,i) {\n                        //center the text on it's origin or begin/end if orthogonal aligned\n                        return labelSunbeamLayout ? ((d.startAngle + d.endAngle) / 2 < Math.PI ? 'start' : 'end') : 'middle';\n                    })\n                    .text(function(d, i) {\n                        var percent = getSlicePercentage(d);\n                        var label = '';\n                        if (!d.value || percent < labelThreshold) return '';\n\n                        if(typeof labelType === 'function') {\n                            label = labelType(d, i, {\n                                'key': getX(d.data),\n                                'value': getY(d.data),\n                                'percent': valueFormat(percent)\n                            });\n                        } else {\n                            switch (labelType) {\n                                case 'key':\n                                    label = getX(d.data);\n                                    break;\n                                case 'value':\n                                    label = valueFormat(getY(d.data));\n                                    break;\n                                case 'percent':\n                                    label = d3.format('%')(percent);\n                                    break;\n                            }\n                        }\n                        return label;\n                    })\n                ;\n            }\n\n\n            // Computes the angle of an arc, converting from radians to degrees.\n            function angle(d) {\n                var a = (d.startAngle + d.endAngle) * 90 / Math.PI - 90;\n                return a > 90 ? a - 180 : a;\n            }\n\n            function arcTween(a, idx) {\n                a.endAngle = isNaN(a.endAngle) ? 0 : a.endAngle;\n                a.startAngle = isNaN(a.startAngle) ? 0 : a.startAngle;\n                if (!donut) a.innerRadius = 0;\n                var i = d3.interpolate(this._current, a);\n                this._current = i(0);\n                return function (t) {\n                    return arcs[idx](i(t));\n                };\n            }\n        });\n\n        renderWatch.renderEnd('pie immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        arcsRadius: { get: function () { return arcsRadius; }, set: function (_) { arcsRadius = _; } },\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        showLabels: {get: function(){return showLabels;}, set: function(_){showLabels=_;}},\n        title:      {get: function(){return title;}, set: function(_){title=_;}},\n        titleOffset:    {get: function(){return titleOffset;}, set: function(_){titleOffset=_;}},\n        labelThreshold: {get: function(){return labelThreshold;}, set: function(_){labelThreshold=_;}},\n        valueFormat:    {get: function(){return valueFormat;}, set: function(_){valueFormat=_;}},\n        x:          {get: function(){return getX;}, set: function(_){getX=_;}},\n        id:         {get: function(){return id;}, set: function(_){id=_;}},\n        endAngle:   {get: function(){return endAngle;}, set: function(_){endAngle=_;}},\n        startAngle: {get: function(){return startAngle;}, set: function(_){startAngle=_;}},\n        padAngle:   {get: function(){return padAngle;}, set: function(_){padAngle=_;}},\n        cornerRadius: {get: function(){return cornerRadius;}, set: function(_){cornerRadius=_;}},\n        donutRatio:   {get: function(){return donutRatio;}, set: function(_){donutRatio=_;}},\n        labelsOutside: {get: function(){return labelsOutside;}, set: function(_){labelsOutside=_;}},\n        labelSunbeamLayout: {get: function(){return labelSunbeamLayout;}, set: function(_){labelSunbeamLayout=_;}},\n        donut:              {get: function(){return donut;}, set: function(_){donut=_;}},\n        growOnHover:        {get: function(){return growOnHover;}, set: function(_){growOnHover=_;}},\n\n        // depreciated after 1.7.1\n        pieLabelsOutside: {get: function(){return labelsOutside;}, set: function(_){\n            labelsOutside=_;\n            nv.deprecated('pieLabelsOutside', 'use labelsOutside instead');\n        }},\n        // depreciated after 1.7.1\n        donutLabelsOutside: {get: function(){return labelsOutside;}, set: function(_){\n            labelsOutside=_;\n            nv.deprecated('donutLabelsOutside', 'use labelsOutside instead');\n        }},\n        // deprecated after 1.7.1\n        labelFormat: {get: function(){ return valueFormat;}, set: function(_) {\n            valueFormat=_;\n            nv.deprecated('labelFormat','use valueFormat instead');\n        }},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = typeof _.top    != 'undefined' ? _.top    : margin.top;\n            margin.right  = typeof _.right  != 'undefined' ? _.right  : margin.right;\n            margin.bottom = typeof _.bottom != 'undefined' ? _.bottom : margin.bottom;\n            margin.left   = typeof _.left   != 'undefined' ? _.left   : margin.left;\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n        }},\n        y: {get: function(){return getY;}, set: function(_){\n            getY=d3.functor(_);\n        }},\n        color: {get: function(){return color;}, set: function(_){\n            color=nv.utils.getColor(_);\n        }},\n        labelType:          {get: function(){return labelType;}, set: function(_){\n            labelType= _ || 'key';\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n    return chart;\n};\nnv.models.pieChart = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var pie = nv.models.pie();\n    var legend = nv.models.legend();\n    var tooltip = nv.models.tooltip();\n\n    var margin = {top: 30, right: 20, bottom: 20, left: 20}\n        , width = null\n        , height = null\n        , showTooltipPercent = false\n        , showLegend = true\n        , legendPosition = \"top\"\n        , color = nv.utils.defaultColor()\n        , state = nv.utils.state()\n        , defaultState = null\n        , noData = null\n        , duration = 250\n        , dispatch = d3.dispatch('stateChange', 'changeState','renderEnd')\n        ;\n\n    tooltip\n        .duration(0)\n        .headerEnabled(false)\n        .valueFormatter(function(d, i) {\n            return pie.valueFormat()(d, i);\n        });\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    var stateGetter = function(data) {\n        return function(){\n            return {\n                active: data.map(function(d) { return !d.disabled })\n            };\n        }\n    };\n\n    var stateSetter = function(data) {\n        return function(state) {\n            if (state.active !== undefined) {\n                data.forEach(function (series, i) {\n                    series.disabled = !state.active[i];\n                });\n            }\n        }\n    };\n\n    //============================================================\n    // Chart function\n    //------------------------------------------------------------\n\n    function chart(selection) {\n        renderWatch.reset();\n        renderWatch.models(pie);\n\n        selection.each(function(data) {\n            var container = d3.select(this);\n            nv.utils.initSVG(container);\n\n            var that = this;\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            chart.update = function() { container.transition().call(chart); };\n            chart.container = this;\n\n            state.setter(stateSetter(data), chart.update)\n                .getter(stateGetter(data))\n                .update();\n\n            //set state.disabled\n            state.disabled = data.map(function(d) { return !!d.disabled });\n\n            if (!defaultState) {\n                var key;\n                defaultState = {};\n                for (key in state) {\n                    if (state[key] instanceof Array)\n                        defaultState[key] = state[key].slice(0);\n                    else\n                        defaultState[key] = state[key];\n                }\n            }\n\n            // Display No Data message if there's nothing to show.\n            if (!data || !data.length) {\n                nv.utils.noData(chart, container);\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-pieChart').data([data]);\n            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-pieChart').append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-pieWrap');\n            gEnter.append('g').attr('class', 'nv-legendWrap');\n\n            // Legend\n            if (!showLegend) {\n                g.select('.nv-legendWrap').selectAll('*').remove();\n            } else {\n                if (legendPosition === \"top\") {\n                    legend.width( availableWidth ).key(pie.x());\n\n                    wrap.select('.nv-legendWrap')\n                        .datum(data)\n                        .call(legend);\n\n                    if (legend.height() > margin.top) {\n                        margin.top = legend.height();\n                        availableHeight = nv.utils.availableHeight(height, container, margin);\n                    }\n\n                    wrap.select('.nv-legendWrap')\n                        .attr('transform', 'translate(0,' + (-margin.top) +')');\n                } else if (legendPosition === \"right\") {\n                    var legendWidth = nv.models.legend().width();\n                    if (availableWidth / 2 < legendWidth) {\n                        legendWidth = (availableWidth / 2)\n                    }\n                    legend.height(availableHeight).key(pie.x());\n                    legend.width(legendWidth);\n                    availableWidth -= legend.width();\n\n                    wrap.select('.nv-legendWrap')\n                        .datum(data)\n                        .call(legend)\n                        .attr('transform', 'translate(' + (availableWidth) +',0)');\n                }\n            }\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            // Main Chart Component(s)\n            pie.width(availableWidth).height(availableHeight);\n            var pieWrap = g.select('.nv-pieWrap').datum([data]);\n            d3.transition(pieWrap).call(pie);\n\n            //============================================================\n            // Event Handling/Dispatching (in chart's scope)\n            //------------------------------------------------------------\n\n            legend.dispatch.on('stateChange', function(newState) {\n                for (var key in newState) {\n                    state[key] = newState[key];\n                }\n                dispatch.stateChange(state);\n                chart.update();\n            });\n\n            // Update chart from a state object passed to event handler\n            dispatch.on('changeState', function(e) {\n                if (typeof e.disabled !== 'undefined') {\n                    data.forEach(function(series,i) {\n                        series.disabled = e.disabled[i];\n                    });\n                    state.disabled = e.disabled;\n                }\n                chart.update();\n            });\n        });\n\n        renderWatch.renderEnd('pieChart immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n    pie.dispatch.on('elementMouseover.tooltip', function(evt) {\n        evt['series'] = {\n            key: chart.x()(evt.data),\n            value: chart.y()(evt.data),\n            color: evt.color,\n            percent: evt.percent\n        };\n        if (!showTooltipPercent) {\n            delete evt.percent;\n            delete evt.series.percent;\n        }\n        tooltip.data(evt).hidden(false);\n    });\n\n    pie.dispatch.on('elementMouseout.tooltip', function(evt) {\n        tooltip.hidden(true);\n    });\n\n    pie.dispatch.on('elementMousemove.tooltip', function(evt) {\n        tooltip();\n    });\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    // expose chart's sub-components\n    chart.legend = legend;\n    chart.dispatch = dispatch;\n    chart.pie = pie;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    // use Object get/set functionality to map between vars and chart functions\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:              {get: function(){return width;},                set: function(_){width=_;}},\n        height:             {get: function(){return height;},               set: function(_){height=_;}},\n        noData:             {get: function(){return noData;},               set: function(_){noData=_;}},\n        showTooltipPercent: {get: function(){return showTooltipPercent;},   set: function(_){showTooltipPercent=_;}},\n        showLegend:         {get: function(){return showLegend;},           set: function(_){showLegend=_;}},\n        legendPosition:     {get: function(){return legendPosition;},       set: function(_){legendPosition=_;}},\n        defaultState:       {get: function(){return defaultState;},         set: function(_){defaultState=_;}},\n\n        // options that require extra logic in the setter\n        color: {get: function(){return color;}, set: function(_){\n            color = _;\n            legend.color(color);\n            pie.color(color);\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n            pie.duration(duration);\n        }},\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }}\n    });\n    nv.utils.inheritOptions(chart, pie);\n    nv.utils.initOptions(chart);\n    return chart;\n};\n\nnv.models.scatter = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin       = {top: 0, right: 0, bottom: 0, left: 0}\n        , width        = null\n        , height       = null\n        , color        = nv.utils.defaultColor() // chooses color\n        , id           = Math.floor(Math.random() * 100000) //Create semi-unique ID incase user doesn't select one\n        , container    = null\n        , x            = d3.scale.linear()\n        , y            = d3.scale.linear()\n        , z            = d3.scale.linear() //linear because d3.svg.shape.size is treated as area\n        , getX         = function(d) { return d.x } // accessor to get the x value\n        , getY         = function(d) { return d.y } // accessor to get the y value\n        , getSize      = function(d) { return d.size || 1} // accessor to get the point size\n        , getShape     = function(d) { return d.shape || 'circle' } // accessor to get point shape\n        , forceX       = [] // List of numbers to Force into the X scale (ie. 0, or a max / min, etc.)\n        , forceY       = [] // List of numbers to Force into the Y scale\n        , forceSize    = [] // List of numbers to Force into the Size scale\n        , interactive  = true // If true, plots a voronoi overlay for advanced point intersection\n        , pointActive  = function(d) { return !d.notActive } // any points that return false will be filtered out\n        , padData      = false // If true, adds half a data points width to front and back, for lining up a line chart with a bar chart\n        , padDataOuter = .1 //outerPadding to imitate ordinal scale outer padding\n        , clipEdge     = false // if true, masks points within x and y scale\n        , clipVoronoi  = true // if true, masks each point with a circle... can turn off to slightly increase performance\n        , showVoronoi  = false // display the voronoi areas\n        , clipRadius   = function() { return 25 } // function to get the radius for voronoi point clips\n        , xDomain      = null // Override x domain (skips the calculation from data)\n        , yDomain      = null // Override y domain\n        , xRange       = null // Override x range\n        , yRange       = null // Override y range\n        , sizeDomain   = null // Override point size domain\n        , sizeRange    = null\n        , singlePoint  = false\n        , dispatch     = d3.dispatch('elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'renderEnd')\n        , useVoronoi   = true\n        , duration     = 250\n        , interactiveUpdateDelay = 300\n        , showLabels    = false \n        ;\n\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var x0, y0, z0 // used to store previous scales\n        , timeoutID\n        , needsUpdate = false // Flag for when the points are visually updating, but the interactive layer is behind, to disable tooltips\n        , renderWatch = nv.utils.renderWatch(dispatch, duration)\n        , _sizeRange_def = [16, 256]\n        , _caches\n        ;\n\n    function getCache(d) {\n        var cache, i;\n        cache = _caches = _caches || {};\n        i = d[0].series;\n        cache = cache[i] = cache[i] || {};\n        i = d[1];\n        cache = cache[i] = cache[i] || {};\n        return cache;\n    }\n\n    function getDiffs(d) {\n        var i, key,\n            point = d[0],\n            cache = getCache(d),\n            diffs = false;\n        for (i = 1; i < arguments.length; i ++) {\n            key = arguments[i];\n            if (cache[key] !== point[key] || !cache.hasOwnProperty(key)) {\n                cache[key] = point[key];\n                diffs = true;\n            }\n        }\n        return diffs;\n    }\n\n    function chart(selection) {\n        renderWatch.reset();\n        selection.each(function(data) {\n            container = d3.select(this);\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            nv.utils.initSVG(container);\n\n            //add series index to each data point for reference\n            data.forEach(function(series, i) {\n                series.values.forEach(function(point) {\n                    point.series = i;\n                });\n            });\n\n            // Setup Scales\n            var logScale = chart.yScale().name === d3.scale.log().name ? true : false; \n            // remap and flatten the data for use in calculating the scales' domains\n            var seriesData = (xDomain && yDomain && sizeDomain) ? [] : // if we know xDomain and yDomain and sizeDomain, no need to calculate.... if Size is constant remember to set sizeDomain to speed up performance\n                d3.merge(\n                    data.map(function(d) {\n                        return d.values.map(function(d,i) {\n                            return { x: getX(d,i), y: getY(d,i), size: getSize(d,i) }\n                        })\n                    })\n                );\n\n            x   .domain(xDomain || d3.extent(seriesData.map(function(d) { return d.x; }).concat(forceX)))\n\n            if (padData && data[0])\n                x.range(xRange || [(availableWidth * padDataOuter +  availableWidth) / (2 *data[0].values.length), availableWidth - availableWidth * (1 + padDataOuter) / (2 * data[0].values.length)  ]);\n            //x.range([availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5)  / data[0].values.length ]);\n            else\n                x.range(xRange || [0, availableWidth]);\n\n             if (logScale) {\n                    var min = d3.min(seriesData.map(function(d) { if (d.y !== 0) return d.y; }));\n                    y.clamp(true)\n                        .domain(yDomain || d3.extent(seriesData.map(function(d) {\n                            if (d.y !== 0) return d.y;\n                            else return min * 0.1;\n                        }).concat(forceY)))\n                        .range(yRange || [availableHeight, 0]);\n                } else {\n                        y.domain(yDomain || d3.extent(seriesData.map(function (d) { return d.y;}).concat(forceY)))\n                        .range(yRange || [availableHeight, 0]);\n                }\n\n            z   .domain(sizeDomain || d3.extent(seriesData.map(function(d) { return d.size }).concat(forceSize)))\n                .range(sizeRange || _sizeRange_def);\n\n            // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n            singlePoint = x.domain()[0] === x.domain()[1] || y.domain()[0] === y.domain()[1];\n\n            if (x.domain()[0] === x.domain()[1])\n                x.domain()[0] ?\n                    x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01])\n                    : x.domain([-1,1]);\n\n            if (y.domain()[0] === y.domain()[1])\n                y.domain()[0] ?\n                    y.domain([y.domain()[0] - y.domain()[0] * 0.01, y.domain()[1] + y.domain()[1] * 0.01])\n                    : y.domain([-1,1]);\n\n            if ( isNaN(x.domain()[0])) {\n                x.domain([-1,1]);\n            }\n\n            if ( isNaN(y.domain()[0])) {\n                y.domain([-1,1]);\n            }\n\n            x0 = x0 || x;\n            y0 = y0 || y;\n            z0 = z0 || z;\n\n            var scaleDiff = x(1) !== x0(1) || y(1) !== y0(1) || z(1) !== z0(1);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-scatter').data([data]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-scatter nv-chart-' + id);\n            var defsEnter = wrapEnter.append('defs');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            wrap.classed('nv-single-point', singlePoint);\n            gEnter.append('g').attr('class', 'nv-groups');\n            gEnter.append('g').attr('class', 'nv-point-paths');\n            wrapEnter.append('g').attr('class', 'nv-point-clips');\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            defsEnter.append('clipPath')\n                .attr('id', 'nv-edge-clip-' + id)\n                .append('rect');\n\n            wrap.select('#nv-edge-clip-' + id + ' rect')\n                .attr('width', availableWidth)\n                .attr('height', (availableHeight > 0) ? availableHeight : 0);\n\n            g.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + id + ')' : '');\n\n            function updateInteractiveLayer() {\n                // Always clear needs-update flag regardless of whether or not\n                // we will actually do anything (avoids needless invocations).\n                needsUpdate = false;\n\n                if (!interactive) return false;\n\n                // inject series and point index for reference into voronoi\n                if (useVoronoi === true) {\n                    var vertices = d3.merge(data.map(function(group, groupIndex) {\n                            return group.values\n                                .map(function(point, pointIndex) {\n                                    // *Adding noise to make duplicates very unlikely\n                                    // *Injecting series and point index for reference\n                                    /* *Adding a 'jitter' to the points, because there's an issue in d3.geom.voronoi.\n                                     */\n                                    var pX = getX(point,pointIndex);\n                                    var pY = getY(point,pointIndex);\n\n                                    return [nv.utils.NaNtoZero(x(pX))+ Math.random() * 1e-4,\n                                            nv.utils.NaNtoZero(y(pY))+ Math.random() * 1e-4,\n                                        groupIndex,\n                                        pointIndex, point]; //temp hack to add noise until I think of a better way so there are no duplicates\n                                })\n                                .filter(function(pointArray, pointIndex) {\n                                    return pointActive(pointArray[4], pointIndex); // Issue #237.. move filter to after map, so pointIndex is correct!\n                                })\n                        })\n                    );\n\n                    if (vertices.length == 0) return false;  // No active points, we're done\n                    if (vertices.length < 3) {\n                        // Issue #283 - Adding 2 dummy points to the voronoi b/c voronoi requires min 3 points to work\n                        vertices.push([x.range()[0] - 20, y.range()[0] - 20, null, null]);\n                        vertices.push([x.range()[1] + 20, y.range()[1] + 20, null, null]);\n                        vertices.push([x.range()[0] - 20, y.range()[0] + 20, null, null]);\n                        vertices.push([x.range()[1] + 20, y.range()[1] - 20, null, null]);\n                    }\n\n                    // keep voronoi sections from going more than 10 outside of graph\n                    // to avoid overlap with other things like legend etc\n                    var bounds = d3.geom.polygon([\n                        [-10,-10],\n                        [-10,height + 10],\n                        [width + 10,height + 10],\n                        [width + 10,-10]\n                    ]);\n\n                    var voronoi = d3.geom.voronoi(vertices).map(function(d, i) {\n                        return {\n                            'data': bounds.clip(d),\n                            'series': vertices[i][2],\n                            'point': vertices[i][3]\n                        }\n                    });\n\n                    // nuke all voronoi paths on reload and recreate them\n                    wrap.select('.nv-point-paths').selectAll('path').remove();\n                    var pointPaths = wrap.select('.nv-point-paths').selectAll('path').data(voronoi);\n                    var vPointPaths = pointPaths\n                        .enter().append(\"svg:path\")\n                        .attr(\"d\", function(d) {\n                            if (!d || !d.data || d.data.length === 0)\n                                return 'M 0 0';\n                            else\n                                return \"M\" + d.data.join(\",\") + \"Z\";\n                        })\n                        .attr(\"id\", function(d,i) {\n                            return \"nv-path-\"+i; })\n                        .attr(\"clip-path\", function(d,i) { return \"url(#nv-clip-\"+id+\"-\"+i+\")\"; })\n                        ;\n\n                    // good for debugging point hover issues\n                    if (showVoronoi) {\n                        vPointPaths.style(\"fill\", d3.rgb(230, 230, 230))\n                            .style('fill-opacity', 0.4)\n                            .style('stroke-opacity', 1)\n                            .style(\"stroke\", d3.rgb(200,200,200));\n                    }\n\n                    if (clipVoronoi) {\n                        // voronoi sections are already set to clip,\n                        // just create the circles with the IDs they expect\n                        wrap.select('.nv-point-clips').selectAll('*').remove(); // must do * since it has sub-dom\n                        var pointClips = wrap.select('.nv-point-clips').selectAll('clipPath').data(vertices);\n                        var vPointClips = pointClips\n                            .enter().append(\"svg:clipPath\")\n                            .attr(\"id\", function(d, i) { return \"nv-clip-\"+id+\"-\"+i;})\n                            .append(\"svg:circle\")\n                            .attr('cx', function(d) { return d[0]; })\n                            .attr('cy', function(d) { return d[1]; })\n                            .attr('r', clipRadius);\n                    }\n\n                    var mouseEventCallback = function(d, mDispatch) {\n                        if (needsUpdate) return 0;\n                        var series = data[d.series];\n                        if (series === undefined) return;\n                        var point  = series.values[d.point];\n                        point['color'] = color(series, d.series);\n\n                        // standardize attributes for tooltip.\n                        point['x'] = getX(point);\n                        point['y'] = getY(point);\n\n                        // can't just get box of event node since it's actually a voronoi polygon\n                        var box = container.node().getBoundingClientRect();\n                        var scrollTop  = window.pageYOffset || document.documentElement.scrollTop;\n                        var scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\n\n                        var pos = {\n                            left: x(getX(point, d.point)) + box.left + scrollLeft + margin.left + 10,\n                            top: y(getY(point, d.point)) + box.top + scrollTop + margin.top + 10\n                        };\n\n                        mDispatch({\n                            point: point,\n                            series: series,\n                            pos: pos,\n                            relativePos: [x(getX(point, d.point)) + margin.left, y(getY(point, d.point)) + margin.top],\n                            seriesIndex: d.series,\n                            pointIndex: d.point\n                        });\n                    };\n\n                    pointPaths\n                        .on('click', function(d) {\n                            mouseEventCallback(d, dispatch.elementClick);\n                        })\n                        .on('dblclick', function(d) {\n                            mouseEventCallback(d, dispatch.elementDblClick);\n                        })\n                        .on('mouseover', function(d) {\n                            mouseEventCallback(d, dispatch.elementMouseover);\n                        })\n                        .on('mouseout', function(d, i) {\n                            mouseEventCallback(d, dispatch.elementMouseout);\n                        });\n\n                } else {\n                    // add event handlers to points instead voronoi paths\n                    wrap.select('.nv-groups').selectAll('.nv-group')\n                        .selectAll('.nv-point')\n                        //.data(dataWithPoints)\n                        //.style('pointer-events', 'auto') // recativate events, disabled by css\n                        .on('click', function(d,i) {\n                            //nv.log('test', d, i);\n                            if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n                            var series = data[d.series],\n                                point  = series.values[i];\n                            var element = this;\n                            dispatch.elementClick({\n                                point: point,\n                                series: series,\n                                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top], //TODO: make this pos base on the page\n                                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                                seriesIndex: d.series,\n                                pointIndex: i,\n                                event: d3.event,\n                                element: element\n                            });\n                        })\n                        .on('dblclick', function(d,i) {\n                            if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n                            var series = data[d.series],\n                                point  = series.values[i];\n\n                            dispatch.elementDblClick({\n                                point: point,\n                                series: series,\n                                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],//TODO: make this pos base on the page\n                                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                                seriesIndex: d.series,\n                                pointIndex: i\n                            });\n                        })\n                        .on('mouseover', function(d,i) {\n                            if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n                            var series = data[d.series],\n                                point  = series.values[i];\n\n                            dispatch.elementMouseover({\n                                point: point,\n                                series: series,\n                                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],//TODO: make this pos base on the page\n                                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                                seriesIndex: d.series,\n                                pointIndex: i,\n                                color: color(d, i)\n                            });\n                        })\n                        .on('mouseout', function(d,i) {\n                            if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n                            var series = data[d.series],\n                                point  = series.values[i];\n\n                            dispatch.elementMouseout({\n                                point: point,\n                                series: series,\n                                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],//TODO: make this pos base on the page\n                                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                                seriesIndex: d.series,\n                                pointIndex: i,\n                                color: color(d, i)\n                            });\n                        });\n                }\n            }\n\n            needsUpdate = true;\n            var groups = wrap.select('.nv-groups').selectAll('.nv-group')\n                .data(function(d) { return d }, function(d) { return d.key });\n            groups.enter().append('g')\n                .style('stroke-opacity', 1e-6)\n                .style('fill-opacity', 1e-6);\n            groups.exit()\n                .remove();\n            groups\n                .attr('class', function(d,i) {\n                    return (d.classed || '') + ' nv-group nv-series-' + i;\n                })\n                .classed('nv-noninteractive', !interactive)\n                .classed('hover', function(d) { return d.hover });\n            groups.watchTransition(renderWatch, 'scatter: groups')\n                .style('fill', function(d,i) { return color(d, i) })\n                .style('stroke', function(d,i) { return color(d, i) })\n                .style('stroke-opacity', 1)\n                .style('fill-opacity', .5);\n\n            // create the points, maintaining their IDs from the original data set\n            var points = groups.selectAll('path.nv-point')\n                .data(function(d) {\n                    return d.values.map(\n                        function (point, pointIndex) {\n                            return [point, pointIndex]\n                        }).filter(\n                            function(pointArray, pointIndex) {\n                                return pointActive(pointArray[0], pointIndex)\n                            })\n                    });\n            points.enter().append('path')\n                .attr('class', function (d) {\n                    return 'nv-point nv-point-' + d[1];\n                })\n                .style('fill', function (d) { return d.color })\n                .style('stroke', function (d) { return d.color })\n                .attr('transform', function(d) {\n                    return 'translate(' + nv.utils.NaNtoZero(x0(getX(d[0],d[1]))) + ',' + nv.utils.NaNtoZero(y0(getY(d[0],d[1]))) + ')'\n                })\n                .attr('d',\n                    nv.utils.symbol()\n                    .type(function(d) { return getShape(d[0]); })\n                    .size(function(d) { return z(getSize(d[0],d[1])) })\n            );\n            points.exit().remove();\n            groups.exit().selectAll('path.nv-point')\n                .watchTransition(renderWatch, 'scatter exit')\n                .attr('transform', function(d) {\n                    return 'translate(' + nv.utils.NaNtoZero(x(getX(d[0],d[1]))) + ',' + nv.utils.NaNtoZero(y(getY(d[0],d[1]))) + ')'\n                })\n                .remove();\n            points.filter(function (d) { return scaleDiff || getDiffs(d, 'x', 'y'); })\n                .watchTransition(renderWatch, 'scatter points')\n                .attr('transform', function(d) {\n                    //nv.log(d, getX(d[0],d[1]), x(getX(d[0],d[1])));\n                    return 'translate(' + nv.utils.NaNtoZero(x(getX(d[0],d[1]))) + ',' + nv.utils.NaNtoZero(y(getY(d[0],d[1]))) + ')'\n                });\n            points.filter(function (d) { return scaleDiff || getDiffs(d, 'shape', 'size'); })\n                .watchTransition(renderWatch, 'scatter points')\n                .attr('d',\n                    nv.utils.symbol()\n                    .type(function(d) { return getShape(d[0]); })\n                    .size(function(d) { return z(getSize(d[0],d[1])) })\n            );\n            \n            // add label a label to scatter chart \n            if(showLabels)\n            {      \n                var titles =  groups.selectAll('.nv-label')\n                    .data(function(d) {\n                        return d.values.map(\n                            function (point, pointIndex) {\n                                return [point, pointIndex]\n                            }).filter(\n                                function(pointArray, pointIndex) {\n                                    return pointActive(pointArray[0], pointIndex)\n                                })\n                        });\n\n                titles.enter().append('text')\n                    .style('fill', function (d,i) { \n                        return d.color })\n                    .style('stroke-opacity', 0)\n                    .style('fill-opacity', 1)\n                    .attr('transform', function(d) {\n                        var dx = nv.utils.NaNtoZero(x0(getX(d[0],d[1]))) + Math.sqrt(z(getSize(d[0],d[1]))/Math.PI) + 2;\n                        return 'translate(' + dx + ',' + nv.utils.NaNtoZero(y0(getY(d[0],d[1]))) + ')';\n                    })\n                    .text(function(d,i){\n                        return d[0].label;});\n\n                titles.exit().remove();\n                groups.exit().selectAll('path.nv-label')\n                    .watchTransition(renderWatch, 'scatter exit')\n                    .attr('transform', function(d) {\n                        var dx = nv.utils.NaNtoZero(x(getX(d[0],d[1])))+ Math.sqrt(z(getSize(d[0],d[1]))/Math.PI)+2;\n                        return 'translate(' + dx + ',' + nv.utils.NaNtoZero(y(getY(d[0],d[1]))) + ')';\n                    })\n                    .remove();\n               titles.each(function(d) {\n                  d3.select(this)\n                    .classed('nv-label', true)\n                    .classed('nv-label-' + d[1], false)\n                    .classed('hover',false);\n                });\n                titles.watchTransition(renderWatch, 'scatter labels')\n                    .attr('transform', function(d) {\n                        var dx = nv.utils.NaNtoZero(x(getX(d[0],d[1])))+ Math.sqrt(z(getSize(d[0],d[1]))/Math.PI)+2;\n                        return 'translate(' + dx + ',' + nv.utils.NaNtoZero(y(getY(d[0],d[1]))) + ')'\n                    });\n            }\n\n            // Delay updating the invisible interactive layer for smoother animation\n            if( interactiveUpdateDelay )\n            {\n                clearTimeout(timeoutID); // stop repeat calls to updateInteractiveLayer\n                timeoutID = setTimeout(updateInteractiveLayer, interactiveUpdateDelay );\n            }\n            else\n            {\n                updateInteractiveLayer();\n            }\n\n            //store old scales for use in transitions on update\n            x0 = x.copy();\n            y0 = y.copy();\n            z0 = z.copy();\n\n        });\n        renderWatch.renderEnd('scatter immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    // utility function calls provided by this chart\n    chart._calls = new function() {\n        this.clearHighlights = function () {\n            nv.dom.write(function() {\n                container.selectAll(\".nv-point.hover\").classed(\"hover\", false);\n            });\n            return null;\n        };\n        this.highlightPoint = function (seriesIndex, pointIndex, isHoverOver) {\n            nv.dom.write(function() {\n                container.select('.nv-groups')\n                  .selectAll(\".nv-series-\" + seriesIndex)\n                  .selectAll(\".nv-point-\" + pointIndex)\n                  .classed(\"hover\", isHoverOver);\n            });\n        };\n    };\n\n    // trigger calls from events too\n    dispatch.on('elementMouseover.point', function(d) {\n        if (interactive) chart._calls.highlightPoint(d.seriesIndex,d.pointIndex,true);\n    });\n\n    dispatch.on('elementMouseout.point', function(d) {\n        if (interactive) chart._calls.highlightPoint(d.seriesIndex,d.pointIndex,false);\n    });\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:        {get: function(){return width;}, set: function(_){width=_;}},\n        height:       {get: function(){return height;}, set: function(_){height=_;}},\n        xScale:       {get: function(){return x;}, set: function(_){x=_;}},\n        yScale:       {get: function(){return y;}, set: function(_){y=_;}},\n        pointScale:   {get: function(){return z;}, set: function(_){z=_;}},\n        xDomain:      {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n        yDomain:      {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n        pointDomain:  {get: function(){return sizeDomain;}, set: function(_){sizeDomain=_;}},\n        xRange:       {get: function(){return xRange;}, set: function(_){xRange=_;}},\n        yRange:       {get: function(){return yRange;}, set: function(_){yRange=_;}},\n        pointRange:   {get: function(){return sizeRange;}, set: function(_){sizeRange=_;}},\n        forceX:       {get: function(){return forceX;}, set: function(_){forceX=_;}},\n        forceY:       {get: function(){return forceY;}, set: function(_){forceY=_;}},\n        forcePoint:   {get: function(){return forceSize;}, set: function(_){forceSize=_;}},\n        interactive:  {get: function(){return interactive;}, set: function(_){interactive=_;}},\n        pointActive:  {get: function(){return pointActive;}, set: function(_){pointActive=_;}},\n        padDataOuter: {get: function(){return padDataOuter;}, set: function(_){padDataOuter=_;}},\n        padData:      {get: function(){return padData;}, set: function(_){padData=_;}},\n        clipEdge:     {get: function(){return clipEdge;}, set: function(_){clipEdge=_;}},\n        clipVoronoi:  {get: function(){return clipVoronoi;}, set: function(_){clipVoronoi=_;}},\n        clipRadius:   {get: function(){return clipRadius;}, set: function(_){clipRadius=_;}},\n        showVoronoi:   {get: function(){return showVoronoi;}, set: function(_){showVoronoi=_;}},\n        id:           {get: function(){return id;}, set: function(_){id=_;}},\n        interactiveUpdateDelay: {get:function(){return interactiveUpdateDelay;}, set: function(_){interactiveUpdateDelay=_;}},\n        showLabels: {get: function(){return showLabels;}, set: function(_){ showLabels = _;}},\n\n        // simple functor options\n        x:     {get: function(){return getX;}, set: function(_){getX = d3.functor(_);}},\n        y:     {get: function(){return getY;}, set: function(_){getY = d3.functor(_);}},\n        pointSize: {get: function(){return getSize;}, set: function(_){getSize = d3.functor(_);}},\n        pointShape: {get: function(){return getShape;}, set: function(_){getShape = d3.functor(_);}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n        }},\n        color: {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }},\n        useVoronoi: {get: function(){return useVoronoi;}, set: function(_){\n            useVoronoi = _;\n            if (useVoronoi === false) {\n                clipVoronoi = false;\n            }\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n    return chart;\n};\n\nnv.models.scatterChart = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var scatter      = nv.models.scatter()\n        , xAxis        = nv.models.axis()\n        , yAxis        = nv.models.axis()\n        , legend       = nv.models.legend()\n        , distX        = nv.models.distribution()\n        , distY        = nv.models.distribution()\n        , tooltip      = nv.models.tooltip()\n        ;\n\n    var margin       = {top: 30, right: 20, bottom: 50, left: 75}\n        , width        = null\n        , height       = null\n        , container    = null\n        , color        = nv.utils.defaultColor()\n        , x            = scatter.xScale()\n        , y            = scatter.yScale()\n        , showDistX    = false\n        , showDistY    = false\n        , showLegend   = true\n        , showXAxis    = true\n        , showYAxis    = true\n        , rightAlignYAxis = false\n        , state = nv.utils.state()\n        , defaultState = null\n        , dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd')\n        , noData       = null\n        , duration = 250\n        , showLabels    = false\n        ;\n\n    scatter.xScale(x).yScale(y);\n    xAxis.orient('bottom').tickPadding(10);\n    yAxis\n        .orient((rightAlignYAxis) ? 'right' : 'left')\n        .tickPadding(10)\n    ;\n    distX.axis('x');\n    distY.axis('y');\n    tooltip\n        .headerFormatter(function(d, i) {\n            return xAxis.tickFormat()(d, i);\n        })\n        .valueFormatter(function(d, i) {\n            return yAxis.tickFormat()(d, i);\n        });\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var x0, y0\n        , renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    var stateGetter = function(data) {\n        return function(){\n            return {\n                active: data.map(function(d) { return !d.disabled })\n            };\n        }\n    };\n\n    var stateSetter = function(data) {\n        return function(state) {\n            if (state.active !== undefined)\n                data.forEach(function(series,i) {\n                    series.disabled = !state.active[i];\n                });\n        }\n    };\n\n    function chart(selection) {\n        renderWatch.reset();\n        renderWatch.models(scatter);\n        if (showXAxis) renderWatch.models(xAxis);\n        if (showYAxis) renderWatch.models(yAxis);\n        if (showDistX) renderWatch.models(distX);\n        if (showDistY) renderWatch.models(distY);\n\n        selection.each(function(data) {\n            var that = this;\n\n            container = d3.select(this);\n            nv.utils.initSVG(container);\n\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            chart.update = function() {\n                if (duration === 0)\n                    container.call(chart);\n                else\n                    container.transition().duration(duration).call(chart);\n            };\n            chart.container = this;\n\n            state\n                .setter(stateSetter(data), chart.update)\n                .getter(stateGetter(data))\n                .update();\n\n            // DEPRECATED set state.disableddisabled\n            state.disabled = data.map(function(d) { return !!d.disabled });\n\n            if (!defaultState) {\n                var key;\n                defaultState = {};\n                for (key in state) {\n                    if (state[key] instanceof Array)\n                        defaultState[key] = state[key].slice(0);\n                    else\n                        defaultState[key] = state[key];\n                }\n            }\n\n            // Display noData message if there's nothing to show.\n            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n                nv.utils.noData(chart, container);\n                renderWatch.renderEnd('scatter immediate');\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n\n            // Setup Scales\n            x = scatter.xScale();\n            y = scatter.yScale();\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-scatterChart').data([data]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-scatterChart nv-chart-' + scatter.id());\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            // background for pointer events\n            gEnter.append('rect').attr('class', 'nvd3 nv-background').style(\"pointer-events\",\"none\");\n\n            gEnter.append('g').attr('class', 'nv-x nv-axis');\n            gEnter.append('g').attr('class', 'nv-y nv-axis');\n            gEnter.append('g').attr('class', 'nv-scatterWrap');\n            gEnter.append('g').attr('class', 'nv-regressionLinesWrap');\n            gEnter.append('g').attr('class', 'nv-distWrap');\n            gEnter.append('g').attr('class', 'nv-legendWrap');\n\n            if (rightAlignYAxis) {\n                g.select(\".nv-y.nv-axis\")\n                    .attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n            }\n\n            // Legend\n            if (!showLegend) {\n                g.select('.nv-legendWrap').selectAll('*').remove();\n            } else {\n                var legendWidth = availableWidth;\n                legend.width(legendWidth);\n\n                wrap.select('.nv-legendWrap')\n                    .datum(data)\n                    .call(legend);\n\n                if (legend.height() > margin.top) {\n                    margin.top = legend.height();\n                    availableHeight = nv.utils.availableHeight(height, container, margin);\n                }\n\n                wrap.select('.nv-legendWrap')\n                    .attr('transform', 'translate(0' + ',' + (-margin.top) +')');\n            }\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            // Main Chart Component(s)\n            scatter\n                .width(availableWidth)\n                .height(availableHeight)\n                .color(data.map(function(d,i) {\n                    d.color = d.color || color(d, i);\n                    return d.color;\n                }).filter(function(d,i) { return !data[i].disabled }))\n                .showLabels(showLabels);\n\n            wrap.select('.nv-scatterWrap')\n                .datum(data.filter(function(d) { return !d.disabled }))\n                .call(scatter);\n\n\n            wrap.select('.nv-regressionLinesWrap')\n                .attr('clip-path', 'url(#nv-edge-clip-' + scatter.id() + ')');\n\n            var regWrap = wrap.select('.nv-regressionLinesWrap').selectAll('.nv-regLines')\n                .data(function (d) {\n                    return d;\n                });\n\n            regWrap.enter().append('g').attr('class', 'nv-regLines');\n\n            var regLine = regWrap.selectAll('.nv-regLine')\n                .data(function (d) {\n                    return [d]\n                });\n\n            regLine.enter()\n                .append('line').attr('class', 'nv-regLine')\n                .style('stroke-opacity', 0);\n\n            // don't add lines unless we have slope and intercept to use\n            regLine.filter(function(d) {\n                return d.intercept && d.slope;\n            })\n                .watchTransition(renderWatch, 'scatterPlusLineChart: regline')\n                .attr('x1', x.range()[0])\n                .attr('x2', x.range()[1])\n                .attr('y1', function (d, i) {\n                    return y(x.domain()[0] * d.slope + d.intercept)\n                })\n                .attr('y2', function (d, i) {\n                    return y(x.domain()[1] * d.slope + d.intercept)\n                })\n                .style('stroke', function (d, i, j) {\n                    return color(d, j)\n                })\n                .style('stroke-opacity', function (d, i) {\n                    return (d.disabled || typeof d.slope === 'undefined' || typeof d.intercept === 'undefined') ? 0 : 1\n                });\n\n            // Setup Axes\n            if (showXAxis) {\n                xAxis\n                    .scale(x)\n                    ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n                    .tickSize( -availableHeight , 0);\n\n                g.select('.nv-x.nv-axis')\n                    .attr('transform', 'translate(0,' + y.range()[0] + ')')\n                    .call(xAxis);\n            }\n\n            if (showYAxis) {\n                yAxis\n                    .scale(y)\n                    ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n                    .tickSize( -availableWidth, 0);\n\n                g.select('.nv-y.nv-axis')\n                    .call(yAxis);\n            }\n\n            // Setup Distribution\n            if (showDistX) {\n                distX\n                    .getData(scatter.x())\n                    .scale(x)\n                    .width(availableWidth)\n                    .color(data.map(function(d,i) {\n                        return d.color || color(d, i);\n                    }).filter(function(d,i) { return !data[i].disabled }));\n                gEnter.select('.nv-distWrap').append('g')\n                    .attr('class', 'nv-distributionX');\n                g.select('.nv-distributionX')\n                    .attr('transform', 'translate(0,' + y.range()[0] + ')')\n                    .datum(data.filter(function(d) { return !d.disabled }))\n                    .call(distX);\n            }\n\n            if (showDistY) {\n                distY\n                    .getData(scatter.y())\n                    .scale(y)\n                    .width(availableHeight)\n                    .color(data.map(function(d,i) {\n                        return d.color || color(d, i);\n                    }).filter(function(d,i) { return !data[i].disabled }));\n                gEnter.select('.nv-distWrap').append('g')\n                    .attr('class', 'nv-distributionY');\n                g.select('.nv-distributionY')\n                    .attr('transform', 'translate(' + (rightAlignYAxis ? availableWidth : -distY.size() ) + ',0)')\n                    .datum(data.filter(function(d) { return !d.disabled }))\n                    .call(distY);\n            }\n\n            //============================================================\n            // Event Handling/Dispatching (in chart's scope)\n            //------------------------------------------------------------\n\n            legend.dispatch.on('stateChange', function(newState) {\n                for (var key in newState)\n                    state[key] = newState[key];\n                dispatch.stateChange(state);\n                chart.update();\n            });\n\n            // Update chart from a state object passed to event handler\n            dispatch.on('changeState', function(e) {\n                if (typeof e.disabled !== 'undefined') {\n                    data.forEach(function(series,i) {\n                        series.disabled = e.disabled[i];\n                    });\n                    state.disabled = e.disabled;\n                }\n                chart.update();\n            });\n\n            // mouseover needs availableHeight so we just keep scatter mouse events inside the chart block\n            scatter.dispatch.on('elementMouseout.tooltip', function(evt) {\n                tooltip.hidden(true);\n                container.select('.nv-chart-' + scatter.id() + ' .nv-series-' + evt.seriesIndex + ' .nv-distx-' + evt.pointIndex)\n                    .attr('y1', 0);\n                container.select('.nv-chart-' + scatter.id() + ' .nv-series-' + evt.seriesIndex + ' .nv-disty-' + evt.pointIndex)\n                    .attr('x2', distY.size());\n            });\n\n            scatter.dispatch.on('elementMouseover.tooltip', function(evt) {\n                container.select('.nv-series-' + evt.seriesIndex + ' .nv-distx-' + evt.pointIndex)\n                    .attr('y1', evt.relativePos[1] - availableHeight);\n                container.select('.nv-series-' + evt.seriesIndex + ' .nv-disty-' + evt.pointIndex)\n                    .attr('x2', evt.relativePos[0] + distX.size());\n                tooltip.data(evt).hidden(false);\n            });\n\n            //store old scales for use in transitions on update\n            x0 = x.copy();\n            y0 = y.copy();\n\n        });\n\n        renderWatch.renderEnd('scatter with line immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    // expose chart's sub-components\n    chart.dispatch = dispatch;\n    chart.scatter = scatter;\n    chart.legend = legend;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.distX = distX;\n    chart.distY = distY;\n    chart.tooltip = tooltip;\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        container:  {get: function(){return container;}, set: function(_){container=_;}},\n        showDistX:  {get: function(){return showDistX;}, set: function(_){showDistX=_;}},\n        showDistY:  {get: function(){return showDistY;}, set: function(_){showDistY=_;}},\n        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n        showXAxis:  {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n        showYAxis:  {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n        defaultState:     {get: function(){return defaultState;}, set: function(_){defaultState=_;}},\n        noData:     {get: function(){return noData;}, set: function(_){noData=_;}},\n        duration:   {get: function(){return duration;}, set: function(_){duration=_;}},\n        showLabels: {get: function(){return showLabels;}, set: function(_){showLabels=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n            rightAlignYAxis = _;\n            yAxis.orient( (_) ? 'right' : 'left');\n        }},\n        color: {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n            legend.color(color);\n            distX.color(color);\n            distY.color(color);\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, scatter);\n    nv.utils.initOptions(chart);\n    return chart;\n};\n\nnv.models.sparkline = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 2, right: 0, bottom: 2, left: 0}\n        , width = 400\n        , height = 32\n        , container = null\n        , animate = true\n        , x = d3.scale.linear()\n        , y = d3.scale.linear()\n        , getX = function(d) { return d.x }\n        , getY = function(d) { return d.y }\n        , color = nv.utils.getColor(['#000'])\n        , xDomain\n        , yDomain\n        , xRange\n        , yRange\n        , showMinMaxPoints = true\n        , showCurrentPoint = true\n        , dispatch = d3.dispatch('renderEnd')\n        ;\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n    \n    function chart(selection) {\n        renderWatch.reset();\n        selection.each(function(data) {\n            var availableWidth = width - margin.left - margin.right,\n                availableHeight = height - margin.top - margin.bottom;\n\n            container = d3.select(this);\n            nv.utils.initSVG(container);\n\n            // Setup Scales\n            x   .domain(xDomain || d3.extent(data, getX ))\n                .range(xRange || [0, availableWidth]);\n\n            y   .domain(yDomain || d3.extent(data, getY ))\n                .range(yRange || [availableHeight, 0]);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-sparkline').data([data]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-sparkline');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')\n\n            var paths = wrap.selectAll('path')\n                .data(function(d) { return [d] });\n            paths.enter().append('path');\n            paths.exit().remove();\n            paths\n                .style('stroke', function(d,i) { return d.color || color(d, i) })\n                .attr('d', d3.svg.line()\n                    .x(function(d,i) { return x(getX(d,i)) })\n                    .y(function(d,i) { return y(getY(d,i)) })\n            );\n\n            // TODO: Add CURRENT data point (Need Min, Mac, Current / Most recent)\n            var points = wrap.selectAll('circle.nv-point')\n                .data(function(data) {\n                    var yValues = data.map(function(d, i) { return getY(d,i); });\n                    function pointIndex(index) {\n                        if (index != -1) {\n                            var result = data[index];\n                            result.pointIndex = index;\n                            return result;\n                        } else {\n                            return null;\n                        }\n                    }\n                    var maxPoint = pointIndex(yValues.lastIndexOf(y.domain()[1])),\n                        minPoint = pointIndex(yValues.indexOf(y.domain()[0])),\n                        currentPoint = pointIndex(yValues.length - 1);\n                    return [(showMinMaxPoints ? minPoint : null), (showMinMaxPoints ? maxPoint : null), (showCurrentPoint ? currentPoint : null)].filter(function (d) {return d != null;});\n                });\n            points.enter().append('circle');\n            points.exit().remove();\n            points\n                .attr('cx', function(d,i) { return x(getX(d,d.pointIndex)) })\n                .attr('cy', function(d,i) { return y(getY(d,d.pointIndex)) })\n                .attr('r', 2)\n                .attr('class', function(d,i) {\n                    return getX(d, d.pointIndex) == x.domain()[1] ? 'nv-point nv-currentValue' :\n                            getY(d, d.pointIndex) == y.domain()[0] ? 'nv-point nv-minValue' : 'nv-point nv-maxValue'\n                });\n        });\n        \n        renderWatch.renderEnd('sparkline immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:            {get: function(){return width;}, set: function(_){width=_;}},\n        height:           {get: function(){return height;}, set: function(_){height=_;}},\n        xDomain:          {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n        yDomain:          {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n        xRange:           {get: function(){return xRange;}, set: function(_){xRange=_;}},\n        yRange:           {get: function(){return yRange;}, set: function(_){yRange=_;}},\n        xScale:           {get: function(){return x;}, set: function(_){x=_;}},\n        yScale:           {get: function(){return y;}, set: function(_){y=_;}},\n        animate:          {get: function(){return animate;}, set: function(_){animate=_;}},\n        showMinMaxPoints: {get: function(){return showMinMaxPoints;}, set: function(_){showMinMaxPoints=_;}},\n        showCurrentPoint: {get: function(){return showCurrentPoint;}, set: function(_){showCurrentPoint=_;}},\n\n        //functor options\n        x: {get: function(){return getX;}, set: function(_){getX=d3.functor(_);}},\n        y: {get: function(){return getY;}, set: function(_){getY=d3.functor(_);}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }}\n    });\n\n    chart.dispatch = dispatch;\n    nv.utils.initOptions(chart);\n    return chart;\n};\n\nnv.models.sparklinePlus = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var sparkline = nv.models.sparkline();\n\n    var margin = {top: 15, right: 100, bottom: 10, left: 50}\n        , width = null\n        , height = null\n        , x\n        , y\n        , index = []\n        , paused = false\n        , xTickFormat = d3.format(',r')\n        , yTickFormat = d3.format(',.2f')\n        , showLastValue = true\n        , alignValue = true\n        , rightAlignValue = false\n        , noData = null\n        , dispatch = d3.dispatch('renderEnd')\n        ;\n        \n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n        renderWatch.reset();\n        renderWatch.models(sparkline);\n        selection.each(function(data) {\n            var container = d3.select(this);\n            nv.utils.initSVG(container);\n\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            chart.update = function() { container.call(chart); };\n            chart.container = this;\n\n            // Display No Data message if there's nothing to show.\n            if (!data || !data.length) {\n                nv.utils.noData(chart, container)\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n\n            var currentValue = sparkline.y()(data[data.length-1], data.length-1);\n\n            // Setup Scales\n            x = sparkline.xScale();\n            y = sparkline.yScale();\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-sparklineplus').data([data]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-sparklineplus');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-sparklineWrap');\n            gEnter.append('g').attr('class', 'nv-valueWrap');\n            gEnter.append('g').attr('class', 'nv-hoverArea');\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            // Main Chart Component(s)\n            var sparklineWrap = g.select('.nv-sparklineWrap');\n\n            sparkline.width(availableWidth).height(availableHeight);\n            sparklineWrap.call(sparkline);\n\n            if (showLastValue) {\n                var valueWrap = g.select('.nv-valueWrap');\n                var value = valueWrap.selectAll('.nv-currentValue')\n                    .data([currentValue]);\n\n                value.enter().append('text').attr('class', 'nv-currentValue')\n                    .attr('dx', rightAlignValue ? -8 : 8)\n                    .attr('dy', '.9em')\n                    .style('text-anchor', rightAlignValue ? 'end' : 'start');\n\n                value\n                    .attr('x', availableWidth + (rightAlignValue ? margin.right : 0))\n                    .attr('y', alignValue ? function (d) {\n                        return y(d)\n                    } : 0)\n                    .style('fill', sparkline.color()(data[data.length - 1], data.length - 1))\n                    .text(yTickFormat(currentValue));\n            }\n\n            gEnter.select('.nv-hoverArea').append('rect')\n                .on('mousemove', sparklineHover)\n                .on('click', function() { paused = !paused })\n                .on('mouseout', function() { index = []; updateValueLine(); });\n\n            g.select('.nv-hoverArea rect')\n                .attr('transform', function(d) { return 'translate(' + -margin.left + ',' + -margin.top + ')' })\n                .attr('width', availableWidth + margin.left + margin.right)\n                .attr('height', availableHeight + margin.top);\n\n            //index is currently global (within the chart), may or may not keep it that way\n            function updateValueLine() {\n                if (paused) return;\n\n                var hoverValue = g.selectAll('.nv-hoverValue').data(index);\n\n                var hoverEnter = hoverValue.enter()\n                    .append('g').attr('class', 'nv-hoverValue')\n                    .style('stroke-opacity', 0)\n                    .style('fill-opacity', 0);\n\n                hoverValue.exit()\n                    .transition().duration(250)\n                    .style('stroke-opacity', 0)\n                    .style('fill-opacity', 0)\n                    .remove();\n\n                hoverValue\n                    .attr('transform', function(d) { return 'translate(' + x(sparkline.x()(data[d],d)) + ',0)' })\n                    .transition().duration(250)\n                    .style('stroke-opacity', 1)\n                    .style('fill-opacity', 1);\n\n                if (!index.length) return;\n\n                hoverEnter.append('line')\n                    .attr('x1', 0)\n                    .attr('y1', -margin.top)\n                    .attr('x2', 0)\n                    .attr('y2', availableHeight);\n\n                hoverEnter.append('text').attr('class', 'nv-xValue')\n                    .attr('x', -6)\n                    .attr('y', -margin.top)\n                    .attr('text-anchor', 'end')\n                    .attr('dy', '.9em');\n\n                g.select('.nv-hoverValue .nv-xValue')\n                    .text(xTickFormat(sparkline.x()(data[index[0]], index[0])));\n\n                hoverEnter.append('text').attr('class', 'nv-yValue')\n                    .attr('x', 6)\n                    .attr('y', -margin.top)\n                    .attr('text-anchor', 'start')\n                    .attr('dy', '.9em');\n\n                g.select('.nv-hoverValue .nv-yValue')\n                    .text(yTickFormat(sparkline.y()(data[index[0]], index[0])));\n            }\n\n            function sparklineHover() {\n                if (paused) return;\n\n                var pos = d3.mouse(this)[0] - margin.left;\n\n                function getClosestIndex(data, x) {\n                    var distance = Math.abs(sparkline.x()(data[0], 0) - x);\n                    var closestIndex = 0;\n                    for (var i = 0; i < data.length; i++){\n                        if (Math.abs(sparkline.x()(data[i], i) - x) < distance) {\n                            distance = Math.abs(sparkline.x()(data[i], i) - x);\n                            closestIndex = i;\n                        }\n                    }\n                    return closestIndex;\n                }\n\n                index = [getClosestIndex(data, Math.round(x.invert(pos)))];\n                updateValueLine();\n            }\n\n        });\n        renderWatch.renderEnd('sparklinePlus immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    // expose chart's sub-components\n    chart.dispatch = dispatch;\n    chart.sparkline = sparkline;\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:           {get: function(){return width;}, set: function(_){width=_;}},\n        height:          {get: function(){return height;}, set: function(_){height=_;}},\n        xTickFormat:     {get: function(){return xTickFormat;}, set: function(_){xTickFormat=_;}},\n        yTickFormat:     {get: function(){return yTickFormat;}, set: function(_){yTickFormat=_;}},\n        showLastValue:   {get: function(){return showLastValue;}, set: function(_){showLastValue=_;}},\n        alignValue:      {get: function(){return alignValue;}, set: function(_){alignValue=_;}},\n        rightAlignValue: {get: function(){return rightAlignValue;}, set: function(_){rightAlignValue=_;}},\n        noData:          {get: function(){return noData;}, set: function(_){noData=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, sparkline);\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n\nnv.models.stackedArea = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n        , width = 960\n        , height = 500\n        , color = nv.utils.defaultColor() // a function that computes the color\n        , id = Math.floor(Math.random() * 100000) //Create semi-unique ID incase user doesn't selet one\n        , container = null\n        , getX = function(d) { return d.x } // accessor to get the x value from a data point\n        , getY = function(d) { return d.y } // accessor to get the y value from a data point\n        , defined = function(d,i) { return !isNaN(getY(d,i)) && getY(d,i) !== null } // allows a line to be not continuous when it is not defined\n        , style = 'stack'\n        , offset = 'zero'\n        , order = 'default'\n        , interpolate = 'linear'  // controls the line interpolation\n        , clipEdge = false // if true, masks lines within x and y scale\n        , x //can be accessed via chart.xScale()\n        , y //can be accessed via chart.yScale()\n        , scatter = nv.models.scatter()\n        , duration = 250\n        , dispatch =  d3.dispatch('areaClick', 'areaMouseover', 'areaMouseout','renderEnd', 'elementClick', 'elementMouseover', 'elementMouseout')\n        ;\n\n    scatter\n        .pointSize(2.2) // default size\n        .pointDomain([2.2, 2.2]) // all the same size by default\n    ;\n\n    /************************************\n     * offset:\n     *   'wiggle' (stream)\n     *   'zero' (stacked)\n     *   'expand' (normalize to 100%)\n     *   'silhouette' (simple centered)\n     *\n     * order:\n     *   'inside-out' (stream)\n     *   'default' (input order)\n     ************************************/\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n        renderWatch.reset();\n        renderWatch.models(scatter);\n        selection.each(function(data) {\n            var availableWidth = width - margin.left - margin.right,\n                availableHeight = height - margin.top - margin.bottom;\n\n            container = d3.select(this);\n            nv.utils.initSVG(container);\n\n            // Setup Scales\n            x = scatter.xScale();\n            y = scatter.yScale();\n\n            var dataRaw = data;\n            // Injecting point index into each point because d3.layout.stack().out does not give index\n            data.forEach(function(aseries, i) {\n                aseries.seriesIndex = i;\n                aseries.values = aseries.values.map(function(d, j) {\n                    d.index = j;\n                    d.seriesIndex = i;\n                    return d;\n                });\n            });\n\n            var dataFiltered = data.filter(function(series) {\n                return !series.disabled;\n            });\n\n            data = d3.layout.stack()\n                .order(order)\n                .offset(offset)\n                .values(function(d) { return d.values })  //TODO: make values customizeable in EVERY model in this fashion\n                .x(getX)\n                .y(getY)\n                .out(function(d, y0, y) {\n                    d.display = {\n                        y: y,\n                        y0: y0\n                    };\n                })\n            (dataFiltered);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-stackedarea').data([data]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-stackedarea');\n            var defsEnter = wrapEnter.append('defs');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-areaWrap');\n            gEnter.append('g').attr('class', 'nv-scatterWrap');\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n            \n            // If the user has not specified forceY, make sure 0 is included in the domain\n            // Otherwise, use user-specified values for forceY\n            if (scatter.forceY().length == 0) {\n                scatter.forceY().push(0);\n            }\n            \n            scatter\n                .width(availableWidth)\n                .height(availableHeight)\n                .x(getX)\n                .y(function(d) {\n                    if (d.display !== undefined) { return d.display.y + d.display.y0; }\n                })\n                .color(data.map(function(d,i) {\n                    d.color = d.color || color(d, d.seriesIndex);\n                    return d.color;\n                }));\n\n            var scatterWrap = g.select('.nv-scatterWrap')\n                .datum(data);\n\n            scatterWrap.call(scatter);\n\n            defsEnter.append('clipPath')\n                .attr('id', 'nv-edge-clip-' + id)\n                .append('rect');\n\n            wrap.select('#nv-edge-clip-' + id + ' rect')\n                .attr('width', availableWidth)\n                .attr('height', availableHeight);\n\n            g.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + id + ')' : '');\n\n            var area = d3.svg.area()\n                .defined(defined)\n                .x(function(d,i)  { return x(getX(d,i)) })\n                .y0(function(d) {\n                    return y(d.display.y0)\n                })\n                .y1(function(d) {\n                    return y(d.display.y + d.display.y0)\n                })\n                .interpolate(interpolate);\n\n            var zeroArea = d3.svg.area()\n                .defined(defined)\n                .x(function(d,i)  { return x(getX(d,i)) })\n                .y0(function(d) { return y(d.display.y0) })\n                .y1(function(d) { return y(d.display.y0) });\n\n            var path = g.select('.nv-areaWrap').selectAll('path.nv-area')\n                .data(function(d) { return d });\n\n            path.enter().append('path').attr('class', function(d,i) { return 'nv-area nv-area-' + i })\n                .attr('d', function(d,i){\n                    return zeroArea(d.values, d.seriesIndex);\n                })\n                .on('mouseover', function(d,i) {\n                    d3.select(this).classed('hover', true);\n                    dispatch.areaMouseover({\n                        point: d,\n                        series: d.key,\n                        pos: [d3.event.pageX, d3.event.pageY],\n                        seriesIndex: d.seriesIndex\n                    });\n                })\n                .on('mouseout', function(d,i) {\n                    d3.select(this).classed('hover', false);\n                    dispatch.areaMouseout({\n                        point: d,\n                        series: d.key,\n                        pos: [d3.event.pageX, d3.event.pageY],\n                        seriesIndex: d.seriesIndex\n                    });\n                })\n                .on('click', function(d,i) {\n                    d3.select(this).classed('hover', false);\n                    dispatch.areaClick({\n                        point: d,\n                        series: d.key,\n                        pos: [d3.event.pageX, d3.event.pageY],\n                        seriesIndex: d.seriesIndex\n                    });\n                });\n\n            path.exit().remove();\n            path.style('fill', function(d,i){\n                    return d.color || color(d, d.seriesIndex)\n                })\n                .style('stroke', function(d,i){ return d.color || color(d, d.seriesIndex) });\n            path.watchTransition(renderWatch,'stackedArea path')\n                .attr('d', function(d,i) {\n                    return area(d.values,i)\n                });\n\n            //============================================================\n            // Event Handling/Dispatching (in chart's scope)\n            //------------------------------------------------------------\n\n            scatter.dispatch.on('elementMouseover.area', function(e) {\n                g.select('.nv-chart-' + id + ' .nv-area-' + e.seriesIndex).classed('hover', true);\n            });\n            scatter.dispatch.on('elementMouseout.area', function(e) {\n                g.select('.nv-chart-' + id + ' .nv-area-' + e.seriesIndex).classed('hover', false);\n            });\n\n            //Special offset functions\n            chart.d3_stackedOffset_stackPercent = function(stackData) {\n                var n = stackData.length,    //How many series\n                    m = stackData[0].length,     //how many points per series\n                    i,\n                    j,\n                    o,\n                    y0 = [];\n\n                for (j = 0; j < m; ++j) { //Looping through all points\n                    for (i = 0, o = 0; i < dataRaw.length; i++) { //looping through all series\n                        o += getY(dataRaw[i].values[j]); //total y value of all series at a certian point in time.\n                    }\n\n                    if (o) for (i = 0; i < n; i++) { //(total y value of all series at point in time i) != 0\n                        stackData[i][j][1] /= o;\n                    } else { //(total y value of all series at point in time i) == 0\n                        for (i = 0; i < n; i++) {\n                            stackData[i][j][1] = 0;\n                        }\n                    }\n                }\n                for (j = 0; j < m; ++j) y0[j] = 0;\n                return y0;\n            };\n\n        });\n\n        renderWatch.renderEnd('stackedArea immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Global getters and setters\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.scatter = scatter;\n\n    scatter.dispatch.on('elementClick', function(){ dispatch.elementClick.apply(this, arguments); });\n    scatter.dispatch.on('elementMouseover', function(){ dispatch.elementMouseover.apply(this, arguments); });\n    scatter.dispatch.on('elementMouseout', function(){ dispatch.elementMouseout.apply(this, arguments); });\n\n    chart.interpolate = function(_) {\n        if (!arguments.length) return interpolate;\n        interpolate = _;\n        return chart;\n    };\n\n    chart.duration = function(_) {\n        if (!arguments.length) return duration;\n        duration = _;\n        renderWatch.reset(duration);\n        scatter.duration(duration);\n        return chart;\n    };\n\n    chart.dispatch = dispatch;\n    chart.scatter = scatter;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        defined: {get: function(){return defined;}, set: function(_){defined=_;}},\n        clipEdge: {get: function(){return clipEdge;}, set: function(_){clipEdge=_;}},\n        offset:      {get: function(){return offset;}, set: function(_){offset=_;}},\n        order:    {get: function(){return order;}, set: function(_){order=_;}},\n        interpolate:    {get: function(){return interpolate;}, set: function(_){interpolate=_;}},\n\n        // simple functor options\n        x:     {get: function(){return getX;}, set: function(_){getX = d3.functor(_);}},\n        y:     {get: function(){return getY;}, set: function(_){getY = d3.functor(_);}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }},\n        style: {get: function(){return style;}, set: function(_){\n            style = _;\n            switch (style) {\n                case 'stack':\n                    chart.offset('zero');\n                    chart.order('default');\n                    break;\n                case 'stream':\n                    chart.offset('wiggle');\n                    chart.order('inside-out');\n                    break;\n                case 'stream-center':\n                    chart.offset('silhouette');\n                    chart.order('inside-out');\n                    break;\n                case 'expand':\n                    chart.offset('expand');\n                    chart.order('default');\n                    break;\n                case 'stack_percent':\n                    chart.offset(chart.d3_stackedOffset_stackPercent);\n                    chart.order('default');\n                    break;\n            }\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n            scatter.duration(duration);\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, scatter);\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n\nnv.models.stackedAreaChart = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var stacked = nv.models.stackedArea()\n        , xAxis = nv.models.axis()\n        , yAxis = nv.models.axis()\n        , legend = nv.models.legend()\n        , controls = nv.models.legend()\n        , interactiveLayer = nv.interactiveGuideline()\n        , tooltip = nv.models.tooltip()\n        , focus = nv.models.focus(nv.models.stackedArea())\n        ;\n\n    var margin = {top: 30, right: 25, bottom: 50, left: 60}\n        , width = null\n        , height = null\n        , color = nv.utils.defaultColor()\n        , showControls = true\n        , showLegend = true\n        , showXAxis = true\n        , showYAxis = true\n        , rightAlignYAxis = false\n        , focusEnable = false\n        , useInteractiveGuideline = false\n        , showTotalInTooltip = true\n        , totalLabel = 'TOTAL'\n        , x //can be accessed via chart.xScale()\n        , y //can be accessed via chart.yScale()\n        , state = nv.utils.state()\n        , defaultState = null\n        , noData = null\n        , dispatch = d3.dispatch('stateChange', 'changeState','renderEnd')\n        , controlWidth = 250\n        , controlOptions = ['Stacked','Stream','Expanded']\n        , controlLabels = {}\n        , duration = 250\n        ;\n\n    state.style = stacked.style();\n    xAxis.orient('bottom').tickPadding(7);\n    yAxis.orient((rightAlignYAxis) ? 'right' : 'left');\n\n    tooltip\n        .headerFormatter(function(d, i) {\n            return xAxis.tickFormat()(d, i);\n        })\n        .valueFormatter(function(d, i) {\n            return yAxis.tickFormat()(d, i);\n        });\n\n    interactiveLayer.tooltip\n        .headerFormatter(function(d, i) {\n            return xAxis.tickFormat()(d, i);\n        })\n        .valueFormatter(function(d, i) {\n            return d == null ? \"N/A\" : yAxis.tickFormat()(d, i);\n        });\n\n    var oldYTickFormat = null,\n        oldValueFormatter = null;\n\n    controls.updateState(false);\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n    var style = stacked.style();\n\n    var stateGetter = function(data) {\n        return function(){\n            return {\n                active: data.map(function(d) { return !d.disabled }),\n                style: stacked.style()\n            };\n        }\n    };\n\n    var stateSetter = function(data) {\n        return function(state) {\n            if (state.style !== undefined)\n                style = state.style;\n            if (state.active !== undefined)\n                data.forEach(function(series,i) {\n                    series.disabled = !state.active[i];\n                });\n        }\n    };\n\n    var percentFormatter = d3.format('%');\n\n    function chart(selection) {\n        renderWatch.reset();\n        renderWatch.models(stacked);\n        if (showXAxis) renderWatch.models(xAxis);\n        if (showYAxis) renderWatch.models(yAxis);\n\n        selection.each(function(data) {\n            var container = d3.select(this),\n                that = this;\n            nv.utils.initSVG(container);\n\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n\n            chart.update = function() { container.transition().duration(duration).call(chart); };\n            chart.container = this;\n\n            state\n                .setter(stateSetter(data), chart.update)\n                .getter(stateGetter(data))\n                .update();\n\n            // DEPRECATED set state.disabled\n            state.disabled = data.map(function(d) { return !!d.disabled });\n\n            if (!defaultState) {\n                var key;\n                defaultState = {};\n                for (key in state) {\n                    if (state[key] instanceof Array)\n                        defaultState[key] = state[key].slice(0);\n                    else\n                        defaultState[key] = state[key];\n                }\n            }\n\n            // Display No Data message if there's nothing to show.\n            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n                nv.utils.noData(chart, container)\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n            // Setup Scales\n            x = stacked.xScale();\n            y = stacked.yScale();\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-stackedAreaChart').data([data]);\n            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-stackedAreaChart').append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-legendWrap');\n            gEnter.append('g').attr('class', 'nv-controlsWrap');\n\n            var focusEnter = gEnter.append('g').attr('class', 'nv-focus');\n            focusEnter.append('g').attr('class', 'nv-background').append('rect');\n            focusEnter.append('g').attr('class', 'nv-x nv-axis');\n            focusEnter.append('g').attr('class', 'nv-y nv-axis');\n            focusEnter.append('g').attr('class', 'nv-stackedWrap');\n            focusEnter.append('g').attr('class', 'nv-interactive');\n\n            // g.select(\"rect\").attr(\"width\",availableWidth).attr(\"height\",availableHeight);\n\n            var contextEnter = gEnter.append('g').attr('class', 'nv-focusWrap');\n\n            // Legend\n            if (!showLegend) {\n                g.select('.nv-legendWrap').selectAll('*').remove();\n            } else {\n                var legendWidth = (showControls) ? availableWidth - controlWidth : availableWidth;\n\n                legend.width(legendWidth);\n                g.select('.nv-legendWrap').datum(data).call(legend);\n\n                if (legend.height() > margin.top) {\n                    margin.top = legend.height();\n                    availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n                }\n\n                g.select('.nv-legendWrap')\n                    .attr('transform', 'translate(' + (availableWidth-legendWidth) + ',' + (-margin.top) +')');\n            }\n\n            // Controls\n            if (!showControls) {\n                 g.select('.nv-controlsWrap').selectAll('*').remove();\n            } else {\n                var controlsData = [\n                    {\n                        key: controlLabels.stacked || 'Stacked',\n                        metaKey: 'Stacked',\n                        disabled: stacked.style() != 'stack',\n                        style: 'stack'\n                    },\n                    {\n                        key: controlLabels.stream || 'Stream',\n                        metaKey: 'Stream',\n                        disabled: stacked.style() != 'stream',\n                        style: 'stream'\n                    },\n                    {\n                        key: controlLabels.expanded || 'Expanded',\n                        metaKey: 'Expanded',\n                        disabled: stacked.style() != 'expand',\n                        style: 'expand'\n                    },\n                    {\n                        key: controlLabels.stack_percent || 'Stack %',\n                        metaKey: 'Stack_Percent',\n                        disabled: stacked.style() != 'stack_percent',\n                        style: 'stack_percent'\n                    }\n                ];\n\n                controlWidth = (controlOptions.length/3) * 260;\n                controlsData = controlsData.filter(function(d) {\n                    return controlOptions.indexOf(d.metaKey) !== -1;\n                });\n\n                controls\n                    .width( controlWidth )\n                    .color(['#444', '#444', '#444']);\n\n                g.select('.nv-controlsWrap')\n                    .datum(controlsData)\n                    .call(controls);\n\n                if (Math.max(controls.height(), legend.height()) > margin.top) {\n                    margin.top = Math.max(controls.height(), legend.height());\n                    availableHeight = nv.utils.availableHeight(height, container, margin);\n                }\n\n                g.select('.nv-controlsWrap')\n                    .attr('transform', 'translate(0,' + (-margin.top) +')');\n            }\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            if (rightAlignYAxis) {\n                g.select(\".nv-y.nv-axis\")\n                    .attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n            }\n\n            //Set up interactive layer\n            if (useInteractiveGuideline) {\n                interactiveLayer\n                    .width(availableWidth)\n                    .height(availableHeight)\n                    .margin({left: margin.left, top: margin.top})\n                    .svgContainer(container)\n                    .xScale(x);\n                wrap.select(\".nv-interactive\").call(interactiveLayer);\n            }\n\n            g.select('.nv-focus .nv-background rect')\n                .attr('width', availableWidth)\n                .attr('height', availableHeight);\n\n            stacked\n                .width(availableWidth)\n                .height(availableHeight)\n                .color(data.map(function(d,i) {\n                    return d.color || color(d, i);\n                }).filter(function(d,i) { return !data[i].disabled; }));\n\n            var stackedWrap = g.select('.nv-focus .nv-stackedWrap')\n                .datum(data.filter(function(d) { return !d.disabled; }));\n\n            // Setup Axes\n            if (showXAxis) {\n                xAxis.scale(x)\n                    ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n                    .tickSize( -availableHeight, 0);\n            }\n\n            if (showYAxis) {\n                var ticks;\n                if (stacked.offset() === 'wiggle') {\n                    ticks = 0;\n                }\n                else {\n                    ticks = nv.utils.calcTicksY(availableHeight/36, data);\n                }\n                yAxis.scale(y)\n                    ._ticks(ticks)\n                    .tickSize(-availableWidth, 0);\n            }\n\n            //============================================================\n            // Update Axes\n            //============================================================\n            function updateXAxis() {\n                if(showXAxis) {\n                    g.select('.nv-focus .nv-x.nv-axis')\n                        .attr('transform', 'translate(0,' + availableHeight + ')')\n                        .transition()\n                        .duration(duration)\n                        .call(xAxis)\n                        ;\n                }\n            }\n\n            function updateYAxis() {\n                if(showYAxis) {\n                    if (stacked.style() === 'expand' || stacked.style() === 'stack_percent') {\n                        var currentFormat = yAxis.tickFormat();\n\n                        if ( !oldYTickFormat || currentFormat !== percentFormatter )\n                            oldYTickFormat = currentFormat;\n\n                        //Forces the yAxis to use percentage in 'expand' mode.\n                        yAxis.tickFormat(percentFormatter);\n                    }\n                    else {\n                        if (oldYTickFormat) {\n                            yAxis.tickFormat(oldYTickFormat);\n                            oldYTickFormat = null;\n                        }\n                    }\n\n                    g.select('.nv-focus .nv-y.nv-axis')\n                    .transition().duration(0)\n                    .call(yAxis);\n                }\n            }\n\n            //============================================================\n            // Update Focus\n            //============================================================\n            if(!focusEnable) {\n                stackedWrap.transition().call(stacked);\n                updateXAxis();\n                updateYAxis();\n            } else {\n                focus.width(availableWidth);\n                g.select('.nv-focusWrap')\n                    .attr('transform', 'translate(0,' + ( availableHeight + margin.bottom + focus.margin().top) + ')')\n                    .datum(data.filter(function(d) { return !d.disabled; }))\n                    .call(focus);\n                var extent = focus.brush.empty() ? focus.xDomain() : focus.brush.extent();\n                if(extent !== null){\n                    onBrush(extent);\n                }\n            }\n\n            //============================================================\n            // Event Handling/Dispatching (in chart's scope)\n            //------------------------------------------------------------\n\n            stacked.dispatch.on('areaClick.toggle', function(e) {\n                if (data.filter(function(d) { return !d.disabled }).length === 1)\n                    data.forEach(function(d) {\n                        d.disabled = false;\n                    });\n                else\n                    data.forEach(function(d,i) {\n                        d.disabled = (i != e.seriesIndex);\n                    });\n\n                state.disabled = data.map(function(d) { return !!d.disabled });\n                dispatch.stateChange(state);\n\n                chart.update();\n            });\n\n            legend.dispatch.on('stateChange', function(newState) {\n                for (var key in newState)\n                    state[key] = newState[key];\n                dispatch.stateChange(state);\n                chart.update();\n            });\n\n            controls.dispatch.on('legendClick', function(d,i) {\n                if (!d.disabled) return;\n\n                controlsData = controlsData.map(function(s) {\n                    s.disabled = true;\n                    return s;\n                });\n                d.disabled = false;\n\n                stacked.style(d.style);\n\n\n                state.style = stacked.style();\n                dispatch.stateChange(state);\n\n                chart.update();\n            });\n\n            interactiveLayer.dispatch.on('elementMousemove', function(e) {\n                stacked.clearHighlights();\n                var singlePoint, pointIndex, pointXLocation, allData = [], valueSum = 0, allNullValues = true;\n                data\n                    .filter(function(series, i) {\n                        series.seriesIndex = i;\n                        return !series.disabled;\n                    })\n                    .forEach(function(series,i) {\n                        pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n                        var point = series.values[pointIndex];\n                        var pointYValue = chart.y()(point, pointIndex);\n                        if (pointYValue != null) {\n                            stacked.highlightPoint(i, pointIndex, true);\n                        }\n                        if (typeof point === 'undefined') return;\n                        if (typeof singlePoint === 'undefined') singlePoint = point;\n                        if (typeof pointXLocation === 'undefined') pointXLocation = chart.xScale()(chart.x()(point,pointIndex));\n\n                        //If we are in 'expand' mode, use the stacked percent value instead of raw value.\n                        var tooltipValue = (stacked.style() == 'expand') ? point.display.y : chart.y()(point,pointIndex);\n                        allData.push({\n                            key: series.key,\n                            value: tooltipValue,\n                            color: color(series,series.seriesIndex),\n                            point: point\n                        });\n\n                        if (showTotalInTooltip && stacked.style() != 'expand' && tooltipValue != null) {\n                          valueSum += tooltipValue;\n                          allNullValues = false;\n                        };\n                    });\n\n                allData.reverse();\n\n                //Highlight the tooltip entry based on which stack the mouse is closest to.\n                if (allData.length > 2) {\n                    var yValue = chart.yScale().invert(e.mouseY);\n                    var yDistMax = Infinity, indexToHighlight = null;\n                    allData.forEach(function(series,i) {\n\n                        //To handle situation where the stacked area chart is negative, we need to use absolute values\n                        //when checking if the mouse Y value is within the stack area.\n                        yValue = Math.abs(yValue);\n                        var stackedY0 = Math.abs(series.point.display.y0);\n                        var stackedY = Math.abs(series.point.display.y);\n                        if ( yValue >= stackedY0 && yValue <= (stackedY + stackedY0))\n                        {\n                            indexToHighlight = i;\n                            return;\n                        }\n                    });\n                    if (indexToHighlight != null)\n                        allData[indexToHighlight].highlight = true;\n                }\n\n                //If we are not in 'expand' mode, add a 'Total' row to the tooltip.\n                if (showTotalInTooltip && stacked.style() != 'expand' && allData.length >= 2 && !allNullValues) {\n                    allData.push({\n                        key: totalLabel,\n                        value: valueSum,\n                        total: true\n                    });\n                }\n\n                var xValue = chart.x()(singlePoint,pointIndex);\n\n                var valueFormatter = interactiveLayer.tooltip.valueFormatter();\n                // Keeps track of the tooltip valueFormatter if the chart changes to expanded view\n                if (stacked.style() === 'expand' || stacked.style() === 'stack_percent') {\n                    if ( !oldValueFormatter ) {\n                        oldValueFormatter = valueFormatter;\n                    }\n                    //Forces the tooltip to use percentage in 'expand' mode.\n                    valueFormatter = d3.format(\".1%\");\n                }\n                else {\n                    if (oldValueFormatter) {\n                        valueFormatter = oldValueFormatter;\n                        oldValueFormatter = null;\n                    }\n                }\n\n                interactiveLayer.tooltip\n                    .valueFormatter(valueFormatter)\n                    .data(\n                    {\n                        value: xValue,\n                        series: allData\n                    }\n                )();\n\n                interactiveLayer.renderGuideLine(pointXLocation);\n\n            });\n\n            interactiveLayer.dispatch.on(\"elementMouseout\",function(e) {\n                stacked.clearHighlights();\n            });\n\n            /* Update `main' graph on brush update. */\n            focus.dispatch.on(\"onBrush\", function(extent) {\n                onBrush(extent);\n            });\n\n            // Update chart from a state object passed to event handler\n            dispatch.on('changeState', function(e) {\n\n                if (typeof e.disabled !== 'undefined' && data.length === e.disabled.length) {\n                    data.forEach(function(series,i) {\n                        series.disabled = e.disabled[i];\n                    });\n\n                    state.disabled = e.disabled;\n                }\n\n                if (typeof e.style !== 'undefined') {\n                    stacked.style(e.style);\n                    style = e.style;\n                }\n\n                chart.update();\n            });\n\n            //============================================================\n            // Functions\n            //------------------------------------------------------------\n\n            function onBrush(extent) {\n                // Update Main (Focus)\n                var stackedWrap = g.select('.nv-focus .nv-stackedWrap')\n                    .datum(\n                    data.filter(function(d) { return !d.disabled; })\n                        .map(function(d,i) {\n                            return {\n                                key: d.key,\n                                area: d.area,\n                                classed: d.classed,\n                                values: d.values.filter(function(d,i) {\n                                    return stacked.x()(d,i) >= extent[0] && stacked.x()(d,i) <= extent[1];\n                                }),\n                                disableTooltip: d.disableTooltip\n                            };\n                        })\n                );\n                stackedWrap.transition().duration(duration).call(stacked);\n\n                // Update Main (Focus) Axes\n                updateXAxis();\n                updateYAxis();\n            }\n\n        });\n\n        renderWatch.renderEnd('stacked Area chart immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n    stacked.dispatch.on('elementMouseover.tooltip', function(evt) {\n        evt.point['x'] = stacked.x()(evt.point);\n        evt.point['y'] = stacked.y()(evt.point);\n        tooltip.data(evt).hidden(false);\n    });\n\n    stacked.dispatch.on('elementMouseout.tooltip', function(evt) {\n        tooltip.hidden(true)\n    });\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    // expose chart's sub-components\n    chart.dispatch = dispatch;\n    chart.stacked = stacked;\n    chart.legend = legend;\n    chart.controls = controls;\n    chart.xAxis = xAxis;\n    chart.x2Axis = focus.xAxis;\n    chart.yAxis = yAxis;\n    chart.y2Axis = focus.yAxis;\n    chart.interactiveLayer = interactiveLayer;\n    chart.tooltip = tooltip;\n    chart.focus = focus;\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n        showXAxis:      {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n        showYAxis:    {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n        defaultState:    {get: function(){return defaultState;}, set: function(_){defaultState=_;}},\n        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n        showControls:    {get: function(){return showControls;}, set: function(_){showControls=_;}},\n        controlLabels:    {get: function(){return controlLabels;}, set: function(_){controlLabels=_;}},\n        controlOptions:    {get: function(){return controlOptions;}, set: function(_){controlOptions=_;}},\n        showTotalInTooltip:      {get: function(){return showTotalInTooltip;}, set: function(_){showTotalInTooltip=_;}},\n        totalLabel:      {get: function(){return totalLabel;}, set: function(_){totalLabel=_;}},\n        focusEnable:    {get: function(){return focusEnable;}, set: function(_){focusEnable=_;}},\n        focusHeight:     {get: function(){return focus.height();}, set: function(_){focus.height(_);}},\n        brushExtent: {get: function(){return focus.brushExtent();}, set: function(_){focus.brushExtent(_);}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        focusMargin: {get: function(){return focus.margin}, set: function(_){\n            focus.margin.top    = _.top    !== undefined ? _.top    : focus.margin.top;\n            focus.margin.right  = _.right  !== undefined ? _.right  : focus.margin.right;\n            focus.margin.bottom = _.bottom !== undefined ? _.bottom : focus.margin.bottom;\n            focus.margin.left   = _.left   !== undefined ? _.left   : focus.margin.left;\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n            stacked.duration(duration);\n            xAxis.duration(duration);\n            yAxis.duration(duration);\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n            legend.color(color);\n            stacked.color(color);\n            focus.color(color);\n        }},\n        x: {get: function(){return stacked.x();}, set: function(_){\n            stacked.x(_);\n            focus.x(_);\n        }},\n        y: {get: function(){return stacked.y();}, set: function(_){\n            stacked.y(_);\n            focus.y(_);\n        }},\n        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n            rightAlignYAxis = _;\n            yAxis.orient( rightAlignYAxis ? 'right' : 'left');\n        }},\n        useInteractiveGuideline: {get: function(){return useInteractiveGuideline;}, set: function(_){\n            useInteractiveGuideline = !!_;\n            chart.interactive(!_);\n            chart.useVoronoi(!_);\n            stacked.scatter.interactive(!_);\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, stacked);\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n\nnv.models.stackedAreaWithFocusChart = function() {\n  return nv.models.stackedAreaChart()\n    .margin({ bottom: 30 })\n    .focusEnable( true );\n};\n// based on http://bl.ocks.org/kerryrodden/477c1bfb081b783f80ad\nnv.models.sunburst = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n        , width = 600\n        , height = 600\n        , mode = \"count\"\n        , modes = {count: function(d) { return 1; }, value: function(d) { return d.value || d.size }, size: function(d) { return d.value || d.size }}\n        , id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n        , container = null\n        , color = nv.utils.defaultColor()\n        , showLabels = false\n        , labelFormat = function(d){if(mode === 'count'){return d.name + ' #' + d.value}else{return d.name + ' ' + (d.value || d.size)}}\n        , labelThreshold = 0.02\n        , sort = function(d1, d2){return d1.name > d2.name;}\n        , key = function(d,i){return d.name;}\n        , groupColorByParent = true\n        , duration = 500\n        , dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMousemove', 'elementMouseover', 'elementMouseout', 'renderEnd');\n\n    //============================================================\n    // aux functions and setup\n    //------------------------------------------------------------\n\n    var x = d3.scale.linear().range([0, 2 * Math.PI]);\n    var y = d3.scale.sqrt();\n\n    var partition = d3.layout.partition().sort(sort);\n\n    var node, availableWidth, availableHeight, radius;\n    var prevPositions = {};\n\n    var arc = d3.svg.arc()\n        .startAngle(function(d) {return Math.max(0, Math.min(2 * Math.PI, x(d.x))) })\n        .endAngle(function(d) {return Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx))) })\n        .innerRadius(function(d) {return Math.max(0, y(d.y)) })\n        .outerRadius(function(d) {return Math.max(0, y(d.y + d.dy)) });\n\n    function rotationToAvoidUpsideDown(d) {\n        var centerAngle = computeCenterAngle(d);\n        if(centerAngle > 90){\n            return 180;\n        }\n        else {\n            return 0;\n        }\n    }\n\n    function computeCenterAngle(d) {\n        var startAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x)));\n        var endAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx)));\n        var centerAngle = (((startAngle + endAngle) / 2) * (180 / Math.PI)) - 90;\n        return centerAngle;\n    }\n\n    function computeNodePercentage(d) {\n        var startAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x)));\n        var endAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx)));\n        return (endAngle - startAngle) / (2 * Math.PI);\n    }\n\n    function labelThresholdMatched(d) {\n        var startAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x)));\n        var endAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx)));\n\n        var size = endAngle - startAngle;\n        return size > labelThreshold;\n    }\n\n    // When zooming: interpolate the scales.\n    function arcTweenZoom(e,i) {\n        var xd = d3.interpolate(x.domain(), [node.x, node.x + node.dx]),\n        yd = d3.interpolate(y.domain(), [node.y, 1]),\n        yr = d3.interpolate(y.range(), [node.y ? 20 : 0, radius]);\n\n        if (i === 0) {\n            return function() {return arc(e);}\n        }\n        else {\n            return function (t) {\n                x.domain(xd(t));\n                y.domain(yd(t)).range(yr(t));\n                return arc(e);\n            }\n        };\n    }\n\n    function arcTweenUpdate(d) {\n        var ipo = d3.interpolate({x: d.x0, dx: d.dx0, y: d.y0, dy: d.dy0}, d);\n\n        return function (t) {\n            var b = ipo(t);\n\n            d.x0 = b.x;\n            d.dx0 = b.dx;\n            d.y0 = b.y;\n            d.dy0 = b.dy;\n\n            return arc(b);\n        };\n    }\n\n    function updatePrevPosition(node) {\n        var k = key(node);\n        if(! prevPositions[k]) prevPositions[k] = {};\n        var pP = prevPositions[k];\n        pP.dx = node.dx;\n        pP.x = node.x;\n        pP.dy = node.dy;\n        pP.y = node.y;\n    }\n\n    function storeRetrievePrevPositions(nodes) {\n        nodes.forEach(function(n){\n            var k = key(n);\n            var pP = prevPositions[k];\n            //console.log(k,n,pP);\n            if( pP ){\n                n.dx0 = pP.dx;\n                n.x0 = pP.x;\n                n.dy0 = pP.dy;\n                n.y0 = pP.y;\n            }\n            else {\n                n.dx0 = n.dx;\n                n.x0 = n.x;\n                n.dy0 = n.dy;\n                n.y0 = n.y;\n            }\n            updatePrevPosition(n);\n        });\n    }\n\n    function zoomClick(d) {\n        var labels = container.selectAll('text')\n        var path = container.selectAll('path')\n\n        // fade out all text elements\n        labels.transition().attr(\"opacity\",0);\n\n        // to allow reference to the new center node\n        node = d;\n\n        path.transition()\n            .duration(duration)\n            .attrTween(\"d\", arcTweenZoom)\n            .each('end', function(e) {\n                // partially taken from here: http://bl.ocks.org/metmajer/5480307\n                // check if the animated element's data e lies within the visible angle span given in d\n                if(e.x >= d.x && e.x < (d.x + d.dx) ){\n                    if(e.depth >= d.depth){\n                        // get a selection of the associated text element\n                        var parentNode = d3.select(this.parentNode);\n                        var arcText = parentNode.select('text');\n\n                        // fade in the text element and recalculate positions\n                        arcText.transition().duration(duration)\n                        .text( function(e){return labelFormat(e) })\n                        .attr(\"opacity\", function(d){\n                            if(labelThresholdMatched(d)) {\n                                return 1;\n                            }\n                            else {\n                                return 0;\n                            }\n                        })\n                        .attr(\"transform\", function() {\n                            var width = this.getBBox().width;\n                            if(e.depth === 0)\n                            return \"translate(\" + (width / 2 * - 1) + \",0)\";\n                            else if(e.depth === d.depth){\n                                return \"translate(\" + (y(e.y) + 5) + \",0)\";\n                            }\n                            else {\n                                var centerAngle = computeCenterAngle(e);\n                                var rotation = rotationToAvoidUpsideDown(e);\n                                if (rotation === 0) {\n                                    return 'rotate('+ centerAngle +')translate(' + (y(e.y) + 5) + ',0)';\n                                }\n                                else {\n                                    return 'rotate('+ centerAngle +')translate(' + (y(e.y) + width + 5) + ',0)rotate(' + rotation + ')';\n                                }\n                            }\n                        });\n                    }\n                }\n            })\n    }\n\n    //============================================================\n    // chart function\n    //------------------------------------------------------------\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n        renderWatch.reset();\n\n        selection.each(function(data) {\n            container = d3.select(this);\n            availableWidth = nv.utils.availableWidth(width, container, margin);\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n            radius = Math.min(availableWidth, availableHeight) / 2;\n\n            y.range([0, radius]);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.select('g.nvd3.nv-wrap.nv-sunburst');\n            if( !wrap[0][0] ) {\n                wrap = container.append('g')\n                    .attr('class', 'nvd3 nv-wrap nv-sunburst nv-chart-' + id)\n                    .attr('transform', 'translate(' + ((availableWidth / 2) + margin.left + margin.right) + ',' + ((availableHeight / 2) + margin.top + margin.bottom) + ')');\n            } else {\n                wrap.attr('transform', 'translate(' + ((availableWidth / 2) + margin.left + margin.right) + ',' + ((availableHeight / 2) + margin.top + margin.bottom) + ')');\n            }\n\n            container.on('click', function (d, i) {\n                dispatch.chartClick({\n                    data: d,\n                    index: i,\n                    pos: d3.event,\n                    id: id\n                });\n            });\n\n            partition.value(modes[mode] || modes[\"count\"]);\n\n            //reverse the drawing order so that the labels of inner\n            //arcs are drawn on top of the outer arcs.\n            var nodes = partition.nodes(data[0]).reverse()\n\n            storeRetrievePrevPositions(nodes);\n            var cG = wrap.selectAll('.arc-container').data(nodes, key)\n\n            //handle new datapoints\n            var cGE = cG.enter()\n                .append(\"g\")\n                .attr(\"class\",'arc-container')\n\n            cGE.append(\"path\")\n                .attr(\"d\", arc)\n                .style(\"fill\", function (d) {\n                    if (d.color) {\n                        return d.color;\n                    }\n                    else if (groupColorByParent) {\n                        return color((d.children ? d : d.parent).name);\n                    }\n                    else {\n                        return color(d.name);\n                    }\n                })\n                .style(\"stroke\", \"#FFF\")\n                .on(\"click\", zoomClick)\n                .on('mouseover', function(d,i){\n                    d3.select(this).classed('hover', true).style('opacity', 0.8);\n                    dispatch.elementMouseover({\n                        data: d,\n                        color: d3.select(this).style(\"fill\"),\n                        percent: computeNodePercentage(d)\n                    });\n                })\n                .on('mouseout', function(d,i){\n                    d3.select(this).classed('hover', false).style('opacity', 1);\n                    dispatch.elementMouseout({\n                        data: d\n                    });\n                })\n                .on('mousemove', function(d,i){\n                    dispatch.elementMousemove({\n                        data: d\n                    });\n                });\n\n            ///Iterating via each and selecting based on the this\n            ///makes it work ... a cG.selectAll('path') doesn't.\n            ///Without iteration the data (in the element) didn't update.\n            cG.each(function(d){\n                d3.select(this).select('path')\n                    .transition()\n                    .duration(duration)\n                    .attrTween('d', arcTweenUpdate);\n            });\n\n            if(showLabels){\n                //remove labels first and add them back\n                cG.selectAll('text').remove();\n\n                //this way labels are on top of newly added arcs\n                cG.append('text')\n                    .text( function(e){ return labelFormat(e)})\n                    .transition()\n                    .duration(duration)\n                    .attr(\"opacity\", function(d){\n                        if(labelThresholdMatched(d)) {\n                            return 1;\n                        }\n                        else {\n                            return 0;\n                        }\n                    })\n                    .attr(\"transform\", function(d) {\n                        var width = this.getBBox().width;\n                        if(d.depth === 0){\n                            return \"rotate(0)translate(\" + (width / 2 * -1) + \",0)\";\n                        }\n                        else {\n                            var centerAngle = computeCenterAngle(d);\n                            var rotation = rotationToAvoidUpsideDown(d);\n                            if (rotation === 0) {\n                                return 'rotate('+ centerAngle +')translate(' + (y(d.y) + 5) + ',0)';\n                            }\n                            else {\n                                return 'rotate('+ centerAngle +')translate(' + (y(d.y) + width + 5) + ',0)rotate(' + rotation + ')';\n                            }\n                        }\n                    });\n            }\n\n            //zoom out to the center when the data is updated.\n            zoomClick(nodes[nodes.length - 1])\n\n\n            //remove unmatched elements ...\n            cG.exit()\n                .transition()\n                .duration(duration)\n                .attr('opacity',0)\n                .each('end',function(d){\n                    var k = key(d);\n                    prevPositions[k] = undefined;\n                })\n                .remove();\n        });\n\n\n        renderWatch.renderEnd('sunburst immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        mode:       {get: function(){return mode;}, set: function(_){mode=_;}},\n        id:         {get: function(){return id;}, set: function(_){id=_;}},\n        duration:   {get: function(){return duration;}, set: function(_){duration=_;}},\n        groupColorByParent: {get: function(){return groupColorByParent;}, set: function(_){groupColorByParent=!!_;}},\n        showLabels: {get: function(){return showLabels;}, set: function(_){showLabels=!!_}},\n        labelFormat: {get: function(){return labelFormat;}, set: function(_){labelFormat=_}},\n        labelThreshold: {get: function(){return labelThreshold;}, set: function(_){labelThreshold=_}},\n        sort: {get: function(){return sort;}, set: function(_){sort=_}},\n        key: {get: function(){return key;}, set: function(_){key=_}},\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    != undefined ? _.top    : margin.top;\n            margin.right  = _.right  != undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom != undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   != undefined ? _.left   : margin.left;\n        }},\n        color: {get: function(){return color;}, set: function(_){\n            color=nv.utils.getColor(_);\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n    return chart;\n};\nnv.models.sunburstChart = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var sunburst = nv.models.sunburst();\n    var tooltip = nv.models.tooltip();\n\n    var margin = {top: 30, right: 20, bottom: 20, left: 20}\n        , width = null\n        , height = null\n        , color = nv.utils.defaultColor()\n        , showTooltipPercent = false\n        , id = Math.round(Math.random() * 100000)\n        , defaultState = null\n        , noData = null\n        , duration = 250\n        , dispatch = d3.dispatch('stateChange', 'changeState','renderEnd');\n\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    tooltip\n        .duration(0)\n        .headerEnabled(false)\n        .valueFormatter(function(d){return d;});\n\n    //============================================================\n    // Chart function\n    //------------------------------------------------------------\n\n    function chart(selection) {\n        renderWatch.reset();\n        renderWatch.models(sunburst);\n\n        selection.each(function(data) {\n            var container = d3.select(this);\n\n            nv.utils.initSVG(container);\n\n            var availableWidth = nv.utils.availableWidth(width, container, margin);\n            var availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            chart.update = function() {\n                if (duration === 0) {\n                    container.call(chart);\n                } else {\n                    container.transition().duration(duration).call(chart);\n                }\n            };\n            chart.container = container;\n\n            // Display No Data message if there's nothing to show.\n            if (!data || !data.length) {\n                nv.utils.noData(chart, container);\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n\n            sunburst.width(availableWidth).height(availableHeight).margin(margin);\n            container.call(sunburst);\n        });\n\n        renderWatch.renderEnd('sunburstChart immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n    sunburst.dispatch.on('elementMouseover.tooltip', function(evt) {\n        evt.series = {\n            key: evt.data.name,\n            value: (evt.data.value || evt.data.size),\n            color: evt.color,\n            percent: evt.percent\n        };\n        if (!showTooltipPercent) {\n            delete evt.percent;\n            delete evt.series.percent;\n        }\n        tooltip.data(evt).hidden(false);\n    });\n\n    sunburst.dispatch.on('elementMouseout.tooltip', function(evt) {\n        tooltip.hidden(true);\n    });\n\n    sunburst.dispatch.on('elementMousemove.tooltip', function(evt) {\n        tooltip();\n    });\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    // expose chart's sub-components\n    chart.dispatch = dispatch;\n    chart.sunburst = sunburst;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    // use Object get/set functionality to map between vars and chart functions\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        noData:             {get: function(){return noData;},               set: function(_){noData=_;}},\n        defaultState:       {get: function(){return defaultState;},         set: function(_){defaultState=_;}},\n        showTooltipPercent: {get: function(){return showTooltipPercent;},   set: function(_){showTooltipPercent=_;}},\n\n        // options that require extra logic in the setter\n        color: {get: function(){return color;}, set: function(_){\n            color = _;\n            sunburst.color(color);\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n            sunburst.duration(duration);\n        }},\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n            sunburst.margin(margin);\n        }}\n    });\n    nv.utils.inheritOptions(chart, sunburst);\n    nv.utils.initOptions(chart);\n    return chart;\n\n};\n\nnv.version = \"1.8.4\";\n})();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/nvd3/build/nv.d3.js\n ** module id = 329\n ** module chunks = 0\n **/","!function(t,e){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e(require(\"react\"),require(\"d3\"),require(\"nvd3\")):\"function\"==typeof define&&define.amd?define([\"react\",\"d3\",\"nvd3\"],e):\"object\"==typeof exports?exports.NVD3Chart=e(require(\"react\"),require(\"d3\"),require(\"nvd3\")):t.NVD3Chart=e(t.React,t.d3,t.nv)}(this,function(t,e,n){return function(t){function e(r){if(n[r])return n[r].exports;var o=n[r]={exports:{},id:r,loaded:!1};return t[r].call(o.exports,o,o.exports,e),o.loaded=!0,o.exports}var n={};return e.m=t,e.c=n,e.p=\"\",e(0)}([function(t,e,n){\"use strict\";function r(t){return t&&t.__esModule?t:{\"default\":t}}Object.defineProperty(e,\"__esModule\",{value:!0});var o=n(1),i=r(o),u=n(2),c=r(u),s=n(17),a=r(s),f=n(21),p=r(f),l=n(22),d=r(l),h=n(25),y=r(h),v=n(48),b=r(v),g=n(55),m=r(g),_=n(56),x=r(_),O=n(57),j=r(O),w=n(58),S=[\"x\",\"y\",\"type\",\"datum\",\"configure\"],P=[\"width\",\"height\"],E=\"margin\",M=\"containerStyle\",k=\"renderStart\",C=\"renderEnd\",D=\"ready\",F=function(t){function e(){return(0,p[\"default\"])(this,e),(0,y[\"default\"])(this,(0,a[\"default\"])(e).apply(this,arguments))}return(0,b[\"default\"])(e,t),(0,d[\"default\"])(e,[{key:\"componentDidMount\",value:function(){var t=this;j[\"default\"].addGraph(this.renderChart.bind(this),function(e){(0,w.isCallable)(t.props.ready)&&t.props.ready(e,D)})}},{key:\"componentDidUpdate\",value:function(){this.renderChart()}},{key:\"componentWillUnmount\",value:function(){this.resizeHandler&&this.resizeHandler.clear()}},{key:\"renderChart\",value:function(){var t=void 0;switch(this.chart=this.chart&&!this.rendering?this.chart:j[\"default\"].models[this.props.type](),(0,w.isCallable)(this.props.renderStart)&&this.props.renderStart(this.chart,k),this.parsedProps=(0,w.bindFunctions)(this.props,this.props.context),this.chart.x&&this.chart.x((0,w.getValueFunction)(this.parsedProps.x,\"x\")),this.chart.y&&this.chart.y((0,w.getValueFunction)(this.parsedProps.y,\"y\")),this.props.margin&&this.chart.margin(this.options(E,w.pick).margin||(0,w.propsByPrefix)(\"margin\",this.props)||{}),this.configureComponents(this.chart,this.options(S.concat(M),w.without)),!this.props.configure||this.props.configure(this.chart),this.selection=x[\"default\"].select(this.refs.svg).datum(this.props.datum).call(this.chart),this.resizeHandler||(this.resizeHandler=j[\"default\"].utils.windowResize(this.chart.update)),this.props.type){case\"pieChart\":t=this.chart.pie.dispatch;break;case\"lineChart\":t=this.chart.lines.dispatch;break;default:t=this.chart.dispatch}return t.renderEnd&&t.on(\"renderEnd\",this.renderEnd.bind(this)),this.rendering=!0,this.chart}},{key:\"renderEnd\",value:function(t){(0,w.isCallable)(this.props.renderEnd)&&this.props.renderEnd(this.chart,C),this.rendering=!1}},{key:\"configureComponents\",value:function(t,e){for(var n in e){var r=e[n];t&&((0,w.isPlainObject)(r)?this.configureComponents(t[n],r):\"function\"==typeof t[n]&&t[n](r))}}},{key:\"options\",value:function(t,e){var n=this.parsedProps.options||this.parsedProps||this.props.chartOptions;return(e=e||w.pick)(n,t)}},{key:\"render\",value:function(){var t=(0,w.pick)(this.props,P),e=(0,c[\"default\"])({},t,this.props.containerStyle);return m[\"default\"].createElement(\"div\",{ref:\"root\",className:\"nv-chart\",style:e},m[\"default\"].createElement(\"svg\",(0,i[\"default\"])({ref:\"svg\"},t)))}}]),e}(m[\"default\"].Component);e[\"default\"]=F,t.exports=F},function(t,e,n){\"use strict\";var r=n(2)[\"default\"];e[\"default\"]=r||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t},e.__esModule=!0},function(t,e,n){t.exports={\"default\":n(3),__esModule:!0}},function(t,e,n){n(4),t.exports=n(7).Object.assign},function(t,e,n){var r=n(5);r(r.S+r.F,\"Object\",{assign:n(10)})},function(t,e,n){var r=n(6),o=n(7),i=n(8),u=\"prototype\",c=function(t,e,n){var s,a,f,p=t&c.F,l=t&c.G,d=t&c.S,h=t&c.P,y=t&c.B,v=t&c.W,b=l?o:o[e]||(o[e]={}),g=l?r:d?r[e]:(r[e]||{})[u];l&&(n=e);for(s in n)a=!p&&g&&s in g,a&&s in b||(f=a?g[s]:n[s],b[s]=l&&\"function\"!=typeof g[s]?n[s]:y&&a?i(f,r):v&&g[s]==f?function(t){var e=function(e){return this instanceof t?new t(e):t(e)};return e[u]=t[u],e}(f):h&&\"function\"==typeof f?i(Function.call,f):f,h&&((b[u]||(b[u]={}))[s]=f))};c.F=1,c.G=2,c.S=4,c.P=8,c.B=16,c.W=32,t.exports=c},function(t,e){var n=t.exports=\"undefined\"!=typeof window&&window.Math==Math?window:\"undefined\"!=typeof self&&self.Math==Math?self:Function(\"return this\")();\"number\"==typeof __g&&(__g=n)},function(t,e){var n=t.exports={version:\"1.2.6\"};\"number\"==typeof __e&&(__e=n)},function(t,e,n){var r=n(9);t.exports=function(t,e,n){if(r(t),void 0===e)return t;switch(n){case 1:return function(n){return t.call(e,n)};case 2:return function(n,r){return t.call(e,n,r)};case 3:return function(n,r,o){return t.call(e,n,r,o)}}return function(){return t.apply(e,arguments)}}},function(t,e){t.exports=function(t){if(\"function\"!=typeof t)throw TypeError(t+\" is not a function!\");return t}},function(t,e,n){var r=n(11),o=n(12),i=n(14);t.exports=n(16)(function(){var t=Object.assign,e={},n={},r=Symbol(),o=\"abcdefghijklmnopqrst\";return e[r]=7,o.split(\"\").forEach(function(t){n[t]=t}),7!=t({},e)[r]||Object.keys(t({},n)).join(\"\")!=o})?function(t,e){for(var n=o(t),u=arguments,c=u.length,s=1,a=r.getKeys,f=r.getSymbols,p=r.isEnum;c>s;)for(var l,d=i(u[s++]),h=f?a(d).concat(f(d)):a(d),y=h.length,v=0;y>v;)p.call(d,l=h[v++])&&(n[l]=d[l]);return n}:Object.assign},function(t,e){var n=Object;t.exports={create:n.create,getProto:n.getPrototypeOf,isEnum:{}.propertyIsEnumerable,getDesc:n.getOwnPropertyDescriptor,setDesc:n.defineProperty,setDescs:n.defineProperties,getKeys:n.keys,getNames:n.getOwnPropertyNames,getSymbols:n.getOwnPropertySymbols,each:[].forEach}},function(t,e,n){var r=n(13);t.exports=function(t){return Object(r(t))}},function(t,e){t.exports=function(t){if(void 0==t)throw TypeError(\"Can't call method on  \"+t);return t}},function(t,e,n){var r=n(15);t.exports=Object(\"z\").propertyIsEnumerable(0)?Object:function(t){return\"String\"==r(t)?t.split(\"\"):Object(t)}},function(t,e){var n={}.toString;t.exports=function(t){return n.call(t).slice(8,-1)}},function(t,e){t.exports=function(t){try{return!!t()}catch(e){return!0}}},function(t,e,n){t.exports={\"default\":n(18),__esModule:!0}},function(t,e,n){n(19),t.exports=n(7).Object.getPrototypeOf},function(t,e,n){var r=n(12);n(20)(\"getPrototypeOf\",function(t){return function(e){return t(r(e))}})},function(t,e,n){var r=n(5),o=n(7),i=n(16);t.exports=function(t,e){var n=(o.Object||{})[t]||Object[t],u={};u[t]=e(n),r(r.S+r.F*i(function(){n(1)}),\"Object\",u)}},function(t,e){\"use strict\";e[\"default\"]=function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")},e.__esModule=!0},function(t,e,n){\"use strict\";function r(t){return t&&t.__esModule?t:{\"default\":t}}var o=n(23),i=r(o);e[\"default\"]=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),(0,i[\"default\"])(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),e.__esModule=!0},function(t,e,n){t.exports={\"default\":n(24),__esModule:!0}},function(t,e,n){var r=n(11);t.exports=function(t,e,n){return r.setDesc(t,e,n)}},function(t,e,n){\"use strict\";function r(t){return t&&t.__esModule?t:{\"default\":t}}var o=n(26),i=r(o);e[\"default\"]=function(t,e){if(!t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!e||\"object\"!==(\"undefined\"==typeof e?\"undefined\":(0,i[\"default\"])(e))&&\"function\"!=typeof e?t:e},e.__esModule=!0},function(t,e,n){\"use strict\";var r=n(27)[\"default\"];e[\"default\"]=function(t){return t&&t.constructor===r?\"symbol\":typeof t},e.__esModule=!0},function(t,e,n){t.exports={\"default\":n(28),__esModule:!0}},function(t,e,n){n(29),n(47),t.exports=n(7).Symbol},function(t,e,n){\"use strict\";var r=n(11),o=n(6),i=n(30),u=n(31),c=n(5),s=n(32),a=n(16),f=n(35),p=n(36),l=n(38),d=n(37),h=n(39),y=n(41),v=n(42),b=n(43),g=n(44),m=n(40),_=n(34),x=r.getDesc,O=r.setDesc,j=r.create,w=y.get,S=o.Symbol,P=o.JSON,E=P&&P.stringify,M=!1,k=d(\"_hidden\"),C=r.isEnum,D=f(\"symbol-registry\"),F=f(\"symbols\"),N=\"function\"==typeof S,T=Object.prototype,q=u&&a(function(){return 7!=j(O({},\"a\",{get:function(){return O(this,\"a\",{value:7}).a}})).a})?function(t,e,n){var r=x(T,e);r&&delete T[e],O(t,e,n),r&&t!==T&&O(T,e,r)}:O,z=function(t){var e=F[t]=j(S.prototype);return e._k=t,u&&M&&q(T,t,{configurable:!0,set:function(e){i(this,k)&&i(this[k],t)&&(this[k][t]=!1),q(this,t,_(1,e))}}),e},A=function(t){return\"symbol\"==typeof t},V=function(t,e,n){return n&&i(F,e)?(n.enumerable?(i(t,k)&&t[k][e]&&(t[k][e]=!1),n=j(n,{enumerable:_(0,!1)})):(i(t,k)||O(t,k,_(1,{})),t[k][e]=!0),q(t,e,n)):O(t,e,n)},W=function(t,e){g(t);for(var n,r=v(e=m(e)),o=0,i=r.length;i>o;)V(t,n=r[o++],e[n]);return t},B=function(t,e){return void 0===e?j(t):W(j(t),e)},G=function(t){var e=C.call(this,t);return e||!i(this,t)||!i(F,t)||i(this,k)&&this[k][t]?e:!0},H=function(t,e){var n=x(t=m(t),e);return!n||!i(F,e)||i(t,k)&&t[k][e]||(n.enumerable=!0),n},I=function(t){for(var e,n=w(m(t)),r=[],o=0;n.length>o;)i(F,e=n[o++])||e==k||r.push(e);return r},J=function(t){for(var e,n=w(m(t)),r=[],o=0;n.length>o;)i(F,e=n[o++])&&r.push(F[e]);return r},K=function(t){if(void 0!==t&&!A(t)){for(var e,n,r=[t],o=1,i=arguments;i.length>o;)r.push(i[o++]);return e=r[1],\"function\"==typeof e&&(n=e),(n||!b(e))&&(e=function(t,e){return n&&(e=n.call(this,t,e)),A(e)?void 0:e}),r[1]=e,E.apply(P,r)}},R=a(function(){var t=S();return\"[null]\"!=E([t])||\"{}\"!=E({a:t})||\"{}\"!=E(Object(t))});N||(S=function(){if(A(this))throw TypeError(\"Symbol is not a constructor\");return z(l(arguments.length>0?arguments[0]:void 0))},s(S.prototype,\"toString\",function(){return this._k}),A=function(t){return t instanceof S},r.create=B,r.isEnum=G,r.getDesc=H,r.setDesc=V,r.setDescs=W,r.getNames=y.get=I,r.getSymbols=J,u&&!n(46)&&s(T,\"propertyIsEnumerable\",G,!0));var U={\"for\":function(t){return i(D,t+=\"\")?D[t]:D[t]=S(t)},keyFor:function(t){return h(D,t)},useSetter:function(){M=!0},useSimple:function(){M=!1}};r.each.call(\"hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables\".split(\",\"),function(t){var e=d(t);U[t]=N?e:z(e)}),M=!0,c(c.G+c.W,{Symbol:S}),c(c.S,\"Symbol\",U),c(c.S+c.F*!N,\"Object\",{create:B,defineProperty:V,defineProperties:W,getOwnPropertyDescriptor:H,getOwnPropertyNames:I,getOwnPropertySymbols:J}),P&&c(c.S+c.F*(!N||R),\"JSON\",{stringify:K}),p(S,\"Symbol\"),p(Math,\"Math\",!0),p(o.JSON,\"JSON\",!0)},function(t,e){var n={}.hasOwnProperty;t.exports=function(t,e){return n.call(t,e)}},function(t,e,n){t.exports=!n(16)(function(){return 7!=Object.defineProperty({},\"a\",{get:function(){return 7}}).a})},function(t,e,n){t.exports=n(33)},function(t,e,n){var r=n(11),o=n(34);t.exports=n(31)?function(t,e,n){return r.setDesc(t,e,o(1,n))}:function(t,e,n){return t[e]=n,t}},function(t,e){t.exports=function(t,e){return{enumerable:!(1&t),configurable:!(2&t),writable:!(4&t),value:e}}},function(t,e,n){var r=n(6),o=\"__core-js_shared__\",i=r[o]||(r[o]={});t.exports=function(t){return i[t]||(i[t]={})}},function(t,e,n){var r=n(11).setDesc,o=n(30),i=n(37)(\"toStringTag\");t.exports=function(t,e,n){t&&!o(t=n?t:t.prototype,i)&&r(t,i,{configurable:!0,value:e})}},function(t,e,n){var r=n(35)(\"wks\"),o=n(38),i=n(6).Symbol;t.exports=function(t){return r[t]||(r[t]=i&&i[t]||(i||o)(\"Symbol.\"+t))}},function(t,e){var n=0,r=Math.random();t.exports=function(t){return\"Symbol(\".concat(void 0===t?\"\":t,\")_\",(++n+r).toString(36))}},function(t,e,n){var r=n(11),o=n(40);t.exports=function(t,e){for(var n,i=o(t),u=r.getKeys(i),c=u.length,s=0;c>s;)if(i[n=u[s++]]===e)return n}},function(t,e,n){var r=n(14),o=n(13);t.exports=function(t){return r(o(t))}},function(t,e,n){var r=n(40),o=n(11).getNames,i={}.toString,u=\"object\"==typeof window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[],c=function(t){try{return o(t)}catch(e){return u.slice()}};t.exports.get=function(t){return u&&\"[object Window]\"==i.call(t)?c(t):o(r(t))}},function(t,e,n){var r=n(11);t.exports=function(t){var e=r.getKeys(t),n=r.getSymbols;if(n)for(var o,i=n(t),u=r.isEnum,c=0;i.length>c;)u.call(t,o=i[c++])&&e.push(o);return e}},function(t,e,n){var r=n(15);t.exports=Array.isArray||function(t){return\"Array\"==r(t)}},function(t,e,n){var r=n(45);t.exports=function(t){if(!r(t))throw TypeError(t+\" is not an object!\");return t}},function(t,e){t.exports=function(t){return\"object\"==typeof t?null!==t:\"function\"==typeof t}},function(t,e){t.exports=!0},function(t,e){},function(t,e,n){\"use strict\";var r=n(49)[\"default\"],o=n(51)[\"default\"];e[\"default\"]=function(t,e){if(\"function\"!=typeof e&&null!==e)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof e);t.prototype=r(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(o?o(t,e):t.__proto__=e)},e.__esModule=!0},function(t,e,n){t.exports={\"default\":n(50),__esModule:!0}},function(t,e,n){var r=n(11);t.exports=function(t,e){return r.create(t,e)}},function(t,e,n){t.exports={\"default\":n(52),__esModule:!0}},function(t,e,n){n(53),t.exports=n(7).Object.setPrototypeOf},function(t,e,n){var r=n(5);r(r.S,\"Object\",{setPrototypeOf:n(54).set})},function(t,e,n){var r=n(11).getDesc,o=n(45),i=n(44),u=function(t,e){if(i(t),!o(e)&&null!==e)throw TypeError(e+\": can't set as prototype!\")};t.exports={set:Object.setPrototypeOf||(\"__proto__\"in{}?function(t,e,o){try{o=n(8)(Function.call,r(Object.prototype,\"__proto__\").set,2),o(t,[]),e=!(t instanceof Array)}catch(i){e=!0}return function(t,n){return u(t,n),e?t.__proto__=n:o(t,n),t}}({},!1):void 0),check:u}},function(e,n){e.exports=t},function(t,n){t.exports=e},function(t,e){t.exports=n},function(t,e,n){\"use strict\";function r(t){return t&&t.__esModule?t:{\"default\":t}}function o(t,e){return t.indexOf(e)>=0}function i(t){return function(){return!t.apply(this,arguments)}}function u(t,e,n){for(var r={},o=(0,m[\"default\"])(t),i=0,u=o.length;u>i;i++){var c=o[i],s=t[c];n(e,c)&&(r[c]=s)}return r}function c(t,e){return u(t,e,o)}function s(t,e){return u(t,e,i(o))}function a(t){if(\"object\"==(\"undefined\"==typeof t?\"undefined\":(0,b[\"default\"])(t))&&null!==t){if(\"function\"==typeof y[\"default\"]){var e=(0,y[\"default\"])(t);return e===Object.prototype||null===e}return\"[object Object]\"==Object.prototype.toString.call(t)}return!1}function f(t,e){var n,r,o;n=Array.isArray(t)?[]:{};for(o in t)r=t[o],null!=r&&(\"object\"===(\"undefined\"==typeof r?\"undefined\":(0,b[\"default\"])(r))&&null!==r&&\"function\"!==r.type?n[o]=f(r,e):\"function\"===r.type?n[o]=e[r.name]:n[o]=r);return n}function p(t,e){return\"function\"==typeof t?t:function(n){return\"undefined\"!=typeof n[t]?n[t]:n[e]}}function l(t,e){return console.warn(\"Set margin with prefixes is deprecated use an object instead\"),t+=\"-\",(0,m[\"default\"])(e).reduce(function(n,r){return r.substr(0,t.length)===t&&(n[r.replace(t,\"\")]=e[r]),n},{})}function d(t){return t&&\"function\"==typeof t}Object.defineProperty(e,\"__esModule\",{value:!0}),e.includes=o,e.negate=i,e.filterObject=u,e.pick=c,e.without=s,e.isPlainObject=a,e.bindFunctions=f,e.getValueFunction=p,e.propsByPrefix=l,e.isCallable=d;var h=n(17),y=r(h),v=n(26),b=r(v),g=n(59),m=r(g)},function(t,e,n){t.exports={\"default\":n(60),__esModule:!0}},function(t,e,n){n(61),t.exports=n(7).Object.keys},function(t,e,n){var r=n(12);n(20)(\"keys\",function(t){return function(e){return t(r(e))}})}])});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-nvd3/dist/react-nvd3.min.js\n ** module id = 354\n ** module chunks = 0\n **/"],"sourceRoot":""}