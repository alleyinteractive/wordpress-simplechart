{"version":3,"sources":["webpack:///./node_modules/lodash/cloneDeep.js","webpack:///./node_modules/nvd3/build/nv.d3.js"],"names":["baseClone","__webpack_require__","CLONE_DEEP_FLAG","CLONE_SYMBOLS_FLAG","module","exports","value","nv","dev","tooltip","utils","models","charts","logs","dom","d3","dispatch","Function","prototype","bind","oThis","this","TypeError","aArgs","Array","slice","call","arguments","fToBind","fNOP","fBound","apply","concat","on","e","startTime","Date","endTime","totalTime","log","window","console","length","deprecated","name","info","warn","render","step","active","render_start","renderLoop","chart","graph","i","queue","generate","callback","splice","setTimeout","render_end","addGraph","obj","push","write","undefined","fastdom","mutate","read","measure","interactiveGuideline","margin","left","top","width","height","xScale","scale","linear","showGuideLine","svgContainer","isMSIE","ActiveXObject","layer","selection","each","data","container","select","availableWidth","availableHeight","wrap","selectAll","mouseHandler","mouseX","event","clientX","getBoundingClientRect","mouseY","clientY","subtractMargin","mouseOutAnyReason","offsetX","offsetY","target","tagName","className","baseVal","match","type","relatedTarget","ownerSVGElement","nvPointerEventsClass","elementMouseout","renderGuideLine","hidden","pointXValue","rangeBands","elementIndex","bisect","range","rangeBand","domain","invert","elementMousemove","elementDblclick","elementClick","elementMouseDown","elementMouseUp","enter","append","attr","guideLine","x","line","NaNtoZero","String","d","exit","remove","duration","hideDelay","_","interactiveBisect","values","searchVal","xAccessor","_xAccessor","bisector","v","index","max","currentValue","nextIndex","min","nextValue","Math","abs","nearestValueIndex","threshold","yDistMax","Infinity","indexToHighlight","forEach","delta","id","floor","random","gravity","distance","snapDistance","classes","lastPosition","enabled","headerEnabled","valueFormatter","p","headerFormatter","keyFormatter","contentGenerator","elem","table","document","createElement","classed","html","trowEnter","series","highlight","style","color","total","key","filter","percent","format","opacityScale","node","outerHTML","footer","position","pos","getComputedStyle","body","transform","client","dataSeriesExists","isArray","isObject","positionTooltip","gravityOffset","tmp","offsetHeight","offsetWidth","clientWidth","documentElement","clientHeight","calcGravityOffset","interrupt","transition","delay","old_translate","new_translate","round","translateInterpolator","interpolateString","is_hidden","styleTween","nvtooltip","newContent","innerHTML","options","optionsFunc","_options","Object","create","get","set","chartContainer","fixedTop","offset","point","y","initOptions","windowSize","size","innerWidth","innerHeight","compatMode","a","isFunction","isDate","toString","isNumber","isNaN","windowResize","handler","addEventListener","clear","removeEventListener","getColor","defaultColor","color_scale","ordinal","category20","customTheme","dictionary","getKey","defaultColors","defIndex","pjax","links","content","load","href","fragment","parentNode","replaceChild","history","pushState","textContent","preventDefault","state","calcApproxTextWidth","svgTextElem","text","fontSize","parseInt","replace","textLength","n","watchTransition","renderWatch","args","_duration","renderStack","self","model","m","__rendered","arg","renderEnd","indexOf","reset","pop","every","deepExtend","dst","source","srcObj","_setState","_getState","init","getter","fn","setter","update","settings","JSON","stringify","change","map","calcTicksX","numTicks","numValues","stream_len","calcTicksY","initOption","_calls","_overrides","ops","getOwnPropertyNames","calls","inheritOptionsD3","d3_source","oplist","_d3options","item","ar","unshift","rebind","arrayUnique","sort","symbolMap","symbol","t","s","svg","symbolTypes","functor","inheritOptions","inherited","_inherited","d3ops","initSVG","nvd3-svg","sanitizeHeight","sanitizeWidth","bottom","right","noData","opt","noDataText","wrapTicks","word","words","split","reverse","lineNumber","dy","parseFloat","tspan","join","getComputedTextLength","arrayEquals","array1","array2","l","pointIsInArc","pt","ptData","d3Arc","r1","innerRadius","r2","outerRadius","theta1","startAngle","theta2","endAngle","dist","angle","atan2","PI","axis","tickFormatMaxMin","scale0","axisLabelText","showMaxMin","rotateLabels","rotateYLabel","staggerLabels","isOrdinal","ticks","axisLabelDistance","orient","tickFormat","g","fmt","xLabelMargin","axisMaxMin","w","axisLabel","tickPadding","maxTextWidth","textHeight","xTicks","rotateLabelsRule","box","sin","maxMinRange","err","copy","boxPlot","xDomain","xRange","yDomain","yRange","xScale0","yScale0","yScale","getX","label","getQ1","Q1","getQ2","Q2","getQ3","Q3","getWl","whisker_low","getWh","whisker_high","getOlItems","outliers","getOlValue","j","getOlLabel","getOlColor","maxBoxWidth","yData","q1","q3","wl","wh","olItems","boxplots","boxEnter","hover","f","box_width","box_left","box_right","endpoint","elementMouseover","q2","itemColor","outlierValue","outlierLabel","outlierColor","boxPlotChart","boxplot","xAxis","yAxis","showXAxis","showYAxis","rightAlignYAxis","beforeUpdate","clamp","gEnter","defsEnter","datum","disabled","tickSize","evt","tooltipContent","bullet","ranges","markers","markerLines","measures","rangeLabels","markerLabels","markerLineLabels","measureLabels","forceX","defaultRangeLabels","legacyRangeClassNames","sortLabels","labels","lz","b","iA","iB","descending","rangez","markerz","markerLinez","measurez","rangeLabelz","markerLabelz","markerLineLabelz","measureLabelz","x1","extent","merge","__chart__","il","rangeClassNames","w1","xp1","h3","markerData","marker","markerLinesData","bulletChart","x0","title","subtitle","bulletWrap","tick","tickEnter","tickUpdate","timer","flush","candlestickBar","getY","getOpen","open","getClose","close","getHigh","high","getLow","low","forceY","padData","clipEdge","interactive","barWidth","wrapEnter","chartClick","tickGroups","highlightPoint","pointIndex","isHoverOver","clearHighlights","cumulativeLineChart","lines","legend","controls","interactiveLayer","marginTop","showLegend","showControls","useInteractiveGuideline","rescaleY","defaultState","average","noErrorCheck","updateState","currentYDomain","dx","stateGetter","stateSetter","indexDrag","behavior","drag","updateZero","stateChange","idx","indexifyYGetter","indexValue","tempDisabled","display","indexify","getCurrentYDomain","interactivePointerEvents","controlsData","rightAlign","linesWrap","seriesIndex","avgLineData","avgLines","getAvgLineY","yVal","indexLine","oldDuration","_ticks","mouse","newState","singlePoint","pointXLocation","allData","yValue","xValue","seriesDomains","useVoronoi","discreteBar","y0","showValues","valueFormat","rectClass","seriesData","groups","bars","barsEnter","element","stopPropagation","elementDblClick","discreteBarChart","discretebar","wrapLabels","distribution","getData","naxis","distWrap","focus","brush","brushExtent","syncBrushing","pointActive","contentWrap","onBrush","empty","brushBG","brushBGenter","gBrush","shouldDispatch","leftWidth","rightWidth","interpolate","xTickFormat","yTickFormat","forceDirectedGraph","linkStrength","friction","linkDist","charge","theta","alpha","radius","nodeExtras","nodes","linkExtras","nodeFieldSet","Set","keys","add","force","layout","linkDistance","start","link","sqrt","py","px","nodeColor","field","furiousLegend","maxKeyLength","align","padding","radioButtonMode","expanded","vers","setTextColor","disengaged","setBGColor","seriesShape","seriesEnter","property","versPadding","seriesText","legendMouseover","legendMouseout","legendClick","userDisabled","legendDblclick","seriesWidths","legendText","nodeTextLength","trimmedKey","substring","Error","seriesPerRow","legendWidth","columnWidths","k","reduce","prev","cur","array","xPositions","curX","ceil","xpos","ypos","newxpos","maxwidth","historicalBar","rval","historicalBarChart","bar_model","transitionDuration","tooltipHide","ohlcBarChart","ohlcBar","candlestickBarChart","enableDoubleClick","setBGOpacity","insert","scatter","strokeWidth","defined","isArea","area","pointSize","pointDomain","scatterWrap","fillOpacity","areaPaths","y1","linePaths","lineChart","legendPosition","focusEnable","focusEnter","updateXAxis","updateYAxis","disableTooltip","currentValues","pointYValue","yPos","x2Axis","y2Axis","focusHeight","focusShowAxisX","focusShowAxisY","focusMargin","lineWithFocusChart","linePlusBarChart","x2","y2","y3","y4","lines2","bars2","y1Axis","y3Axis","y4Axis","margin2","legendLeftAxisHint","legendRightAxisHint","switchYAxisOrder","allDisabled","availableHeight1","availableHeight2","dataBars","bar","dataLines","series1","series2","contextEnter","legendXPosition","originalKey","bars2Wrap","lines2Wrap","dataLine","focusBarsWrap","focusLinesWrap","barsOpacity","linesOpacity","y1Opacity","y2Opacity","main","getLinesAxis","getBarsAxis","multiBar","stacked","stackOffset","hideable","barColor","groupSpacing","last_datalength","nonStackableCount","parsed","stack","nonStackable","nonStackableSeries","posBase","negBase","exitTransition","rgb","darker","barSelection","multiBarChart","multibar","controlLabels","reduceXTicks","controlWidth","grouped","getTranslate","totalInBetweenTicks","multiBarHorizontal","getYerr","yErr","showBarLabels","valuePadding","xerr","mid","path","yerr","multiBarHorizontalChart","controlsPosition","multiChart","yDomain1","yDomain2","yScale1","yScale2","lines1","scatters1","scatters2","bars1","stack1","stackedArea","stack2","yAxis1","yAxis2","dataLines1","dataLines2","dataScatters1","dataScatters2","dataBars1","dataBars2","dataStack1","dataStack2","color_array","lines1Wrap","scatters1Wrap","bars1Wrap","stack1Wrap","scatters2Wrap","stack2Wrap","extraValue1BarStacked","aVal","extraValue2BarStacked","mouseover_line","yaxis","mouseover_scatter","mouseover_stack","mouseover_bar","serieIndex","parallelCoordinates","foreground","background","dimensions","undefinedValuesLabel","dimensionData","enabledDimensions","dimensionNames","displayBrush","filters","dragging","axisWithUndefinedValues","lineTension","newData","val","dataValues","currentPosition","rangePoints","oldDomainMaxValue","displayMissingValuesline","currentTicks","onlyUndefinedValues","dimension","hasOnlyNaN","hasNaN","brushstart","brushend","tension","missingValuesline","missingValueslineText","axisDrag","__origin__","dimensionPosition","dimensionsOrder","lineData","dimensionsEnter","restoreBrush","actives","extents","formerActive","newscale","visible","brushDomain","updateTicks","isActive","hasActiveBrush","brushEnd","tickValues","activeChanged","dimensionFormats","parallelCoordinatesChart","nanValue","originalPosition","isSorted","str","tp","dim","dd","pie","showLabels","labelsOutside","labelType","labelThreshold","hideOverlapLabels","donut","growOnHover","titleOffset","labelSunbeamLayout","padAngle","cornerRadius","donutRatio","arcsRadius","arcs","arcsOver","arcsRadiusOuter","arcsRadiusInner","outer","inner","g_pie","arc","arcOver","slices","pieLabels","ae","_current","attrTween","labelsArc","group","rotateAngle","centroid","labelLocationHash","createHashKey","coordinates","getSlicePercentage","center","hashKey","getBBox","bb","topLeft","topRight","bottomLeft","bottomRight","pieLabelsOutside","donutLabelsOutside","labelFormat","pieChart","showTooltipPercent","pieWrap","sankey","nodeWidth","nodePadding","sinksRight","iterations","sourceLinks","targetLinks","sum","nextNodes","kx","remainingNodes","moveSinksRight","computeNodeBreadths","ky","nodesByBreadth","nest","sortKeys","ascending","entries","resolveCollisions","computeLinkDepths","relaxRightToLeft","relaxLeftToRight","weightedSource","sy","breadth","weightedTarget","ty","ascendingDepth","computeNodeDepths","curvature","xi","interpolateNumber","x3","ascendingSourceDepth","ascendingTargetDepth","relayout","sankeyChart","units","formatNumber","linkTitle","nodeFillColor","nodeStrokeColor","nodeTitle","showError","message","testData","isDataValid","dataAvailable","error","origin","appendChild","nodeStyle","fillColor","strokeColor","z0","xDom","yDom","width0","height0","timeoutID","pointBorderColor","z","getSize","getShape","shape","forceSize","notActive","padDataOuter","clipVoronoi","showVoronoi","clipRadius","sizeDomain","sizeRange","interactiveUpdateDelay","needsUpdate","_sizeRange_def","_cache","delCache","getDiffs","cache","getCache","diffs","hasOwnProperty","logScale","scaleDiff","sizeDiff","domainDiff","updateInteractiveLayer","vertices","groupIndex","pX","pY","pointArray","bounds","geom","polygon","voronoi","clip","pointPaths","vPointPaths","mouseEventCallback","el","mDispatch","scrollTop","pageYOffset","scrollLeft","pageXOffset","relativePos","points","titles","clearTimeout","pointScale","pointRange","forcePoint","pointShape","scatterChart","distX","distY","showDistX","showDistY","regWrap","regLine","intercept","slope","sparkline","animate","showMinMaxPoints","showCurrentPoint","paths","yValues","result","maxPoint","lastIndexOf","minPoint","currentPoint","sparklinePlus","paused","showLastValue","alignValue","rightAlignValue","sparklineWrap","updateValueLine","hoverValue","hoverEnter","closestIndex","getClosestIndex","order","dataRaw","aseries","dataFiltered","out","zeroArea","areaMouseover","pageX","pageY","areaMouseout","areaClick","d3_stackedOffset_stackPercent","stackData","o","stackedAreaChart","showTotalInTooltip","totalLabel","controlOptions","oldYTickFormat","oldValueFormatter","percentFormatter","xAxisHeight","legendTop","metaKey","stream","stack_percent","requiredTop","stackedWrap","currentFormat","valueSum","allNullValues","atleastOnePoint","tooltipValue","stackedY0","stackedY","stackedAreaWithFocusChart","sunburst","mode","modes","count","d1","d2","parent","groupColorByParent","partition","prevPositions","rotationToAvoidUpsideDown","computeCenterAngle","computeNodePercentage","labelThresholdMatched","arcTweenZoom","xd","yd","yr","arcTweenUpdate","ipo","dx0","dy0","storeRetrievePrevPositions","pP","updatePrevPosition","zoomClick","depth","centerAngle","rotation","cG","children","sunburstChart","version"],"mappings":"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","file":"3.6312bfc.chunk.js","sourcesContent":["var baseClone = require('./_baseClone');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = cloneDeep;\n","/* nvd3 version 1.8.6 (https://github.com/novus/nvd3) 2017-08-23 */\n(function(){\n\n// set up main nv object\nvar nv = {};\n\n// the major global objects under the nv namespace\nnv.dev = false; //set false when in production\nnv.tooltip = nv.tooltip || {}; // For the tooltip system\nnv.utils = nv.utils || {}; // Utility subsystem\nnv.models = nv.models || {}; //stores all the possible models/components\nnv.charts = {}; //stores all the ready to use charts\nnv.logs = {}; //stores some statistics and potential error messages\nnv.dom = {}; //DOM manipulation functions\n\n// Node/CommonJS - require D3\nif (typeof(module) !== 'undefined' && typeof(exports) !== 'undefined' && typeof(d3) == 'undefined') {\n    d3 = require('d3');\n}\n\nnv.dispatch = d3.dispatch('render_start', 'render_end');\n\n// Function bind polyfill\n// Needed ONLY for phantomJS as it's missing until version 2.0 which is unreleased as of this comment\n// https://github.com/ariya/phantomjs/issues/10522\n// http://kangax.github.io/compat-table/es5/#Function.prototype.bind\n// phantomJS is used for running the test suite\nif (!Function.prototype.bind) {\n    Function.prototype.bind = function (oThis) {\n        if (typeof this !== \"function\") {\n            // closest thing possible to the ECMAScript 5 internal IsCallable function\n            throw new TypeError(\"Function.prototype.bind - what is trying to be bound is not callable\");\n        }\n\n        var aArgs = Array.prototype.slice.call(arguments, 1),\n            fToBind = this,\n            fNOP = function () {},\n            fBound = function () {\n                return fToBind.apply(this instanceof fNOP && oThis\n                        ? this\n                        : oThis,\n                    aArgs.concat(Array.prototype.slice.call(arguments)));\n            };\n\n        fNOP.prototype = this.prototype;\n        fBound.prototype = new fNOP();\n        return fBound;\n    };\n}\n\n//  Development render timers - disabled if dev = false\nif (nv.dev) {\n    nv.dispatch.on('render_start', function(e) {\n        nv.logs.startTime = +new Date();\n    });\n\n    nv.dispatch.on('render_end', function(e) {\n        nv.logs.endTime = +new Date();\n        nv.logs.totalTime = nv.logs.endTime - nv.logs.startTime;\n        nv.log('total', nv.logs.totalTime); // used for development, to keep track of graph generation times\n    });\n}\n\n// Logs all arguments, and returns the last so you can test things in place\n// Note: in IE8 console.log is an object not a function, and if modernizr is used\n// then calling Function.prototype.bind with with anything other than a function\n// causes a TypeError to be thrown.\nnv.log = function() {\n    if (nv.dev && window.console && console.log && console.log.apply)\n        console.log.apply(console, arguments);\n    else if (nv.dev && window.console && typeof console.log == \"function\" && Function.prototype.bind) {\n        var log = Function.prototype.bind.call(console.log, console);\n        log.apply(console, arguments);\n    }\n    return arguments[arguments.length - 1];\n};\n\n// print console warning, should be used by deprecated functions\nnv.deprecated = function(name, info) {\n    if (console && console.warn) {\n        console.warn('nvd3 warning: `' + name + '` has been deprecated. ', info || '');\n    }\n};\n\n// The nv.render function is used to queue up chart rendering\n// in non-blocking async functions.\n// When all queued charts are done rendering, nv.dispatch.render_end is invoked.\nnv.render = function render(step) {\n    // number of graphs to generate in each timeout loop\n    step = step || 1;\n\n    nv.render.active = true;\n    nv.dispatch.render_start();\n\n    var renderLoop = function() {\n        var chart, graph;\n\n        for (var i = 0; i < step && (graph = nv.render.queue[i]); i++) {\n            chart = graph.generate();\n            if (typeof graph.callback == typeof(Function)) graph.callback(chart);\n        }\n\n        nv.render.queue.splice(0, i);\n\n        if (nv.render.queue.length) {\n            setTimeout(renderLoop);\n        }\n        else {\n            nv.dispatch.render_end();\n            nv.render.active = false;\n        }\n    };\n\n    setTimeout(renderLoop);\n};\n\nnv.render.active = false;\nnv.render.queue = [];\n\n/*\nAdds a chart to the async rendering queue. This method can take arguments in two forms:\nnv.addGraph({\n    generate: <Function>\n    callback: <Function>\n})\n\nor\n\nnv.addGraph(<generate Function>, <callback Function>)\n\nThe generate function should contain code that creates the NVD3 model, sets options\non it, adds data to an SVG element, and invokes the chart model. The generate function\nshould return the chart model.  See examples/lineChart.html for a usage example.\n\nThe callback function is optional, and it is called when the generate function completes.\n*/\nnv.addGraph = function(obj) {\n    if (typeof arguments[0] === typeof(Function)) {\n        obj = {generate: arguments[0], callback: arguments[1]};\n    }\n\n    nv.render.queue.push(obj);\n\n    if (!nv.render.active) {\n        nv.render();\n    }\n};\n\n// Node/CommonJS exports\nif (typeof(module) !== 'undefined' && typeof(exports) !== 'undefined') {\n  module.exports = nv;\n}\n\nif (typeof(window) !== 'undefined') {\n  window.nv = nv;\n}\n/* Facade for queueing DOM write operations\r\n * with Fastdom (https://github.com/wilsonpage/fastdom)\r\n * if available.\r\n * This could easily be extended to support alternate\r\n * implementations in the future.\r\n */\r\nnv.dom.write = function(callback) {\r\n\tif (window.fastdom !== undefined) {\r\n\t\treturn fastdom.mutate(callback);\r\n\t}\r\n\treturn callback();\r\n};\r\n\r\n/* Facade for queueing DOM read operations\r\n * with Fastdom (https://github.com/wilsonpage/fastdom)\r\n * if available.\r\n * This could easily be extended to support alternate\r\n * implementations in the future.\r\n */\r\nnv.dom.read = function(callback) {\r\n\tif (window.fastdom !== undefined) {\r\n\t\treturn fastdom.measure(callback);\r\n\t}\r\n\treturn callback();\r\n};\r\n/* Utility class to handle creation of an interactive layer.\n This places a rectangle on top of the chart. When you mouse move over it, it sends a dispatch\n containing the X-coordinate. It can also render a vertical line where the mouse is located.\n\n dispatch.elementMousemove is the important event to latch onto.  It is fired whenever the mouse moves over\n the rectangle. The dispatch is given one object which contains the mouseX/Y location.\n It also has 'pointXValue', which is the conversion of mouseX to the x-axis scale.\n */\nnv.interactiveGuideline = function() {\n    \"use strict\";\n\n    var margin = { left: 0, top: 0 } //Pass the chart's top and left magins. Used to calculate the mouseX/Y.\n        ,   width = null\n        ,   height = null\n        ,   xScale = d3.scale.linear()\n        ,   dispatch = d3.dispatch('elementMousemove', 'elementMouseout', 'elementClick', 'elementDblclick', 'elementMouseDown', 'elementMouseUp')\n        ,   showGuideLine = true\n        ,   svgContainer = null // Must pass the chart's svg, we'll use its mousemove event.\n        ,   tooltip = nv.models.tooltip()\n        ,   isMSIE =  window.ActiveXObject// Checkt if IE by looking for activeX. (excludes IE11)\n    ;\n\n    tooltip\n        .duration(0)\n        .hideDelay(0)\n        .hidden(false);\n\n    function layer(selection) {\n        selection.each(function(data) {\n            var container = d3.select(this);\n            var availableWidth = (width || 960), availableHeight = (height || 400);\n            var wrap = container.selectAll(\"g.nv-wrap.nv-interactiveLineLayer\")\n                .data([data]);\n            var wrapEnter = wrap.enter()\n                .append(\"g\").attr(\"class\", \" nv-wrap nv-interactiveLineLayer\");\n            wrapEnter.append(\"g\").attr(\"class\",\"nv-interactiveGuideLine\");\n\n            if (!svgContainer) {\n                return;\n            }\n\n            function mouseHandler() {\n                var mouseX = d3.event.clientX - this.getBoundingClientRect().left;\n                var mouseY = d3.event.clientY - this.getBoundingClientRect().top;\n\n                var subtractMargin = true;\n                var mouseOutAnyReason = false;\n                if (isMSIE) {\n                    /*\n                     D3.js (or maybe SVG.getScreenCTM) has a nasty bug in Internet Explorer 10.\n                     d3.mouse() returns incorrect X,Y mouse coordinates when mouse moving\n                     over a rect in IE 10.\n                     However, d3.event.offsetX/Y also returns the mouse coordinates\n                     relative to the triggering <rect>. So we use offsetX/Y on IE.\n                     */\n                    mouseX = d3.event.offsetX;\n                    mouseY = d3.event.offsetY;\n\n                    /*\n                     On IE, if you attach a mouse event listener to the <svg> container,\n                     it will actually trigger it for all the child elements (like <path>, <circle>, etc).\n                     When this happens on IE, the offsetX/Y is set to where ever the child element\n                     is located.\n                     As a result, we do NOT need to subtract margins to figure out the mouse X/Y\n                     position under this scenario. Removing the line below *will* cause\n                     the interactive layer to not work right on IE.\n                     */\n                    if(d3.event.target.tagName !== \"svg\") {\n                        subtractMargin = false;\n                    }\n\n                    if (d3.event.target.className.baseVal.match(\"nv-legend\")) {\n                        mouseOutAnyReason = true;\n                    }\n\n                }\n\n                if(subtractMargin) {\n                    mouseX -= margin.left;\n                    mouseY -= margin.top;\n                }\n\n                /* If mouseX/Y is outside of the chart's bounds,\n                 trigger a mouseOut event.\n                 */\n                if (d3.event.type === 'mouseout'\n                    || mouseX < 0 || mouseY < 0\n                    || mouseX > availableWidth || mouseY > availableHeight\n                    || (d3.event.relatedTarget && d3.event.relatedTarget.ownerSVGElement === undefined)\n                    || mouseOutAnyReason\n                    ) {\n\n                    if (isMSIE) {\n                        if (d3.event.relatedTarget\n                            && d3.event.relatedTarget.ownerSVGElement === undefined\n                            && (d3.event.relatedTarget.className === undefined\n                                || d3.event.relatedTarget.className.match(tooltip.nvPointerEventsClass))) {\n\n                            return;\n                        }\n                    }\n                    dispatch.elementMouseout({\n                        mouseX: mouseX,\n                        mouseY: mouseY\n                    });\n                    layer.renderGuideLine(null); //hide the guideline\n                    tooltip.hidden(true);\n                    return;\n                } else {\n                    tooltip.hidden(false);\n                }\n\n\n                var scaleIsOrdinal = typeof xScale.rangeBands === 'function';\n                var pointXValue = undefined;\n\n                // Ordinal scale has no invert method\n                if (scaleIsOrdinal) {\n                    var elementIndex = d3.bisect(xScale.range(), mouseX) - 1;\n                    // Check if mouseX is in the range band\n                    if (xScale.range()[elementIndex] + xScale.rangeBand() >= mouseX) {\n                        pointXValue = xScale.domain()[d3.bisect(xScale.range(), mouseX) - 1];\n                    }\n                    else {\n                        dispatch.elementMouseout({\n                            mouseX: mouseX,\n                            mouseY: mouseY\n                        });\n                        layer.renderGuideLine(null); //hide the guideline\n                        tooltip.hidden(true);\n                        return;\n                    }\n                }\n                else {\n                    pointXValue = xScale.invert(mouseX);\n                }\n\n                dispatch.elementMousemove({\n                    mouseX: mouseX,\n                    mouseY: mouseY,\n                    pointXValue: pointXValue\n                });\n\n                //If user double clicks the layer, fire a elementDblclick\n                if (d3.event.type === \"dblclick\") {\n                    dispatch.elementDblclick({\n                        mouseX: mouseX,\n                        mouseY: mouseY,\n                        pointXValue: pointXValue\n                    });\n                }\n\n                // if user single clicks the layer, fire elementClick\n                if (d3.event.type === 'click') {\n                    dispatch.elementClick({\n                        mouseX: mouseX,\n                        mouseY: mouseY,\n                        pointXValue: pointXValue\n                    });\n                }\n\n                // if user presses mouse down the layer, fire elementMouseDown\n                if (d3.event.type === 'mousedown') {\n                \tdispatch.elementMouseDown({\n                \t\tmouseX: mouseX,\n                \t\tmouseY: mouseY,\n                \t\tpointXValue: pointXValue\n                \t});\n                }\n\n                // if user presses mouse down the layer, fire elementMouseUp\n                if (d3.event.type === 'mouseup') {\n                \tdispatch.elementMouseUp({\n                \t\tmouseX: mouseX,\n                \t\tmouseY: mouseY,\n                \t\tpointXValue: pointXValue\n                \t});\n                }\n            }\n\n            svgContainer\n                .on(\"touchmove\",mouseHandler)\n                .on(\"mousemove\",mouseHandler, true)\n                .on(\"mouseout\" ,mouseHandler,true)\n                .on(\"mousedown\" ,mouseHandler,true)\n                .on(\"mouseup\" ,mouseHandler,true)\n                .on(\"dblclick\" ,mouseHandler)\n                .on(\"click\", mouseHandler)\n            ;\n\n            layer.guideLine = null;\n            //Draws a vertical guideline at the given X postion.\n            layer.renderGuideLine = function(x) {\n                if (!showGuideLine) return;\n                if (layer.guideLine && layer.guideLine.attr(\"x1\") === x) return;\n                nv.dom.write(function() {\n                    var line = wrap.select(\".nv-interactiveGuideLine\")\n                        .selectAll(\"line\")\n                        .data((x != null) ? [nv.utils.NaNtoZero(x)] : [], String);\n                    line.enter()\n                        .append(\"line\")\n                        .attr(\"class\", \"nv-guideline\")\n                        .attr(\"x1\", function(d) { return d;})\n                        .attr(\"x2\", function(d) { return d;})\n                        .attr(\"y1\", availableHeight)\n                        .attr(\"y2\",0);\n                    line.exit().remove();\n                });\n            }\n        });\n    }\n\n    layer.dispatch = dispatch;\n    layer.tooltip = tooltip;\n\n    layer.margin = function(_) {\n        if (!arguments.length) return margin;\n        margin.top    = typeof _.top    != 'undefined' ? _.top    : margin.top;\n        margin.left   = typeof _.left   != 'undefined' ? _.left   : margin.left;\n        return layer;\n    };\n\n    layer.width = function(_) {\n        if (!arguments.length) return width;\n        width = _;\n        return layer;\n    };\n\n    layer.height = function(_) {\n        if (!arguments.length) return height;\n        height = _;\n        return layer;\n    };\n\n    layer.xScale = function(_) {\n        if (!arguments.length) return xScale;\n        xScale = _;\n        return layer;\n    };\n\n    layer.showGuideLine = function(_) {\n        if (!arguments.length) return showGuideLine;\n        showGuideLine = _;\n        return layer;\n    };\n\n    layer.svgContainer = function(_) {\n        if (!arguments.length) return svgContainer;\n        svgContainer = _;\n        return layer;\n    };\n\n    return layer;\n};\n\n/* Utility class that uses d3.bisect to find the index in a given array, where a search value can be inserted.\n This is different from normal bisectLeft; this function finds the nearest index to insert the search value.\n\n For instance, lets say your array is [1,2,3,5,10,30], and you search for 28.\n Normal d3.bisectLeft will return 4, because 28 is inserted after the number 10.  But interactiveBisect will return 5\n because 28 is closer to 30 than 10.\n\n Unit tests can be found in: interactiveBisectTest.html\n\n Has the following known issues:\n * Will not work if the data points move backwards (ie, 10,9,8,7, etc) or if the data points are in random order.\n * Won't work if there are duplicate x coordinate values.\n */\nnv.interactiveBisect = function (values, searchVal, xAccessor) {\n    \"use strict\";\n    if (! (values instanceof Array)) {\n        return null;\n    }\n    var _xAccessor;\n    if (typeof xAccessor !== 'function') {\n        _xAccessor = function(d) {\n            return d.x;\n        }\n    } else {\n        _xAccessor = xAccessor;\n    }\n    var _cmp = function(d, v) {\n        // Accessors are no longer passed the index of the element along with\n        // the element itself when invoked by d3.bisector.\n        //\n        // Starting at D3 v3.4.4, d3.bisector() started inspecting the\n        // function passed to determine if it should consider it an accessor\n        // or a comparator. This meant that accessors that take two arguments\n        // (expecting an index as the second parameter) are treated as\n        // comparators where the second argument is the search value against\n        // which the first argument is compared.\n        return _xAccessor(d) - v;\n    };\n\n    var bisect = d3.bisector(_cmp).left;\n    var index = d3.max([0, bisect(values,searchVal) - 1]);\n    var currentValue = _xAccessor(values[index]);\n\n    if (typeof currentValue === 'undefined') {\n        currentValue = index;\n    }\n\n    if (currentValue === searchVal) {\n        return index; //found exact match\n    }\n\n    var nextIndex = d3.min([index+1, values.length - 1]);\n    var nextValue = _xAccessor(values[nextIndex]);\n\n    if (typeof nextValue === 'undefined') {\n        nextValue = nextIndex;\n    }\n\n    if (Math.abs(nextValue - searchVal) >= Math.abs(currentValue - searchVal)) {\n        return index;\n    } else {\n        return nextIndex\n    }\n};\n\n/*\n Returns the index in the array \"values\" that is closest to searchVal.\n Only returns an index if searchVal is within some \"threshold\".\n Otherwise, returns null.\n */\nnv.nearestValueIndex = function (values, searchVal, threshold) {\n    \"use strict\";\n    var yDistMax = Infinity, indexToHighlight = null;\n    values.forEach(function(d,i) {\n        var delta = Math.abs(searchVal - d);\n        if ( d != null && delta <= yDistMax && delta < threshold) {\n            yDistMax = delta;\n            indexToHighlight = i;\n        }\n    });\n    return indexToHighlight;\n};\n\n/* Model which can be instantiated to handle tooltip rendering.\n Example usage:\n var tip = nv.models.tooltip().gravity('w').distance(23)\n .data(myDataObject);\n\n tip();    //just invoke the returned function to render tooltip.\n */\nnv.models.tooltip = function() {\n    \"use strict\";\n\n    /*\n    Tooltip data. If data is given in the proper format, a consistent tooltip is generated.\n    Example Format of data:\n    {\n        key: \"Date\",\n        value: \"August 2009\",\n        series: [\n            {key: \"Series 1\", value: \"Value 1\", color: \"#000\"},\n            {key: \"Series 2\", value: \"Value 2\", color: \"#00f\"}\n        ]\n    }\n    */\n    var id = \"nvtooltip-\" + Math.floor(Math.random() * 100000) // Generates a unique id when you create a new tooltip() object.\n        ,   data = null\n        ,   gravity = 'w'   // Can be 'n','s','e','w'. Determines how tooltip is positioned.\n        ,   distance = 25 // Distance to offset tooltip from the mouse location.\n        ,   snapDistance = 0   // Tolerance allowed before tooltip is moved from its current position (creates 'snapping' effect)\n        ,   classes = null  // Attaches additional CSS classes to the tooltip DIV that is created.\n        ,   hidden = true  // Start off hidden, toggle with hide/show functions below.\n        ,   hideDelay = 200  // Delay (in ms) before the tooltip hides after calling hide().\n        ,   tooltip = null // d3 select of the tooltip div.\n        ,   lastPosition = { left: null, top: null } // Last position the tooltip was in.\n        ,   enabled = true  // True -> tooltips are rendered. False -> don't render tooltips.\n        ,   duration = 100 // Tooltip movement duration, in ms.\n        ,   headerEnabled = true // If is to show the tooltip header.\n        ,   nvPointerEventsClass = \"nv-pointer-events-none\" // CSS class to specify whether element should not have mouse events.\n    ;\n\n    // Format function for the tooltip values column.\n    // d is value,\n    // i is series index\n    // p is point containing the value\n    var valueFormatter = function(d, i, p) {\n        return d;\n    };\n\n    // Format function for the tooltip header value.\n    var headerFormatter = function(d) {\n        return d;\n    };\n\n    var keyFormatter = function(d, i) {\n        return d;\n    };\n\n    // By default, the tooltip model renders a beautiful table inside a DIV, returned as HTML\n    // You can override this function if a custom tooltip is desired. For instance, you could directly manipulate\n    // the DOM by accessing elem and returning false.\n    var contentGenerator = function(d, elem) {\n        if (d === null) {\n            return '';\n        }\n\n        var table = d3.select(document.createElement(\"table\"));\n        if (headerEnabled) {\n            var theadEnter = table.selectAll(\"thead\")\n                .data([d])\n                .enter().append(\"thead\");\n\n            theadEnter.append(\"tr\")\n                .append(\"td\")\n                .attr(\"colspan\", 3)\n                .append(\"strong\")\n                .classed(\"x-value\", true)\n                .html(headerFormatter(d.value));\n        }\n\n        var tbodyEnter = table.selectAll(\"tbody\")\n            .data([d])\n            .enter().append(\"tbody\");\n\n        var trowEnter = tbodyEnter.selectAll(\"tr\")\n                .data(function(p) { return p.series})\n                .enter()\n                .append(\"tr\")\n                .classed(\"highlight\", function(p) { return p.highlight});\n\n        trowEnter.append(\"td\")\n            .classed(\"legend-color-guide\",true)\n            .append(\"div\")\n            .style(\"background-color\", function(p) { return p.color});\n\n        trowEnter.append(\"td\")\n            .classed(\"key\",true)\n            .classed(\"total\",function(p) { return !!p.total})\n            .html(function(p, i) { return keyFormatter(p.key, i)});\n\n        trowEnter.append(\"td\")\n            .classed(\"value\",true)\n            .html(function(p, i) { return valueFormatter(p.value, i, p) });\n\n        trowEnter.filter(function (p,i) { return p.percent !== undefined }).append(\"td\")\n            .classed(\"percent\", true)\n            .html(function(p, i) { return \"(\" + d3.format('%')(p.percent) + \")\" });\n\n        trowEnter.selectAll(\"td\").each(function(p) {\n            if (p.highlight) {\n                var opacityScale = d3.scale.linear().domain([0,1]).range([\"#fff\",p.color]);\n                var opacity = 0.6;\n                d3.select(this)\n                    .style(\"border-bottom-color\", opacityScale(opacity))\n                    .style(\"border-top-color\", opacityScale(opacity))\n                ;\n            }\n        });\n\n        var html = table.node().outerHTML;\n        if (d.footer !== undefined)\n            html += \"<div class='footer'>\" + d.footer + \"</div>\";\n        return html;\n\n    };\n\n    /*\n     Function that returns the position (relative to the viewport/document.body)\n     the tooltip should be placed in.\n     Should return: {\n        left: <leftPos>,\n        top: <topPos>\n     }\n     */\n    var position = function() {\n        var pos = {\n            left: d3.event !== null ? d3.event.clientX : 0,\n            top: d3.event !== null ? d3.event.clientY : 0\n        };\n\n        if(getComputedStyle(document.body).transform != 'none') {\n            // Take the offset into account, as now the tooltip is relative\n            // to document.body.\n            var client = document.body.getBoundingClientRect();\n            pos.left -= client.left;\n            pos.top -= client.top;\n        }\n\n        return pos;\n    };\n\n    var dataSeriesExists = function(d) {\n        if (d && d.series) {\n            if (nv.utils.isArray(d.series)) {\n                return true;\n            }\n            // if object, it's okay just convert to array of the object\n            if (nv.utils.isObject(d.series)) {\n                d.series = [d.series];\n                return true;\n            }\n        }\n        return false;\n    };\n\n    // Calculates the gravity offset of the tooltip. Parameter is position of tooltip\n    // relative to the viewport.\n    var calcGravityOffset = function(pos) {\n        var height = tooltip.node().offsetHeight,\n            width = tooltip.node().offsetWidth,\n            clientWidth = document.documentElement.clientWidth, // Don't want scrollbars.\n            clientHeight = document.documentElement.clientHeight, // Don't want scrollbars.\n            left, top, tmp;\n\n        // calculate position based on gravity\n        switch (gravity) {\n            case 'e':\n                left = - width - distance;\n                top = - (height / 2);\n                if(pos.left + left < 0) left = distance;\n                if((tmp = pos.top + top) < 0) top -= tmp;\n                if((tmp = pos.top + top + height) > clientHeight) top -= tmp - clientHeight;\n                break;\n            case 'w':\n                left = distance;\n                top = - (height / 2);\n                if (pos.left + left + width > clientWidth) left = - width - distance;\n                if ((tmp = pos.top + top) < 0) top -= tmp;\n                if ((tmp = pos.top + top + height) > clientHeight) top -= tmp - clientHeight;\n                break;\n            case 'n':\n                left = - (width / 2) - 5; // - 5 is an approximation of the mouse's height.\n                top = distance;\n                if (pos.top + top + height > clientHeight) top = - height - distance;\n                if ((tmp = pos.left + left) < 0) left -= tmp;\n                if ((tmp = pos.left + left + width) > clientWidth) left -= tmp - clientWidth;\n                break;\n            case 's':\n                left = - (width / 2);\n                top = - height - distance;\n                if (pos.top + top < 0) top = distance;\n                if ((tmp = pos.left + left) < 0) left -= tmp;\n                if ((tmp = pos.left + left + width) > clientWidth) left -= tmp - clientWidth;\n                break;\n            case 'center':\n                left = - (width / 2);\n                top = - (height / 2);\n                break;\n            default:\n                left = 0;\n                top = 0;\n                break;\n        }\n\n        return { 'left': left, 'top': top };\n    };\n\n    /*\n     Positions the tooltip in the correct place, as given by the position() function.\n     */\n    var positionTooltip = function() {\n        nv.dom.read(function() {\n            var pos = position(),\n                gravityOffset = calcGravityOffset(pos),\n                left = pos.left + gravityOffset.left,\n                top = pos.top + gravityOffset.top;\n\n            // delay hiding a bit to avoid flickering\n            if (hidden) {\n                tooltip\n                    .interrupt()\n                    .transition()\n                    .delay(hideDelay)\n                    .duration(0)\n                    .style('opacity', 0);\n            } else {\n                // using tooltip.style('transform') returns values un-usable for tween\n                var old_translate = 'translate(' + lastPosition.left + 'px, ' + lastPosition.top + 'px)';\n                var new_translate = 'translate(' + Math.round(left) + 'px, ' + Math.round(top) + 'px)';\n                var translateInterpolator = d3.interpolateString(old_translate, new_translate);\n                var is_hidden = tooltip.style('opacity') < 0.1;\n\n                tooltip\n                    .interrupt() // cancel running transitions\n                    .transition()\n                    .duration(is_hidden ? 0 : duration)\n                    // using tween since some versions of d3 can't auto-tween a translate on a div\n                    .styleTween('transform', function (d) {\n                        return translateInterpolator;\n                    }, 'important')\n                    // Safari has its own `-webkit-transform` and does not support `transform`\n                    .styleTween('-webkit-transform', function (d) {\n                        return translateInterpolator;\n                    })\n                    .style('-ms-transform', new_translate)\n                    .style('opacity', 1);\n            }\n\n            lastPosition.left = left;\n            lastPosition.top = top;\n        });\n    };\n\n    // Creates new tooltip container, or uses existing one on DOM.\n    function initTooltip() {\n        if (!tooltip || !tooltip.node()) {\n            // Create new tooltip div if it doesn't exist on DOM.\n\n            var data = [1];\n            tooltip = d3.select(document.body).select('#'+id).data(data);\n\n            tooltip.enter().append('div')\n                   .attr(\"class\", \"nvtooltip \" + (classes ? classes : \"xy-tooltip\"))\n                   .attr(\"id\", id)\n                   .style(\"top\", 0).style(\"left\", 0)\n                   .style('opacity', 0)\n                   .style('position', 'fixed')\n                   .selectAll(\"div, table, td, tr\").classed(nvPointerEventsClass, true)\n                   .classed(nvPointerEventsClass, true);\n\n            tooltip.exit().remove()\n        }\n    }\n\n    // Draw the tooltip onto the DOM.\n    function nvtooltip() {\n        if (!enabled) return;\n        if (!dataSeriesExists(data)) return;\n\n        nv.dom.write(function () {\n            initTooltip();\n            // Generate data and set it into tooltip.\n            // Bonus - If you override contentGenerator and return false, you can use something like\n            //         Angular, React or Knockout to bind the data for your tooltip directly to the DOM.\n            var newContent = contentGenerator(data, tooltip.node());\n            if (newContent) {\n                tooltip.node().innerHTML = newContent;\n            }\n\n            positionTooltip();\n        });\n\n        return nvtooltip;\n    }\n\n    nvtooltip.nvPointerEventsClass = nvPointerEventsClass;\n    nvtooltip.options = nv.utils.optionsFunc.bind(nvtooltip);\n\n    nvtooltip._options = Object.create({}, {\n        // simple read/write options\n        duration: {get: function(){return duration;}, set: function(_){duration=_;}},\n        gravity: {get: function(){return gravity;}, set: function(_){gravity=_;}},\n        distance: {get: function(){return distance;}, set: function(_){distance=_;}},\n        snapDistance: {get: function(){return snapDistance;}, set: function(_){snapDistance=_;}},\n        classes: {get: function(){return classes;}, set: function(_){classes=_;}},\n        enabled: {get: function(){return enabled;}, set: function(_){enabled=_;}},\n        hideDelay: {get: function(){return hideDelay;}, set: function(_){hideDelay=_;}},\n        contentGenerator: {get: function(){return contentGenerator;}, set: function(_){contentGenerator=_;}},\n        valueFormatter: {get: function(){return valueFormatter;}, set: function(_){valueFormatter=_;}},\n        headerFormatter: {get: function(){return headerFormatter;}, set: function(_){headerFormatter=_;}},\n        keyFormatter: {get: function(){return keyFormatter;}, set: function(_){keyFormatter=_;}},\n        headerEnabled: {get: function(){return headerEnabled;}, set: function(_){headerEnabled=_;}},\n        position: {get: function(){return position;}, set: function(_){position=_;}},\n\n        // Deprecated options\n        chartContainer: {get: function(){return document.body;}, set: function(_){\n            // deprecated after 1.8.3\n            nv.deprecated('chartContainer', 'feature removed after 1.8.3');\n        }},\n        fixedTop: {get: function(){return null;}, set: function(_){\n            // deprecated after 1.8.1\n            nv.deprecated('fixedTop', 'feature removed after 1.8.1');\n        }},\n        offset: {get: function(){return {left: 0, top: 0};}, set: function(_){\n            // deprecated after 1.8.1\n            nv.deprecated('offset', 'use chart.tooltip.distance() instead');\n        }},\n\n        // options with extra logic\n        hidden: {get: function(){return hidden;}, set: function(_){\n            if (hidden != _) {\n                hidden = !!_;\n                nvtooltip();\n            }\n        }},\n        data: {get: function(){return data;}, set: function(_){\n            // if showing a single data point, adjust data format with that\n            if (_.point) {\n                _.value = _.point.x;\n                _.series = _.series || {};\n                _.series.value = _.point.y;\n                _.series.color = _.point.color || _.series.color;\n            }\n            data = _;\n        }},\n\n        // read only properties\n        node: {get: function(){return tooltip.node();}, set: function(_){}},\n        id: {get: function(){return id;}, set: function(_){}}\n    });\n\n    nv.utils.initOptions(nvtooltip);\n    return nvtooltip;\n};\n\n\n/*\nGets the browser window size\n\nReturns object with height and width properties\n */\nnv.utils.windowSize = function() {\n    // Sane defaults\n    var size = {width: 640, height: 480};\n\n    // Most recent browsers use\n    if (window.innerWidth && window.innerHeight) {\n        size.width = window.innerWidth;\n        size.height = window.innerHeight;\n        return (size);\n    }\n\n    // IE can use depending on mode it is in\n    if (document.compatMode=='CSS1Compat' &&\n        document.documentElement &&\n        document.documentElement.offsetWidth ) {\n\n        size.width = document.documentElement.offsetWidth;\n        size.height = document.documentElement.offsetHeight;\n        return (size);\n    }\n\n    // Earlier IE uses Doc.body\n    if (document.body && document.body.offsetWidth) {\n        size.width = document.body.offsetWidth;\n        size.height = document.body.offsetHeight;\n        return (size);\n    }\n\n    return (size);\n};\n\n\n/* handle dumb browser quirks...  isinstance breaks if you use frames\ntypeof returns 'object' for null, NaN is a number, etc.\n */\nnv.utils.isArray = Array.isArray;\nnv.utils.isObject = function(a) {\n    return a !== null && typeof a === 'object';\n};\nnv.utils.isFunction = function(a) {\n    return typeof a === 'function';\n};\nnv.utils.isDate = function(a) {\n    return toString.call(a) === '[object Date]';\n};\nnv.utils.isNumber = function(a) {\n    return !isNaN(a) && typeof a === 'number';\n};\n\n\n/*\nBinds callback function to run when window is resized\n */\nnv.utils.windowResize = function(handler) {\n    if (window.addEventListener) {\n        window.addEventListener('resize', handler);\n    } else {\n        nv.log(\"ERROR: Failed to bind to window.resize with: \", handler);\n    }\n    // return object with clear function to remove the single added callback.\n    return {\n        callback: handler,\n        clear: function() {\n            window.removeEventListener('resize', handler);\n        }\n    }\n};\n\n\n/*\nBackwards compatible way to implement more d3-like coloring of graphs.\nCan take in nothing, an array, or a function/scale\nTo use a normal scale, get the range and pass that because we must be able\nto take two arguments and use the index to keep backward compatibility\n*/\nnv.utils.getColor = function(color) {\n    //if you pass in nothing, get default colors back\n    if (color === undefined) {\n        return nv.utils.defaultColor();\n\n    //if passed an array, turn it into a color scale\n    } else if(nv.utils.isArray(color)) {\n        var color_scale = d3.scale.ordinal().range(color);\n        return function(d, i) {\n            var key = i === undefined ? d : i;\n            return d.color || color_scale(key);\n        };\n\n    //if passed a function or scale, return it, or whatever it may be\n    //external libs, such as angularjs-nvd3-directives use this\n    } else {\n        //can't really help it if someone passes rubbish as color\n        return color;\n    }\n};\n\n\n/*\nDefault color chooser uses a color scale of 20 colors from D3\n https://github.com/mbostock/d3/wiki/Ordinal-Scales#categorical-colors\n */\nnv.utils.defaultColor = function() {\n    // get range of the scale so we'll turn it into our own function.\n    return nv.utils.getColor(d3.scale.category20().range());\n};\n\n\n/*\nReturns a color function that takes the result of 'getKey' for each series and\nlooks for a corresponding color from the dictionary\n*/\nnv.utils.customTheme = function(dictionary, getKey, defaultColors) {\n    // use default series.key if getKey is undefined\n    getKey = getKey || function(series) { return series.key };\n    defaultColors = defaultColors || d3.scale.category20().range();\n\n    // start at end of default color list and walk back to index 0\n    var defIndex = defaultColors.length;\n\n    return function(series, index) {\n        var key = getKey(series);\n        if (nv.utils.isFunction(dictionary[key])) {\n            return dictionary[key]();\n        } else if (dictionary[key] !== undefined) {\n            return dictionary[key];\n        } else {\n            // no match in dictionary, use a default color\n            if (!defIndex) {\n                // used all the default colors, start over\n                defIndex = defaultColors.length;\n            }\n            defIndex = defIndex - 1;\n            return defaultColors[defIndex];\n        }\n    };\n};\n\n\n/*\nFrom the PJAX example on d3js.org, while this is not really directly needed\nit's a very cool method for doing pjax, I may expand upon it a little bit,\nopen to suggestions on anything that may be useful\n*/\nnv.utils.pjax = function(links, content) {\n\n    var load = function(href) {\n        d3.html(href, function(fragment) {\n            var target = d3.select(content).node();\n            target.parentNode.replaceChild(\n                d3.select(fragment).select(content).node(),\n                target);\n            nv.utils.pjax(links, content);\n        });\n    };\n\n    d3.selectAll(links).on(\"click\", function() {\n        history.pushState(this.href, this.textContent, this.href);\n        load(this.href);\n        d3.event.preventDefault();\n    });\n\n    d3.select(window).on(\"popstate\", function() {\n        if (d3.event.state) {\n            load(d3.event.state);\n        }\n    });\n};\n\n\n/*\nFor when we want to approximate the width in pixels for an SVG:text element.\nMost common instance is when the element is in a display:none; container.\nForumla is : text.length * font-size * constant_factor\n*/\nnv.utils.calcApproxTextWidth = function (svgTextElem) {\n    if (nv.utils.isFunction(svgTextElem.style) && nv.utils.isFunction(svgTextElem.text)) {\n        var fontSize = parseInt(svgTextElem.style(\"font-size\").replace(\"px\",\"\"), 10);\n        var textLength = svgTextElem.text().length;\n        return nv.utils.NaNtoZero(textLength * fontSize * 0.5);\n    }\n    return 0;\n};\n\n\n/*\nNumbers that are undefined, null or NaN, convert them to zeros.\n*/\nnv.utils.NaNtoZero = function(n) {\n    if (!nv.utils.isNumber(n)\n        || isNaN(n)\n        || n === null\n        || n === Infinity\n        || n === -Infinity) {\n\n        return 0;\n    }\n    return n;\n};\n\n/*\nAdd a way to watch for d3 transition ends to d3\n*/\nd3.selection.prototype.watchTransition = function(renderWatch){\n    var args = [this].concat([].slice.call(arguments, 1));\n    return renderWatch.transition.apply(renderWatch, args);\n};\n\n\n/*\nHelper object to watch when d3 has rendered something\n*/\nnv.utils.renderWatch = function(dispatch, duration) {\n    if (!(this instanceof nv.utils.renderWatch)) {\n        return new nv.utils.renderWatch(dispatch, duration);\n    }\n\n    var _duration = duration !== undefined ? duration : 250;\n    var renderStack = [];\n    var self = this;\n\n    this.models = function(models) {\n        models = [].slice.call(arguments, 0);\n        models.forEach(function(model){\n            model.__rendered = false;\n            (function(m){\n                m.dispatch.on('renderEnd', function(arg){\n                    m.__rendered = true;\n                    self.renderEnd('model');\n                });\n            })(model);\n\n            if (renderStack.indexOf(model) < 0) {\n                renderStack.push(model);\n            }\n        });\n    return this;\n    };\n\n    this.reset = function(duration) {\n        if (duration !== undefined) {\n            _duration = duration;\n        }\n        renderStack = [];\n    };\n\n    this.transition = function(selection, args, duration) {\n        args = arguments.length > 1 ? [].slice.call(arguments, 1) : [];\n\n        if (args.length > 1) {\n            duration = args.pop();\n        } else {\n            duration = _duration !== undefined ? _duration : 250;\n        }\n        selection.__rendered = false;\n\n        if (renderStack.indexOf(selection) < 0) {\n            renderStack.push(selection);\n        }\n\n        if (duration === 0) {\n            selection.__rendered = true;\n            selection.delay = function() { return this; };\n            selection.duration = function() { return this; };\n            return selection;\n        } else {\n            if (selection.length === 0) {\n                selection.__rendered = true;\n            } else if (selection.every( function(d){ return !d.length; } )) {\n                selection.__rendered = true;\n            } else {\n                selection.__rendered = false;\n            }\n\n            var n = 0;\n            return selection\n                .transition()\n                .duration(duration)\n                .each(function(){ ++n; })\n                .each('end', function(d, i) {\n                    if (--n === 0) {\n                        selection.__rendered = true;\n                        self.renderEnd.apply(this, args);\n                    }\n                });\n        }\n    };\n\n    this.renderEnd = function() {\n        if (renderStack.every( function(d){ return d.__rendered; } )) {\n            renderStack.forEach( function(d){ d.__rendered = false; });\n            dispatch.renderEnd.apply(this, arguments);\n        }\n    }\n\n};\n\n\n/*\nTakes multiple objects and combines them into the first one (dst)\nexample:  nv.utils.deepExtend({a: 1}, {a: 2, b: 3}, {c: 4});\ngives:  {a: 2, b: 3, c: 4}\n*/\nnv.utils.deepExtend = function(dst){\n    var sources = arguments.length > 1 ? [].slice.call(arguments, 1) : [];\n    sources.forEach(function(source) {\n        for (var key in source) {\n            var isArray = nv.utils.isArray(dst[key]);\n            var isObject = nv.utils.isObject(dst[key]);\n            var srcObj = nv.utils.isObject(source[key]);\n\n            if (isObject && !isArray && srcObj) {\n                nv.utils.deepExtend(dst[key], source[key]);\n            } else {\n                dst[key] = source[key];\n            }\n        }\n    });\n};\n\n\n/*\nstate utility object, used to track d3 states in the models\n*/\nnv.utils.state = function(){\n    if (!(this instanceof nv.utils.state)) {\n        return new nv.utils.state();\n    }\n    var state = {};\n    var _self = this;\n    var _setState = function(){};\n    var _getState = function(){ return {}; };\n    var init = null;\n    var changed = null;\n\n    this.dispatch = d3.dispatch('change', 'set');\n\n    this.dispatch.on('set', function(state){\n        _setState(state, true);\n    });\n\n    this.getter = function(fn){\n        _getState = fn;\n        return this;\n    };\n\n    this.setter = function(fn, callback) {\n        if (!callback) {\n            callback = function(){};\n        }\n        _setState = function(state, update){\n            fn(state);\n            if (update) {\n                callback();\n            }\n        };\n        return this;\n    };\n\n    this.init = function(state){\n        init = init || {};\n        nv.utils.deepExtend(init, state);\n    };\n\n    var _set = function(){\n        var settings = _getState();\n\n        if (JSON.stringify(settings) === JSON.stringify(state)) {\n            return false;\n        }\n\n        for (var key in settings) {\n            if (state[key] === undefined) {\n                state[key] = {};\n            }\n            state[key] = settings[key];\n            changed = true;\n        }\n        return true;\n    };\n\n    this.update = function(){\n        if (init) {\n            _setState(init, false);\n            init = null;\n        }\n        if (_set.call(this)) {\n            this.dispatch.change(state);\n        }\n    };\n\n};\n\n\n/*\nSnippet of code you can insert into each nv.models.* to give you the ability to\ndo things like:\nchart.options({\n  showXAxis: true,\n  tooltips: true\n});\n\nTo enable in the chart:\nchart.options = nv.utils.optionsFunc.bind(chart);\n*/\nnv.utils.optionsFunc = function(args) {\n    if (args) {\n        d3.map(args).forEach((function(key,value) {\n            if (nv.utils.isFunction(this[key])) {\n                this[key](value);\n            }\n        }).bind(this));\n    }\n    return this;\n};\n\n\n/*\nnumTicks:  requested number of ticks\ndata:  the chart data\n\nreturns the number of ticks to actually use on X axis, based on chart data\nto avoid duplicate ticks with the same value\n*/\nnv.utils.calcTicksX = function(numTicks, data) {\n    // find max number of values from all data streams\n    var numValues = 1;\n    var i = 0;\n    for (i; i < data.length; i += 1) {\n        var stream_len = data[i] && data[i].values ? data[i].values.length : 0;\n        numValues = stream_len > numValues ? stream_len : numValues;\n    }\n    nv.log(\"Requested number of ticks: \", numTicks);\n    nv.log(\"Calculated max values to be: \", numValues);\n    // make sure we don't have more ticks than values to avoid duplicates\n    numTicks = numTicks > numValues ? numTicks = numValues - 1 : numTicks;\n    // make sure we have at least one tick\n    numTicks = numTicks < 1 ? 1 : numTicks;\n    // make sure it's an integer\n    numTicks = Math.floor(numTicks);\n    nv.log(\"Calculating tick count as: \", numTicks);\n    return numTicks;\n};\n\n\n/*\nreturns number of ticks to actually use on Y axis, based on chart data\n*/\nnv.utils.calcTicksY = function(numTicks, data) {\n    // currently uses the same logic but we can adjust here if needed later\n    return nv.utils.calcTicksX(numTicks, data);\n};\n\n\n/*\nAdd a particular option from an options object onto chart\nOptions exposed on a chart are a getter/setter function that returns chart\non set to mimic typical d3 option chaining, e.g. svg.option1('a').option2('b');\n\noption objects should be generated via Object.create() to provide\nthe option of manipulating data via get/set functions.\n*/\nnv.utils.initOption = function(chart, name) {\n    // if it's a call option, just call it directly, otherwise do get/set\n    if (chart._calls && chart._calls[name]) {\n        chart[name] = chart._calls[name];\n    } else {\n        chart[name] = function (_) {\n            if (!arguments.length) return chart._options[name];\n            chart._overrides[name] = true;\n            chart._options[name] = _;\n            return chart;\n        };\n        // calling the option as _option will ignore if set by option already\n        // so nvd3 can set options internally but the stop if set manually\n        chart['_' + name] = function(_) {\n            if (!arguments.length) return chart._options[name];\n            if (!chart._overrides[name]) {\n                chart._options[name] = _;\n            }\n            return chart;\n        }\n    }\n};\n\n\n/*\nAdd all options in an options object to the chart\n*/\nnv.utils.initOptions = function(chart) {\n    chart._overrides = chart._overrides || {};\n    var ops = Object.getOwnPropertyNames(chart._options || {});\n    var calls = Object.getOwnPropertyNames(chart._calls || {});\n    ops = ops.concat(calls);\n    for (var i in ops) {\n        nv.utils.initOption(chart, ops[i]);\n    }\n};\n\n\n/*\nInherit options from a D3 object\nd3.rebind makes calling the function on target actually call it on source\nAlso use _d3options so we can track what we inherit for documentation and chained inheritance\n*/\nnv.utils.inheritOptionsD3 = function(target, d3_source, oplist) {\n    target._d3options = oplist.concat(target._d3options || []);\n    // Find unique d3 options (string) and update d3options\n    target._d3options = (target._d3options || []).filter(function(item, i, ar){ return ar.indexOf(item) === i; });\n    oplist.unshift(d3_source);\n    oplist.unshift(target);\n    d3.rebind.apply(this, oplist);\n};\n\n\n/*\nRemove duplicates from an array\n*/\nnv.utils.arrayUnique = function(a) {\n    return a.sort().filter(function(item, pos) {\n        return !pos || item != a[pos - 1];\n    });\n};\n\n\n/*\nKeeps a list of custom symbols to draw from in addition to d3.svg.symbol\nNecessary since d3 doesn't let you extend its list -_-\nAdd new symbols by doing nv.utils.symbols.set('name', function(size){...});\n*/\nnv.utils.symbolMap = d3.map();\n\n\n/*\nReplaces d3.svg.symbol so that we can look both there and our own map\n */\nnv.utils.symbol = function() {\n    var type,\n        size = 64;\n    function symbol(d,i) {\n        var t = type.call(this,d,i);\n        var s = size.call(this,d,i);\n        if (d3.svg.symbolTypes.indexOf(t) !== -1) {\n            return d3.svg.symbol().type(t).size(s)();\n        } else {\n            return nv.utils.symbolMap.get(t)(s);\n        }\n    }\n    symbol.type = function(_) {\n        if (!arguments.length) return type;\n        type = d3.functor(_);\n        return symbol;\n    };\n    symbol.size = function(_) {\n        if (!arguments.length) return size;\n        size = d3.functor(_);\n        return symbol;\n    };\n    return symbol;\n};\n\n\n/*\nInherit option getter/setter functions from source to target\nd3.rebind makes calling the function on target actually call it on source\nAlso track via _inherited and _d3options so we can track what we inherit\nfor documentation generation purposes and chained inheritance\n*/\nnv.utils.inheritOptions = function(target, source) {\n    // inherit all the things\n    var ops = Object.getOwnPropertyNames(source._options || {});\n    var calls = Object.getOwnPropertyNames(source._calls || {});\n    var inherited = source._inherited || [];\n    var d3ops = source._d3options || [];\n    var args = ops.concat(calls).concat(inherited).concat(d3ops);\n    args.unshift(source);\n    args.unshift(target);\n    d3.rebind.apply(this, args);\n    // pass along the lists to keep track of them, don't allow duplicates\n    target._inherited = nv.utils.arrayUnique(ops.concat(calls).concat(inherited).concat(ops).concat(target._inherited || []));\n    target._d3options = nv.utils.arrayUnique(d3ops.concat(target._d3options || []));\n};\n\n\n/*\nRuns common initialize code on the svg before the chart builds\n*/\nnv.utils.initSVG = function(svg) {\n    svg.classed({'nvd3-svg':true});\n};\n\n\n/*\nSanitize and provide default for the container height.\n*/\nnv.utils.sanitizeHeight = function(height, container) {\n    return (height || parseInt(container.style('height'), 10) || 400);\n};\n\n\n/*\nSanitize and provide default for the container width.\n*/\nnv.utils.sanitizeWidth = function(width, container) {\n    return (width || parseInt(container.style('width'), 10) || 960);\n};\n\n\n/*\nCalculate the available height for a chart.\n*/\nnv.utils.availableHeight = function(height, container, margin) {\n    return Math.max(0,nv.utils.sanitizeHeight(height, container) - margin.top - margin.bottom);\n};\n\n/*\nCalculate the available width for a chart.\n*/\nnv.utils.availableWidth = function(width, container, margin) {\n    return Math.max(0,nv.utils.sanitizeWidth(width, container) - margin.left - margin.right);\n};\n\n/*\nClear any rendered chart components and display a chart's 'noData' message\n*/\nnv.utils.noData = function(chart, container) {\n    var opt = chart.options(),\n        margin = opt.margin(),\n        noData = opt.noData(),\n        data = (noData == null) ? [\"No Data Available.\"] : [noData],\n        height = nv.utils.availableHeight(null, container, margin),\n        width = nv.utils.availableWidth(null, container, margin),\n        x = margin.left + width/2,\n        y = margin.top + height/2;\n\n    //Remove any previously created chart components\n    container.selectAll('g').remove();\n\n    var noDataText = container.selectAll('.nv-noData').data(data);\n\n    noDataText.enter().append('text')\n        .attr('class', 'nvd3 nv-noData')\n        .attr('dy', '-.7em')\n        .style('text-anchor', 'middle');\n\n    noDataText\n        .attr('x', x)\n        .attr('y', y)\n        .text(function(t){ return t; });\n};\n\n/*\n Wrap long labels.\n */\nnv.utils.wrapTicks = function (text, width) {\n    text.each(function() {\n        var text = d3.select(this),\n            words = text.text().split(/\\s+/).reverse(),\n            word,\n            line = [],\n            lineNumber = 0,\n            lineHeight = 1.1,\n            y = text.attr(\"y\"),\n            dy = parseFloat(text.attr(\"dy\")),\n            tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n        while (word = words.pop()) {\n            line.push(word);\n            tspan.text(line.join(\" \"));\n            if (tspan.node().getComputedTextLength() > width) {\n                line.pop();\n                tspan.text(line.join(\" \"));\n                line = [word];\n                tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word);\n            }\n        }\n    });\n};\n\n/*\nCheck equality of 2 array\n*/\nnv.utils.arrayEquals = function (array1, array2) {\n    if (array1 === array2)\n        return true;\n\n    if (!array1 || !array2)\n        return false;\n\n    // compare lengths - can save a lot of time\n    if (array1.length != array2.length)\n        return false;\n\n    for (var i = 0,\n        l = array1.length; i < l; i++) {\n        // Check if we have nested arrays\n        if (array1[i] instanceof Array && array2[i] instanceof Array) {\n            // recurse into the nested arrays\n            if (!nv.arrayEquals(array1[i], array2[i]))\n                return false;\n        } else if (array1[i] != array2[i]) {\n            // Warning - two different object instances will never be equal: {x:20} != {x:20}\n            return false;\n        }\n    }\n    return true;\n};\n\n/*\n Check if a point within an arc\n */\nnv.utils.pointIsInArc = function(pt, ptData, d3Arc) {\n    // Center of the arc is assumed to be 0,0\n    // (pt.x, pt.y) are assumed to be relative to the center\n    var r1 = d3Arc.innerRadius()(ptData), // Note: Using the innerRadius\n      r2 = d3Arc.outerRadius()(ptData),\n      theta1 = d3Arc.startAngle()(ptData),\n      theta2 = d3Arc.endAngle()(ptData);\n\n    var dist = pt.x * pt.x + pt.y * pt.y,\n      angle = Math.atan2(pt.x, -pt.y); // Note: different coordinate system.\n\n    angle = (angle < 0) ? (angle + Math.PI * 2) : angle;\n\n    return (r1 * r1 <= dist) && (dist <= r2 * r2) &&\n      (theta1 <= angle) && (angle <= theta2);\n};\n\nnv.models.axis = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var axis = d3.svg.axis();\n    var scale = d3.scale.linear();\n\n    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n        , width = 75 //only used for tickLabel currently\n        , height = 60 //only used for tickLabel currently\n        , axisLabelText = null\n        , showMaxMin = true //TODO: showMaxMin should be disabled on all ordinal scaled axes\n        , rotateLabels = 0\n        , rotateYLabel = true\n        , staggerLabels = false\n        , isOrdinal = false\n        , ticks = null\n        , axisLabelDistance = 0\n        , fontSize = undefined\n        , duration = 250\n        , dispatch = d3.dispatch('renderEnd')\n        , tickFormatMaxMin\n        ;\n    axis\n        .scale(scale)\n        .orient('bottom')\n        .tickFormat(function(d) { return d })\n    ;\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var scale0;\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n        renderWatch.reset();\n        selection.each(function(data) {\n            var container = d3.select(this);\n            nv.utils.initSVG(container);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-axis').data([data]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-axis');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            if (ticks !== null)\n                axis.ticks(ticks);\n            else if (axis.orient() == 'top' || axis.orient() == 'bottom')\n                axis.ticks(Math.abs(scale.range()[1] - scale.range()[0]) / 100);\n\n            //TODO: consider calculating width/height based on whether or not label is added, for reference in charts using this component\n            g.watchTransition(renderWatch, 'axis').call(axis);\n\n            scale0 = scale0 || axis.scale();\n\n            var fmt = axis.tickFormat();\n            if (fmt == null) {\n                fmt = scale0.tickFormat();\n            }\n\n            var axisLabel = g.selectAll('text.nv-axislabel')\n                .data([axisLabelText || null]);\n            axisLabel.exit().remove();\n\n            //only skip when fontSize is undefined so it can be cleared with a null or blank string\n            if (fontSize !== undefined) {\n                g.selectAll('g').select(\"text\").style('font-size', fontSize);\n            }\n\n            var xLabelMargin;\n            var axisMaxMin;\n            var w;\n            switch (axis.orient()) {\n                case 'top':\n                    axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n                  w = 0;\n                  if (scale.range().length === 1) {\n                    w = isOrdinal ? scale.range()[0] * 2 + scale.rangeBand() : 0;\n                  } else if (scale.range().length === 2) {\n                    w = isOrdinal ? scale.range()[0] + scale.range()[1] + scale.rangeBand() : scale.range()[1];\n                  } else if ( scale.range().length > 2){\n                    w = scale.range()[scale.range().length-1]+(scale.range()[1]-scale.range()[0]);\n                  };\n                    axisLabel\n                        .attr('text-anchor', 'middle')\n                        .attr('y', 0)\n                        .attr('x', w/2);\n                    if (showMaxMin) {\n                        axisMaxMin = wrap.selectAll('g.nv-axisMaxMin')\n                            .data(scale.domain());\n                        axisMaxMin.enter().append('g').attr('class',function(d,i){\n                                return ['nv-axisMaxMin','nv-axisMaxMin-x',(i == 0 ? 'nv-axisMin-x':'nv-axisMax-x')].join(' ')\n                        }).append('text');\n                        axisMaxMin.exit().remove();\n                        axisMaxMin\n                            .attr('transform', function(d,i) {\n                                return 'translate(' + nv.utils.NaNtoZero(scale(d)) + ',0)'\n                            })\n                            .select('text')\n                            .attr('dy', '-0.5em')\n                            .attr('y', -axis.tickPadding())\n                            .attr('text-anchor', 'middle')\n                            .text(function(d,i) {\n                                var formatter = tickFormatMaxMin || fmt;\n                                var v = formatter(d);\n                                return ('' + v).match('NaN') ? '' : v;\n                            });\n                        axisMaxMin.watchTransition(renderWatch, 'min-max top')\n                            .attr('transform', function(d,i) {\n                                return 'translate(' + nv.utils.NaNtoZero(scale.range()[i]) + ',0)'\n                            });\n                    }\n                    break;\n                case 'bottom':\n                    xLabelMargin = axisLabelDistance + 36;\n                    var maxTextWidth = 30;\n                    var textHeight = 0;\n                    var xTicks = g.selectAll('g').select(\"text\");\n                    var rotateLabelsRule = '';\n                    if (rotateLabels%360) {\n                        //Reset transform on ticks so textHeight can be calculated correctly\n                        xTicks.attr('transform', '');\n                        //Calculate the longest xTick width\n                        xTicks.each(function(d,i){\n                            var box = this.getBoundingClientRect();\n                            var width = box.width;\n                            textHeight = box.height;\n                            if(width > maxTextWidth) maxTextWidth = width;\n                        });\n                        rotateLabelsRule = 'rotate(' + rotateLabels + ' 0,' + (textHeight/2 + axis.tickPadding()) + ')';\n                        //Convert to radians before calculating sin. Add 30 to margin for healthy padding.\n                        var sin = Math.abs(Math.sin(rotateLabels*Math.PI/180));\n                        xLabelMargin = (sin ? sin*maxTextWidth : maxTextWidth)+30;\n                        //Rotate all xTicks\n                        xTicks\n                            .attr('transform', rotateLabelsRule)\n                            .style('text-anchor', rotateLabels%360 > 0 ? 'start' : 'end');\n                    } else {\n                        if (staggerLabels) {\n                            xTicks\n                                .attr('transform', function(d,i) {\n                                    return 'translate(0,' + (i % 2 == 0 ? '0' : '12') + ')'\n                                });\n                        } else {\n                            xTicks.attr('transform', \"translate(0,0)\");\n                        }\n                    }\n                    axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n                    w = 0;\n                    if (scale.range().length === 1) {\n                        w = isOrdinal ? scale.range()[0] * 2 + scale.rangeBand() : 0;\n                    } else if (scale.range().length === 2) {\n                        w = isOrdinal ? scale.range()[0] + scale.range()[1] + scale.rangeBand() : scale.range()[1];\n                    } else if ( scale.range().length > 2){\n                        w = scale.range()[scale.range().length-1]+(scale.range()[1]-scale.range()[0]);\n                    };\n                    axisLabel\n                        .attr('text-anchor', 'middle')\n                        .attr('y', xLabelMargin)\n                        .attr('x', w/2);\n                    if (showMaxMin) {\n                        //if (showMaxMin && !isOrdinal) {\n                        axisMaxMin = wrap.selectAll('g.nv-axisMaxMin')\n                            //.data(scale.domain())\n                            .data([scale.domain()[0], scale.domain()[scale.domain().length - 1]]);\n                        axisMaxMin.enter().append('g').attr('class',function(d,i){\n                                return ['nv-axisMaxMin','nv-axisMaxMin-x',(i == 0 ? 'nv-axisMin-x':'nv-axisMax-x')].join(' ')\n                        }).append('text');\n                        axisMaxMin.exit().remove();\n                        axisMaxMin\n                            .attr('transform', function(d,i) {\n                                return 'translate(' + nv.utils.NaNtoZero((scale(d) + (isOrdinal ? scale.rangeBand() / 2 : 0))) + ',0)'\n                            })\n                            .select('text')\n                            .attr('dy', '.71em')\n                            .attr('y', axis.tickPadding())\n                            .attr('transform', rotateLabelsRule)\n                            .style('text-anchor', rotateLabels ? (rotateLabels%360 > 0 ? 'start' : 'end') : 'middle')\n                            .text(function(d,i) {\n                                var formatter = tickFormatMaxMin || fmt;\n                                var v = formatter(d);\n                                return ('' + v).match('NaN') ? '' : v;\n                            });\n                        axisMaxMin.watchTransition(renderWatch, 'min-max bottom')\n                            .attr('transform', function(d,i) {\n                                return 'translate(' + nv.utils.NaNtoZero((scale(d) + (isOrdinal ? scale.rangeBand() / 2 : 0))) + ',0)'\n                            });\n                    }\n\n                    break;\n                case 'right':\n                    axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n                    axisLabel\n                        .style('text-anchor', rotateYLabel ? 'middle' : 'begin')\n                        .attr('transform', rotateYLabel ? 'rotate(90)' : '')\n                        .attr('y', rotateYLabel ? (-Math.max(margin.right, width) + 12 - (axisLabelDistance || 0)) : -10) //TODO: consider calculating this based on largest tick width... OR at least expose this on chart\n                        .attr('x', rotateYLabel ? (d3.max(scale.range()) / 2) : axis.tickPadding());\n                    if (showMaxMin) {\n                        axisMaxMin = wrap.selectAll('g.nv-axisMaxMin')\n                            .data(scale.domain());\n                       \taxisMaxMin.enter().append('g').attr('class',function(d,i){\n                                return ['nv-axisMaxMin','nv-axisMaxMin-y',(i == 0 ? 'nv-axisMin-y':'nv-axisMax-y')].join(' ')\n                        }).append('text')\n                            .style('opacity', 0);\n                        axisMaxMin.exit().remove();\n                        axisMaxMin\n                            .attr('transform', function(d,i) {\n                                return 'translate(0,' + nv.utils.NaNtoZero(scale(d)) + ')'\n                            })\n                            .select('text')\n                            .attr('dy', '.32em')\n                            .attr('y', 0)\n                            .attr('x', axis.tickPadding())\n                            .style('text-anchor', 'start')\n                            .text(function(d, i) {\n                                var formatter = tickFormatMaxMin || fmt;\n                                var v = formatter(d);\n                                return ('' + v).match('NaN') ? '' : v;\n                            });\n                        axisMaxMin.watchTransition(renderWatch, 'min-max right')\n                            .attr('transform', function(d,i) {\n                                return 'translate(0,' + nv.utils.NaNtoZero(scale.range()[i]) + ')'\n                            })\n                            .select('text')\n                            .style('opacity', 1);\n                    }\n                    break;\n                case 'left':\n                    /*\n                     //For dynamically placing the label. Can be used with dynamically-sized chart axis margins\n                     var yTicks = g.selectAll('g').select(\"text\");\n                     yTicks.each(function(d,i){\n                     var labelPadding = this.getBoundingClientRect().width + axis.tickPadding() + 16;\n                     if(labelPadding > width) width = labelPadding;\n                     });\n                     */\n                    axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n                    axisLabel\n                        .style('text-anchor', rotateYLabel ? 'middle' : 'end')\n                        .attr('transform', rotateYLabel ? 'rotate(-90)' : '')\n                        .attr('y', rotateYLabel ? (-Math.max(margin.left, width) + 25 - (axisLabelDistance || 0)) : -10)\n                        .attr('x', rotateYLabel ? (-d3.max(scale.range()) / 2) : -axis.tickPadding());\n                    if (showMaxMin) {\n                        axisMaxMin = wrap.selectAll('g.nv-axisMaxMin')\n                            .data(scale.domain());\n                        axisMaxMin.enter().append('g').attr('class',function(d,i){\n                                return ['nv-axisMaxMin','nv-axisMaxMin-y',(i == 0 ? 'nv-axisMin-y':'nv-axisMax-y')].join(' ')\n                        }).append('text')\n                            .style('opacity', 0);\n                        axisMaxMin.exit().remove();\n                        axisMaxMin\n                            .attr('transform', function(d,i) {\n                                return 'translate(0,' + nv.utils.NaNtoZero(scale0(d)) + ')'\n                            })\n                            .select('text')\n                            .attr('dy', '.32em')\n                            .attr('y', 0)\n                            .attr('x', -axis.tickPadding())\n                            .attr('text-anchor', 'end')\n                            .text(function(d,i) {\n                                var formatter = tickFormatMaxMin || fmt;\n                                var v = formatter(d);\n                                return ('' + v).match('NaN') ? '' : v;\n                            });\n                        axisMaxMin.watchTransition(renderWatch, 'min-max right')\n                            .attr('transform', function(d,i) {\n                                return 'translate(0,' + nv.utils.NaNtoZero(scale.range()[i]) + ')'\n                            })\n                            .select('text')\n                            .style('opacity', 1);\n                    }\n                    break;\n            }\n            axisLabel.text(function(d) { return d });\n\n            if (showMaxMin && (axis.orient() === 'left' || axis.orient() === 'right')) {\n                //check if max and min overlap other values, if so, hide the values that overlap\n                g.selectAll('g') // the g's wrapping each tick\n                    .each(function(d,i) {\n                        d3.select(this).select('text').attr('opacity', 1);\n                        if (scale(d) < scale.range()[1] + 10 || scale(d) > scale.range()[0] - 10) { // 10 is assuming text height is 16... if d is 0, leave it!\n                            if (d > 1e-10 || d < -1e-10) // accounts for minor floating point errors... though could be problematic if the scale is EXTREMELY SMALL\n                                d3.select(this).attr('opacity', 0);\n\n                            d3.select(this).select('text').attr('opacity', 0); // Don't remove the ZERO line!!\n                        }\n                    });\n\n                //if Max and Min = 0 only show min, Issue #281\n                if (scale.domain()[0] == scale.domain()[1] && scale.domain()[0] == 0) {\n                    wrap.selectAll('g.nv-axisMaxMin').style('opacity', function (d, i) {\n                        return !i ? 1 : 0\n                    });\n                }\n            }\n\n            if (showMaxMin && (axis.orient() === 'top' || axis.orient() === 'bottom')) {\n                var maxMinRange = [];\n                wrap.selectAll('g.nv-axisMaxMin')\n                    .each(function(d,i) {\n                        try {\n                            if (i) // i== 1, max position\n                                maxMinRange.push(scale(d) - this.getBoundingClientRect().width - 4);  //assuming the max and min labels are as wide as the next tick (with an extra 4 pixels just in case)\n                            else // i==0, min position\n                                maxMinRange.push(scale(d) + this.getBoundingClientRect().width + 4)\n                        }catch (err) {\n                            if (i) // i== 1, max position\n                                maxMinRange.push(scale(d) - 4);  //assuming the max and min labels are as wide as the next tick (with an extra 4 pixels just in case)\n                            else // i==0, min position\n                                maxMinRange.push(scale(d) + 4);\n                        }\n                    });\n                // the g's wrapping each tick\n                g.selectAll('g').each(function(d, i) {\n                    if (scale(d) < maxMinRange[0] || scale(d) > maxMinRange[1]) {\n                        if (d > 1e-10 || d < -1e-10) // accounts for minor floating point errors... though could be problematic if the scale is EXTREMELY SMALL\n                            d3.select(this).remove();\n                        else\n                            d3.select(this).select('text').remove(); // Don't remove the ZERO line!!\n                    }\n                });\n            }\n\n            //Highlight zero tick line\n            g.selectAll('.tick')\n                .filter(function (d) {\n                    /*\n                    The filter needs to return only ticks at or near zero.\n                    Numbers like 0.00001 need to count as zero as well,\n                    and the arithmetic trick below solves that.\n                    */\n                    return !parseFloat(Math.round(d * 100000) / 1000000) && (d !== undefined)\n                })\n                .classed('zero', true);\n\n            //store old scales for use in transitions on update\n            scale0 = scale.copy();\n\n        });\n\n        renderWatch.renderEnd('axis immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    // expose chart's sub-components\n    chart.axis = axis;\n    chart.dispatch = dispatch;\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        axisLabelDistance: {get: function(){return axisLabelDistance;}, set: function(_){axisLabelDistance=_;}},\n        staggerLabels:     {get: function(){return staggerLabels;}, set: function(_){staggerLabels=_;}},\n        rotateLabels:      {get: function(){return rotateLabels;}, set: function(_){rotateLabels=_;}},\n        rotateYLabel:      {get: function(){return rotateYLabel;}, set: function(_){rotateYLabel=_;}},\n        showMaxMin:        {get: function(){return showMaxMin;}, set: function(_){showMaxMin=_;}},\n        axisLabel:         {get: function(){return axisLabelText;}, set: function(_){axisLabelText=_;}},\n        height:            {get: function(){return height;}, set: function(_){height=_;}},\n        ticks:             {get: function(){return ticks;}, set: function(_){ticks=_;}},\n        width:             {get: function(){return width;}, set: function(_){width=_;}},\n        fontSize:          {get: function(){return fontSize;}, set: function(_){fontSize=_;}},\n        tickFormatMaxMin:  {get: function(){return tickFormatMaxMin;}, set: function(_){tickFormatMaxMin=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top !== undefined    ? _.top    : margin.top;\n            margin.right  = _.right !== undefined  ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left !== undefined   ? _.left   : margin.left;\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration=_;\n            renderWatch.reset(duration);\n        }},\n        scale: {get: function(){return scale;}, set: function(_){\n            scale = _;\n            axis.scale(scale);\n            isOrdinal = typeof scale.rangeBands === 'function';\n            nv.utils.inheritOptionsD3(chart, scale, ['domain', 'range', 'rangeBand', 'rangeBands']);\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n    nv.utils.inheritOptionsD3(chart, axis, ['orient', 'tickValues', 'tickSubdivide', 'tickSize', 'tickPadding', 'tickFormat']);\n    nv.utils.inheritOptionsD3(chart, scale, ['domain', 'range', 'rangeBand', 'rangeBands']);\n\n    return chart;\n};\nnv.models.boxPlot = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 0, right: 0, bottom: 0, left: 0},\n        width = 960,\n        height = 500,\n        id = Math.floor(Math.random() * 10000), // Create semi-unique ID in case user doesn't select one\n        xScale = d3.scale.ordinal(),\n        yScale = d3.scale.linear(),\n        getX  = function(d) { return d.label }, // Default data model selectors.\n        getQ1 = function(d) { return d.values.Q1 },\n        getQ2 = function(d) { return d.values.Q2 },\n        getQ3 = function(d) { return d.values.Q3 },\n        getWl = function(d) { return d.values.whisker_low },\n        getWh = function(d) { return d.values.whisker_high },\n        getColor = function(d) { return d.color },\n        getOlItems  = function(d) { return d.values.outliers },\n        getOlValue = function(d, i, j) { return d },\n        getOlLabel = function(d, i, j) { return d },\n        getOlColor = function(d, i, j) { return undefined },\n        color = nv.utils.defaultColor(),\n        container = null,\n        xDomain, xRange,\n        yDomain, yRange,\n        dispatch = d3.dispatch('elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd'),\n        duration = 250,\n        maxBoxWidth = null;\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var xScale0, yScale0;\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n        renderWatch.reset();\n        selection.each(function(data) {\n            var availableWidth = width - margin.left - margin.right,\n                availableHeight = height - margin.top - margin.bottom;\n\n            container = d3.select(this);\n            nv.utils.initSVG(container);\n\n            // Setup Scales\n            xScale.domain(xDomain || data.map(function(d,i) { return getX(d,i); }))\n                .rangeBands(xRange || [0, availableWidth], 0.1);\n\n            // if we know yDomain, no need to calculate\n            var yData = []\n            if (!yDomain) {\n                // (y-range is based on quartiles, whiskers and outliers)\n                var values = [], yMin, yMax;\n                data.forEach(function (d, i) {\n                    var q1 = getQ1(d), q3 = getQ3(d), wl = getWl(d), wh = getWh(d);\n                    var olItems = getOlItems(d);\n                    if (olItems) {\n                        olItems.forEach(function (e, i) {\n                            values.push(getOlValue(e, i, undefined));\n                        });\n                    }\n                    if (wl) { values.push(wl) }\n                    if (q1) { values.push(q1) }\n                    if (q3) { values.push(q3) }\n                    if (wh) { values.push(wh) }\n                });\n                yMin = d3.min(values);\n                yMax = d3.max(values);\n                yData = [ yMin, yMax ] ;\n            }\n\n            yScale.domain(yDomain || yData);\n            yScale.range(yRange || [availableHeight, 0]);\n\n            //store old scales if they exist\n            xScale0 = xScale0 || xScale;\n            yScale0 = yScale0 || yScale.copy().range([yScale(0),yScale(0)]);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap').data([data]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap');\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            var boxplots = wrap.selectAll('.nv-boxplot').data(function(d) { return d });\n            var boxEnter = boxplots.enter().append('g').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6);\n            boxplots\n                .attr('class', 'nv-boxplot')\n                .attr('transform', function(d,i,j) { return 'translate(' + (xScale(getX(d,i)) + xScale.rangeBand() * 0.05) + ', 0)'; })\n                .classed('hover', function(d) { return d.hover });\n            boxplots\n                .watchTransition(renderWatch, 'nv-boxplot: boxplots')\n                .style('stroke-opacity', 1)\n                .style('fill-opacity', 0.75)\n                .delay(function(d,i) { return i * duration / data.length })\n                .attr('transform', function(d,i) {\n                    return 'translate(' + (xScale(getX(d,i)) + xScale.rangeBand() * 0.05) + ', 0)';\n                });\n            boxplots.exit().remove();\n\n            // ----- add the SVG elements for each boxPlot -----\n\n            // conditionally append whisker lines\n            boxEnter.each(function(d,i) {\n                var box = d3.select(this);\n                [getWl, getWh].forEach(function (f) {\n                    if (f(d) !== undefined && f(d) !== null) {\n                        var key = (f === getWl) ? 'low' : 'high';\n                        box.append('line')\n                          .style('stroke', getColor(d) || color(d,i))\n                          .attr('class', 'nv-boxplot-whisker nv-boxplot-' + key);\n                        box.append('line')\n                          .style('stroke', getColor(d) || color(d,i))\n                          .attr('class', 'nv-boxplot-tick nv-boxplot-' + key);\n                    }\n                });\n            });\n\n            var box_width = function() { return (maxBoxWidth === null ? xScale.rangeBand() * 0.9 : Math.min(75, xScale.rangeBand() * 0.9)); };\n            var box_left  = function() { return xScale.rangeBand() * 0.45 - box_width()/2; };\n            var box_right = function() { return xScale.rangeBand() * 0.45 + box_width()/2; };\n\n            // update whisker lines and ticks\n            [getWl, getWh].forEach(function (f) {\n                var key = (f === getWl) ? 'low' : 'high';\n                var endpoint = (f === getWl) ? getQ1 : getQ3;\n                boxplots.select('line.nv-boxplot-whisker.nv-boxplot-' + key)\n                  .watchTransition(renderWatch, 'nv-boxplot: boxplots')\n                    .attr('x1', xScale.rangeBand() * 0.45 )\n                    .attr('y1', function(d,i) { return yScale(f(d)); })\n                    .attr('x2', xScale.rangeBand() * 0.45 )\n                    .attr('y2', function(d,i) { return yScale(endpoint(d)); });\n                boxplots.select('line.nv-boxplot-tick.nv-boxplot-' + key)\n                  .watchTransition(renderWatch, 'nv-boxplot: boxplots')\n                    .attr('x1', box_left )\n                    .attr('y1', function(d,i) { return yScale(f(d)); })\n                    .attr('x2', box_right )\n                    .attr('y2', function(d,i) { return yScale(f(d)); });\n            });\n\n            [getWl, getWh].forEach(function (f) {\n                var key = (f === getWl) ? 'low' : 'high';\n                boxEnter.selectAll('.nv-boxplot-' + key)\n                  .on('mouseover', function(d,i,j) {\n                      d3.select(this).classed('hover', true);\n                      dispatch.elementMouseover({\n                          series: { key: f(d), color: getColor(d) || color(d,j) },\n                          e: d3.event\n                      });\n                  })\n                  .on('mouseout', function(d,i,j) {\n                      d3.select(this).classed('hover', false);\n                      dispatch.elementMouseout({\n                          series: { key: f(d), color: getColor(d) || color(d,j) },\n                          e: d3.event\n                      });\n                  })\n                  .on('mousemove', function(d,i) {\n                      dispatch.elementMousemove({e: d3.event});\n                  });\n            });\n\n            // boxes\n            boxEnter.append('rect')\n                .attr('class', 'nv-boxplot-box')\n                // tooltip events\n                .on('mouseover', function(d,i) {\n                    d3.select(this).classed('hover', true);\n                    dispatch.elementMouseover({\n                        key: getX(d),\n                        value: getX(d),\n                        series: [\n                            { key: 'Q3', value: getQ3(d), color: getColor(d) || color(d,i) },\n                            { key: 'Q2', value: getQ2(d), color: getColor(d) || color(d,i) },\n                            { key: 'Q1', value: getQ1(d), color: getColor(d) || color(d,i) }\n                        ],\n                        data: d,\n                        index: i,\n                        e: d3.event\n                    });\n                })\n                .on('mouseout', function(d,i) {\n                    d3.select(this).classed('hover', false);\n                    dispatch.elementMouseout({\n                        key: getX(d),\n                        value: getX(d),\n                        series: [\n                            { key: 'Q3', value: getQ3(d), color: getColor(d) || color(d,i) },\n                            { key: 'Q2', value: getQ2(d), color: getColor(d) || color(d,i) },\n                            { key: 'Q1', value: getQ1(d), color: getColor(d) || color(d,i) }\n                        ],\n                        data: d,\n                        index: i,\n                        e: d3.event\n                    });\n                })\n                .on('mousemove', function(d,i) {\n                    dispatch.elementMousemove({e: d3.event});\n                });\n\n            // box transitions\n            boxplots.select('rect.nv-boxplot-box')\n              .watchTransition(renderWatch, 'nv-boxplot: boxes')\n                .attr('y', function(d,i) { return yScale(getQ3(d)); })\n                .attr('width', box_width)\n                .attr('x', box_left )\n                .attr('height', function(d,i) { return Math.abs(yScale(getQ3(d)) - yScale(getQ1(d))) || 1 })\n                .style('fill', function(d,i) { return getColor(d) || color(d,i) })\n                .style('stroke', function(d,i) { return getColor(d) || color(d,i) });\n\n            // median line\n            boxEnter.append('line').attr('class', 'nv-boxplot-median');\n\n            boxplots.select('line.nv-boxplot-median')\n              .watchTransition(renderWatch, 'nv-boxplot: boxplots line')\n                .attr('x1', box_left)\n                .attr('y1', function(d,i) { return yScale(getQ2(d)); })\n                .attr('x2', box_right)\n                .attr('y2', function(d,i) { return yScale(getQ2(d)); });\n\n            // outliers\n            var outliers = boxplots.selectAll('.nv-boxplot-outlier').data(function(d) {\n                return getOlItems(d) || [];\n            });\n            outliers.enter().append('circle')\n                .style('fill', function(d,i,j) { return getOlColor(d,i,j) || color(d,j) })\n                .style('stroke', function(d,i,j) { return getOlColor(d,i,j) || color(d,j) })\n                .style('z-index', 9000)\n                .on('mouseover', function(d,i,j) {\n                    d3.select(this).classed('hover', true);\n                    dispatch.elementMouseover({\n                        series: { key: getOlLabel(d,i,j), color: getOlColor(d,i,j) || color(d,j) },\n                        e: d3.event\n                    });\n                })\n                .on('mouseout', function(d,i,j) {\n                    d3.select(this).classed('hover', false);\n                    dispatch.elementMouseout({\n                        series: { key: getOlLabel(d,i,j), color: getOlColor(d,i,j) || color(d,j) },\n                        e: d3.event\n                    });\n                })\n                .on('mousemove', function(d,i) {\n                    dispatch.elementMousemove({e: d3.event});\n                });\n            outliers.attr('class', 'nv-boxplot-outlier');\n            outliers\n              .watchTransition(renderWatch, 'nv-boxplot: nv-boxplot-outlier')\n                .attr('cx', xScale.rangeBand() * 0.45)\n                .attr('cy', function(d,i,j) { return yScale(getOlValue(d,i,j)); })\n                .attr('r', '3');\n            outliers.exit().remove();\n\n            //store old scales for use in transitions on update\n            xScale0 = xScale.copy();\n            yScale0 = yScale.copy();\n        });\n\n        renderWatch.renderEnd('nv-boxplot immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:       {get: function(){return width;}, set: function(_){width=_;}},\n        height:      {get: function(){return height;}, set: function(_){height=_;}},\n        maxBoxWidth: {get: function(){return maxBoxWidth;}, set: function(_){maxBoxWidth=_;}},\n        x:           {get: function(){return getX;}, set: function(_){getX=_;}},\n        q1: {get: function(){return getQ1;}, set: function(_){getQ1=_;}},\n        q2: {get: function(){return getQ2;}, set: function(_){getQ2=_;}},\n        q3: {get: function(){return getQ3;}, set: function(_){getQ3=_;}},\n        wl: {get: function(){return getWl;}, set: function(_){getWl=_;}},\n        wh: {get: function(){return getWh;}, set: function(_){getWh=_;}},\n        itemColor:    {get: function(){return getColor;}, set: function(_){getColor=_;}},\n        outliers:     {get: function(){return getOlItems;}, set: function(_){getOlItems=_;}},\n        outlierValue: {get: function(){return getOlValue;}, set: function(_){getOlValue=_;}},\n        outlierLabel: {get: function(){return getOlLabel;}, set: function(_){getOlLabel=_;}},\n        outlierColor: {get: function(){return getOlColor;}, set: function(_){getOlColor=_;}},\n        xScale:  {get: function(){return xScale;}, set: function(_){xScale=_;}},\n        yScale:  {get: function(){return yScale;}, set: function(_){yScale=_;}},\n        xDomain: {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n        yDomain: {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n        xRange:  {get: function(){return xRange;}, set: function(_){xRange=_;}},\n        yRange:  {get: function(){return yRange;}, set: function(_){yRange=_;}},\n        id:          {get: function(){return id;}, set: function(_){id=_;}},\n        // rectClass: {get: function(){return rectClass;}, set: function(_){rectClass=_;}},\n        y: {\n            get: function() {\n                console.warn('BoxPlot \\'y\\' chart option is deprecated. Please use model overrides instead.');\n                return {};\n            },\n            set: function(_) {\n                console.warn('BoxPlot \\'y\\' chart option is deprecated. Please use model overrides instead.');\n            }\n        },\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\nnv.models.boxPlotChart = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var boxplot = nv.models.boxPlot(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis();\n\n    var margin = {top: 15, right: 10, bottom: 50, left: 60},\n        width = null,\n        height = null,\n        color = nv.utils.getColor(),\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        staggerLabels = false,\n        tooltip = nv.models.tooltip(),\n        x, y,\n        noData = 'No Data Available.',\n        dispatch = d3.dispatch('beforeUpdate', 'renderEnd'),\n        duration = 250;\n\n    xAxis\n        .orient('bottom')\n        .showMaxMin(false)\n        .tickFormat(function(d) { return d })\n    ;\n    yAxis\n        .orient((rightAlignYAxis) ? 'right' : 'left')\n        .tickFormat(d3.format(',.1f'))\n    ;\n\n    tooltip.duration(0);\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n        renderWatch.reset();\n        renderWatch.models(boxplot);\n        if (showXAxis) renderWatch.models(xAxis);\n        if (showYAxis) renderWatch.models(yAxis);\n\n        selection.each(function(data) {\n            var container = d3.select(this), that = this;\n            nv.utils.initSVG(container);\n            var availableWidth = (width  || parseInt(container.style('width')) || 960) - margin.left - margin.right;\n            var availableHeight = (height || parseInt(container.style('height')) || 400) - margin.top - margin.bottom;\n\n            chart.update = function() {\n                dispatch.beforeUpdate();\n                container.transition().duration(duration).call(chart);\n            };\n            chart.container = this;\n\n            // TODO still need to find a way to validate quartile data presence using boxPlot callbacks.\n            // Display No Data message if there's nothing to show. (quartiles required at minimum).\n            if (!data || !data.length) {\n                var noDataText = container.selectAll('.nv-noData').data([noData]);\n\n                noDataText.enter().append('text')\n                    .attr('class', 'nvd3 nv-noData')\n                    .attr('dy', '-.7em')\n                    .style('text-anchor', 'middle');\n\n                noDataText\n                    .attr('x', margin.left + availableWidth / 2)\n                    .attr('y', margin.top + availableHeight / 2)\n                    .text(function(d) { return d });\n\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n\n            // Setup Scales\n            x = boxplot.xScale();\n            y = boxplot.yScale().clamp(true);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-boxPlotWithAxes').data([data]);\n            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-boxPlotWithAxes').append('g');\n            var defsEnter = gEnter.append('defs');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-x nv-axis');\n            gEnter.append('g').attr('class', 'nv-y nv-axis')\n                .append('g').attr('class', 'nv-zeroLine')\n                .append('line');\n\n            gEnter.append('g').attr('class', 'nv-barsWrap');\n            g.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            if (rightAlignYAxis) {\n                g.select('.nv-y.nv-axis')\n                    .attr('transform', 'translate(' + availableWidth + ',0)');\n            }\n\n            // Main Chart Component(s)\n            boxplot.width(availableWidth).height(availableHeight);\n\n            var barsWrap = g.select('.nv-barsWrap')\n                .datum(data.filter(function(d) { return !d.disabled }))\n\n            barsWrap.transition().call(boxplot);\n\n            defsEnter.append('clipPath')\n                .attr('id', 'nv-x-label-clip-' + boxplot.id())\n                .append('rect');\n\n            g.select('#nv-x-label-clip-' + boxplot.id() + ' rect')\n                .attr('width', x.rangeBand() * (staggerLabels ? 2 : 1))\n                .attr('height', 16)\n                .attr('x', -x.rangeBand() / (staggerLabels ? 1 : 2 ));\n\n            // Setup Axes\n            if (showXAxis) {\n                xAxis\n                    .scale(x)\n                    .ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n                    .tickSize(-availableHeight, 0);\n\n                g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')');\n                g.select('.nv-x.nv-axis').call(xAxis);\n\n                var xTicks = g.select('.nv-x.nv-axis').selectAll('g');\n                if (staggerLabels) {\n                    xTicks\n                        .selectAll('text')\n                        .attr('transform', function(d,i,j) { return 'translate(0,' + (j % 2 === 0 ? '5' : '17') + ')' })\n                }\n            }\n\n            if (showYAxis) {\n                yAxis\n                    .scale(y)\n                    .ticks( Math.floor(availableHeight/36) ) // can't use nv.utils.calcTicksY with Object data\n                    .tickSize( -availableWidth, 0);\n\n                g.select('.nv-y.nv-axis').call(yAxis);\n            }\n\n            // Zero line\n            g.select('.nv-zeroLine line')\n                .attr('x1',0)\n                .attr('x2',availableWidth)\n                .attr('y1', y(0))\n                .attr('y2', y(0))\n            ;\n\n            //============================================================\n            // Event Handling/Dispatching (in chart's scope)\n            //------------------------------------------------------------\n        });\n\n        renderWatch.renderEnd('nv-boxplot chart immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n    boxplot.dispatch.on('elementMouseover.tooltip', function(evt) {\n        tooltip.data(evt).hidden(false);\n    });\n\n    boxplot.dispatch.on('elementMouseout.tooltip', function(evt) {\n        tooltip.data(evt).hidden(true);\n    });\n\n    boxplot.dispatch.on('elementMousemove.tooltip', function(evt) {\n        tooltip();\n    });\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.boxplot = boxplot;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.tooltip = tooltip;\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        staggerLabels: {get: function(){return staggerLabels;}, set: function(_){staggerLabels=_;}},\n        showXAxis: {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n        showYAxis: {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n        tooltipContent:    {get: function(){return tooltip;}, set: function(_){tooltip=_;}},\n        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n            boxplot.duration(duration);\n            xAxis.duration(duration);\n            yAxis.duration(duration);\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n            boxplot.color(color);\n        }},\n        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n            rightAlignYAxis = _;\n            yAxis.orient( (_) ? 'right' : 'left');\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, boxplot);\n    nv.utils.initOptions(chart);\n\n    return chart;\n}\n\n// Chart design based on the recommendations of Stephen Few. Implementation\n// based on the work of Clint Ivy, Jamie Love, and Jason Davies.\n// http://projects.instantcognition.com/protovis/bulletchart/\n\nnv.models.bullet = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n        , orient = 'left' // TODO top & bottom\n        , reverse = false\n        , ranges = function(d) { return d.ranges }\n        , markers = function(d) { return d.markers ? d.markers : [] }\n        , markerLines = function(d) { return d.markerLines ? d.markerLines : [0] }\n        , measures = function(d) { return d.measures }\n        , rangeLabels = function(d) { return d.rangeLabels ? d.rangeLabels : [] }\n        , markerLabels = function(d) { return d.markerLabels ? d.markerLabels : []  }\n        , markerLineLabels = function(d) { return d.markerLineLabels ? d.markerLineLabels : []  }\n        , measureLabels = function(d) { return d.measureLabels ? d.measureLabels : []  }\n        , forceX = [0] // List of numbers to Force into the X scale (ie. 0, or a max / min, etc.)\n        , width = 380\n        , height = 30\n        , container = null\n        , tickFormat = null\n        , color = nv.utils.getColor(['#1f77b4'])\n        , dispatch = d3.dispatch('elementMouseover', 'elementMouseout', 'elementMousemove')\n        , defaultRangeLabels = [\"Maximum\", \"Mean\", \"Minimum\"]\n        , legacyRangeClassNames = [\"Max\", \"Avg\", \"Min\"]\n        , duration = 1000\n        ;\n\n    function sortLabels(labels, values){\n        var lz = labels.slice();\n        labels.sort(function(a, b){\n            var iA = lz.indexOf(a);\n            var iB = lz.indexOf(b);\n            return d3.descending(values[iA], values[iB]);\n        });\n    };\n\n    function chart(selection) {\n        selection.each(function(d, i) {\n            var availableWidth = width - margin.left - margin.right,\n                availableHeight = height - margin.top - margin.bottom;\n\n            container = d3.select(this);\n            nv.utils.initSVG(container);\n\n            var rangez = ranges.call(this, d, i).slice(),\n                markerz = markers.call(this, d, i).slice(),\n                markerLinez = markerLines.call(this, d, i).slice(),\n                measurez = measures.call(this, d, i).slice(),\n                rangeLabelz = rangeLabels.call(this, d, i).slice(),\n                markerLabelz = markerLabels.call(this, d, i).slice(),\n                markerLineLabelz = markerLineLabels.call(this, d, i).slice(),\n                measureLabelz = measureLabels.call(this, d, i).slice();\n\n            // Sort labels according to their sorted values\n            sortLabels(rangeLabelz, rangez);\n            sortLabels(markerLabelz, markerz);\n            sortLabels(markerLineLabelz, markerLinez);\n            sortLabels(measureLabelz, measurez);\n\n            // sort values descending\n            rangez.sort(d3.descending);\n            markerz.sort(d3.descending);\n            markerLinez.sort(d3.descending);\n            measurez.sort(d3.descending);\n\n            // Setup Scales\n            // Compute the new x-scale.\n            var x1 = d3.scale.linear()\n                .domain( d3.extent(d3.merge([forceX, rangez])) )\n                .range(reverse ? [availableWidth, 0] : [0, availableWidth]);\n\n            // Retrieve the old x-scale, if this is an update.\n            var x0 = this.__chart__ || d3.scale.linear()\n                .domain([0, Infinity])\n                .range(x1.range());\n\n            // Stash the new scale.\n            this.__chart__ = x1;\n\n            var rangeMin = d3.min(rangez), //rangez[2]\n                rangeMax = d3.max(rangez), //rangez[0]\n                rangeAvg = rangez[1];\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-bullet').data([d]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-bullet');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            for(var i=0,il=rangez.length; i<il; i++){\n                var rangeClassNames = 'nv-range nv-range'+i;\n                if(i <= 2){\n                    rangeClassNames = rangeClassNames + ' nv-range'+legacyRangeClassNames[i];\n                }\n                gEnter.append('rect').attr('class', rangeClassNames);\n            }\n\n            gEnter.append('rect').attr('class', 'nv-measure');\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            var w0 = function(d) { return Math.abs(x0(d) - x0(0)) }, // TODO: could optimize by precalculating x0(0) and x1(0)\n                w1 = function(d) { return Math.abs(x1(d) - x1(0)) };\n            var xp0 = function(d) { return d < 0 ? x0(d) : x0(0) },\n                xp1 = function(d) { return d < 0 ? x1(d) : x1(0) };\n\n            for(var i=0,il=rangez.length; i<il; i++){\n                var range = rangez[i];\n                g.select('rect.nv-range'+i)\n                    .datum(range)\n                    .attr('height', availableHeight)\n                    .transition()\n                    .duration(duration)\n                    .attr('width', w1(range))\n                    .attr('x', xp1(range))\n            }\n\n            g.select('rect.nv-measure')\n                .style('fill', color)\n                .attr('height', availableHeight / 3)\n                .attr('y', availableHeight / 3)\n                .on('mouseover', function() {\n                    dispatch.elementMouseover({\n                        value: measurez[0],\n                        label: measureLabelz[0] || 'Current',\n                        color: d3.select(this).style(\"fill\")\n                    })\n                })\n                .on('mousemove', function() {\n                    dispatch.elementMousemove({\n                        value: measurez[0],\n                        label: measureLabelz[0] || 'Current',\n                        color: d3.select(this).style(\"fill\")\n                    })\n                })\n                .on('mouseout', function() {\n                    dispatch.elementMouseout({\n                        value: measurez[0],\n                        label: measureLabelz[0] || 'Current',\n                        color: d3.select(this).style(\"fill\")\n                    })\n                })\n                .transition()\n                .duration(duration)\n                .attr('width', measurez < 0 ?\n                    x1(0) - x1(measurez[0])\n                    : x1(measurez[0]) - x1(0))\n                .attr('x', xp1(measurez));\n\n            var h3 =  availableHeight / 6;\n\n            var markerData = markerz.map( function(marker, index) {\n                return {value: marker, label: markerLabelz[index]}\n            });\n            gEnter\n              .selectAll(\"path.nv-markerTriangle\")\n              .data(markerData)\n              .enter()\n              .append('path')\n              .attr('class', 'nv-markerTriangle')\n              .attr('d', 'M0,' + h3 + 'L' + h3 + ',' + (-h3) + ' ' + (-h3) + ',' + (-h3) + 'Z')\n              .on('mouseover', function(d) {\n                dispatch.elementMouseover({\n                  value: d.value,\n                  label: d.label || 'Previous',\n                  color: d3.select(this).style(\"fill\"),\n                  pos: [x1(d.value), availableHeight/2]\n                })\n\n              })\n              .on('mousemove', function(d) {\n                  dispatch.elementMousemove({\n                      value: d.value,\n                      label: d.label || 'Previous',\n                      color: d3.select(this).style(\"fill\")\n                  })\n              })\n              .on('mouseout', function(d, i) {\n                  dispatch.elementMouseout({\n                      value: d.value,\n                      label: d.label || 'Previous',\n                      color: d3.select(this).style(\"fill\")\n                  })\n              });\n\n            g.selectAll(\"path.nv-markerTriangle\")\n              .data(markerData)\n              .transition()\n              .duration(duration)\n              .attr('transform', function(d) { return 'translate(' + x1(d.value) + ',' + (availableHeight / 2) + ')' });\n\n            var markerLinesData = markerLinez.map( function(marker, index) {\n                return {value: marker, label: markerLineLabelz[index]}\n            });\n            gEnter\n              .selectAll(\"line.nv-markerLine\")\n              .data(markerLinesData)\n              .enter()\n              .append('line')\n              .attr('cursor', '')\n              .attr('class', 'nv-markerLine')\n              .attr('x1', function(d) { return x1(d.value) })\n              .attr('y1', '2')\n              .attr('x2', function(d) { return x1(d.value) })\n              .attr('y2', availableHeight - 2)\n              .on('mouseover', function(d) {\n                dispatch.elementMouseover({\n                  value: d.value,\n                  label: d.label || 'Previous',\n                  color: d3.select(this).style(\"fill\"),\n                  pos: [x1(d.value), availableHeight/2]\n                })\n\n              })\n              .on('mousemove', function(d) {\n                  dispatch.elementMousemove({\n                      value: d.value,\n                      label: d.label || 'Previous',\n                      color: d3.select(this).style(\"fill\")\n                  })\n              })\n              .on('mouseout', function(d, i) {\n                  dispatch.elementMouseout({\n                      value: d.value,\n                      label: d.label || 'Previous',\n                      color: d3.select(this).style(\"fill\")\n                  })\n              });\n\n            g.selectAll(\"line.nv-markerLine\")\n              .data(markerLinesData)\n              .transition()\n              .duration(duration)\n              .attr('x1', function(d) { return x1(d.value) })\n              .attr('x2', function(d) { return x1(d.value) });\n\n            wrap.selectAll('.nv-range')\n                .on('mouseover', function(d,i) {\n                    var label = rangeLabelz[i] || defaultRangeLabels[i];\n                    dispatch.elementMouseover({\n                        value: d,\n                        label: label,\n                        color: d3.select(this).style(\"fill\")\n                    })\n                })\n                .on('mousemove', function() {\n                    dispatch.elementMousemove({\n                        value: measurez[0],\n                        label: measureLabelz[0] || 'Previous',\n                        color: d3.select(this).style(\"fill\")\n                    })\n                })\n                .on('mouseout', function(d,i) {\n                    var label = rangeLabelz[i] || defaultRangeLabels[i];\n                    dispatch.elementMouseout({\n                        value: d,\n                        label: label,\n                        color: d3.select(this).style(\"fill\")\n                    })\n                });\n        });\n\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        ranges:      {get: function(){return ranges;}, set: function(_){ranges=_;}}, // ranges (bad, satisfactory, good)\n        markers:     {get: function(){return markers;}, set: function(_){markers=_;}}, // markers (previous, goal)\n        measures: {get: function(){return measures;}, set: function(_){measures=_;}}, // measures (actual, forecast)\n        forceX:      {get: function(){return forceX;}, set: function(_){forceX=_;}},\n        width:    {get: function(){return width;}, set: function(_){width=_;}},\n        height:    {get: function(){return height;}, set: function(_){height=_;}},\n        tickFormat:    {get: function(){return tickFormat;}, set: function(_){tickFormat=_;}},\n        duration:    {get: function(){return duration;}, set: function(_){duration=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        orient: {get: function(){return orient;}, set: function(_){ // left, right, top, bottom\n            orient = _;\n            reverse = orient == 'right' || orient == 'bottom';\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n    return chart;\n};\n\n\n\n// Chart design based on the recommendations of Stephen Few. Implementation\n// based on the work of Clint Ivy, Jamie Love, and Jason Davies.\n// http://projects.instantcognition.com/protovis/bulletchart/\nnv.models.bulletChart = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var bullet = nv.models.bullet();\n    var tooltip = nv.models.tooltip();\n\n    var orient = 'left' // TODO top & bottom\n        , reverse = false\n        , margin = {top: 5, right: 40, bottom: 20, left: 120}\n        , ranges = function(d) { return d.ranges }\n        , markers = function(d) { return d.markers ? d.markers : [] }\n        , measures = function(d) { return d.measures }\n        , width = null\n        , height = 55\n        , tickFormat = null\n        , ticks = null\n        , noData = null\n        , dispatch = d3.dispatch()\n        ;\n\n    tooltip\n        .duration(0)\n        .headerEnabled(false);\n\n    function chart(selection) {\n        selection.each(function(d, i) {\n            var container = d3.select(this);\n            nv.utils.initSVG(container);\n\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = height - margin.top - margin.bottom,\n                that = this;\n\n            chart.update = function() { chart(selection) };\n            chart.container = this;\n\n            // Display No Data message if there's nothing to show.\n            if (!d || !ranges.call(this, d, i)) {\n                nv.utils.noData(chart, container)\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n\n            var rangez = ranges.call(this, d, i).slice().sort(d3.descending),\n                markerz = markers.call(this, d, i).slice().sort(d3.descending),\n                measurez = measures.call(this, d, i).slice().sort(d3.descending);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-bulletChart').data([d]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-bulletChart');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-bulletWrap');\n            gEnter.append('g').attr('class', 'nv-titles');\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            // Compute the new x-scale.\n            var x1 = d3.scale.linear()\n                .domain([0, Math.max(rangez[0], (markerz[0] || 0), measurez[0])])  // TODO: need to allow forceX and forceY, and xDomain, yDomain\n                .range(reverse ? [availableWidth, 0] : [0, availableWidth]);\n\n            // Retrieve the old x-scale, if this is an update.\n            var x0 = this.__chart__ || d3.scale.linear()\n                .domain([0, Infinity])\n                .range(x1.range());\n\n            // Stash the new scale.\n            this.__chart__ = x1;\n\n            var w0 = function(d) { return Math.abs(x0(d) - x0(0)) }, // TODO: could optimize by precalculating x0(0) and x1(0)\n                w1 = function(d) { return Math.abs(x1(d) - x1(0)) };\n\n            var title = gEnter.select('.nv-titles').append('g')\n                .attr('text-anchor', 'end')\n                .attr('transform', 'translate(-6,' + (height - margin.top - margin.bottom) / 2 + ')');\n            title.append('text')\n                .attr('class', 'nv-title')\n                .text(function(d) { return d.title; });\n\n            title.append('text')\n                .attr('class', 'nv-subtitle')\n                .attr('dy', '1em')\n                .text(function(d) { return d.subtitle; });\n\n            bullet\n                .width(availableWidth)\n                .height(availableHeight);\n\n            var bulletWrap = g.select('.nv-bulletWrap');\n            d3.transition(bulletWrap).call(bullet);\n\n            // Compute the tick format.\n            var format = tickFormat || x1.tickFormat( availableWidth / 100 );\n\n            // Update the tick groups.\n            var tick = g.selectAll('g.nv-tick')\n                .data(x1.ticks( ticks ? ticks : (availableWidth / 50) ), function(d) {\n                    return this.textContent || format(d);\n                });\n\n            // Initialize the ticks with the old scale, x0.\n            var tickEnter = tick.enter().append('g')\n                .attr('class', 'nv-tick')\n                .attr('transform', function(d) { return 'translate(' + x0(d) + ',0)' })\n                .style('opacity', 1e-6);\n\n            tickEnter.append('line')\n                .attr('y1', availableHeight)\n                .attr('y2', availableHeight * 7 / 6);\n\n            tickEnter.append('text')\n                .attr('text-anchor', 'middle')\n                .attr('dy', '1em')\n                .attr('y', availableHeight * 7 / 6)\n                .text(format);\n\n            // Transition the updating ticks to the new scale, x1.\n            var tickUpdate = d3.transition(tick)\n                .transition()\n                .duration(bullet.duration())\n                .attr('transform', function(d) { return 'translate(' + x1(d) + ',0)' })\n                .style('opacity', 1);\n\n            tickUpdate.select('line')\n                .attr('y1', availableHeight)\n                .attr('y2', availableHeight * 7 / 6);\n\n            tickUpdate.select('text')\n                .attr('y', availableHeight * 7 / 6);\n\n            // Transition the exiting ticks to the new scale, x1.\n            d3.transition(tick.exit())\n                .transition()\n                .duration(bullet.duration())\n                .attr('transform', function(d) { return 'translate(' + x1(d) + ',0)' })\n                .style('opacity', 1e-6)\n                .remove();\n        });\n\n        d3.timer.flush();\n        return chart;\n    }\n\n    //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n    bullet.dispatch.on('elementMouseover.tooltip', function(evt) {\n        evt['series'] = {\n            key: evt.label,\n            value: evt.value,\n            color: evt.color\n        };\n        tooltip.data(evt).hidden(false);\n    });\n\n    bullet.dispatch.on('elementMouseout.tooltip', function(evt) {\n        tooltip.hidden(true);\n    });\n\n    bullet.dispatch.on('elementMousemove.tooltip', function(evt) {\n        tooltip();\n    });\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.bullet = bullet;\n    chart.dispatch = dispatch;\n    chart.tooltip = tooltip;\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        ranges:      {get: function(){return ranges;}, set: function(_){ranges=_;}}, // ranges (bad, satisfactory, good)\n        markers:     {get: function(){return markers;}, set: function(_){markers=_;}}, // markers (previous, goal)\n        measures: {get: function(){return measures;}, set: function(_){measures=_;}}, // measures (actual, forecast)\n        width:    {get: function(){return width;}, set: function(_){width=_;}},\n        height:    {get: function(){return height;}, set: function(_){height=_;}},\n        tickFormat:    {get: function(){return tickFormat;}, set: function(_){tickFormat=_;}},\n        ticks:    {get: function(){return ticks;}, set: function(_){ticks=_;}},\n        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        orient: {get: function(){return orient;}, set: function(_){ // left, right, top, bottom\n            orient = _;\n            reverse = orient == 'right' || orient == 'bottom';\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, bullet);\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n\n\n\nnv.models.candlestickBar = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n        , width = null\n        , height = null\n        , id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n        , container\n        , x = d3.scale.linear()\n        , y = d3.scale.linear()\n        , getX = function(d) { return d.x }\n        , getY = function(d) { return d.y }\n        , getOpen = function(d) { return d.open }\n        , getClose = function(d) { return d.close }\n        , getHigh = function(d) { return d.high }\n        , getLow = function(d) { return d.low }\n        , forceX = []\n        , forceY = []\n        , padData     = false // If true, adds half a data points width to front and back, for lining up a line chart with a bar chart\n        , clipEdge = true\n        , color = nv.utils.defaultColor()\n        , interactive = false\n        , xDomain\n        , yDomain\n        , xRange\n        , yRange\n        , dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd', 'chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove')\n        ;\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    function chart(selection) {\n        selection.each(function(data) {\n            container = d3.select(this);\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            nv.utils.initSVG(container);\n\n            // Width of the candlestick bars.\n            var barWidth = (availableWidth / data[0].values.length) * .45;\n\n            // Setup Scales\n            x.domain(xDomain || d3.extent(data[0].values.map(getX).concat(forceX) ));\n\n            if (padData)\n                x.range(xRange || [availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5)  / data[0].values.length ]);\n            else\n                x.range(xRange || [5 + barWidth / 2, availableWidth - barWidth / 2 - 5]);\n\n            y.domain(yDomain || [\n                    d3.min(data[0].values.map(getLow).concat(forceY)),\n                    d3.max(data[0].values.map(getHigh).concat(forceY))\n                ]\n            ).range(yRange || [availableHeight, 0]);\n\n            // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n            if (x.domain()[0] === x.domain()[1])\n                x.domain()[0] ?\n                    x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01])\n                    : x.domain([-1,1]);\n\n            if (y.domain()[0] === y.domain()[1])\n                y.domain()[0] ?\n                    y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01])\n                    : y.domain([-1,1]);\n\n            // Setup containers and skeleton of chart\n            var wrap = d3.select(this).selectAll('g.nv-wrap.nv-candlestickBar').data([data[0].values]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-candlestickBar');\n            var defsEnter = wrapEnter.append('defs');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-ticks');\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            container\n                .on('click', function(d,i) {\n                    dispatch.chartClick({\n                        data: d,\n                        index: i,\n                        pos: d3.event,\n                        id: id\n                    });\n                });\n\n            defsEnter.append('clipPath')\n                .attr('id', 'nv-chart-clip-path-' + id)\n                .append('rect');\n\n            wrap.select('#nv-chart-clip-path-' + id + ' rect')\n                .attr('width', availableWidth)\n                .attr('height', availableHeight);\n\n            g   .attr('clip-path', clipEdge ? 'url(#nv-chart-clip-path-' + id + ')' : '');\n\n            var ticks = wrap.select('.nv-ticks').selectAll('.nv-tick')\n                .data(function(d) { return d });\n            ticks.exit().remove();\n\n            var tickGroups = ticks.enter().append('g');\n\n            // The colors are currently controlled by CSS.\n            ticks\n                .attr('class', function(d, i, j) { return (getOpen(d, i) > getClose(d, i) ? 'nv-tick negative' : 'nv-tick positive') + ' nv-tick-' + j + '-' + i});\n\n            var lines = tickGroups.append('line')\n                .attr('class', 'nv-candlestick-lines')\n                .attr('transform', function(d, i) { return 'translate(' + x(getX(d, i)) + ',0)'; })\n                .attr('x1', 0)\n                .attr('y1', function(d, i) { return y(getHigh(d, i)); })\n                .attr('x2', 0)\n                .attr('y2', function(d, i) { return y(getLow(d, i)); });\n\n            var rects = tickGroups.append('rect')\n                .attr('class', 'nv-candlestick-rects nv-bars')\n                .attr('transform', function(d, i) {\n                    return 'translate(' + (x(getX(d, i)) - barWidth/2) + ','\n                    + (y(getY(d, i)) - (getOpen(d, i) > getClose(d, i) ? (y(getClose(d, i)) - y(getOpen(d, i))) : 0))\n                    + ')';\n                })\n                .attr('x', 0)\n                .attr('y', 0)\n                .attr('width', barWidth)\n                .attr('height', function(d, i) {\n                    var open = getOpen(d, i);\n                    var close = getClose(d, i);\n                    return open > close ? y(close) - y(open) : y(open) - y(close);\n                });\n\n            ticks.select('.nv-candlestick-lines').transition()\n                .attr('transform', function(d, i) { return 'translate(' + x(getX(d, i)) + ',0)'; })\n                .attr('x1', 0)\n                .attr('y1', function(d, i) { return y(getHigh(d, i)); })\n                .attr('x2', 0)\n                .attr('y2', function(d, i) { return y(getLow(d, i)); });\n\n            ticks.select('.nv-candlestick-rects').transition()\n                .attr('transform', function(d, i) {\n                    return 'translate(' + (x(getX(d, i)) - barWidth/2) + ','\n                    + (y(getY(d, i)) - (getOpen(d, i) > getClose(d, i) ? (y(getClose(d, i)) - y(getOpen(d, i))) : 0))\n                    + ')';\n                })\n                .attr('x', 0)\n                .attr('y', 0)\n                .attr('width', barWidth)\n                .attr('height', function(d, i) {\n                    var open = getOpen(d, i);\n                    var close = getClose(d, i);\n                    return open > close ? y(close) - y(open) : y(open) - y(close);\n                });\n        });\n\n        return chart;\n    }\n\n\n    //Create methods to allow outside functions to highlight a specific bar.\n    chart.highlightPoint = function(pointIndex, isHoverOver) {\n        chart.clearHighlights();\n        container.select(\".nv-candlestickBar .nv-tick-0-\" + pointIndex)\n            .classed(\"hover\", isHoverOver)\n        ;\n    };\n\n    chart.clearHighlights = function() {\n        container.select(\".nv-candlestickBar .nv-tick.hover\")\n            .classed(\"hover\", false)\n        ;\n    };\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:    {get: function(){return width;}, set: function(_){width=_;}},\n        height:   {get: function(){return height;}, set: function(_){height=_;}},\n        xScale:   {get: function(){return x;}, set: function(_){x=_;}},\n        yScale:   {get: function(){return y;}, set: function(_){y=_;}},\n        xDomain:  {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n        yDomain:  {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n        xRange:   {get: function(){return xRange;}, set: function(_){xRange=_;}},\n        yRange:   {get: function(){return yRange;}, set: function(_){yRange=_;}},\n        forceX:   {get: function(){return forceX;}, set: function(_){forceX=_;}},\n        forceY:   {get: function(){return forceY;}, set: function(_){forceY=_;}},\n        padData:  {get: function(){return padData;}, set: function(_){padData=_;}},\n        clipEdge: {get: function(){return clipEdge;}, set: function(_){clipEdge=_;}},\n        id:       {get: function(){return id;}, set: function(_){id=_;}},\n        interactive: {get: function(){return interactive;}, set: function(_){interactive=_;}},\n\n        x:     {get: function(){return getX;}, set: function(_){getX=_;}},\n        y:     {get: function(){return getY;}, set: function(_){getY=_;}},\n        open:  {get: function(){return getOpen();}, set: function(_){getOpen=_;}},\n        close: {get: function(){return getClose();}, set: function(_){getClose=_;}},\n        high:  {get: function(){return getHigh;}, set: function(_){getHigh=_;}},\n        low:   {get: function(){return getLow;}, set: function(_){getLow=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    != undefined ? _.top    : margin.top;\n            margin.right  = _.right  != undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom != undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   != undefined ? _.left   : margin.left;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n    return chart;\n};\n\nnv.models.cumulativeLineChart = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var lines = nv.models.line()\n        , xAxis = nv.models.axis()\n        , yAxis = nv.models.axis()\n        , legend = nv.models.legend()\n        , controls = nv.models.legend()\n        , interactiveLayer = nv.interactiveGuideline()\n        , tooltip = nv.models.tooltip()\n        ;\n\n    var margin = {top: 30, right: 30, bottom: 50, left: 60}\n        , marginTop = null\n        , color = nv.utils.defaultColor()\n        , width = null\n        , height = null\n        , showLegend = true\n        , showXAxis = true\n        , showYAxis = true\n        , rightAlignYAxis = false\n        , showControls = true\n        , useInteractiveGuideline = false\n        , rescaleY = true\n        , x //can be accessed via chart.xScale()\n        , y //can be accessed via chart.yScale()\n        , id = lines.id()\n        , state = nv.utils.state()\n        , defaultState = null\n        , noData = null\n        , average = function(d) { return d.average }\n        , dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd')\n        , transitionDuration = 250\n        , duration = 250\n        , noErrorCheck = false  //if set to TRUE, will bypass an error check in the indexify function.\n        ;\n\n    state.index = 0;\n    state.rescaleY = rescaleY;\n\n    xAxis.orient('bottom').tickPadding(7);\n    yAxis.orient((rightAlignYAxis) ? 'right' : 'left');\n\n    tooltip.valueFormatter(function(d, i) {\n        return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function(d, i) {\n        return xAxis.tickFormat()(d, i);\n    });\n\n    controls.updateState(false);\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var dx = d3.scale.linear()\n        , index = {i: 0, x: 0}\n        , renderWatch = nv.utils.renderWatch(dispatch, duration)\n        , currentYDomain\n        ;\n\n    var stateGetter = function(data) {\n        return function(){\n            return {\n                active: data.map(function(d) { return !d.disabled }),\n                index: index.i,\n                rescaleY: rescaleY\n            };\n        }\n    };\n\n    var stateSetter = function(data) {\n        return function(state) {\n            if (state.index !== undefined)\n                index.i = state.index;\n            if (state.rescaleY !== undefined)\n                rescaleY = state.rescaleY;\n            if (state.active !== undefined)\n                data.forEach(function(series,i) {\n                    series.disabled = !state.active[i];\n                });\n        }\n    };\n\n    function chart(selection) {\n        renderWatch.reset();\n        renderWatch.models(lines);\n        if (showXAxis) renderWatch.models(xAxis);\n        if (showYAxis) renderWatch.models(yAxis);\n        selection.each(function(data) {\n            var container = d3.select(this);\n            nv.utils.initSVG(container);\n            container.classed('nv-chart-' + id, true);\n            var that = this;\n\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            chart.update = function() {\n                if (duration === 0)\n                    container.call(chart);\n                else\n                    container.transition().duration(duration).call(chart)\n            };\n            chart.container = this;\n\n            state\n                .setter(stateSetter(data), chart.update)\n                .getter(stateGetter(data))\n                .update();\n\n            // DEPRECATED set state.disableddisabled\n            state.disabled = data.map(function(d) { return !!d.disabled });\n\n            if (!defaultState) {\n                var key;\n                defaultState = {};\n                for (key in state) {\n                    if (state[key] instanceof Array)\n                        defaultState[key] = state[key].slice(0);\n                    else\n                        defaultState[key] = state[key];\n                }\n            }\n\n            var indexDrag = d3.behavior.drag()\n                .on('dragstart', dragStart)\n                .on('drag', dragMove)\n                .on('dragend', dragEnd);\n\n\n            function dragStart(d,i) {\n                d3.select(chart.container)\n                    .style('cursor', 'ew-resize');\n            }\n\n            function dragMove(d,i) {\n                index.x = d3.event.x;\n                index.i = Math.round(dx.invert(index.x));\n                updateZero();\n            }\n\n            function dragEnd(d,i) {\n                d3.select(chart.container)\n                    .style('cursor', 'auto');\n\n                // update state and send stateChange with new index\n                state.index = index.i;\n                dispatch.stateChange(state);\n            }\n\n            // Display No Data message if there's nothing to show.\n            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n                nv.utils.noData(chart, container)\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n\n            // Setup Scales\n            x = lines.xScale();\n            y = lines.yScale();\n\n\n            dx.domain([0, data[0].values.length - 1]) //Assumes all series have same length\n                .range([0, availableWidth])\n                .clamp(true);\n\n            var data = indexify(index.i, data);\n\n            // initialize the starting yDomain for the not-rescale case after indexify (to have calculated point.display)\n            if (typeof(currentYDomain) === \"undefined\") {\n                currentYDomain = getCurrentYDomain(data);\n            }\n\n            if (!rescaleY) {\n                lines.yDomain(currentYDomain);\n                lines.clipEdge(true);\n            } else {\n                lines.yDomain(null);\n            }\n\n            // Setup containers and skeleton of chart\n            var interactivePointerEvents = (useInteractiveGuideline) ? \"none\" : \"all\";\n            var wrap = container.selectAll('g.nv-wrap.nv-cumulativeLine').data([data]);\n            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-cumulativeLine').append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-interactive');\n            gEnter.append('g').attr('class', 'nv-x nv-axis').style(\"pointer-events\",\"none\");\n            gEnter.append('g').attr('class', 'nv-y nv-axis');\n            gEnter.append('g').attr('class', 'nv-background');\n            gEnter.append('g').attr('class', 'nv-linesWrap').style(\"pointer-events\",interactivePointerEvents);\n            gEnter.append('g').attr('class', 'nv-avgLinesWrap').style(\"pointer-events\",\"none\");\n            gEnter.append('g').attr('class', 'nv-legendWrap');\n            gEnter.append('g').attr('class', 'nv-controlsWrap');\n\n            // Legend\n            if (!showLegend) {\n                g.select('.nv-legendWrap').selectAll('*').remove();\n            } else {\n                legend.width(availableWidth);\n\n                g.select('.nv-legendWrap')\n                    .datum(data)\n                    .call(legend);\n\n                if (!marginTop && legend.height() !== margin.top) {\n                    margin.top = legend.height();\n                    availableHeight = nv.utils.availableHeight(height, container, margin);\n                }\n\n                g.select('.nv-legendWrap')\n                    .attr('transform', 'translate(0,' + (-margin.top) +')')\n            }\n\n            // Controls\n            if (!showControls) {\n                 g.select('.nv-controlsWrap').selectAll('*').remove();\n            } else {\n                var controlsData = [\n                    { key: 'Re-scale y-axis', disabled: !rescaleY }\n                ];\n\n                controls\n                    .width(140)\n                    .color(['#444', '#444', '#444'])\n                    .rightAlign(false)\n                    .margin({top: 5, right: 0, bottom: 5, left: 20})\n                ;\n\n                g.select('.nv-controlsWrap')\n                    .datum(controlsData)\n                    .attr('transform', 'translate(0,' + (-margin.top) +')')\n                    .call(controls);\n            }\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            if (rightAlignYAxis) {\n                g.select(\".nv-y.nv-axis\")\n                    .attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n            }\n\n            // Show error if index point value is 0 (division by zero avoided)\n            var tempDisabled = data.filter(function(d) { return d.tempDisabled });\n\n            wrap.select('.tempDisabled').remove(); //clean-up and prevent duplicates\n            if (tempDisabled.length) {\n                wrap.append('text').attr('class', 'tempDisabled')\n                    .attr('x', availableWidth / 2)\n                    .attr('y', '-.71em')\n                    .style('text-anchor', 'end')\n                    .text(tempDisabled.map(function(d) { return d.key }).join(', ') + ' values cannot be calculated for this time period.');\n            }\n\n            //Set up interactive layer\n            if (useInteractiveGuideline) {\n                interactiveLayer\n                    .width(availableWidth)\n                    .height(availableHeight)\n                    .margin({left:margin.left,top:margin.top})\n                    .svgContainer(container)\n                    .xScale(x);\n                wrap.select(\".nv-interactive\").call(interactiveLayer);\n            }\n\n            gEnter.select('.nv-background')\n                .append('rect');\n\n            g.select('.nv-background rect')\n                .attr('width', availableWidth)\n                .attr('height', availableHeight);\n\n            lines\n                //.x(function(d) { return d.x })\n                .y(function(d) { return d.display.y })\n                .width(availableWidth)\n                .height(availableHeight)\n                .color(data.map(function(d,i) {\n                    return d.color || color(d, i);\n                }).filter(function(d,i) { return !data[i].disabled && !data[i].tempDisabled; }));\n\n            var linesWrap = g.select('.nv-linesWrap')\n                .datum(data.filter(function(d) { return  !d.disabled && !d.tempDisabled }));\n\n            linesWrap.call(lines);\n\n            //Store a series index number in the data array.\n            data.forEach(function(d,i) {\n                d.seriesIndex = i;\n            });\n\n            var avgLineData = data.filter(function(d) {\n                return !d.disabled && !!average(d);\n            });\n\n            var avgLines = g.select(\".nv-avgLinesWrap\").selectAll(\"line\")\n                .data(avgLineData, function(d) { return d.key; });\n\n            var getAvgLineY = function(d) {\n                //If average lines go off the svg element, clamp them to the svg bounds.\n                var yVal = y(average(d));\n                if (yVal < 0) return 0;\n                if (yVal > availableHeight) return availableHeight;\n                return yVal;\n            };\n\n            avgLines.enter()\n                .append('line')\n                .style('stroke-width',2)\n                .style('stroke-dasharray','10,10')\n                .style('stroke',function (d,i) {\n                    return lines.color()(d,d.seriesIndex);\n                })\n                .attr('x1',0)\n                .attr('x2',availableWidth)\n                .attr('y1', getAvgLineY)\n                .attr('y2', getAvgLineY);\n\n            avgLines\n                .style('stroke-opacity',function(d){\n                    //If average lines go offscreen, make them transparent\n                    var yVal = y(average(d));\n                    if (yVal < 0 || yVal > availableHeight) return 0;\n                    return 1;\n                })\n                .attr('x1',0)\n                .attr('x2',availableWidth)\n                .attr('y1', getAvgLineY)\n                .attr('y2', getAvgLineY);\n\n            avgLines.exit().remove();\n\n            //Create index line\n            var indexLine = linesWrap.selectAll('.nv-indexLine')\n                .data([index]);\n            indexLine.enter().append('rect').attr('class', 'nv-indexLine')\n                .attr('width', 3)\n                .attr('x', -2)\n                .attr('fill', 'red')\n                .attr('fill-opacity', .5)\n                .style(\"pointer-events\",\"all\")\n                .call(indexDrag);\n\n            indexLine\n                .attr('transform', function(d) { return 'translate(' + dx(d.i) + ',0)' })\n                .attr('height', availableHeight);\n\n            // Setup Axes\n            if (showXAxis) {\n                xAxis\n                    .scale(x)\n                    ._ticks( nv.utils.calcTicksX(availableWidth/70, data) )\n                    .tickSize(-availableHeight, 0);\n\n                g.select('.nv-x.nv-axis')\n                    .attr('transform', 'translate(0,' + y.range()[0] + ')');\n                g.select('.nv-x.nv-axis')\n                    .call(xAxis);\n            }\n\n            if (showYAxis) {\n                yAxis\n                    .scale(y)\n                    ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n                    .tickSize( -availableWidth, 0);\n\n                g.select('.nv-y.nv-axis')\n                    .call(yAxis);\n            }\n\n            //============================================================\n            // Event Handling/Dispatching (in chart's scope)\n            //------------------------------------------------------------\n\n            function updateZero() {\n                indexLine\n                    .data([index]);\n\n                //When dragging the index line, turn off line transitions.\n                // Then turn them back on when done dragging.\n                var oldDuration = chart.duration();\n                chart.duration(0);\n                chart.update();\n                chart.duration(oldDuration);\n            }\n\n            g.select('.nv-background rect')\n                .on('click', function() {\n                    index.x = d3.mouse(this)[0];\n                    index.i = Math.round(dx.invert(index.x));\n\n                    // update state and send stateChange with new index\n                    state.index = index.i;\n                    dispatch.stateChange(state);\n\n                    updateZero();\n                });\n\n            lines.dispatch.on('elementClick', function(e) {\n                index.i = e.pointIndex;\n                index.x = dx(index.i);\n\n                // update state and send stateChange with new index\n                state.index = index.i;\n                dispatch.stateChange(state);\n\n                updateZero();\n            });\n\n            controls.dispatch.on('legendClick', function(d,i) {\n                d.disabled = !d.disabled;\n                rescaleY = !d.disabled;\n                state.rescaleY = rescaleY;\n                if (!rescaleY) {\n                    currentYDomain = getCurrentYDomain(data); // rescale is turned off, so set the currentYDomain\n                }\n                dispatch.stateChange(state);\n                chart.update();\n            });\n\n            legend.dispatch.on('stateChange', function(newState) {\n                for (var key in newState)\n                    state[key] = newState[key];\n                dispatch.stateChange(state);\n                chart.update();\n            });\n\n            interactiveLayer.dispatch.on('elementMousemove', function(e) {\n                lines.clearHighlights();\n                var singlePoint, pointIndex, pointXLocation, allData = [];\n\n                data\n                    .filter(function(series, i) {\n                        series.seriesIndex = i;\n                        return !(series.disabled || series.tempDisabled);\n                    })\n                    .forEach(function(series,i) {\n                        pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n                        lines.highlightPoint(i, pointIndex, true);\n                        var point = series.values[pointIndex];\n                        if (typeof point === 'undefined') return;\n                        if (typeof singlePoint === 'undefined') singlePoint = point;\n                        if (typeof pointXLocation === 'undefined') pointXLocation = chart.xScale()(chart.x()(point,pointIndex));\n                        allData.push({\n                            key: series.key,\n                            value: chart.y()(point, pointIndex),\n                            color: color(series,series.seriesIndex)\n                        });\n                    });\n\n                //Highlight the tooltip entry based on which point the mouse is closest to.\n                if (allData.length > 2) {\n                    var yValue = chart.yScale().invert(e.mouseY);\n                    var domainExtent = Math.abs(chart.yScale().domain()[0] - chart.yScale().domain()[1]);\n                    var threshold = 0.03 * domainExtent;\n                    var indexToHighlight = nv.nearestValueIndex(allData.map(function(d){return d.value}),yValue,threshold);\n                    if (indexToHighlight !== null)\n                        allData[indexToHighlight].highlight = true;\n                }\n\n                var xValue = xAxis.tickFormat()(chart.x()(singlePoint,pointIndex), pointIndex);\n                interactiveLayer.tooltip\n                    .valueFormatter(function(d,i) {\n                        return yAxis.tickFormat()(d);\n                    })\n                    .data(\n                    {\n                        value: xValue,\n                        series: allData\n                    }\n                )();\n\n                interactiveLayer.renderGuideLine(pointXLocation);\n            });\n\n            interactiveLayer.dispatch.on(\"elementMouseout\",function(e) {\n                lines.clearHighlights();\n            });\n\n            // Update chart from a state object passed to event handler\n            dispatch.on('changeState', function(e) {\n                if (typeof e.disabled !== 'undefined') {\n                    data.forEach(function(series,i) {\n                        series.disabled = e.disabled[i];\n                    });\n\n                    state.disabled = e.disabled;\n                }\n\n                if (typeof e.index !== 'undefined') {\n                    index.i = e.index;\n                    index.x = dx(index.i);\n\n                    state.index = e.index;\n\n                    indexLine\n                        .data([index]);\n                }\n\n                if (typeof e.rescaleY !== 'undefined') {\n                    rescaleY = e.rescaleY;\n                }\n\n                chart.update();\n            });\n\n        });\n\n        renderWatch.renderEnd('cumulativeLineChart immediate');\n\n        return chart;\n    }\n\n    //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n    lines.dispatch.on('elementMouseover.tooltip', function(evt) {\n        var point = {\n            x: chart.x()(evt.point),\n            y: chart.y()(evt.point),\n            color: evt.point.color\n        };\n        evt.point = point;\n        tooltip.data(evt).hidden(false);\n    });\n\n    lines.dispatch.on('elementMouseout.tooltip', function(evt) {\n        tooltip.hidden(true)\n    });\n\n    //============================================================\n    // Functions\n    //------------------------------------------------------------\n\n    var indexifyYGetter = null;\n    /* Normalize the data according to an index point. */\n    function indexify(idx, data) {\n        if (!indexifyYGetter) indexifyYGetter = lines.y();\n        return data.map(function(line, i) {\n            if (!line.values) {\n                return line;\n            }\n            var indexValue = line.values[idx];\n            if (indexValue == null) {\n                return line;\n            }\n            var v = indexifyYGetter(indexValue, idx);\n\n            // avoid divide by zero\n            if (Math.abs(v) < 0.00001 && !noErrorCheck) {\n                line.tempDisabled = true;\n                return line;\n            }\n\n            line.tempDisabled = false;\n\n            line.values = line.values.map(function(point, pointIndex) {\n                point.display = {'y': (indexifyYGetter(point, pointIndex) - v) / v };\n                return point;\n            });\n\n            return line;\n        })\n    }\n\n    function getCurrentYDomain(data) {\n        var seriesDomains = data\n            .filter(function(series) { return !(series.disabled || series.tempDisabled)})\n            .map(function(series,i) {\n                return d3.extent(series.values, function (d) { return d.display.y });\n            });\n\n        return [\n            d3.min(seriesDomains, function(d) { return d[0] }),\n            d3.max(seriesDomains, function(d) { return d[1] })\n        ];\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    // expose chart's sub-components\n    chart.dispatch = dispatch;\n    chart.lines = lines;\n    chart.legend = legend;\n    chart.controls = controls;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.interactiveLayer = interactiveLayer;\n    chart.state = state;\n    chart.tooltip = tooltip;\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        showControls:     {get: function(){return showControls;}, set: function(_){showControls=_;}},\n        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n        average: {get: function(){return average;}, set: function(_){average=_;}},\n        defaultState:    {get: function(){return defaultState;}, set: function(_){defaultState=_;}},\n        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n        showXAxis:    {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n        showYAxis:    {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n        noErrorCheck:    {get: function(){return noErrorCheck;}, set: function(_){noErrorCheck=_;}},\n\n        // options that require extra logic in the setter\n        rescaleY:     {get: function(){return rescaleY;}, set: function(_){\n            rescaleY = _;\n            chart.state.rescaleY = _; // also update state\n        }},\n        margin: {get: function(){return margin;}, set: function(_){\n            if (_.top !== undefined) {\n                margin.top = _.top;\n                marginTop = _.top;\n            }\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n            legend.color(color);\n        }},\n        useInteractiveGuideline: {get: function(){return useInteractiveGuideline;}, set: function(_){\n            useInteractiveGuideline = _;\n            if (_ === true) {\n                chart.interactive(false);\n                chart.useVoronoi(false);\n            }\n        }},\n        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n            rightAlignYAxis = _;\n            yAxis.orient( (_) ? 'right' : 'left');\n        }},\n        duration:    {get: function(){return duration;}, set: function(_){\n            duration = _;\n            lines.duration(duration);\n            xAxis.duration(duration);\n            yAxis.duration(duration);\n            renderWatch.reset(duration);\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, lines);\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n//TODO: consider deprecating by adding necessary features to multiBar model\nnv.models.discreteBar = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n        , width = 960\n        , height = 500\n        , id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n        , container\n        , x = d3.scale.ordinal()\n        , y = d3.scale.linear()\n        , getX = function(d) { return d.x }\n        , getY = function(d) { return d.y }\n        , forceY = [0] // 0 is forced by default.. this makes sense for the majority of bar graphs... user can always do chart.forceY([]) to remove\n        , color = nv.utils.defaultColor()\n        , showValues = false\n        , valueFormat = d3.format(',.2f')\n        , xDomain\n        , yDomain\n        , xRange\n        , yRange\n        , dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd')\n        , rectClass = 'discreteBar'\n        , duration = 250\n        ;\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var x0, y0;\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n        renderWatch.reset();\n        selection.each(function(data) {\n            var availableWidth = width - margin.left - margin.right,\n                availableHeight = height - margin.top - margin.bottom;\n\n            container = d3.select(this);\n            nv.utils.initSVG(container);\n\n            //add series index to each data point for reference\n            data.forEach(function(series, i) {\n                series.values.forEach(function(point) {\n                    point.series = i;\n                });\n            });\n\n            // Setup Scales\n            // remap and flatten the data for use in calculating the scales' domains\n            var seriesData = (xDomain && yDomain) ? [] : // if we know xDomain and yDomain, no need to calculate\n                data.map(function(d) {\n                    return d.values.map(function(d,i) {\n                        return { x: getX(d,i), y: getY(d,i), y0: d.y0 }\n                    })\n                });\n\n            x   .domain(xDomain || d3.merge(seriesData).map(function(d) { return d.x }))\n                .rangeBands(xRange || [0, availableWidth], .1);\n            y   .domain(yDomain || d3.extent(d3.merge(seriesData).map(function(d) { return d.y }).concat(forceY)));\n\n            // If showValues, pad the Y axis range to account for label height\n            if (showValues) y.range(yRange || [availableHeight - (y.domain()[0] < 0 ? 12 : 0), y.domain()[1] > 0 ? 12 : 0]);\n            else y.range(yRange || [availableHeight, 0]);\n\n            //store old scales if they exist\n            x0 = x0 || x;\n            y0 = y0 || y.copy().range([y(0),y(0)]);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-discretebar').data([data]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-discretebar');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-groups');\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            //TODO: by definition, the discrete bar should not have multiple groups, will modify/remove later\n            var groups = wrap.select('.nv-groups').selectAll('.nv-group')\n                .data(function(d) { return d }, function(d) { return d.key });\n            groups.enter().append('g')\n                .style('stroke-opacity', 1e-6)\n                .style('fill-opacity', 1e-6);\n            groups.exit()\n                .watchTransition(renderWatch, 'discreteBar: exit groups')\n                .style('stroke-opacity', 1e-6)\n                .style('fill-opacity', 1e-6)\n                .remove();\n            groups\n                .attr('class', function(d,i) { return 'nv-group nv-series-' + i })\n                .classed('hover', function(d) { return d.hover });\n            groups\n                .watchTransition(renderWatch, 'discreteBar: groups')\n                .style('stroke-opacity', 1)\n                .style('fill-opacity', .75);\n\n            var bars = groups.selectAll('g.nv-bar')\n                .data(function(d) { return d.values });\n            bars.exit().remove();\n\n            var barsEnter = bars.enter().append('g')\n                .attr('transform', function(d,i,j) {\n                    return 'translate(' + (x(getX(d,i)) + x.rangeBand() * .05 ) + ', ' + y(0) + ')'\n                })\n                .on('mouseover', function(d,i) { //TODO: figure out why j works above, but not here\n                    d3.select(this).classed('hover', true);\n                    dispatch.elementMouseover({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                })\n                .on('mouseout', function(d,i) {\n                    d3.select(this).classed('hover', false);\n                    dispatch.elementMouseout({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                })\n                .on('mousemove', function(d,i) {\n                    dispatch.elementMousemove({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                })\n                .on('click', function(d,i) {\n                    var element = this;\n                    dispatch.elementClick({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\"),\n                        event: d3.event,\n                        element: element\n                    });\n                    d3.event.stopPropagation();\n                })\n                .on('dblclick', function(d,i) {\n                    dispatch.elementDblClick({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                    d3.event.stopPropagation();\n                });\n\n            barsEnter.append('rect')\n                .attr('height', 0)\n                .attr('width', x.rangeBand() * .9 / data.length )\n\n            if (showValues) {\n                barsEnter.append('text')\n                    .attr('text-anchor', 'middle')\n                ;\n\n                bars.select('text')\n                    .text(function(d,i) { return valueFormat(getY(d,i)) })\n                    .watchTransition(renderWatch, 'discreteBar: bars text')\n                    .attr('x', x.rangeBand() * .9 / 2)\n                    .attr('y', function(d,i) { return getY(d,i) < 0 ? y(getY(d,i)) - y(0) + 12 : -4 })\n\n                ;\n            } else {\n                bars.selectAll('text').remove();\n            }\n\n            bars\n                .attr('class', function(d,i) { return getY(d,i) < 0 ? 'nv-bar negative' : 'nv-bar positive' })\n                .style('fill', function(d,i) { return d.color || color(d,i) })\n                .style('stroke', function(d,i) { return d.color || color(d,i) })\n                .select('rect')\n                .attr('class', rectClass)\n                .watchTransition(renderWatch, 'discreteBar: bars rect')\n                .attr('width', x.rangeBand() * .9 / data.length);\n            bars.watchTransition(renderWatch, 'discreteBar: bars')\n                //.delay(function(d,i) { return i * 1200 / data[0].values.length })\n                .attr('transform', function(d,i) {\n                    var left = x(getX(d,i)) + x.rangeBand() * .05,\n                        top = getY(d,i) < 0 ?\n                            y(0) :\n                                y(0) - y(getY(d,i)) < 1 ?\n                            y(0) - 1 : //make 1 px positive bars show up above y=0\n                            y(getY(d,i));\n\n                    return 'translate(' + left + ', ' + top + ')'\n                })\n                .select('rect')\n                .attr('height', function(d,i) {\n                    return  Math.max(Math.abs(y(getY(d,i)) - y(0)), 1)\n                });\n\n\n            //store old scales for use in transitions on update\n            x0 = x.copy();\n            y0 = y.copy();\n\n        });\n\n        renderWatch.renderEnd('discreteBar immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:   {get: function(){return width;}, set: function(_){width=_;}},\n        height:  {get: function(){return height;}, set: function(_){height=_;}},\n        forceY:  {get: function(){return forceY;}, set: function(_){forceY=_;}},\n        showValues: {get: function(){return showValues;}, set: function(_){showValues=_;}},\n        x:       {get: function(){return getX;}, set: function(_){getX=_;}},\n        y:       {get: function(){return getY;}, set: function(_){getY=_;}},\n        xScale:  {get: function(){return x;}, set: function(_){x=_;}},\n        yScale:  {get: function(){return y;}, set: function(_){y=_;}},\n        xDomain: {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n        yDomain: {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n        xRange:  {get: function(){return xRange;}, set: function(_){xRange=_;}},\n        yRange:  {get: function(){return yRange;}, set: function(_){yRange=_;}},\n        valueFormat:    {get: function(){return valueFormat;}, set: function(_){valueFormat=_;}},\n        id:          {get: function(){return id;}, set: function(_){id=_;}},\n        rectClass: {get: function(){return rectClass;}, set: function(_){rectClass=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n\nnv.models.discreteBarChart = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var discretebar = nv.models.discreteBar()\n        , xAxis = nv.models.axis()\n        , yAxis = nv.models.axis()\n\t, legend = nv.models.legend()\n        , tooltip = nv.models.tooltip()\n        ;\n\n    var margin = {top: 15, right: 10, bottom: 50, left: 60}\n        , marginTop = null\n        , width = null\n        , height = null\n        , color = nv.utils.getColor()\n\t, showLegend = false\n        , showXAxis = true\n        , showYAxis = true\n        , rightAlignYAxis = false\n        , staggerLabels = false\n        , wrapLabels = false\n        , rotateLabels = 0\n        , x\n        , y\n        , noData = null\n        , dispatch = d3.dispatch('beforeUpdate','renderEnd')\n        , duration = 250\n        ;\n\n    xAxis\n        .orient('bottom')\n        .showMaxMin(false)\n        .tickFormat(function(d) { return d })\n    ;\n    yAxis\n        .orient((rightAlignYAxis) ? 'right' : 'left')\n        .tickFormat(d3.format(',.1f'))\n    ;\n\n    tooltip\n        .duration(0)\n        .headerEnabled(false)\n        .valueFormatter(function(d, i) {\n            return yAxis.tickFormat()(d, i);\n        })\n        .keyFormatter(function(d, i) {\n            return xAxis.tickFormat()(d, i);\n        });\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n        renderWatch.reset();\n        renderWatch.models(discretebar);\n        if (showXAxis) renderWatch.models(xAxis);\n        if (showYAxis) renderWatch.models(yAxis);\n\n        selection.each(function(data) {\n            var container = d3.select(this),\n                that = this;\n            nv.utils.initSVG(container);\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            chart.update = function() {\n                dispatch.beforeUpdate();\n                container.transition().duration(duration).call(chart);\n            };\n            chart.container = this;\n\n            // Display No Data message if there's nothing to show.\n            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n                nv.utils.noData(chart, container);\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n\n            // Setup Scales\n            x = discretebar.xScale();\n            y = discretebar.yScale().clamp(true);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-discreteBarWithAxes').data([data]);\n            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-discreteBarWithAxes').append('g');\n            var defsEnter = gEnter.append('defs');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-x nv-axis');\n            gEnter.append('g').attr('class', 'nv-y nv-axis')\n                .append('g').attr('class', 'nv-zeroLine')\n                .append('line');\n\n            gEnter.append('g').attr('class', 'nv-barsWrap');\n\t    gEnter.append('g').attr('class', 'nv-legendWrap');\n\n            g.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            // Legend\n            if (!showLegend) {\n                g.select('.nv-legendWrap').selectAll('*').remove();\n            } else {\n                legend.width(availableWidth);\n\n                g.select('.nv-legendWrap')\n                    .datum(data)\n                    .call(legend);\n\n                if (!marginTop && legend.height() !== margin.top) {\n                    margin.top = legend.height();\n                    availableHeight = nv.utils.availableHeight(height, container, margin);\n                }\n\n                wrap.select('.nv-legendWrap')\n                    .attr('transform', 'translate(0,' + (-margin.top) +')')\n            }\n\n            if (rightAlignYAxis) {\n                g.select(\".nv-y.nv-axis\")\n                    .attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n            }\n\n            // Main Chart Component(s)\n            discretebar\n                .width(availableWidth)\n                .height(availableHeight);\n\n            var barsWrap = g.select('.nv-barsWrap')\n                .datum(data.filter(function(d) { return !d.disabled }));\n\n            barsWrap.transition().call(discretebar);\n\n\n            defsEnter.append('clipPath')\n                .attr('id', 'nv-x-label-clip-' + discretebar.id())\n                .append('rect');\n\n            g.select('#nv-x-label-clip-' + discretebar.id() + ' rect')\n                .attr('width', x.rangeBand() * (staggerLabels ? 2 : 1))\n                .attr('height', 16)\n                .attr('x', -x.rangeBand() / (staggerLabels ? 1 : 2 ));\n\n            // Setup Axes\n            if (showXAxis) {\n                xAxis\n                    .scale(x)\n                    ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n                    .tickSize(-availableHeight, 0);\n\n                g.select('.nv-x.nv-axis')\n                    .attr('transform', 'translate(0,' + (y.range()[0] + ((discretebar.showValues() && y.domain()[0] < 0) ? 16 : 0)) + ')');\n                g.select('.nv-x.nv-axis').call(xAxis);\n\n                var xTicks = g.select('.nv-x.nv-axis').selectAll('g');\n                if (staggerLabels) {\n                    xTicks\n                        .selectAll('text')\n                        .attr('transform', function(d,i,j) { return 'translate(0,' + (j % 2 == 0 ? '5' : '17') + ')' })\n                }\n\n                if (rotateLabels) {\n                    xTicks\n                        .selectAll('.tick text')\n                        .attr('transform', 'rotate(' + rotateLabels + ' 0,0)')\n                        .style('text-anchor', rotateLabels > 0 ? 'start' : 'end');\n                }\n\n                if (wrapLabels) {\n                    g.selectAll('.tick text')\n                        .call(nv.utils.wrapTicks, chart.xAxis.rangeBand())\n                }\n            }\n\n            if (showYAxis) {\n                yAxis\n                    .scale(y)\n                    ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n                    .tickSize( -availableWidth, 0);\n\n                g.select('.nv-y.nv-axis').call(yAxis);\n            }\n\n            // Zero line\n            g.select(\".nv-zeroLine line\")\n                .attr(\"x1\",0)\n                .attr(\"x2\",(rightAlignYAxis) ? -availableWidth : availableWidth)\n                .attr(\"y1\", y(0))\n                .attr(\"y2\", y(0))\n            ;\n        });\n\n        renderWatch.renderEnd('discreteBar chart immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n    discretebar.dispatch.on('elementMouseover.tooltip', function(evt) {\n        evt['series'] = {\n            key: chart.x()(evt.data),\n            value: chart.y()(evt.data),\n            color: evt.color\n        };\n        tooltip.data(evt).hidden(false);\n    });\n\n    discretebar.dispatch.on('elementMouseout.tooltip', function(evt) {\n        tooltip.hidden(true);\n    });\n\n    discretebar.dispatch.on('elementMousemove.tooltip', function(evt) {\n        tooltip();\n    });\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.discretebar = discretebar;\n    chart.legend = legend;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.tooltip = tooltip;\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n\tshowLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n        staggerLabels: {get: function(){return staggerLabels;}, set: function(_){staggerLabels=_;}},\n        rotateLabels:  {get: function(){return rotateLabels;}, set: function(_){rotateLabels=_;}},\n        wrapLabels:  {get: function(){return wrapLabels;}, set: function(_){wrapLabels=!!_;}},\n        showXAxis: {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n        showYAxis: {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            if (_.top !== undefined) {\n                margin.top = _.top;\n                marginTop = _.top;\n            }\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n            discretebar.duration(duration);\n            xAxis.duration(duration);\n            yAxis.duration(duration);\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n            discretebar.color(color);\n\t    legend.color(color);\n        }},\n        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n            rightAlignYAxis = _;\n            yAxis.orient( (_) ? 'right' : 'left');\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, discretebar);\n    nv.utils.initOptions(chart);\n\n    return chart;\n}\n\nnv.models.distribution = function() {\n    \"use strict\";\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n        , width = 400 //technically width or height depending on x or y....\n        , size = 8\n        , axis = 'x' // 'x' or 'y'... horizontal or vertical\n        , getData = function(d) { return d[axis] }  // defaults d.x or d.y\n        , color = nv.utils.defaultColor()\n        , scale = d3.scale.linear()\n        , domain\n        , duration = 250\n        , dispatch = d3.dispatch('renderEnd')\n        ;\n\n    //============================================================\n\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var scale0;\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    //============================================================\n\n\n    function chart(selection) {\n        renderWatch.reset();\n        selection.each(function(data) {\n            var availableLength = width - (axis === 'x' ? margin.left + margin.right : margin.top + margin.bottom),\n                naxis = axis == 'x' ? 'y' : 'x',\n                container = d3.select(this);\n            nv.utils.initSVG(container);\n\n            //------------------------------------------------------------\n            // Setup Scales\n\n            scale0 = scale0 || scale;\n\n            //------------------------------------------------------------\n\n\n            //------------------------------------------------------------\n            // Setup containers and skeleton of chart\n\n            var wrap = container.selectAll('g.nv-distribution').data([data]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-distribution');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')\n\n            //------------------------------------------------------------\n\n\n            var distWrap = g.selectAll('g.nv-dist')\n                .data(function(d) { return d }, function(d) { return d.key });\n\n            distWrap.enter().append('g');\n            distWrap\n                .attr('class', function(d,i) { return 'nv-dist nv-series-' + i })\n                .style('stroke', function(d,i) { return color(d, i) });\n\n            var dist = distWrap.selectAll('line.nv-dist' + axis)\n                .data(function(d) { return d.values })\n            dist.enter().append('line')\n                .attr(axis + '1', function(d,i) { return scale0(getData(d,i)) })\n                .attr(axis + '2', function(d,i) { return scale0(getData(d,i)) })\n            renderWatch.transition(distWrap.exit().selectAll('line.nv-dist' + axis), 'dist exit')\n                // .transition()\n                .attr(axis + '1', function(d,i) { return scale(getData(d,i)) })\n                .attr(axis + '2', function(d,i) { return scale(getData(d,i)) })\n                .style('stroke-opacity', 0)\n                .remove();\n            dist\n                .attr('class', function(d,i) { return 'nv-dist' + axis + ' nv-dist' + axis + '-' + i })\n                .attr(naxis + '1', 0)\n                .attr(naxis + '2', size);\n            renderWatch.transition(dist, 'dist')\n                // .transition()\n                .attr(axis + '1', function(d,i) { return scale(getData(d,i)) })\n                .attr(axis + '2', function(d,i) { return scale(getData(d,i)) })\n\n\n            scale0 = scale.copy();\n\n        });\n        renderWatch.renderEnd('distribution immediate');\n        return chart;\n    }\n\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart.dispatch = dispatch;\n\n    chart.margin = function(_) {\n        if (!arguments.length) return margin;\n        margin.top    = typeof _.top    != 'undefined' ? _.top    : margin.top;\n        margin.right  = typeof _.right  != 'undefined' ? _.right  : margin.right;\n        margin.bottom = typeof _.bottom != 'undefined' ? _.bottom : margin.bottom;\n        margin.left   = typeof _.left   != 'undefined' ? _.left   : margin.left;\n        return chart;\n    };\n\n    chart.width = function(_) {\n        if (!arguments.length) return width;\n        width = _;\n        return chart;\n    };\n\n    chart.axis = function(_) {\n        if (!arguments.length) return axis;\n        axis = _;\n        return chart;\n    };\n\n    chart.size = function(_) {\n        if (!arguments.length) return size;\n        size = _;\n        return chart;\n    };\n\n    chart.getData = function(_) {\n        if (!arguments.length) return getData;\n        getData = d3.functor(_);\n        return chart;\n    };\n\n    chart.scale = function(_) {\n        if (!arguments.length) return scale;\n        scale = _;\n        return chart;\n    };\n\n    chart.color = function(_) {\n        if (!arguments.length) return color;\n        color = nv.utils.getColor(_);\n        return chart;\n    };\n\n    chart.duration = function(_) {\n        if (!arguments.length) return duration;\n        duration = _;\n        renderWatch.reset(duration);\n        return chart;\n    };\n    //============================================================\n\n\n    return chart;\n}\nnv.models.focus = function(content) {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var content = content || nv.models.line()\n        , xAxis = nv.models.axis()\n        , yAxis = nv.models.axis()\n        , brush = d3.svg.brush()\n        ;\n\n    var margin = {top: 10, right: 0, bottom: 30, left: 0}\n        , color = nv.utils.defaultColor()\n        , width = null\n        , height = 70\n        , showXAxis = true\n        , showYAxis = false\n        , rightAlignYAxis = false\n        , ticks = null\n        , x\n        , y\n        , brushExtent = null\n        , duration = 250\n        , dispatch = d3.dispatch('brush', 'onBrush', 'renderEnd')\n        , syncBrushing = true\n        ;\n\n    content.interactive(false);\n    content.pointActive(function(d) { return false; });\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n        renderWatch.reset();\n        renderWatch.models(content);\n        if (showXAxis) renderWatch.models(xAxis);\n        if (showYAxis) renderWatch.models(yAxis);\n\n        selection.each(function(data) {\n            var container = d3.select(this);\n            nv.utils.initSVG(container);\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = height - margin.top - margin.bottom;\n\n            chart.update = function() { \n                if( duration === 0 ) {\n                    container.call( chart );\n                } else {\n                    container.transition().duration(duration).call(chart);\n                }\n            };\n            chart.container = this;\n\n            // Setup Scales\n            x = content.xScale();\n            y = content.yScale();\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-focus').data([data]);\n            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-focus').append('g');\n            var g = wrap.select('g');\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            gEnter.append('g').attr('class', 'nv-background').append('rect');\n            gEnter.append('g').attr('class', 'nv-x nv-axis');\n            gEnter.append('g').attr('class', 'nv-y nv-axis');\n            gEnter.append('g').attr('class', 'nv-contentWrap');\n            gEnter.append('g').attr('class', 'nv-brushBackground');\n            gEnter.append('g').attr('class', 'nv-x nv-brush');\n\n            if (rightAlignYAxis) {\n                g.select(\".nv-y.nv-axis\")\n                    .attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n            }\n\n            g.select('.nv-background rect')\n                .attr('width', availableWidth)\n                .attr('height', availableHeight);\n                \n            content\n                .width(availableWidth)\n                .height(availableHeight)\n                .color(data.map(function(d,i) {\n                    return d.color || color(d, i);\n                }).filter(function(d,i) { return !data[i].disabled; }));\n\n            var contentWrap = g.select('.nv-contentWrap')\n                .datum(data.filter(function(d) { return !d.disabled; }));\n\n            d3.transition(contentWrap).call(content);\n            \n            // Setup Brush\n            brush\n                .x(x)\n                .on('brush', function() {\n                    onBrush(syncBrushing);\n                });\n\n            brush.on('brushend', function () {\n                if (!syncBrushing) {\n                    dispatch.onBrush(brush.empty() ? x.domain() : brush.extent());\n                }\n            });\n\n            if (brushExtent) brush.extent(brushExtent);\n\n            var brushBG = g.select('.nv-brushBackground').selectAll('g')\n                .data([brushExtent || brush.extent()]);\n    \n            var brushBGenter = brushBG.enter()\n                .append('g');\n\n            brushBGenter.append('rect')\n                .attr('class', 'left')\n                .attr('x', 0)\n                .attr('y', 0)\n                .attr('height', availableHeight);\n\n            brushBGenter.append('rect')\n                .attr('class', 'right')\n                .attr('x', 0)\n                .attr('y', 0)\n                .attr('height', availableHeight);\n\n            var gBrush = g.select('.nv-x.nv-brush')\n                .call(brush);\n            gBrush.selectAll('rect')\n                .attr('height', availableHeight);\n            gBrush.selectAll('.resize').append('path').attr('d', resizePath);\n\n            onBrush(true);\n\n            g.select('.nv-background rect')\n                .attr('width', availableWidth)\n                .attr('height', availableHeight);\n\n            if (showXAxis) {\n                xAxis.scale(x)\n                    ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n                    .tickSize(-availableHeight, 0);\n  \n                g.select('.nv-x.nv-axis')\n                    .attr('transform', 'translate(0,' + y.range()[0] + ')');\n                d3.transition(g.select('.nv-x.nv-axis'))\n                    .call(xAxis);\n            }\n\n            if (showYAxis) {\n                yAxis\n                    .scale(y)\n                    ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n                    .tickSize( -availableWidth, 0);\n\n                d3.transition(g.select('.nv-y.nv-axis'))\n                    .call(yAxis);\n            }\n            \n            g.select('.nv-x.nv-axis')\n                .attr('transform', 'translate(0,' + y.range()[0] + ')');\n\n            //============================================================\n            // Event Handling/Dispatching (in chart's scope)\n            //------------------------------------------------------------\n\n            //============================================================\n            // Functions\n            //------------------------------------------------------------\n    \n            // Taken from crossfilter (http://square.github.com/crossfilter/)\n            function resizePath(d) {\n                var e = +(d == 'e'),\n                    x = e ? 1 : -1,\n                    y = availableHeight / 3;\n                return 'M' + (0.5 * x) + ',' + y\n                    + 'A6,6 0 0 ' + e + ' ' + (6.5 * x) + ',' + (y + 6)\n                    + 'V' + (2 * y - 6)\n                    + 'A6,6 0 0 ' + e + ' ' + (0.5 * x) + ',' + (2 * y)\n                    + 'Z'\n                    + 'M' + (2.5 * x) + ',' + (y + 8)\n                    + 'V' + (2 * y - 8)\n                    + 'M' + (4.5 * x) + ',' + (y + 8)\n                    + 'V' + (2 * y - 8);\n            }\n    \n    \n            function updateBrushBG() {\n                if (!brush.empty()) brush.extent(brushExtent);\n                brushBG\n                    .data([brush.empty() ? x.domain() : brushExtent])\n                    .each(function(d,i) {\n                        var leftWidth = x(d[0]) - x.range()[0],\n                            rightWidth = availableWidth - x(d[1]);\n                        d3.select(this).select('.left')\n                            .attr('width',  leftWidth < 0 ? 0 : leftWidth);\n    \n                        d3.select(this).select('.right')\n                            .attr('x', x(d[1]))\n                            .attr('width', rightWidth < 0 ? 0 : rightWidth);\n                    });\n            }\n\n\n            function onBrush(shouldDispatch) {\n                brushExtent = brush.empty() ? null : brush.extent();\n                var extent = brush.empty() ? x.domain() : brush.extent();\n                dispatch.brush({extent: extent, brush: brush});\n                updateBrushBG();\n                if (shouldDispatch) {\n                    dispatch.onBrush(extent);\n                }\n            }\n        });\n\n        renderWatch.renderEnd('focus immediate');\n        return chart;\n    }\n\n\n    //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    // expose chart's sub-components\n    chart.dispatch = dispatch;\n    chart.content = content;\n    chart.brush = brush;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        showXAxis:      {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n        showYAxis:    {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n        brushExtent: {get: function(){return brushExtent;}, set: function(_){brushExtent=_;}},\n        syncBrushing: {get: function(){return syncBrushing;}, set: function(_){syncBrushing=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n            content.duration(duration);\n            xAxis.duration(duration);\n            yAxis.duration(duration);\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n            content.color(color);\n        }},\n        interpolate: {get: function(){return content.interpolate();}, set: function(_){\n            content.interpolate(_);\n        }},\n        xTickFormat: {get: function(){return xAxis.tickFormat();}, set: function(_){\n            xAxis.tickFormat(_);\n        }},\n        yTickFormat: {get: function(){return yAxis.tickFormat();}, set: function(_){\n            yAxis.tickFormat(_);\n        }},\n        x: {get: function(){return content.x();}, set: function(_){\n            content.x(_);\n        }},\n        y: {get: function(){return content.y();}, set: function(_){\n            content.y(_);\n        }},\n        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n            rightAlignYAxis = _;\n            yAxis.orient( rightAlignYAxis ? 'right' : 'left');\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, content);\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\nnv.models.forceDirectedGraph = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n    var margin = {top: 2, right: 0, bottom: 2, left: 0}\n        , width = 400\n        , height = 32\n        , container = null\n        , dispatch = d3.dispatch('renderEnd')\n        , color = nv.utils.getColor(['#000'])\n        , tooltip      = nv.models.tooltip()\n        , noData = null\n        // Force directed graph specific parameters [default values]\n        , linkStrength = 0.1\n        , friction = 0.9\n        , linkDist = 30\n        , charge = -120\n        , gravity = 0.1\n        , theta = 0.8\n        , alpha = 0.1\n        , radius = 5\n        // These functions allow to add extra attributes to ndes and links\n        ,nodeExtras = function(nodes) { /* Do nothing */ }\n        ,linkExtras = function(links) { /* Do nothing */ }\n        , getX=d3.functor(0.0)\n        , getY=d3.functor(0.0)\n        ;\n\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n        renderWatch.reset();\n\n        selection.each(function(data) {\n          container = d3.select(this);\n          nv.utils.initSVG(container);\n\n          var availableWidth = nv.utils.availableWidth(width, container, margin),\n              availableHeight = nv.utils.availableHeight(height, container, margin);\n\n          container\n                  .attr(\"width\", availableWidth)\n                  .attr(\"height\", availableHeight);\n\n          // Display No Data message if there's nothing to show.\n          if (!data || !data.links || !data.nodes) {\n              nv.utils.noData(chart, container)\n              return chart;\n          } else {\n              container.selectAll('.nv-noData').remove();\n          }\n          container.selectAll('*').remove();\n\n          // Collect names of all fields in the nodes\n          var nodeFieldSet = new Set();\n          data.nodes.forEach(function(node) {\n            var keys = Object.keys(node);\n            keys.forEach(function(key) {\n              nodeFieldSet.add(key);\n            });\n          });\n\n          var force = d3.layout.force()\n                .nodes(data.nodes)\n                .links(data.links)\n                .size([availableWidth, availableHeight])\n                .linkStrength(linkStrength)\n                .friction(friction)\n                .linkDistance(linkDist)\n                .charge(charge)\n                .gravity(gravity)\n                .theta(theta)\n                .alpha(alpha)\n                .start();\n\n          var link = container.selectAll(\".link\")\n                .data(data.links)\n                .enter().append(\"line\")\n                .attr(\"class\", \"nv-force-link\")\n                .style(\"stroke-width\", function(d) { return Math.sqrt(d.value); });\n\n          var node = container.selectAll(\".node\")\n                .data(data.nodes)\n                .enter()\n                .append(\"g\")\n                .attr(\"class\", \"nv-force-node\")\n                .call(force.drag);\n\n          node\n            .append(\"circle\")\n            .attr(\"r\", radius)\n            .style(\"fill\", function(d) { return color(d) } )\n            .on(\"mouseover\", function(evt) {\n              container.select('.nv-series-' + evt.seriesIndex + ' .nv-distx-' + evt.pointIndex)\n                  .attr('y1', evt.py);\n              container.select('.nv-series-' + evt.seriesIndex + ' .nv-disty-' + evt.pointIndex)\n                  .attr('x2', evt.px);\n\n              // Add 'series' object to\n              var nodeColor = color(evt);\n              evt.series = [];\n              nodeFieldSet.forEach(function(field) {\n                evt.series.push({\n                  color: nodeColor,\n                  key:   field,\n                  value: evt[field]\n                });\n              });\n              tooltip.data(evt).hidden(false);\n            })\n            .on(\"mouseout\",  function(d) {\n              tooltip.hidden(true);\n            });\n\n          tooltip.headerFormatter(function(d) {return \"Node\";});\n\n          // Apply extra attributes to nodes and links (if any)\n          linkExtras(link);\n          nodeExtras(node);\n\n          force.on(\"tick\", function() {\n              link.attr(\"x1\", function(d) { return d.source.x; })\n                  .attr(\"y1\", function(d) { return d.source.y; })\n                  .attr(\"x2\", function(d) { return d.target.x; })\n                  .attr(\"y2\", function(d) { return d.target.y; });\n\n              node.attr(\"transform\", function(d) {\n                return \"translate(\" + d.x + \", \" + d.y + \")\";\n              });\n            });\n        });\n\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:     {get: function(){return width;}, set: function(_){width=_;}},\n        height:    {get: function(){return height;}, set: function(_){height=_;}},\n\n        // Force directed graph specific parameters\n        linkStrength:{get: function(){return linkStrength;}, set: function(_){linkStrength=_;}},\n        friction:    {get: function(){return friction;}, set: function(_){friction=_;}},\n        linkDist:    {get: function(){return linkDist;}, set: function(_){linkDist=_;}},\n        charge:      {get: function(){return charge;}, set: function(_){charge=_;}},\n        gravity:     {get: function(){return gravity;}, set: function(_){gravity=_;}},\n        theta:       {get: function(){return theta;}, set: function(_){theta=_;}},\n        alpha:       {get: function(){return alpha;}, set: function(_){alpha=_;}},\n        radius:      {get: function(){return radius;}, set: function(_){radius=_;}},\n\n        //functor options\n        x: {get: function(){return getX;}, set: function(_){getX=d3.functor(_);}},\n        y: {get: function(){return getY;}, set: function(_){getY=d3.functor(_);}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }},\n        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n        nodeExtras: {get: function(){return nodeExtras;}, set: function(_){\n            nodeExtras = _;\n        }},\n        linkExtras: {get: function(){return linkExtras;}, set: function(_){\n            linkExtras = _;\n        }}\n    });\n\n    chart.dispatch = dispatch;\n    chart.tooltip = tooltip;\n    nv.utils.initOptions(chart);\n    return chart;\n};\nnv.models.furiousLegend = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 5, right: 0, bottom: 5, left: 0}\n        , width = 400\n        , height = 20\n        , getKey = function(d) { return d.key }\n        , keyFormatter = function (d) { return d }\n        , color = nv.utils.getColor()\n        , maxKeyLength = 20 //default value for key lengths\n        , align = true\n        , padding = 28 //define how much space between legend items. - recommend 32 for furious version\n        , rightAlign = true\n        , updateState = true   //If true, legend will update data.disabled and trigger a 'stateChange' dispatch.\n        , radioButtonMode = false   //If true, clicking legend items will cause it to behave like a radio button. (only one can be selected at a time)\n        , expanded = false\n        , dispatch = d3.dispatch('legendClick', 'legendDblclick', 'legendMouseover', 'legendMouseout', 'stateChange')\n        , vers = 'classic' //Options are \"classic\" and \"furious\"\n        ;\n\n    function chart(selection) {\n        selection.each(function(data) {\n            var availableWidth = width - margin.left - margin.right,\n                container = d3.select(this);\n            nv.utils.initSVG(container);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-legend').data([data]);\n            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-legend').append('g');\n            var g = wrap.select('g');\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            var series = g.selectAll('.nv-series')\n                .data(function(d) {\n                    if(vers != 'furious') return d;\n\n                    return d.filter(function(n) {\n                        return expanded ? true : !n.disengaged;\n                    });\n                });\n            var seriesEnter = series.enter().append('g').attr('class', 'nv-series')\n\n            var seriesShape;\n\n            if(vers == 'classic') {\n                seriesEnter.append('circle')\n                    .style('stroke-width', 2)\n                    .attr('class','nv-legend-symbol')\n                    .attr('r', 5);\n\n                seriesShape = series.select('circle');\n            } else if (vers == 'furious') {\n                seriesEnter.append('rect')\n                    .style('stroke-width', 2)\n                    .attr('class','nv-legend-symbol')\n                    .attr('rx', 3)\n                    .attr('ry', 3);\n\n                seriesShape = series.select('rect');\n\n                seriesEnter.append('g')\n                    .attr('class', 'nv-check-box')\n                    .property('innerHTML','<path d=\"M0.5,5 L22.5,5 L22.5,26.5 L0.5,26.5 L0.5,5 Z\" class=\"nv-box\"></path><path d=\"M5.5,12.8618467 L11.9185089,19.2803556 L31,0.198864511\" class=\"nv-check\"></path>')\n                    .attr('transform', 'translate(-10,-8)scale(0.5)');\n\n                var seriesCheckbox = series.select('.nv-check-box');\n\n                seriesCheckbox.each(function(d,i) {\n                    d3.select(this).selectAll('path')\n                        .attr('stroke', setTextColor(d,i));\n                });\n            }\n\n            seriesEnter.append('text')\n                .attr('text-anchor', 'start')\n                .attr('class','nv-legend-text')\n                .attr('dy', '.32em')\n                .attr('dx', '8');\n\n            var seriesText = series.select('text.nv-legend-text');\n\n            series\n                .on('mouseover', function(d,i) {\n                    dispatch.legendMouseover(d,i);  //TODO: Make consistent with other event objects\n                })\n                .on('mouseout', function(d,i) {\n                    dispatch.legendMouseout(d,i);\n                })\n                .on('click', function(d,i) {\n                    dispatch.legendClick(d,i);\n                    // make sure we re-get data in case it was modified\n                    var data = series.data();\n                    if (updateState) {\n                        if(vers =='classic') {\n                            if (radioButtonMode) {\n                                //Radio button mode: set every series to disabled,\n                                //  and enable the clicked series.\n                                data.forEach(function(series) { series.disabled = true});\n                                d.disabled = false;\n                            }\n                            else {\n                                d.disabled = !d.disabled;\n                                if (data.every(function(series) { return series.disabled})) {\n                                    //the default behavior of NVD3 legends is, if every single series\n                                    // is disabled, turn all series' back on.\n                                    data.forEach(function(series) { series.disabled = false});\n                                }\n                            }\n                        } else if(vers == 'furious') {\n                            if(expanded) {\n                                d.disengaged = !d.disengaged;\n                                d.userDisabled = d.userDisabled == undefined ? !!d.disabled : d.userDisabled;\n                                d.disabled = d.disengaged || d.userDisabled;\n                            } else if (!expanded) {\n                                d.disabled = !d.disabled;\n                                d.userDisabled = d.disabled;\n                                var engaged = data.filter(function(d) { return !d.disengaged; });\n                                if (engaged.every(function(series) { return series.userDisabled })) {\n                                    //the default behavior of NVD3 legends is, if every single series\n                                    // is disabled, turn all series' back on.\n                                    data.forEach(function(series) {\n                                        series.disabled = series.userDisabled = false;\n                                    });\n                                }\n                            }\n                        }\n                        dispatch.stateChange({\n                            disabled: data.map(function(d) { return !!d.disabled }),\n                            disengaged: data.map(function(d) { return !!d.disengaged })\n                        });\n\n                    }\n                })\n                .on('dblclick', function(d,i) {\n                    if(vers == 'furious' && expanded) return;\n                    dispatch.legendDblclick(d,i);\n                    if (updateState) {\n                        // make sure we re-get data in case it was modified\n                        var data = series.data();\n                        //the default behavior of NVD3 legends, when double clicking one,\n                        // is to set all other series' to false, and make the double clicked series enabled.\n                        data.forEach(function(series) {\n                            series.disabled = true;\n                            if(vers == 'furious') series.userDisabled = series.disabled;\n                        });\n                        d.disabled = false;\n                        if(vers == 'furious') d.userDisabled = d.disabled;\n                        dispatch.stateChange({\n                            disabled: data.map(function(d) { return !!d.disabled })\n                        });\n                    }\n                });\n\n            series.classed('nv-disabled', function(d) { return d.userDisabled });\n            series.exit().remove();\n\n            seriesText\n                .attr('fill', setTextColor)\n                .text(function (d) { return keyFormatter(getKey(d)) });\n\n            //TODO: implement fixed-width and max-width options (max-width is especially useful with the align option)\n            // NEW ALIGNING CODE, TODO: clean up\n\n            var versPadding;\n            switch(vers) {\n                case 'furious' :\n                    versPadding = 23;\n                    break;\n                case 'classic' :\n                    versPadding = 20;\n            }\n\n            if (align) {\n\n                var seriesWidths = [];\n                series.each(function(d,i) {\n                    var legendText;\n                    if (keyFormatter(getKey(d)) && keyFormatter(getKey(d)).length > maxKeyLength) {\n                        var trimmedKey = keyFormatter(getKey(d)).substring(0, maxKeyLength);\n                        legendText = d3.select(this).select('text').text(trimmedKey + \"...\");\n                        d3.select(this).append(\"svg:title\").text(keyFormatter(getKey(d)));\n                    } else {\n                        legendText = d3.select(this).select('text');\n                    }\n                    var nodeTextLength;\n                    try {\n                        nodeTextLength = legendText.node().getComputedTextLength();\n                        // If the legendText is display:none'd (nodeTextLength == 0), simulate an error so we approximate, instead\n                        if(nodeTextLength <= 0) throw Error();\n                    }\n                    catch(e) {\n                        nodeTextLength = nv.utils.calcApproxTextWidth(legendText);\n                    }\n\n                    seriesWidths.push(nodeTextLength + padding);\n                });\n\n                var seriesPerRow = 0;\n                var legendWidth = 0;\n                var columnWidths = [];\n\n                while ( legendWidth < availableWidth && seriesPerRow < seriesWidths.length) {\n                    columnWidths[seriesPerRow] = seriesWidths[seriesPerRow];\n                    legendWidth += seriesWidths[seriesPerRow++];\n                }\n                if (seriesPerRow === 0) seriesPerRow = 1; //minimum of one series per row\n\n                while ( legendWidth > availableWidth && seriesPerRow > 1 ) {\n                    columnWidths = [];\n                    seriesPerRow--;\n\n                    for (var k = 0; k < seriesWidths.length; k++) {\n                        if (seriesWidths[k] > (columnWidths[k % seriesPerRow] || 0) )\n                            columnWidths[k % seriesPerRow] = seriesWidths[k];\n                    }\n\n                    legendWidth = columnWidths.reduce(function(prev, cur, index, array) {\n                        return prev + cur;\n                    });\n                }\n\n                var xPositions = [];\n                for (var i = 0, curX = 0; i < seriesPerRow; i++) {\n                    xPositions[i] = curX;\n                    curX += columnWidths[i];\n                }\n\n                series\n                    .attr('transform', function(d, i) {\n                        return 'translate(' + xPositions[i % seriesPerRow] + ',' + (5 + Math.floor(i / seriesPerRow) * versPadding) + ')';\n                    });\n\n                //position legend as far right as possible within the total width\n                if (rightAlign) {\n                    g.attr('transform', 'translate(' + (width - margin.right - legendWidth) + ',' + margin.top + ')');\n                }\n                else {\n                    g.attr('transform', 'translate(0' + ',' + margin.top + ')');\n                }\n\n                height = margin.top + margin.bottom + (Math.ceil(seriesWidths.length / seriesPerRow) * versPadding);\n\n            } else {\n\n                var ypos = 5,\n                    newxpos = 5,\n                    maxwidth = 0,\n                    xpos;\n                series\n                    .attr('transform', function(d, i) {\n                        var length = d3.select(this).select('text').node().getComputedTextLength() + padding;\n                        xpos = newxpos;\n\n                        if (width < margin.left + margin.right + xpos + length) {\n                            newxpos = xpos = 5;\n                            ypos += versPadding;\n                        }\n\n                        newxpos += length;\n                        if (newxpos > maxwidth) maxwidth = newxpos;\n\n                        return 'translate(' + xpos + ',' + ypos + ')';\n                    });\n\n                //position legend as far right as possible within the total width\n                g.attr('transform', 'translate(' + (width - margin.right - maxwidth) + ',' + margin.top + ')');\n\n                height = margin.top + margin.bottom + ypos + 15;\n            }\n\n            if(vers == 'furious') {\n                // Size rectangles after text is placed\n                seriesShape\n                    .attr('width', function(d,i) {\n                        return seriesText[0][i].getComputedTextLength() + 27;\n                    })\n                    .attr('height', 18)\n                    .attr('y', -9)\n                    .attr('x', -15)\n            }\n\n            seriesShape\n                .style('fill', setBGColor)\n                .style('stroke', function(d,i) { return d.color || color(d, i) });\n        });\n\n        function setTextColor(d,i) {\n            if(vers != 'furious') return '#000';\n            if(expanded) {\n                return d.disengaged ? color(d,i) : '#fff';\n            } else if (!expanded) {\n                return !!d.disabled ? color(d,i) : '#fff';\n            }\n        }\n\n        function setBGColor(d,i) {\n            if(expanded && vers == 'furious') {\n                return d.disengaged ? '#fff' : color(d,i);\n            } else {\n                return !!d.disabled ? '#fff' : color(d,i);\n            }\n        }\n\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:          {get: function(){return width;}, set: function(_){width=_;}},\n        height:         {get: function(){return height;}, set: function(_){height=_;}},\n        key:            {get: function(){return getKey;}, set: function(_){getKey=_;}},\n        keyFormatter:   {get: function(){return keyFormatter;}, set: function(_){keyFormatter=_;}},\n        align:          {get: function(){return align;}, set: function(_){align=_;}},\n        rightAlign:     {get: function(){return rightAlign;}, set: function(_){rightAlign=_;}},\n        maxKeyLength:   {get: function(){return maxKeyLength;}, set: function(_){maxKeyLength=_;}},\n        padding:        {get: function(){return padding;}, set: function(_){padding=_;}},\n        updateState:    {get: function(){return updateState;}, set: function(_){updateState=_;}},\n        radioButtonMode:{get: function(){return radioButtonMode;}, set: function(_){radioButtonMode=_;}},\n        expanded:       {get: function(){return expanded;}, set: function(_){expanded=_;}},\n        vers:           {get: function(){return vers;}, set: function(_){vers=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n//TODO: consider deprecating and using multibar with single series for this\nnv.models.historicalBar = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n        , width = null\n        , height = null\n        , id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n        , container = null\n        , x = d3.scale.linear()\n        , y = d3.scale.linear()\n        , getX = function(d) { return d.x }\n        , getY = function(d) { return d.y }\n        , forceX = []\n        , forceY = [0]\n        , padData = false\n        , clipEdge = true\n        , color = nv.utils.defaultColor()\n        , xDomain\n        , yDomain\n        , xRange\n        , yRange\n        , dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd')\n        , interactive = true\n        ;\n\n    var renderWatch = nv.utils.renderWatch(dispatch, 0);\n\n    function chart(selection) {\n        selection.each(function(data) {\n            renderWatch.reset();\n\n            container = d3.select(this);\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            nv.utils.initSVG(container);\n\n            // Setup Scales\n            x.domain(xDomain || d3.extent(data[0].values.map(getX).concat(forceX) ));\n\n            if (padData)\n                x.range(xRange || [availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5)  / data[0].values.length ]);\n            else\n                x.range(xRange || [0, availableWidth]);\n\n            y.domain(yDomain || d3.extent(data[0].values.map(getY).concat(forceY) ))\n                .range(yRange || [availableHeight, 0]);\n\n            // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n            if (x.domain()[0] === x.domain()[1])\n                x.domain()[0] ?\n                    x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01])\n                    : x.domain([-1,1]);\n\n            if (y.domain()[0] === y.domain()[1])\n                y.domain()[0] ?\n                    y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01])\n                    : y.domain([-1,1]);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-historicalBar-' + id).data([data[0].values]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-historicalBar-' + id);\n            var defsEnter = wrapEnter.append('defs');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-bars');\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            container\n                .on('click', function(d,i) {\n                    dispatch.chartClick({\n                        data: d,\n                        index: i,\n                        pos: d3.event,\n                        id: id\n                    });\n                });\n\n            defsEnter.append('clipPath')\n                .attr('id', 'nv-chart-clip-path-' + id)\n                .append('rect');\n\n            wrap.select('#nv-chart-clip-path-' + id + ' rect')\n                .attr('width', availableWidth)\n                .attr('height', availableHeight);\n\n            g.attr('clip-path', clipEdge ? 'url(#nv-chart-clip-path-' + id + ')' : '');\n\n            var bars = wrap.select('.nv-bars').selectAll('.nv-bar')\n                .data(function(d) { return d }, function(d,i) {return getX(d,i)});\n            bars.exit().remove();\n\n            bars.enter().append('rect')\n                .attr('x', 0 )\n                .attr('y', function(d,i) {  return nv.utils.NaNtoZero(y(Math.max(0, getY(d,i)))) })\n                .attr('height', function(d,i) { return nv.utils.NaNtoZero(Math.abs(y(getY(d,i)) - y(0))) })\n                .attr('transform', function(d,i) { return 'translate(' + (x(getX(d,i)) - availableWidth / data[0].values.length * .45) + ',0)'; })\n                .on('mouseover', function(d,i) {\n                    if (!interactive) return;\n                    d3.select(this).classed('hover', true);\n                    dispatch.elementMouseover({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n\n                })\n                .on('mouseout', function(d,i) {\n                    if (!interactive) return;\n                    d3.select(this).classed('hover', false);\n                    dispatch.elementMouseout({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                })\n                .on('mousemove', function(d,i) {\n                    if (!interactive) return;\n                    dispatch.elementMousemove({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                })\n                .on('click', function(d,i) {\n                    if (!interactive) return;\n                    var element = this;\n                    dispatch.elementClick({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\"),\n                        event: d3.event,\n                        element: element\n                    });\n                    d3.event.stopPropagation();\n                })\n                .on('dblclick', function(d,i) {\n                    if (!interactive) return;\n                    dispatch.elementDblClick({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                    d3.event.stopPropagation();\n                });\n\n            bars\n                .attr('fill', function(d,i) { return color(d, i); })\n                .attr('class', function(d,i,j) { return (getY(d,i) < 0 ? 'nv-bar negative' : 'nv-bar positive') + ' nv-bar-' + j + '-' + i })\n                .watchTransition(renderWatch, 'bars')\n                .attr('transform', function(d,i) { return 'translate(' + (x(getX(d,i)) - availableWidth / data[0].values.length * .45) + ',0)'; })\n                //TODO: better width calculations that don't assume always uniform data spacing;w\n                .attr('width', (availableWidth / data[0].values.length) * .9 );\n\n            bars.watchTransition(renderWatch, 'bars')\n                .attr('y', function(d,i) {\n                    var rval = getY(d,i) < 0 ?\n                        y(0) :\n                            y(0) - y(getY(d,i)) < 1 ?\n                        y(0) - 1 :\n                        y(getY(d,i));\n                    return nv.utils.NaNtoZero(rval);\n                })\n                .attr('height', function(d,i) { return nv.utils.NaNtoZero(Math.max(Math.abs(y(getY(d,i)) - y(0)),1)) });\n\n        });\n\n        renderWatch.renderEnd('historicalBar immediate');\n        return chart;\n    }\n\n    //Create methods to allow outside functions to highlight a specific bar.\n    chart.highlightPoint = function(pointIndex, isHoverOver) {\n        container\n            .select(\".nv-bars .nv-bar-0-\" + pointIndex)\n            .classed(\"hover\", isHoverOver)\n        ;\n    };\n\n    chart.clearHighlights = function() {\n        container\n            .select(\".nv-bars .nv-bar.hover\")\n            .classed(\"hover\", false)\n        ;\n    };\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:   {get: function(){return width;}, set: function(_){width=_;}},\n        height:  {get: function(){return height;}, set: function(_){height=_;}},\n        forceX:  {get: function(){return forceX;}, set: function(_){forceX=_;}},\n        forceY:  {get: function(){return forceY;}, set: function(_){forceY=_;}},\n        padData: {get: function(){return padData;}, set: function(_){padData=_;}},\n        x:       {get: function(){return getX;}, set: function(_){getX=_;}},\n        y:       {get: function(){return getY;}, set: function(_){getY=_;}},\n        xScale:  {get: function(){return x;}, set: function(_){x=_;}},\n        yScale:  {get: function(){return y;}, set: function(_){y=_;}},\n        xDomain: {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n        yDomain: {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n        xRange:  {get: function(){return xRange;}, set: function(_){xRange=_;}},\n        yRange:  {get: function(){return yRange;}, set: function(_){yRange=_;}},\n        clipEdge:    {get: function(){return clipEdge;}, set: function(_){clipEdge=_;}},\n        id:          {get: function(){return id;}, set: function(_){id=_;}},\n        interactive: {get: function(){return interactive;}, set: function(_){interactive=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n\nnv.models.historicalBarChart = function(bar_model) {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var bars = bar_model || nv.models.historicalBar()\n        , xAxis = nv.models.axis()\n        , yAxis = nv.models.axis()\n        , legend = nv.models.legend()\n        , interactiveLayer = nv.interactiveGuideline()\n        , tooltip = nv.models.tooltip()\n        ;\n\n\n    var margin = {top: 30, right: 90, bottom: 50, left: 90}\n        , marginTop = null\n        , color = nv.utils.defaultColor()\n        , width = null\n        , height = null\n        , showLegend = false\n        , showXAxis = true\n        , showYAxis = true\n        , rightAlignYAxis = false\n        , useInteractiveGuideline = false\n        , x\n        , y\n        , state = {}\n        , defaultState = null\n        , noData = null\n        , dispatch = d3.dispatch('tooltipHide', 'stateChange', 'changeState', 'renderEnd')\n        , transitionDuration = 250\n        ;\n\n    xAxis.orient('bottom').tickPadding(7);\n    yAxis.orient( (rightAlignYAxis) ? 'right' : 'left');\n    tooltip\n        .duration(0)\n        .headerEnabled(false)\n        .valueFormatter(function(d, i) {\n            return yAxis.tickFormat()(d, i);\n        })\n        .headerFormatter(function(d, i) {\n            return xAxis.tickFormat()(d, i);\n        });\n\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, 0);\n\n    function chart(selection) {\n        selection.each(function(data) {\n            renderWatch.reset();\n            renderWatch.models(bars);\n            if (showXAxis) renderWatch.models(xAxis);\n            if (showYAxis) renderWatch.models(yAxis);\n\n            var container = d3.select(this),\n                that = this;\n            nv.utils.initSVG(container);\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            chart.update = function() { container.transition().duration(transitionDuration).call(chart) };\n            chart.container = this;\n\n            //set state.disabled\n            state.disabled = data.map(function(d) { return !!d.disabled });\n\n            if (!defaultState) {\n                var key;\n                defaultState = {};\n                for (key in state) {\n                    if (state[key] instanceof Array)\n                        defaultState[key] = state[key].slice(0);\n                    else\n                        defaultState[key] = state[key];\n                }\n            }\n\n            // Display noData message if there's nothing to show.\n            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n                nv.utils.noData(chart, container)\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n\n            // Setup Scales\n            x = bars.xScale();\n            y = bars.yScale();\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-historicalBarChart').data([data]);\n            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-historicalBarChart').append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-x nv-axis');\n            gEnter.append('g').attr('class', 'nv-y nv-axis');\n            gEnter.append('g').attr('class', 'nv-barsWrap');\n            gEnter.append('g').attr('class', 'nv-legendWrap');\n            gEnter.append('g').attr('class', 'nv-interactive');\n\n            // Legend\n            if (!showLegend) {\n                g.select('.nv-legendWrap').selectAll('*').remove();\n            } else {\n                legend.width(availableWidth);\n\n                g.select('.nv-legendWrap')\n                    .datum(data)\n                    .call(legend);\n\n                if (!marginTop && legend.height() !== margin.top) {\n                    margin.top = legend.height();\n                    availableHeight = nv.utils.availableHeight(height, container, margin);\n                }\n\n                wrap.select('.nv-legendWrap')\n                    .attr('transform', 'translate(0,' + (-margin.top) +')')\n            }\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            if (rightAlignYAxis) {\n                g.select(\".nv-y.nv-axis\")\n                    .attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n            }\n\n            //Set up interactive layer\n            if (useInteractiveGuideline) {\n                interactiveLayer\n                    .width(availableWidth)\n                    .height(availableHeight)\n                    .margin({left:margin.left, top:margin.top})\n                    .svgContainer(container)\n                    .xScale(x);\n                wrap.select(\".nv-interactive\").call(interactiveLayer);\n            }\n            bars\n                .width(availableWidth)\n                .height(availableHeight)\n                .color(data.map(function(d,i) {\n                    return d.color || color(d, i);\n                }).filter(function(d,i) { return !data[i].disabled }));\n\n            var barsWrap = g.select('.nv-barsWrap')\n                .datum(data.filter(function(d) { return !d.disabled }));\n            barsWrap.transition().call(bars);\n\n            // Setup Axes\n            if (showXAxis) {\n                xAxis\n                    .scale(x)\n                    ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n                    .tickSize(-availableHeight, 0);\n\n                g.select('.nv-x.nv-axis')\n                    .attr('transform', 'translate(0,' + y.range()[0] + ')');\n                g.select('.nv-x.nv-axis')\n                    .transition()\n                    .call(xAxis);\n            }\n\n            if (showYAxis) {\n                yAxis\n                    .scale(y)\n                    ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n                    .tickSize( -availableWidth, 0);\n\n                g.select('.nv-y.nv-axis')\n                    .transition()\n                    .call(yAxis);\n            }\n\n            //============================================================\n            // Event Handling/Dispatching (in chart's scope)\n            //------------------------------------------------------------\n\n            interactiveLayer.dispatch.on('elementMousemove', function(e) {\n                bars.clearHighlights();\n\n                var singlePoint, pointIndex, pointXLocation, allData = [];\n                data\n                    .filter(function(series, i) {\n                        series.seriesIndex = i;\n                        return !series.disabled;\n                    })\n                    .forEach(function(series,i) {\n                        pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n                        bars.highlightPoint(pointIndex,true);\n                        var point = series.values[pointIndex];\n                        if (point === undefined) return;\n                        if (singlePoint === undefined) singlePoint = point;\n                        if (pointXLocation === undefined) pointXLocation = chart.xScale()(chart.x()(point,pointIndex));\n                        allData.push({\n                            key: series.key,\n                            value: chart.y()(point, pointIndex),\n                            color: color(series,series.seriesIndex),\n                            data: series.values[pointIndex]\n                        });\n                    });\n\n                var xValue = xAxis.tickFormat()(chart.x()(singlePoint,pointIndex));\n                interactiveLayer.tooltip\n                    .valueFormatter(function(d,i) {\n                        return yAxis.tickFormat()(d);\n                    })\n                    .data({\n                        value: xValue,\n                        index: pointIndex,\n                        series: allData\n                    })();\n\n                interactiveLayer.renderGuideLine(pointXLocation);\n\n            });\n\n            interactiveLayer.dispatch.on(\"elementMouseout\",function(e) {\n                dispatch.tooltipHide();\n                bars.clearHighlights();\n            });\n\n            legend.dispatch.on('legendClick', function(d,i) {\n                d.disabled = !d.disabled;\n\n                if (!data.filter(function(d) { return !d.disabled }).length) {\n                    data.map(function(d) {\n                        d.disabled = false;\n                        wrap.selectAll('.nv-series').classed('disabled', false);\n                        return d;\n                    });\n                }\n\n                state.disabled = data.map(function(d) { return !!d.disabled });\n                dispatch.stateChange(state);\n\n                selection.transition().call(chart);\n            });\n\n            legend.dispatch.on('legendDblclick', function(d) {\n                //Double clicking should always enable current series, and disabled all others.\n                data.forEach(function(d) {\n                    d.disabled = true;\n                });\n                d.disabled = false;\n\n                state.disabled = data.map(function(d) { return !!d.disabled });\n                dispatch.stateChange(state);\n                chart.update();\n            });\n\n            dispatch.on('changeState', function(e) {\n                if (typeof e.disabled !== 'undefined') {\n                    data.forEach(function(series,i) {\n                        series.disabled = e.disabled[i];\n                    });\n\n                    state.disabled = e.disabled;\n                }\n\n                chart.update();\n            });\n        });\n\n        renderWatch.renderEnd('historicalBarChart immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n    bars.dispatch.on('elementMouseover.tooltip', function(evt) {\n        evt['series'] = {\n            key: chart.x()(evt.data),\n            value: chart.y()(evt.data),\n            color: evt.color\n        };\n        tooltip.data(evt).hidden(false);\n    });\n\n    bars.dispatch.on('elementMouseout.tooltip', function(evt) {\n        tooltip.hidden(true);\n    });\n\n    bars.dispatch.on('elementMousemove.tooltip', function(evt) {\n        tooltip();\n    });\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    // expose chart's sub-components\n    chart.dispatch = dispatch;\n    chart.bars = bars;\n    chart.legend = legend;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.interactiveLayer = interactiveLayer;\n    chart.tooltip = tooltip;\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n        showXAxis: {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n        showYAxis: {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n        defaultState:    {get: function(){return defaultState;}, set: function(_){defaultState=_;}},\n        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            if (_.top !== undefined) {\n                margin.top = _.top;\n                marginTop = _.top;\n            }\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n            legend.color(color);\n            bars.color(color);\n        }},\n        duration:    {get: function(){return transitionDuration;}, set: function(_){\n            transitionDuration=_;\n            renderWatch.reset(transitionDuration);\n            yAxis.duration(transitionDuration);\n            xAxis.duration(transitionDuration);\n        }},\n        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n            rightAlignYAxis = _;\n            yAxis.orient( (_) ? 'right' : 'left');\n        }},\n        useInteractiveGuideline: {get: function(){return useInteractiveGuideline;}, set: function(_){\n            useInteractiveGuideline = _;\n            if (_ === true) {\n                chart.interactive(false);\n            }\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, bars);\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n\n\n// ohlcChart is just a historical chart with ohlc bars and some tweaks\nnv.models.ohlcBarChart = function() {\n    var chart = nv.models.historicalBarChart(nv.models.ohlcBar());\n\n    // special default tooltip since we show multiple values per x\n    chart.useInteractiveGuideline(true);\n    chart.interactiveLayer.tooltip.contentGenerator(function(data) {\n        // we assume only one series exists for this chart\n        var d = data.series[0].data;\n        // match line colors as defined in nv.d3.css\n        var color = d.open < d.close ? \"2ca02c\" : \"d62728\";\n        return '' +\n            '<h3 style=\"color: #' + color + '\">' + data.value + '</h3>' +\n            '<table>' +\n            '<tr><td>open:</td><td>' + chart.yAxis.tickFormat()(d.open) + '</td></tr>' +\n            '<tr><td>close:</td><td>' + chart.yAxis.tickFormat()(d.close) + '</td></tr>' +\n            '<tr><td>high</td><td>' + chart.yAxis.tickFormat()(d.high) + '</td></tr>' +\n            '<tr><td>low:</td><td>' + chart.yAxis.tickFormat()(d.low) + '</td></tr>' +\n            '</table>';\n    });\n    return chart;\n};\n\n// candlestickChart is just a historical chart with candlestick bars and some tweaks\nnv.models.candlestickBarChart = function() {\n    var chart = nv.models.historicalBarChart(nv.models.candlestickBar());\n\n    // special default tooltip since we show multiple values per x\n    chart.useInteractiveGuideline(true);\n    chart.interactiveLayer.tooltip.contentGenerator(function(data) {\n        // we assume only one series exists for this chart\n        var d = data.series[0].data;\n        // match line colors as defined in nv.d3.css\n        var color = d.open < d.close ? \"2ca02c\" : \"d62728\";\n        return '' +\n            '<h3 style=\"color: #' + color + '\">' + data.value + '</h3>' +\n            '<table>' +\n            '<tr><td>open:</td><td>' + chart.yAxis.tickFormat()(d.open) + '</td></tr>' +\n            '<tr><td>close:</td><td>' + chart.yAxis.tickFormat()(d.close) + '</td></tr>' +\n            '<tr><td>high</td><td>' + chart.yAxis.tickFormat()(d.high) + '</td></tr>' +\n            '<tr><td>low:</td><td>' + chart.yAxis.tickFormat()(d.low) + '</td></tr>' +\n            '</table>';\n    });\n    return chart;\n};\nnv.models.legend = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 5, right: 0, bottom: 5, left: 0}\n        , width = 400\n        , height = 20\n        , getKey = function(d) { return d.key }\n        , keyFormatter = function (d) { return d }\n        , color = nv.utils.getColor()\n        , maxKeyLength = 20 //default value for key lengths\n        , align = true\n        , padding = 32 //define how much space between legend items. - recommend 32 for furious version\n        , rightAlign = true\n        , updateState = true   //If true, legend will update data.disabled and trigger a 'stateChange' dispatch.\n        , enableDoubleClick = true   //If true, legend will enable double click handling\n        , radioButtonMode = false   //If true, clicking legend items will cause it to behave like a radio button. (only one can be selected at a time)\n        , expanded = false\n        , dispatch = d3.dispatch('legendClick', 'legendDblclick', 'legendMouseover', 'legendMouseout', 'stateChange')\n        , vers = 'classic' //Options are \"classic\" and \"furious\"\n        ;\n\n    function chart(selection) {\n        selection.each(function(data) {\n            var availableWidth = width - margin.left - margin.right,\n                container = d3.select(this);\n            nv.utils.initSVG(container);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-legend').data([data]);\n            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-legend').append('g');\n            var g = wrap.select('g');\n\n            if (rightAlign)\n                wrap.attr('transform', 'translate(' + (- margin.right) + ',' + margin.top + ')');\n            else\n                wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            var series = g.selectAll('.nv-series')\n                .data(function(d) {\n                    if(vers != 'furious') return d;\n\n                    return d.filter(function(n) {\n                        return expanded ? true : !n.disengaged;\n                    });\n                });\n\n            var seriesEnter = series.enter().append('g').attr('class', 'nv-series');\n            var seriesShape;\n\n            var versPadding;\n            switch(vers) {\n                case 'furious' :\n                    versPadding = 23;\n                    break;\n                case 'classic' :\n                    versPadding = 20;\n            }\n\n            if(vers == 'classic') {\n                seriesEnter.append('circle')\n                    .style('stroke-width', 2)\n                    .attr('class','nv-legend-symbol')\n                    .attr('r', 5);\n\n                seriesShape = series.select('.nv-legend-symbol');\n            } else if (vers == 'furious') {\n                seriesEnter.append('rect')\n                    .style('stroke-width', 2)\n                    .attr('class','nv-legend-symbol')\n                    .attr('rx', 3)\n                    .attr('ry', 3);\n                seriesShape = series.select('.nv-legend-symbol');\n\n                seriesEnter.append('g')\n                    .attr('class', 'nv-check-box')\n                    .property('innerHTML','<path d=\"M0.5,5 L22.5,5 L22.5,26.5 L0.5,26.5 L0.5,5 Z\" class=\"nv-box\"></path><path d=\"M5.5,12.8618467 L11.9185089,19.2803556 L31,0.198864511\" class=\"nv-check\"></path>')\n                    .attr('transform', 'translate(-10,-8)scale(0.5)');\n\n                var seriesCheckbox = series.select('.nv-check-box');\n\n                seriesCheckbox.each(function(d,i) {\n                    d3.select(this).selectAll('path')\n                        .attr('stroke', setTextColor(d,i));\n                });\n            }\n\n            seriesEnter.append('text')\n                .attr('text-anchor', 'start')\n                .attr('class','nv-legend-text')\n                .attr('dy', '.32em')\n                .attr('dx', '8');\n\n            var seriesText = series.select('text.nv-legend-text');\n\n            series\n                .on('mouseover', function(d,i) {\n                    dispatch.legendMouseover(d,i);  //TODO: Make consistent with other event objects\n                })\n                .on('mouseout', function(d,i) {\n                    dispatch.legendMouseout(d,i);\n                })\n                .on('click', function(d,i) {\n                    dispatch.legendClick(d,i);\n                    // make sure we re-get data in case it was modified\n                    var data = series.data();\n                    if (updateState) {\n                        if(vers =='classic') {\n                            if (radioButtonMode) {\n                                //Radio button mode: set every series to disabled,\n                                //  and enable the clicked series.\n                                data.forEach(function(series) { series.disabled = true});\n                                d.disabled = false;\n                            }\n                            else {\n                                d.disabled = !d.disabled;\n                                if (data.every(function(series) { return series.disabled})) {\n                                    //the default behavior of NVD3 legends is, if every single series\n                                    // is disabled, turn all series' back on.\n                                    data.forEach(function(series) { series.disabled = false});\n                                }\n                            }\n                        } else if(vers == 'furious') {\n                            if(expanded) {\n                                d.disengaged = !d.disengaged;\n                                d.userDisabled = d.userDisabled == undefined ? !!d.disabled : d.userDisabled;\n                                d.disabled = d.disengaged || d.userDisabled;\n                            } else if (!expanded) {\n                                d.disabled = !d.disabled;\n                                d.userDisabled = d.disabled;\n                                var engaged = data.filter(function(d) { return !d.disengaged; });\n                                if (engaged.every(function(series) { return series.userDisabled })) {\n                                    //the default behavior of NVD3 legends is, if every single series\n                                    // is disabled, turn all series' back on.\n                                    data.forEach(function(series) {\n                                        series.disabled = series.userDisabled = false;\n                                    });\n                                }\n                            }\n                        }\n                        dispatch.stateChange({\n                            disabled: data.map(function(d) { return !!d.disabled }),\n                            disengaged: data.map(function(d) { return !!d.disengaged })\n                        });\n\n                    }\n                })\n                .on('dblclick', function(d,i) {\n                    if (enableDoubleClick) {\n                        if (vers == 'furious' && expanded) return;\n                        dispatch.legendDblclick(d, i);\n                        if (updateState) {\n                            // make sure we re-get data in case it was modified\n                            var data = series.data();\n                            //the default behavior of NVD3 legends, when double clicking one,\n                            // is to set all other series' to false, and make the double clicked series enabled.\n                            data.forEach(function (series) {\n                                series.disabled = true;\n                                if (vers == 'furious') series.userDisabled = series.disabled;\n                            });\n                            d.disabled = false;\n                            if (vers == 'furious') d.userDisabled = d.disabled;\n                            dispatch.stateChange({\n                                disabled: data.map(function (d) {\n                                    return !!d.disabled\n                                })\n                            });\n                        }\n                    }\n                });\n\n            series.classed('nv-disabled', function(d) { return d.userDisabled });\n            series.exit().remove();\n\n            seriesText\n                .attr('fill', setTextColor)\n                .text(function (d) { return keyFormatter(getKey(d)) });\n\n            //TODO: implement fixed-width and max-width options (max-width is especially useful with the align option)\n            // NEW ALIGNING CODE, TODO: clean up\n            var legendWidth = 0;\n            if (align) {\n\n                var seriesWidths = [];\n                series.each(function(d,i) {\n                    var legendText;\n                    if (keyFormatter(getKey(d)) && keyFormatter(getKey(d)).length > maxKeyLength) {\n                        var trimmedKey = keyFormatter(getKey(d)).substring(0, maxKeyLength);\n                        legendText = d3.select(this).select('text').text(trimmedKey + \"...\");\n                        d3.select(this).append(\"svg:title\").text(keyFormatter(getKey(d)));\n                    } else {\n                        legendText = d3.select(this).select('text');\n                    }\n                    var nodeTextLength;\n                    try {\n                        nodeTextLength = legendText.node().getComputedTextLength();\n                        // If the legendText is display:none'd (nodeTextLength == 0), simulate an error so we approximate, instead\n                        if(nodeTextLength <= 0) throw Error();\n                    }\n                    catch(e) {\n                        nodeTextLength = nv.utils.calcApproxTextWidth(legendText);\n                    }\n\n                    seriesWidths.push(nodeTextLength + padding);\n                });\n\n                var seriesPerRow = 0;\n                var columnWidths = [];\n                legendWidth = 0;\n\n                while ( legendWidth < availableWidth && seriesPerRow < seriesWidths.length) {\n                    columnWidths[seriesPerRow] = seriesWidths[seriesPerRow];\n                    legendWidth += seriesWidths[seriesPerRow++];\n                }\n                if (seriesPerRow === 0) seriesPerRow = 1; //minimum of one series per row\n\n                while ( legendWidth > availableWidth && seriesPerRow > 1 ) {\n                    columnWidths = [];\n                    seriesPerRow--;\n\n                    for (var k = 0; k < seriesWidths.length; k++) {\n                        if (seriesWidths[k] > (columnWidths[k % seriesPerRow] || 0) )\n                            columnWidths[k % seriesPerRow] = seriesWidths[k];\n                    }\n\n                    legendWidth = columnWidths.reduce(function(prev, cur, index, array) {\n                        return prev + cur;\n                    });\n                }\n\n                var xPositions = [];\n                for (var i = 0, curX = 0; i < seriesPerRow; i++) {\n                    xPositions[i] = curX;\n                    curX += columnWidths[i];\n                }\n\n                series\n                    .attr('transform', function(d, i) {\n                        return 'translate(' + xPositions[i % seriesPerRow] + ',' + (5 + Math.floor(i / seriesPerRow) * versPadding) + ')';\n                    });\n\n                //position legend as far right as possible within the total width\n                if (rightAlign) {\n                    g.attr('transform', 'translate(' + (width - margin.right - legendWidth) + ',' + margin.top + ')');\n                }\n                else {\n                    g.attr('transform', 'translate(0' + ',' + margin.top + ')');\n                }\n\n                height = margin.top + margin.bottom + (Math.ceil(seriesWidths.length / seriesPerRow) * versPadding);\n\n            } else {\n\n                var ypos = 5,\n                    newxpos = 5,\n                    maxwidth = 0,\n                    xpos;\n                series\n                    .attr('transform', function(d, i) {\n                        var length = d3.select(this).select('text').node().getComputedTextLength() + padding;\n                        xpos = newxpos;\n\n                        if (width < margin.left + margin.right + xpos + length) {\n                            newxpos = xpos = 5;\n                            ypos += versPadding;\n                        }\n\n                        newxpos += length;\n                        if (newxpos > maxwidth) maxwidth = newxpos;\n\n                        if(legendWidth < xpos + maxwidth) {\n                            legendWidth = xpos + maxwidth;\n                        }\n                        return 'translate(' + xpos + ',' + ypos + ')';\n                    });\n\n                //position legend as far right as possible within the total width\n                g.attr('transform', 'translate(' + (width - margin.right - maxwidth) + ',' + margin.top + ')');\n\n                height = margin.top + margin.bottom + ypos + 15;\n            }\n\n            if(vers == 'furious') {\n                // Size rectangles after text is placed\n                seriesShape\n                    .attr('width', function(d,i) {\n                        return seriesText[0][i].getComputedTextLength() + 27;\n                    })\n                    .attr('height', 18)\n                    .attr('y', -9)\n                    .attr('x', -15);\n\n                // The background for the expanded legend (UI)\n                gEnter.insert('rect',':first-child')\n                    .attr('class', 'nv-legend-bg')\n                    .attr('fill', '#eee')\n                    // .attr('stroke', '#444')\n                    .attr('opacity',0);\n\n                var seriesBG = g.select('.nv-legend-bg');\n\n                seriesBG\n                .transition().duration(300)\n                    .attr('x', -versPadding )\n                    .attr('width', legendWidth + versPadding - 12)\n                    .attr('height', height + 10)\n                    .attr('y', -margin.top - 10)\n                    .attr('opacity', expanded ? 1 : 0);\n\n\n            }\n\n            seriesShape\n                .style('fill', setBGColor)\n                .style('fill-opacity', setBGOpacity)\n                .style('stroke', setBGColor);\n        });\n\n        function setTextColor(d,i) {\n            if(vers != 'furious') return '#000';\n            if(expanded) {\n                return d.disengaged ? '#000' : '#fff';\n            } else if (!expanded) {\n                if(!d.color) d.color = color(d,i);\n                return !!d.disabled ? d.color : '#fff';\n            }\n        }\n\n        function setBGColor(d,i) {\n            if(expanded && vers == 'furious') {\n                return d.disengaged ? '#eee' : d.color || color(d,i);\n            } else {\n                return d.color || color(d,i);\n            }\n        }\n\n\n        function setBGOpacity(d,i) {\n            if(expanded && vers == 'furious') {\n                return 1;\n            } else {\n                return !!d.disabled ? 0 : 1;\n            }\n        }\n\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:          {get: function(){return width;}, set: function(_){width=_;}},\n        height:         {get: function(){return height;}, set: function(_){height=_;}},\n        key:            {get: function(){return getKey;}, set: function(_){getKey=_;}},\n        keyFormatter:   {get: function(){return keyFormatter;}, set: function(_){keyFormatter=_;}},\n        align:          {get: function(){return align;}, set: function(_){align=_;}},\n        maxKeyLength:   {get: function(){return maxKeyLength;}, set: function(_){maxKeyLength=_;}},\n        rightAlign:     {get: function(){return rightAlign;}, set: function(_){rightAlign=_;}},\n        padding:        {get: function(){return padding;}, set: function(_){padding=_;}},\n        updateState:    {get: function(){return updateState;}, set: function(_){updateState=_;}},\n        enableDoubleClick: {get: function(){return enableDoubleClick;}, set: function(_){enableDoubleClick=_;}},\n        radioButtonMode:{get: function(){return radioButtonMode;}, set: function(_){radioButtonMode=_;}},\n        expanded:       {get: function(){return expanded;}, set: function(_){expanded=_;}},\n        vers:           {get: function(){return vers;}, set: function(_){vers=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n\nnv.models.line = function() {\n    \"use strict\";\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var  scatter = nv.models.scatter()\n        ;\n\n    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n        , width = 960\n        , height = 500\n        , container = null\n        , strokeWidth = 1.5\n        , color = nv.utils.defaultColor() // a function that returns a color\n        , getX = function(d) { return d.x } // accessor to get the x value from a data point\n        , getY = function(d) { return d.y } // accessor to get the y value from a data point\n        , defined = function(d,i) { return !isNaN(getY(d,i)) && getY(d,i) !== null } // allows a line to be not continuous when it is not defined\n        , isArea = function(d) { return d.area } // decides if a line is an area or just a line\n        , clipEdge = false // if true, masks lines within x and y scale\n        , x //can be accessed via chart.xScale()\n        , y //can be accessed via chart.yScale()\n        , interpolate = \"linear\" // controls the line interpolation\n        , duration = 250\n        , dispatch = d3.dispatch('elementClick', 'elementMouseover', 'elementMouseout', 'renderEnd')\n        ;\n\n    scatter\n        .pointSize(16) // default size\n        .pointDomain([16,256]) //set to speed up calculation, needs to be unset if there is a custom size accessor\n    ;\n\n    //============================================================\n\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var x0, y0 //used to store previous scales\n        , renderWatch = nv.utils.renderWatch(dispatch, duration)\n        ;\n\n    //============================================================\n\n\n    function chart(selection) {\n        renderWatch.reset();\n        renderWatch.models(scatter);\n        selection.each(function(data) {\n            container = d3.select(this);\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin);\n            nv.utils.initSVG(container);\n\n            // Setup Scales\n            x = scatter.xScale();\n            y = scatter.yScale();\n\n            x0 = x0 || x;\n            y0 = y0 || y;\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-line').data([data]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-line');\n            var defsEnter = wrapEnter.append('defs');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-groups');\n            gEnter.append('g').attr('class', 'nv-scatterWrap');\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            scatter\n                .width(availableWidth)\n                .height(availableHeight);\n\n            var scatterWrap = wrap.select('.nv-scatterWrap');\n            scatterWrap.call(scatter);\n\n            defsEnter.append('clipPath')\n                .attr('id', 'nv-edge-clip-' + scatter.id())\n                .append('rect');\n\n            wrap.select('#nv-edge-clip-' + scatter.id() + ' rect')\n                .attr('width', availableWidth)\n                .attr('height', (availableHeight > 0) ? availableHeight : 0);\n\n            g   .attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + scatter.id() + ')' : '');\n            scatterWrap\n                .attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + scatter.id() + ')' : '');\n\n            var groups = wrap.select('.nv-groups').selectAll('.nv-group')\n                .data(function(d) { return d }, function(d) { return d.key });\n            groups.enter().append('g')\n                .style('stroke-opacity', 1e-6)\n                .style('stroke-width', function(d) { return d.strokeWidth || strokeWidth })\n                .style('fill-opacity', 1e-6);\n\n            groups.exit().remove();\n\n            groups\n                .attr('class', function(d,i) {\n                    return (d.classed || '') + ' nv-group nv-series-' + i;\n                })\n                .classed('hover', function(d) { return d.hover })\n                .style('fill', function(d,i){ return color(d, i) })\n                .style('stroke', function(d,i){ return color(d, i)});\n            groups.watchTransition(renderWatch, 'line: groups')\n                .style('stroke-opacity', 1)\n                .style('fill-opacity', function(d) { return d.fillOpacity || .5});\n\n            var areaPaths = groups.selectAll('path.nv-area')\n                .data(function(d) { return isArea(d) ? [d] : [] }); // this is done differently than lines because I need to check if series is an area\n            areaPaths.enter().append('path')\n                .attr('class', 'nv-area')\n                .attr('d', function(d) {\n                    return d3.svg.area()\n                        .interpolate(interpolate)\n                        .defined(defined)\n                        .x(function(d,i) { return nv.utils.NaNtoZero(x0(getX(d,i))) })\n                        .y0(function(d,i) { return nv.utils.NaNtoZero(y0(getY(d,i))) })\n                        .y1(function(d,i) { return y0( y.domain()[0] <= 0 ? y.domain()[1] >= 0 ? 0 : y.domain()[1] : y.domain()[0] ) })\n                        //.y1(function(d,i) { return y0(0) }) //assuming 0 is within y domain.. may need to tweak this\n                        .apply(this, [d.values])\n                });\n            groups.exit().selectAll('path.nv-area')\n                .remove();\n\n            areaPaths.watchTransition(renderWatch, 'line: areaPaths')\n                .attr('d', function(d) {\n                    return d3.svg.area()\n                        .interpolate(interpolate)\n                        .defined(defined)\n                        .x(function(d,i) { return nv.utils.NaNtoZero(x(getX(d,i))) })\n                        .y0(function(d,i) { return nv.utils.NaNtoZero(y(getY(d,i))) })\n                        .y1(function(d,i) { return y( y.domain()[0] <= 0 ? y.domain()[1] >= 0 ? 0 : y.domain()[1] : y.domain()[0] ) })\n                        //.y1(function(d,i) { return y0(0) }) //assuming 0 is within y domain.. may need to tweak this\n                        .apply(this, [d.values])\n                });\n\n            var linePaths = groups.selectAll('path.nv-line')\n                .data(function(d) { return [d.values] });\n\n            linePaths.enter().append('path')\n                .attr('class', 'nv-line')\n                .attr('d',\n                    d3.svg.line()\n                    .interpolate(interpolate)\n                    .defined(defined)\n                    .x(function(d,i) { return nv.utils.NaNtoZero(x0(getX(d,i))) })\n                    .y(function(d,i) { return nv.utils.NaNtoZero(y0(getY(d,i))) })\n            );\n\n            linePaths.watchTransition(renderWatch, 'line: linePaths')\n                .attr('d',\n                    d3.svg.line()\n                    .interpolate(interpolate)\n                    .defined(defined)\n                    .x(function(d,i) { return nv.utils.NaNtoZero(x(getX(d,i))) })\n                    .y(function(d,i) { return nv.utils.NaNtoZero(y(getY(d,i))) })\n            );\n\n            //store old scales for use in transitions on update\n            x0 = x.copy();\n            y0 = y.copy();\n        });\n        renderWatch.renderEnd('line immediate');\n        return chart;\n    }\n\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.scatter = scatter;\n    // Pass through events\n    scatter.dispatch.on('elementClick', function(){ dispatch.elementClick.apply(this, arguments); });\n    scatter.dispatch.on('elementMouseover', function(){ dispatch.elementMouseover.apply(this, arguments); });\n    scatter.dispatch.on('elementMouseout', function(){ dispatch.elementMouseout.apply(this, arguments); });\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        defined: {get: function(){return defined;}, set: function(_){defined=_;}},\n        interpolate:      {get: function(){return interpolate;}, set: function(_){interpolate=_;}},\n        clipEdge:    {get: function(){return clipEdge;}, set: function(_){clipEdge=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n            scatter.duration(duration);\n        }},\n        isArea: {get: function(){return isArea;}, set: function(_){\n            isArea = d3.functor(_);\n        }},\n        x: {get: function(){return getX;}, set: function(_){\n            getX = _;\n            scatter.x(_);\n        }},\n        y: {get: function(){return getY;}, set: function(_){\n            getY = _;\n            scatter.y(_);\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n            scatter.color(color);\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, scatter);\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\nnv.models.lineChart = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var lines = nv.models.line()\n        , xAxis = nv.models.axis()\n        , yAxis = nv.models.axis()\n        , legend = nv.models.legend()\n        , interactiveLayer = nv.interactiveGuideline()\n        , tooltip = nv.models.tooltip()\n        , focus = nv.models.focus(nv.models.line())\n        ;\n\n    var margin = {top: 30, right: 20, bottom: 50, left: 60}\n        , marginTop = null\n        , color = nv.utils.defaultColor()\n        , width = null\n        , height = null\n        , showLegend = true\n        , legendPosition = 'top'\n        , showXAxis = true\n        , showYAxis = true\n        , rightAlignYAxis = false\n        , useInteractiveGuideline = false\n        , x\n        , y\n        , focusEnable = false\n        , state = nv.utils.state()\n        , defaultState = null\n        , noData = null\n        , dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd')\n        , duration = 250\n        ;\n\n    // set options on sub-objects for this chart\n    xAxis.orient('bottom').tickPadding(7);\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n\n    lines.clipEdge(true).duration(0);\n\n    tooltip.valueFormatter(function(d, i) {\n        return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function(d, i) {\n        return xAxis.tickFormat()(d, i);\n    });\n\n    interactiveLayer.tooltip.valueFormatter(function(d, i) {\n        return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function(d, i) {\n        return xAxis.tickFormat()(d, i);\n    });\n\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    var stateGetter = function(data) {\n        return function(){\n            return {\n                active: data.map(function(d) { return !d.disabled; })\n            };\n        };\n    };\n\n    var stateSetter = function(data) {\n        return function(state) {\n            if (state.active !== undefined)\n                data.forEach(function(series,i) {\n                    series.disabled = !state.active[i];\n                });\n        };\n    };\n\n    function chart(selection) {\n        renderWatch.reset();\n        renderWatch.models(lines);\n        if (showXAxis) renderWatch.models(xAxis);\n        if (showYAxis) renderWatch.models(yAxis);\n\n        selection.each(function(data) {\n            var container = d3.select(this);\n            nv.utils.initSVG(container);\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n            chart.update = function() {\n                if( duration === 0 ) {\n                    container.call( chart );\n                } else {\n                    container.transition().duration(duration).call(chart);\n                }\n            };\n            chart.container = this;\n\n            state\n                .setter(stateSetter(data), chart.update)\n                .getter(stateGetter(data))\n                .update();\n\n            // DEPRECATED set state.disabled\n            state.disabled = data.map(function(d) { return !!d.disabled; });\n\n            if (!defaultState) {\n                var key;\n                defaultState = {};\n                for (key in state) {\n                    if (state[key] instanceof Array)\n                        defaultState[key] = state[key].slice(0);\n                    else\n                        defaultState[key] = state[key];\n                }\n            }\n\n            // Display noData message if there's nothing to show.\n            if (!data || !data.length || !data.filter(function(d) { return d.values.length; }).length) {\n                nv.utils.noData(chart, container);\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n\n            /* Update `main' graph on brush update. */\n            focus.dispatch.on(\"onBrush\", function(extent) {\n                onBrush(extent);\n            });\n\n            // Setup Scales\n            x = lines.xScale();\n            y = lines.yScale();\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-lineChart').data([data]);\n            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-lineChart').append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-legendWrap');\n\n            var focusEnter = gEnter.append('g').attr('class', 'nv-focus');\n            focusEnter.append('g').attr('class', 'nv-background').append('rect');\n            focusEnter.append('g').attr('class', 'nv-x nv-axis');\n            focusEnter.append('g').attr('class', 'nv-y nv-axis');\n            focusEnter.append('g').attr('class', 'nv-linesWrap');\n            focusEnter.append('g').attr('class', 'nv-interactive');\n\n            var contextEnter = gEnter.append('g').attr('class', 'nv-focusWrap');\n\n            // Legend\n            if (!showLegend) {\n                g.select('.nv-legendWrap').selectAll('*').remove();\n            } else {\n                legend.width(availableWidth);\n\n                g.select('.nv-legendWrap')\n                    .datum(data)\n                    .call(legend);\n\n                if (legendPosition === 'bottom') {\n                     margin.bottom = xAxis.height() + legend.height();\n                     availableHeight = nv.utils.availableHeight(height, container, margin);\n                     g.select('.nv-legendWrap')\n                         .attr('transform', 'translate(0,' + (availableHeight + xAxis.height())  +')');\n                } else if (legendPosition === 'top') {\n                    if (!marginTop && legend.height() !== margin.top) {\n                        margin.top = legend.height();\n                        availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n                    }\n\n                    wrap.select('.nv-legendWrap')\n                        .attr('transform', 'translate(0,' + (-margin.top) +')');\n                }\n            }\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            if (rightAlignYAxis) {\n                g.select(\".nv-y.nv-axis\")\n                    .attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n            }\n\n            //Set up interactive layer\n            if (useInteractiveGuideline) {\n                interactiveLayer\n                    .width(availableWidth)\n                    .height(availableHeight)\n                    .margin({left:margin.left, top:margin.top})\n                    .svgContainer(container)\n                    .xScale(x);\n                wrap.select(\".nv-interactive\").call(interactiveLayer);\n            }\n\n            g.select('.nv-focus .nv-background rect')\n                .attr('width', availableWidth)\n                .attr('height', availableHeight);\n\n            lines\n                .width(availableWidth)\n                .height(availableHeight)\n                .color(data.map(function(d,i) {\n                    return d.color || color(d, i);\n                }).filter(function(d,i) { return !data[i].disabled; }));\n\n            var linesWrap = g.select('.nv-linesWrap')\n                .datum(data.filter(function(d) { return !d.disabled; }));\n\n\n            // Setup Main (Focus) Axes\n            if (showXAxis) {\n                xAxis\n                    .scale(x)\n                    ._ticks(nv.utils.calcTicksX(availableWidth/100, data) )\n                    .tickSize(-availableHeight, 0);\n            }\n\n            if (showYAxis) {\n                yAxis\n                    .scale(y)\n                    ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n                    .tickSize( -availableWidth, 0);\n            }\n\n            //============================================================\n            // Update Axes\n            //============================================================\n            function updateXAxis() {\n              if(showXAxis) {\n                g.select('.nv-focus .nv-x.nv-axis')\n                  .transition()\n                  .duration(duration)\n                  .call(xAxis)\n                ;\n              }\n            }\n\n            function updateYAxis() {\n              if(showYAxis) {\n                g.select('.nv-focus .nv-y.nv-axis')\n                  .transition()\n                  .duration(duration)\n                  .call(yAxis)\n                ;\n              }\n            }\n\n            g.select('.nv-focus .nv-x.nv-axis')\n                .attr('transform', 'translate(0,' + availableHeight + ')');\n\n            //============================================================\n            // Update Focus\n            //============================================================\n            if (!focusEnable && focus.brush.extent() === null) {\n                linesWrap.call(lines);\n                updateXAxis();\n                updateYAxis();\n            } else {\n                focus.width(availableWidth);\n                g.select('.nv-focusWrap')\n                    .style('display', focusEnable ? 'initial' : 'none')\n                    .attr('transform', 'translate(0,' + ( availableHeight + margin.bottom + focus.margin().top) + ')')\n                    .call(focus);\n                var extent = focus.brush.empty() ? focus.xDomain() : focus.brush.extent();\n                if (extent !== null) {\n                    onBrush(extent);\n                }\n            }\n            //============================================================\n            // Event Handling/Dispatching (in chart's scope)\n            //------------------------------------------------------------\n\n            legend.dispatch.on('stateChange', function(newState) {\n                for (var key in newState)\n                    state[key] = newState[key];\n                dispatch.stateChange(state);\n                chart.update();\n            });\n\n            interactiveLayer.dispatch.on('elementMousemove', function(e) {\n                lines.clearHighlights();\n                var singlePoint, pointIndex, pointXLocation, allData = [];\n                data\n                    .filter(function(series, i) {\n                        series.seriesIndex = i;\n                        return !series.disabled && !series.disableTooltip;\n                    })\n                    .forEach(function(series,i) {\n                        var extent = focus.brush.extent() !== null ? (focus.brush.empty() ? focus.xScale().domain() : focus.brush.extent()) : x.domain();\n                        var currentValues = series.values.filter(function(d,i) {\n                            // Checks if the x point is between the extents, handling case where extent[0] is greater than extent[1]\n                            // (e.g. x domain is manually set to reverse the x-axis)\n                            if(extent[0] <= extent[1]) {\n                                return lines.x()(d,i) >= extent[0] && lines.x()(d,i) <= extent[1];\n                            } else {\n                                return lines.x()(d,i) >= extent[1] && lines.x()(d,i) <= extent[0];\n                            }\n                        });\n\n                        pointIndex = nv.interactiveBisect(currentValues, e.pointXValue, lines.x());\n                        var point = currentValues[pointIndex];\n                        var pointYValue = chart.y()(point, pointIndex);\n                        if (pointYValue !== null) {\n                            lines.highlightPoint(i, pointIndex, true);\n                        }\n                        if (point === undefined) return;\n                        if (singlePoint === undefined) singlePoint = point;\n                        if (pointXLocation === undefined) pointXLocation = chart.xScale()(chart.x()(point,pointIndex));\n                        allData.push({\n                            key: series.key,\n                            value: pointYValue,\n                            color: color(series,series.seriesIndex),\n                            data: point\n                        });\n                    });\n                //Highlight the tooltip entry based on which point the mouse is closest to.\n                if (allData.length > 2) {\n                    var yValue = chart.yScale().invert(e.mouseY);\n                    var domainExtent = Math.abs(chart.yScale().domain()[0] - chart.yScale().domain()[1]);\n                    var threshold = 0.03 * domainExtent;\n                    var indexToHighlight = nv.nearestValueIndex(allData.map(function(d){return d.value;}),yValue,threshold);\n                    if (indexToHighlight !== null)\n                        allData[indexToHighlight].highlight = true;\n                }\n\n                var defaultValueFormatter = function(d,i) {\n                    return d == null ? \"N/A\" : yAxis.tickFormat()(d);\n                };\n\n                interactiveLayer.tooltip\n                    .valueFormatter(interactiveLayer.tooltip.valueFormatter() || defaultValueFormatter)\n                    .data({\n                        value: chart.x()( singlePoint,pointIndex ),\n                        index: pointIndex,\n                        series: allData\n                    })();\n\n                interactiveLayer.renderGuideLine(pointXLocation);\n\n            });\n\n            interactiveLayer.dispatch.on('elementClick', function(e) {\n                var pointXLocation, allData = [];\n\n                data.filter(function(series, i) {\n                    series.seriesIndex = i;\n                    return !series.disabled;\n                }).forEach(function(series) {\n                    var pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n                    var point = series.values[pointIndex];\n                    if (typeof point === 'undefined') return;\n                    if (typeof pointXLocation === 'undefined') pointXLocation = chart.xScale()(chart.x()(point,pointIndex));\n                    var yPos = chart.yScale()(chart.y()(point,pointIndex));\n                    allData.push({\n                        point: point,\n                        pointIndex: pointIndex,\n                        pos: [pointXLocation, yPos],\n                        seriesIndex: series.seriesIndex,\n                        series: series\n                    });\n                });\n\n                lines.dispatch.elementClick(allData);\n            });\n\n            interactiveLayer.dispatch.on(\"elementMouseout\",function(e) {\n                lines.clearHighlights();\n            });\n\n            dispatch.on('changeState', function(e) {\n                if (typeof e.disabled !== 'undefined' && data.length === e.disabled.length) {\n                    data.forEach(function(series,i) {\n                        series.disabled = e.disabled[i];\n                    });\n\n                    state.disabled = e.disabled;\n                }\n                chart.update();\n            });\n\n            //============================================================\n            // Functions\n            //------------------------------------------------------------\n\n            // Taken from crossfilter (http://square.github.com/crossfilter/)\n            function resizePath(d) {\n                var e = +(d == 'e'),\n                    x = e ? 1 : -1,\n                    y = availableHeight / 3;\n                return 'M' + (0.5 * x) + ',' + y\n                    + 'A6,6 0 0 ' + e + ' ' + (6.5 * x) + ',' + (y + 6)\n                    + 'V' + (2 * y - 6)\n                    + 'A6,6 0 0 ' + e + ' ' + (0.5 * x) + ',' + (2 * y)\n                    + 'Z'\n                    + 'M' + (2.5 * x) + ',' + (y + 8)\n                    + 'V' + (2 * y - 8)\n                    + 'M' + (4.5 * x) + ',' + (y + 8)\n                    + 'V' + (2 * y - 8);\n            }\n\n            function onBrush(extent) {\n                // Update Main (Focus)\n                var focusLinesWrap = g.select('.nv-focus .nv-linesWrap')\n                    .datum(\n                    data.filter(function(d) { return !d.disabled; })\n                        .map(function(d,i) {\n                            return {\n                                key: d.key,\n                                area: d.area,\n                                classed: d.classed,\n                                values: d.values.filter(function(d,i) {\n                                    return lines.x()(d,i) >= extent[0] && lines.x()(d,i) <= extent[1];\n                                }),\n                                disableTooltip: d.disableTooltip\n                            };\n                        })\n                );\n                focusLinesWrap.transition().duration(duration).call(lines);\n\n                // Update Main (Focus) Axes\n                updateXAxis();\n                updateYAxis();\n            }\n        });\n\n        renderWatch.renderEnd('lineChart immediate');\n        return chart;\n    }\n\n\n    //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n    lines.dispatch.on('elementMouseover.tooltip', function(evt) {\n        if(!evt.series.disableTooltip){\n            tooltip.data(evt).hidden(false);\n        }\n    });\n\n    lines.dispatch.on('elementMouseout.tooltip', function(evt) {\n        tooltip.hidden(true);\n    });\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    // expose chart's sub-components\n    chart.dispatch = dispatch;\n    chart.lines = lines;\n    chart.legend = legend;\n    chart.focus = focus;\n    chart.xAxis = xAxis;\n    chart.x2Axis = focus.xAxis\n    chart.yAxis = yAxis;\n    chart.y2Axis = focus.yAxis\n    chart.interactiveLayer = interactiveLayer;\n    chart.tooltip = tooltip;\n    chart.state = state;\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n        legendPosition: {get: function(){return legendPosition;}, set: function(_){legendPosition=_;}},\n        showXAxis:      {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n        showYAxis:    {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n        defaultState:    {get: function(){return defaultState;}, set: function(_){defaultState=_;}},\n        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n        // Focus options, mostly passed onto focus model.\n        focusEnable:    {get: function(){return focusEnable;}, set: function(_){focusEnable=_;}},\n        focusHeight:     {get: function(){return focus.height();}, set: function(_){focus.height(_);}},\n        focusShowAxisX:    {get: function(){return focus.showXAxis();}, set: function(_){focus.showXAxis(_);}},\n        focusShowAxisY:    {get: function(){return focus.showYAxis();}, set: function(_){focus.showYAxis(_);}},\n        brushExtent: {get: function(){return focus.brushExtent();}, set: function(_){focus.brushExtent(_);}},\n\n        // options that require extra logic in the setter\n        focusMargin: {get: function(){return focus.margin}, set: function(_){\n            if (_.top !== undefined) {\n                margin.top = _.top;\n                marginTop = _.top;\n            }\n            focus.margin.right  = _.right  !== undefined ? _.right  : focus.margin.right;\n            focus.margin.bottom = _.bottom !== undefined ? _.bottom : focus.margin.bottom;\n            focus.margin.left   = _.left   !== undefined ? _.left   : focus.margin.left;\n        }},\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n            lines.duration(duration);\n            focus.duration(duration);\n            xAxis.duration(duration);\n            yAxis.duration(duration);\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n            legend.color(color);\n            lines.color(color);\n            focus.color(color);\n        }},\n        interpolate: {get: function(){return lines.interpolate();}, set: function(_){\n            lines.interpolate(_);\n            focus.interpolate(_);\n        }},\n        xTickFormat: {get: function(){return xAxis.tickFormat();}, set: function(_){\n            xAxis.tickFormat(_);\n            focus.xTickFormat(_);\n        }},\n        yTickFormat: {get: function(){return yAxis.tickFormat();}, set: function(_){\n            yAxis.tickFormat(_);\n            focus.yTickFormat(_);\n        }},\n        x: {get: function(){return lines.x();}, set: function(_){\n            lines.x(_);\n            focus.x(_);\n        }},\n        y: {get: function(){return lines.y();}, set: function(_){\n            lines.y(_);\n            focus.y(_);\n        }},\n        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n            rightAlignYAxis = _;\n            yAxis.orient( rightAlignYAxis ? 'right' : 'left');\n        }},\n        useInteractiveGuideline: {get: function(){return useInteractiveGuideline;}, set: function(_){\n            useInteractiveGuideline = _;\n            if (useInteractiveGuideline) {\n                lines.interactive(false);\n                lines.useVoronoi(false);\n            }\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, lines);\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n\nnv.models.lineWithFocusChart = function() {\n  return nv.models.lineChart()\n    .margin({ bottom: 30 })\n    .focusEnable( true );\n};\nnv.models.linePlusBarChart = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var lines = nv.models.line()\n        , lines2 = nv.models.line()\n        , bars = nv.models.historicalBar()\n        , bars2 = nv.models.historicalBar()\n        , xAxis = nv.models.axis()\n        , x2Axis = nv.models.axis()\n        , y1Axis = nv.models.axis()\n        , y2Axis = nv.models.axis()\n        , y3Axis = nv.models.axis()\n        , y4Axis = nv.models.axis()\n        , legend = nv.models.legend()\n        , brush = d3.svg.brush()\n        , tooltip = nv.models.tooltip()\n        ;\n\n    var margin = {top: 30, right: 30, bottom: 30, left: 60}\n        , marginTop = null\n        , margin2 = {top: 0, right: 30, bottom: 20, left: 60}\n        , width = null\n        , height = null\n        , getX = function(d) { return d.x }\n        , getY = function(d) { return d.y }\n        , color = nv.utils.defaultColor()\n        , showLegend = true\n        , focusEnable = true\n        , focusShowAxisY = false\n        , focusShowAxisX = true\n        , focusHeight = 50\n        , extent\n        , brushExtent = null\n        , x\n        , x2\n        , y1\n        , y2\n        , y3\n        , y4\n        , noData = null\n        , dispatch = d3.dispatch('brush', 'stateChange', 'changeState')\n        , transitionDuration = 0\n        , state = nv.utils.state()\n        , defaultState = null\n        , legendLeftAxisHint = ' (left axis)'\n        , legendRightAxisHint = ' (right axis)'\n        , switchYAxisOrder = false\n        ;\n\n    lines.clipEdge(true);\n    lines2.interactive(false);\n    // We don't want any points emitted for the focus chart's scatter graph.\n    lines2.pointActive(function(d) { return false });\n    xAxis.orient('bottom').tickPadding(5);\n    y1Axis.orient('left');\n    y2Axis.orient('right');\n    x2Axis.orient('bottom').tickPadding(5);\n    y3Axis.orient('left');\n    y4Axis.orient('right');\n\n    tooltip.headerEnabled(true).headerFormatter(function(d, i) {\n        return xAxis.tickFormat()(d, i);\n    });\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var getBarsAxis = function() {\n        return switchYAxisOrder\n            ? { main: y2Axis, focus: y4Axis }\n            : { main: y1Axis, focus: y3Axis }\n    }\n\n    var getLinesAxis = function() {\n        return switchYAxisOrder\n            ? { main: y1Axis, focus: y3Axis }\n            : { main: y2Axis, focus: y4Axis }\n    }\n\n    var stateGetter = function(data) {\n        return function(){\n            return {\n                active: data.map(function(d) { return !d.disabled })\n            };\n        }\n    };\n\n    var stateSetter = function(data) {\n        return function(state) {\n            if (state.active !== undefined)\n                data.forEach(function(series,i) {\n                    series.disabled = !state.active[i];\n                });\n        }\n    };\n\n    var allDisabled = function(data) {\n      return data.every(function(series) {\n        return series.disabled;\n      });\n    }\n\n    function chart(selection) {\n        selection.each(function(data) {\n            var container = d3.select(this),\n                that = this;\n            nv.utils.initSVG(container);\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight1 = nv.utils.availableHeight(height, container, margin)\n                    - (focusEnable ? focusHeight : 0),\n                availableHeight2 = focusHeight - margin2.top - margin2.bottom;\n\n            chart.update = function() { container.transition().duration(transitionDuration).call(chart); };\n            chart.container = this;\n\n            state\n                .setter(stateSetter(data), chart.update)\n                .getter(stateGetter(data))\n                .update();\n\n            // DEPRECATED set state.disableddisabled\n            state.disabled = data.map(function(d) { return !!d.disabled });\n\n            if (!defaultState) {\n                var key;\n                defaultState = {};\n                for (key in state) {\n                    if (state[key] instanceof Array)\n                        defaultState[key] = state[key].slice(0);\n                    else\n                        defaultState[key] = state[key];\n                }\n            }\n\n            // Display No Data message if there's nothing to show.\n            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n                nv.utils.noData(chart, container)\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n\n            // Setup Scales\n            var dataBars = data.filter(function(d) { return !d.disabled && d.bar });\n            var dataLines = data.filter(function(d) { return !d.bar }); // removed the !d.disabled clause here to fix Issue #240\n\n            if (dataBars.length && !switchYAxisOrder) {\n                x = bars.xScale();\n            } else {\n                x = lines.xScale();\n            }\n\n            x2 = x2Axis.scale();\n\n            // select the scales and series based on the position of the yAxis\n            y1 = switchYAxisOrder ? lines.yScale() : bars.yScale();\n            y2 = switchYAxisOrder ? bars.yScale() : lines.yScale();\n            y3 = switchYAxisOrder ? lines2.yScale() : bars2.yScale();\n            y4 = switchYAxisOrder ? bars2.yScale() : lines2.yScale();\n\n            var series1 = data\n                .filter(function(d) { return !d.disabled && (switchYAxisOrder ? !d.bar : d.bar) })\n                .map(function(d) {\n                    return d.values.map(function(d,i) {\n                        return { x: getX(d,i), y: getY(d,i) }\n                    })\n                });\n\n            var series2 = data\n                .filter(function(d) { return !d.disabled && (switchYAxisOrder ? d.bar : !d.bar) })\n                .map(function(d) {\n                    return d.values.map(function(d,i) {\n                        return { x: getX(d,i), y: getY(d,i) }\n                    })\n                });\n\n            x.range([0, availableWidth]);\n\n            x2  .domain(d3.extent(d3.merge(series1.concat(series2)), function(d) { return d.x } ))\n                .range([0, availableWidth]);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-linePlusBar').data([data]);\n            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-linePlusBar').append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-legendWrap');\n\n            // this is the main chart\n            var focusEnter = gEnter.append('g').attr('class', 'nv-focus');\n            focusEnter.append('g').attr('class', 'nv-x nv-axis');\n            focusEnter.append('g').attr('class', 'nv-y1 nv-axis');\n            focusEnter.append('g').attr('class', 'nv-y2 nv-axis');\n            focusEnter.append('g').attr('class', 'nv-barsWrap');\n            focusEnter.append('g').attr('class', 'nv-linesWrap');\n\n            // context chart is where you can focus in\n            var contextEnter = gEnter.append('g').attr('class', 'nv-context');\n            contextEnter.append('g').attr('class', 'nv-x nv-axis');\n            contextEnter.append('g').attr('class', 'nv-y1 nv-axis');\n            contextEnter.append('g').attr('class', 'nv-y2 nv-axis');\n            contextEnter.append('g').attr('class', 'nv-barsWrap');\n            contextEnter.append('g').attr('class', 'nv-linesWrap');\n            contextEnter.append('g').attr('class', 'nv-brushBackground');\n            contextEnter.append('g').attr('class', 'nv-x nv-brush');\n\n            //============================================================\n            // Legend\n            //------------------------------------------------------------\n\n            if (!showLegend) {\n                g.select('.nv-legendWrap').selectAll('*').remove();\n            } else {\n                var legendWidth = legend.align() ? availableWidth / 2 : availableWidth;\n                var legendXPosition = legend.align() ? legendWidth : 0;\n\n                legend.width(legendWidth);\n\n                g.select('.nv-legendWrap')\n                    .datum(data.map(function(series) {\n                        series.originalKey = series.originalKey === undefined ? series.key : series.originalKey;\n                        if(switchYAxisOrder) {\n                            series.key = series.originalKey + (series.bar ? legendRightAxisHint : legendLeftAxisHint);\n                        } else {\n                            series.key = series.originalKey + (series.bar ? legendLeftAxisHint : legendRightAxisHint);\n                        }\n                        return series;\n                    }))\n                    .call(legend);\n\n                if (!marginTop && legend.height() !== margin.top) {\n                    margin.top = legend.height();\n                    // FIXME: shouldn't this be \"- (focusEnabled ? focusHeight : 0)\"?\n                    availableHeight1 = nv.utils.availableHeight(height, container, margin) - focusHeight;\n                }\n\n                g.select('.nv-legendWrap')\n                    .attr('transform', 'translate(' + legendXPosition + ',' + (-margin.top) +')');\n            }\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            //============================================================\n            // Context chart (focus chart) components\n            //------------------------------------------------------------\n\n            // hide or show the focus context chart\n            g.select('.nv-context').style('display', focusEnable ? 'initial' : 'none');\n\n            bars2\n                .width(availableWidth)\n                .height(availableHeight2)\n                .color(data.map(function (d, i) {\n                    return d.color || color(d, i);\n                }).filter(function (d, i) {\n                    return !data[i].disabled && data[i].bar\n                }));\n            lines2\n                .width(availableWidth)\n                .height(availableHeight2)\n                .color(data.map(function (d, i) {\n                    return d.color || color(d, i);\n                }).filter(function (d, i) {\n                    return !data[i].disabled && !data[i].bar\n                }));\n\n            var bars2Wrap = g.select('.nv-context .nv-barsWrap')\n                .datum(dataBars.length ? dataBars : [\n                    {values: []}\n                ]);\n            var lines2Wrap = g.select('.nv-context .nv-linesWrap')\n                .datum(allDisabled(dataLines) ?\n                       [{values: []}] :\n                       dataLines.filter(function(dataLine) {\n                         return !dataLine.disabled;\n                       }));\n\n            g.select('.nv-context')\n                .attr('transform', 'translate(0,' + ( availableHeight1 + margin.bottom + margin2.top) + ')');\n\n            bars2Wrap.transition().call(bars2);\n            lines2Wrap.transition().call(lines2);\n\n            // context (focus chart) axis controls\n            if (focusShowAxisX) {\n                x2Axis\n                    ._ticks( nv.utils.calcTicksX(availableWidth / 100, data))\n                    .tickSize(-availableHeight2, 0);\n                g.select('.nv-context .nv-x.nv-axis')\n                    .attr('transform', 'translate(0,' + y3.range()[0] + ')');\n                g.select('.nv-context .nv-x.nv-axis').transition()\n                    .call(x2Axis);\n            }\n\n            if (focusShowAxisY) {\n                y3Axis\n                    .scale(y3)\n                    ._ticks( availableHeight2 / 36 )\n                    .tickSize( -availableWidth, 0);\n                y4Axis\n                    .scale(y4)\n                    ._ticks( availableHeight2 / 36 )\n                    .tickSize(dataBars.length ? 0 : -availableWidth, 0); // Show the y2 rules only if y1 has none\n\n                g.select('.nv-context .nv-y3.nv-axis')\n                    .style('opacity', dataBars.length ? 1 : 0)\n                    .attr('transform', 'translate(0,' + x2.range()[0] + ')');\n                g.select('.nv-context .nv-y2.nv-axis')\n                    .style('opacity', dataLines.length ? 1 : 0)\n                    .attr('transform', 'translate(' + x2.range()[1] + ',0)');\n\n                g.select('.nv-context .nv-y1.nv-axis').transition()\n                    .call(y3Axis);\n                g.select('.nv-context .nv-y2.nv-axis').transition()\n                    .call(y4Axis);\n            }\n\n            // Setup Brush\n            brush.x(x2).on('brush', onBrush);\n\n            if (brushExtent) brush.extent(brushExtent);\n\n            var brushBG = g.select('.nv-brushBackground').selectAll('g')\n                .data([brushExtent || brush.extent()]);\n\n            var brushBGenter = brushBG.enter()\n                .append('g');\n\n            brushBGenter.append('rect')\n                .attr('class', 'left')\n                .attr('x', 0)\n                .attr('y', 0)\n                .attr('height', availableHeight2);\n\n            brushBGenter.append('rect')\n                .attr('class', 'right')\n                .attr('x', 0)\n                .attr('y', 0)\n                .attr('height', availableHeight2);\n\n            var gBrush = g.select('.nv-x.nv-brush')\n                .call(brush);\n            gBrush.selectAll('rect')\n                //.attr('y', -5)\n                .attr('height', availableHeight2);\n            gBrush.selectAll('.resize').append('path').attr('d', resizePath);\n\n            //============================================================\n            // Event Handling/Dispatching (in chart's scope)\n            //------------------------------------------------------------\n\n            legend.dispatch.on('stateChange', function(newState) {\n                for (var key in newState)\n                    state[key] = newState[key];\n                dispatch.stateChange(state);\n                chart.update();\n            });\n\n            // Update chart from a state object passed to event handler\n            dispatch.on('changeState', function(e) {\n                if (typeof e.disabled !== 'undefined') {\n                    data.forEach(function(series,i) {\n                        series.disabled = e.disabled[i];\n                    });\n                    state.disabled = e.disabled;\n                }\n                chart.update();\n            });\n\n            //============================================================\n            // Functions\n            //------------------------------------------------------------\n\n            // Taken from crossfilter (http://square.github.com/crossfilter/)\n            function resizePath(d) {\n                var e = +(d == 'e'),\n                    x = e ? 1 : -1,\n                    y = availableHeight2 / 3;\n                return 'M' + (.5 * x) + ',' + y\n                    + 'A6,6 0 0 ' + e + ' ' + (6.5 * x) + ',' + (y + 6)\n                    + 'V' + (2 * y - 6)\n                    + 'A6,6 0 0 ' + e + ' ' + (.5 * x) + ',' + (2 * y)\n                    + 'Z'\n                    + 'M' + (2.5 * x) + ',' + (y + 8)\n                    + 'V' + (2 * y - 8)\n                    + 'M' + (4.5 * x) + ',' + (y + 8)\n                    + 'V' + (2 * y - 8);\n            }\n\n\n            function updateBrushBG() {\n                if (!brush.empty()) brush.extent(brushExtent);\n                brushBG\n                    .data([brush.empty() ? x2.domain() : brushExtent])\n                    .each(function(d,i) {\n                        var leftWidth = x2(d[0]) - x2.range()[0],\n                            rightWidth = x2.range()[1] - x2(d[1]);\n                        d3.select(this).select('.left')\n                            .attr('width',  leftWidth < 0 ? 0 : leftWidth);\n\n                        d3.select(this).select('.right')\n                            .attr('x', x2(d[1]))\n                            .attr('width', rightWidth < 0 ? 0 : rightWidth);\n                    });\n            }\n\n            function onBrush() {\n                brushExtent = brush.empty() ? null : brush.extent();\n                extent = brush.empty() ? x2.domain() : brush.extent();\n                dispatch.brush({extent: extent, brush: brush});\n                updateBrushBG();\n\n                // Prepare Main (Focus) Bars and Lines\n                bars\n                    .width(availableWidth)\n                    .height(availableHeight1)\n                    .color(data.map(function(d,i) {\n                        return d.color || color(d, i);\n                    }).filter(function(d,i) { return !data[i].disabled && data[i].bar }));\n\n                lines\n                    .width(availableWidth)\n                    .height(availableHeight1)\n                    .color(data.map(function(d,i) {\n                        return d.color || color(d, i);\n                    }).filter(function(d,i) { return !data[i].disabled && !data[i].bar }));\n\n                var focusBarsWrap = g.select('.nv-focus .nv-barsWrap')\n                    .datum(!dataBars.length ? [{values:[]}] :\n                        dataBars\n                            .map(function(d,i) {\n                                return {\n                                    key: d.key,\n                                    values: d.values.filter(function(d,i) {\n                                        return bars.x()(d,i) >= extent[0] && bars.x()(d,i) <= extent[1];\n                                    })\n                                }\n                            })\n                );\n\n                var focusLinesWrap = g.select('.nv-focus .nv-linesWrap')\n                    .datum(allDisabled(dataLines) ? [{values:[]}] :\n                           dataLines\n                           .filter(function(dataLine) { return !dataLine.disabled; })\n                           .map(function(d,i) {\n                                return {\n                                    area: d.area,\n                                    fillOpacity: d.fillOpacity,\n                                    strokeWidth: d.strokeWidth,\n                                    key: d.key,\n                                    values: d.values.filter(function(d,i) {\n                                        return lines.x()(d,i) >= extent[0] && lines.x()(d,i) <= extent[1];\n                                    })\n                                }\n                            })\n                );\n\n                // Update Main (Focus) X Axis\n                if (dataBars.length && !switchYAxisOrder) {\n                    x = bars.xScale();\n                } else {\n                    x = lines.xScale();\n                }\n\n                xAxis\n                    .scale(x)\n                    ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n                    .tickSize(-availableHeight1, 0);\n\n                xAxis.domain([Math.ceil(extent[0]), Math.floor(extent[1])]);\n\n                g.select('.nv-x.nv-axis').transition().duration(transitionDuration)\n                    .call(xAxis);\n\n                // Update Main (Focus) Bars and Lines\n                focusBarsWrap.transition().duration(transitionDuration).call(bars);\n                focusLinesWrap.transition().duration(transitionDuration).call(lines);\n\n                // Setup and Update Main (Focus) Y Axes\n                g.select('.nv-focus .nv-x.nv-axis')\n                    .attr('transform', 'translate(0,' + y1.range()[0] + ')');\n\n                y1Axis\n                    .scale(y1)\n                    ._ticks( nv.utils.calcTicksY(availableHeight1/36, data) )\n                    .tickSize(-availableWidth, 0);\n                y2Axis\n                    .scale(y2)\n                    ._ticks( nv.utils.calcTicksY(availableHeight1/36, data) );\n\n                // Show the y2 rules only if y1 has none\n                if(!switchYAxisOrder) {\n                    y2Axis.tickSize(dataBars.length ? 0 : -availableWidth, 0);\n                } else {\n                    y2Axis.tickSize(dataLines.length ? 0 : -availableWidth, 0);\n                }\n\n                // Calculate opacity of the axis\n                var barsOpacity = dataBars.length ? 1 : 0;\n                var linesOpacity = dataLines.length && !allDisabled(dataLines) ? 1 : 0;\n\n                var y1Opacity = switchYAxisOrder ? linesOpacity : barsOpacity;\n                var y2Opacity = switchYAxisOrder ? barsOpacity : linesOpacity;\n\n                g.select('.nv-focus .nv-y1.nv-axis')\n                    .style('opacity', y1Opacity);\n                g.select('.nv-focus .nv-y2.nv-axis')\n                    .style('opacity', y2Opacity)\n                    .attr('transform', 'translate(' + x.range()[1] + ',0)');\n\n                g.select('.nv-focus .nv-y1.nv-axis').transition().duration(transitionDuration)\n                    .call(y1Axis);\n                g.select('.nv-focus .nv-y2.nv-axis').transition().duration(transitionDuration)\n                    .call(y2Axis);\n            }\n\n            onBrush();\n\n        });\n\n        return chart;\n    }\n\n    //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n    lines.dispatch.on('elementMouseover.tooltip', function(evt) {\n        tooltip\n            .duration(100)\n            .valueFormatter(function(d, i) {\n                return getLinesAxis().main.tickFormat()(d, i);\n            })\n            .data(evt)\n            .hidden(false);\n    });\n\n    lines.dispatch.on('elementMouseout.tooltip', function(evt) {\n        tooltip.hidden(true)\n    });\n\n    bars.dispatch.on('elementMouseover.tooltip', function(evt) {\n        evt.value = chart.x()(evt.data);\n        evt['series'] = {\n            value: chart.y()(evt.data),\n            color: evt.color\n        };\n        tooltip\n            .duration(0)\n            .valueFormatter(function(d, i) {\n                return getBarsAxis().main.tickFormat()(d, i);\n            })\n            .data(evt)\n            .hidden(false);\n    });\n\n    bars.dispatch.on('elementMouseout.tooltip', function(evt) {\n        tooltip.hidden(true);\n    });\n\n    bars.dispatch.on('elementMousemove.tooltip', function(evt) {\n        tooltip();\n    });\n\n    //============================================================\n\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    // expose chart's sub-components\n    chart.dispatch = dispatch;\n    chart.legend = legend;\n    chart.lines = lines;\n    chart.lines2 = lines2;\n    chart.bars = bars;\n    chart.bars2 = bars2;\n    chart.xAxis = xAxis;\n    chart.x2Axis = x2Axis;\n    chart.y1Axis = y1Axis;\n    chart.y2Axis = y2Axis;\n    chart.y3Axis = y3Axis;\n    chart.y4Axis = y4Axis;\n    chart.tooltip = tooltip;\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n        brushExtent:    {get: function(){return brushExtent;}, set: function(_){brushExtent=_;}},\n        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n        focusEnable:    {get: function(){return focusEnable;}, set: function(_){focusEnable=_;}},\n        focusHeight:    {get: function(){return focusHeight;}, set: function(_){focusHeight=_;}},\n        focusShowAxisX:    {get: function(){return focusShowAxisX;}, set: function(_){focusShowAxisX=_;}},\n        focusShowAxisY:    {get: function(){return focusShowAxisY;}, set: function(_){focusShowAxisY=_;}},\n        legendLeftAxisHint:    {get: function(){return legendLeftAxisHint;}, set: function(_){legendLeftAxisHint=_;}},\n        legendRightAxisHint:    {get: function(){return legendRightAxisHint;}, set: function(_){legendRightAxisHint=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            if (_.top !== undefined) {\n                margin.top = _.top;\n                marginTop = _.top;\n            }\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        focusMargin: {get: function(){return margin2;}, set: function(_){\n            margin2.top    = _.top    !== undefined ? _.top    : margin2.top;\n            margin2.right  = _.right  !== undefined ? _.right  : margin2.right;\n            margin2.bottom = _.bottom !== undefined ? _.bottom : margin2.bottom;\n            margin2.left   = _.left   !== undefined ? _.left   : margin2.left;\n        }},\n        duration: {get: function(){return transitionDuration;}, set: function(_){\n            transitionDuration = _;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n            legend.color(color);\n        }},\n        x: {get: function(){return getX;}, set: function(_){\n            getX = _;\n            lines.x(_);\n            lines2.x(_);\n            bars.x(_);\n            bars2.x(_);\n        }},\n        y: {get: function(){return getY;}, set: function(_){\n            getY = _;\n            lines.y(_);\n            lines2.y(_);\n            bars.y(_);\n            bars2.y(_);\n        }},\n        switchYAxisOrder:    {get: function(){return switchYAxisOrder;}, set: function(_){\n            // Switch the tick format for the yAxis\n            if(switchYAxisOrder !== _) {\n                var y1 = y1Axis;\n                y1Axis = y2Axis;\n                y2Axis = y1;\n\n                var y3 = y3Axis;\n                y3Axis = y4Axis;\n                y4Axis = y3;\n            }\n            switchYAxisOrder=_;\n\n            y1Axis.orient('left');\n            y2Axis.orient('right');\n            y3Axis.orient('left');\n            y4Axis.orient('right');\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, lines);\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n\nnv.models.multiBar = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n        , width = 960\n        , height = 500\n        , x = d3.scale.ordinal()\n        , y = d3.scale.linear()\n        , id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n        , container = null\n        , getX = function(d) { return d.x }\n        , getY = function(d) { return d.y }\n        , forceY = [0] // 0 is forced by default.. this makes sense for the majority of bar graphs... user can always do chart.forceY([]) to remove\n        , clipEdge = true\n        , stacked = false\n        , stackOffset = 'zero' // options include 'silhouette', 'wiggle', 'expand', 'zero', or a custom function\n        , color = nv.utils.defaultColor()\n        , hideable = false\n        , barColor = null // adding the ability to set the color for each rather than the whole group\n        , disabled // used in conjunction with barColor to communicate from multiBarHorizontalChart what series are disabled\n        , duration = 500\n        , xDomain\n        , yDomain\n        , xRange\n        , yRange\n        , groupSpacing = 0.1\n        , fillOpacity = 0.75\n        , dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd')\n        ;\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var x0, y0 //used to store previous scales\n        , renderWatch = nv.utils.renderWatch(dispatch, duration)\n        ;\n\n    var last_datalength = 0;\n\n    function chart(selection) {\n        renderWatch.reset();\n        selection.each(function(data) {\n            var availableWidth = width - margin.left - margin.right,\n                availableHeight = height - margin.top - margin.bottom;\n\n            container = d3.select(this);\n            nv.utils.initSVG(container);\n            var nonStackableCount = 0;\n            // This function defines the requirements for render complete\n            var endFn = function(d, i) {\n                if (d.series === data.length - 1 && i === data[0].values.length - 1)\n                    return true;\n                return false;\n            };\n\n            if(hideable && data.length) hideable = [{\n                values: data[0].values.map(function(d) {\n                        return {\n                            x: d.x,\n                            y: 0,\n                            series: d.series,\n                            size: 0.01\n                        };}\n                )}];\n\n            if (stacked) {\n                var parsed = d3.layout.stack()\n                    .offset(stackOffset)\n                    .values(function(d){ return d.values })\n                    .y(getY)\n                (!data.length && hideable ? hideable : data);\n\n                parsed.forEach(function(series, i){\n                    // if series is non-stackable, use un-parsed data\n                    if (series.nonStackable) {\n                        data[i].nonStackableSeries = nonStackableCount++;\n                        parsed[i] = data[i];\n                    } else {\n                        // don't stack this seires on top of the nonStackable seriees\n                        if (i > 0 && parsed[i - 1].nonStackable){\n                            parsed[i].values.map(function(d,j){\n                                d.y0 -= parsed[i - 1].values[j].y;\n                                d.y1 = d.y0 + d.y;\n                            });\n                        }\n                    }\n                });\n                data = parsed;\n            }\n            //add series index and key to each data point for reference\n            data.forEach(function(series, i) {\n                series.values.forEach(function(point) {\n                    point.series = i;\n                    point.key = series.key;\n                });\n            });\n\n            // HACK for negative value stacking\n            if (stacked && data.length > 0) {\n                data[0].values.map(function(d,i) {\n                    var posBase = 0, negBase = 0;\n                    data.map(function(d, idx) {\n                        if (!data[idx].nonStackable) {\n                            var f = d.values[i]\n                            f.size = Math.abs(f.y);\n                            if (f.y<0)  {\n                                f.y1 = negBase;\n                                negBase = negBase - f.size;\n                            } else\n                            {\n                                f.y1 = f.size + posBase;\n                                posBase = posBase + f.size;\n                            }\n                        }\n\n                    });\n                });\n            }\n            // Setup Scales\n            // remap and flatten the data for use in calculating the scales' domains\n            var seriesData = (xDomain && yDomain) ? [] : // if we know xDomain and yDomain, no need to calculate\n                data.map(function(d, idx) {\n                    return d.values.map(function(d,i) {\n                        return { x: getX(d,i), y: getY(d,i), y0: d.y0, y1: d.y1, idx:idx }\n                    })\n                });\n\n            x.domain(xDomain || d3.merge(seriesData).map(function(d) { return d.x }))\n                .rangeBands(xRange || [0, availableWidth], groupSpacing);\n\n            y.domain(yDomain || d3.extent(d3.merge(seriesData).map(function(d) {\n                var domain = d.y;\n                // increase the domain range if this series is stackable\n                if (stacked && !data[d.idx].nonStackable) {\n                    if (d.y > 0){\n                        domain = d.y1\n                    } else {\n                        domain = d.y1 + d.y\n                    }\n                }\n                return domain;\n            }).concat(forceY)))\n            .range(yRange || [availableHeight, 0]);\n\n            // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n            if (x.domain()[0] === x.domain()[1])\n                x.domain()[0] ?\n                    x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01])\n                    : x.domain([-1,1]);\n\n            if (y.domain()[0] === y.domain()[1])\n                y.domain()[0] ?\n                    y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01])\n                    : y.domain([-1,1]);\n\n            x0 = x0 || x;\n            y0 = y0 || y;\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-multibar').data([data]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multibar');\n            var defsEnter = wrapEnter.append('defs');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-groups');\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            defsEnter.append('clipPath')\n                .attr('id', 'nv-edge-clip-' + id)\n                .append('rect');\n            wrap.select('#nv-edge-clip-' + id + ' rect')\n                .attr('width', availableWidth)\n                .attr('height', availableHeight);\n\n            g.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + id + ')' : '');\n\n            var groups = wrap.select('.nv-groups').selectAll('.nv-group')\n                .data(function(d) { return d }, function(d,i) { return i });\n            groups.enter().append('g')\n                .style('stroke-opacity', 1e-6)\n                .style('fill-opacity', 1e-6);\n\n            var exitTransition = renderWatch\n                .transition(groups.exit().selectAll('rect.nv-bar'), 'multibarExit', Math.min(100, duration))\n                .attr('y', function(d, i, j) {\n                    var yVal = y0(0) || 0;\n                    if (stacked) {\n                        if (data[d.series] && !data[d.series].nonStackable) {\n                            yVal = y0(d.y0);\n                        }\n                    }\n                    return yVal;\n                })\n                .attr('height', 0)\n                .remove();\n            if (exitTransition.delay)\n                exitTransition.delay(function(d,i) {\n                    var delay = i * (duration / (last_datalength + 1)) - i;\n                    return delay;\n                });\n            groups\n                .attr('class', function(d,i) { return 'nv-group nv-series-' + i })\n                .classed('hover', function(d) { return d.hover })\n                .style('fill', function(d,i){ return color(d, i) })\n                .style('stroke', function(d,i){ return color(d, i) });\n            groups\n                .style('stroke-opacity', 1)\n                .style('fill-opacity', fillOpacity);\n\n            var bars = groups.selectAll('rect.nv-bar')\n                .data(function(d) { return (hideable && !data.length) ? hideable.values : d.values });\n            bars.exit().remove();\n\n            var barsEnter = bars.enter().append('rect')\n                    .attr('class', function(d,i) { return getY(d,i) < 0 ? 'nv-bar negative' : 'nv-bar positive'})\n                    .attr('x', function(d,i,j) {\n                        return stacked && !data[j].nonStackable ? 0 : (j * x.rangeBand() / data.length )\n                    })\n                    .attr('y', function(d,i,j) { return y0(stacked && !data[j].nonStackable ? d.y0 : 0) || 0 })\n                    .attr('height', 0)\n                    .attr('width', function(d,i,j) { return x.rangeBand() / (stacked && !data[j].nonStackable ? 1 : data.length) })\n                    .attr('transform', function(d,i) { return 'translate(' + x(getX(d,i)) + ',0)'; })\n                ;\n            bars\n                .style('fill', function(d,i,j){ return color(d, j, i);  })\n                .style('stroke', function(d,i,j){ return color(d, j, i); })\n                .on('mouseover', function(d,i,j) {\n                    d3.select(this).classed('hover', true);\n                    dispatch.elementMouseover({\n                        data: d,\n                        index: i,\n                        series: data[j],\n                        color: d3.select(this).style(\"fill\")\n                    });\n                })\n                .on('mouseout', function(d,i,j) {\n                    d3.select(this).classed('hover', false);\n                    dispatch.elementMouseout({\n                        data: d,\n                        index: i,\n                        series: data[j],\n                        color: d3.select(this).style(\"fill\")\n                    });\n                })\n                .on('mousemove', function(d,i,j) {\n                    dispatch.elementMousemove({\n                        data: d,\n                        index: i,\n                        series: data[j],\n                        color: d3.select(this).style(\"fill\")\n                    });\n                })\n                .on('click', function(d,i,j) {\n                    var element = this;\n                    dispatch.elementClick({\n                        data: d,\n                        index: i,\n                        series: data[j],\n                        color: d3.select(this).style(\"fill\"),\n                        event: d3.event,\n                        element: element\n                    });\n                    d3.event.stopPropagation();\n                })\n                .on('dblclick', function(d,i,j) {\n                    dispatch.elementDblClick({\n                        data: d,\n                        index: i,\n                        series: data[j],\n                        color: d3.select(this).style(\"fill\")\n                    });\n                    d3.event.stopPropagation();\n                });\n            bars\n                .attr('class', function(d,i) { return getY(d,i) < 0 ? 'nv-bar negative' : 'nv-bar positive'})\n                .attr('transform', function(d,i) { return 'translate(' + x(getX(d,i)) + ',0)'; })\n\n            if (barColor) {\n                if (!disabled) disabled = data.map(function() { return true });\n                bars\n                    .style('fill', function(d,i,j) { return d3.rgb(barColor(d,i)).darker(  disabled.map(function(d,i) { return i }).filter(function(d,i){ return !disabled[i]  })[j]   ).toString(); })\n                    .style('stroke', function(d,i,j) { return d3.rgb(barColor(d,i)).darker(  disabled.map(function(d,i) { return i }).filter(function(d,i){ return !disabled[i]  })[j]   ).toString(); });\n            }\n\n            var barSelection =\n                bars.watchTransition(renderWatch, 'multibar', Math.min(250, duration))\n                    .delay(function(d,i) {\n                        return i * duration / data[0].values.length;\n                    });\n            if (stacked){\n                barSelection\n                    .attr('y', function(d,i,j) {\n                        var yVal = 0;\n                        // if stackable, stack it on top of the previous series\n                        if (!data[j].nonStackable) {\n                            yVal = y(d.y1);\n                        } else {\n                            if (getY(d,i) < 0){\n                                yVal = y(0);\n                            } else {\n                                if (y(0) - y(getY(d,i)) < -1){\n                                    yVal = y(0) - 1;\n                                } else {\n                                    yVal = y(getY(d, i)) || 0;\n                                }\n                            }\n                        }\n                        return yVal;\n                    })\n                    .attr('height', function(d,i,j) {\n                        if (!data[j].nonStackable) {\n                            return Math.max(Math.abs(y(d.y+d.y0) - y(d.y0)), 0);\n                        } else {\n                            return Math.max(Math.abs(y(getY(d,i)) - y(0)), 0) || 0;\n                        }\n                    })\n                    .attr('x', function(d,i,j) {\n                        var width = 0;\n                        if (data[j].nonStackable) {\n                            width = d.series * x.rangeBand() / data.length;\n                            if (data.length !== nonStackableCount){\n                                width = data[j].nonStackableSeries * x.rangeBand()/(nonStackableCount*2);\n                            }\n                        }\n                        return width;\n                    })\n                    .attr('width', function(d,i,j){\n                        if (!data[j].nonStackable) {\n                            return x.rangeBand();\n                        } else {\n                            // if all series are nonStacable, take the full width\n                            var width = (x.rangeBand() / nonStackableCount);\n                            // otherwise, nonStackable graph will be only taking the half-width\n                            // of the x rangeBand\n                            if (data.length !== nonStackableCount) {\n                                width = x.rangeBand()/(nonStackableCount*2);\n                            }\n                            return width;\n                        }\n                    });\n            }\n            else {\n                barSelection\n                    .attr('x', function(d,i) {\n                        return d.series * x.rangeBand() / data.length;\n                    })\n                    .attr('width', x.rangeBand() / data.length)\n                    .attr('y', function(d,i) {\n                        return getY(d,i) < 0 ?\n                            y(0) :\n                                y(0) - y(getY(d,i)) < 1 ?\n                            y(0) - 1 :\n                            y(getY(d,i)) || 0;\n                    })\n                    .attr('height', function(d,i) {\n                        return Math.max(Math.abs(y(getY(d,i)) - y(0)),1) || 0;\n                    });\n            }\n\n            //store old scales for use in transitions on update\n            x0 = x.copy();\n            y0 = y.copy();\n\n            // keep track of the last data value length for transition calculations\n            if (data[0] && data[0].values) {\n                last_datalength = data[0].values.length;\n            }\n\n        });\n\n        renderWatch.renderEnd('multibar immediate');\n\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:   {get: function(){return width;}, set: function(_){width=_;}},\n        height:  {get: function(){return height;}, set: function(_){height=_;}},\n        x:       {get: function(){return getX;}, set: function(_){getX=_;}},\n        y:       {get: function(){return getY;}, set: function(_){getY=_;}},\n        xScale:  {get: function(){return x;}, set: function(_){x=_;}},\n        yScale:  {get: function(){return y;}, set: function(_){y=_;}},\n        xDomain: {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n        yDomain: {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n        xRange:  {get: function(){return xRange;}, set: function(_){xRange=_;}},\n        yRange:  {get: function(){return yRange;}, set: function(_){yRange=_;}},\n        forceY:  {get: function(){return forceY;}, set: function(_){forceY=_;}},\n        stacked: {get: function(){return stacked;}, set: function(_){stacked=_;}},\n        stackOffset: {get: function(){return stackOffset;}, set: function(_){stackOffset=_;}},\n        clipEdge:    {get: function(){return clipEdge;}, set: function(_){clipEdge=_;}},\n        disabled:    {get: function(){return disabled;}, set: function(_){disabled=_;}},\n        id:          {get: function(){return id;}, set: function(_){id=_;}},\n        hideable:    {get: function(){return hideable;}, set: function(_){hideable=_;}},\n        groupSpacing:{get: function(){return groupSpacing;}, set: function(_){groupSpacing=_;}},\n        fillOpacity: {get: function(){return fillOpacity;}, set: function(_){fillOpacity=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }},\n        barColor:  {get: function(){return barColor;}, set: function(_){\n            barColor = _ ? nv.utils.getColor(_) : null;\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\nnv.models.multiBarChart = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var multibar = nv.models.multiBar()\n        , xAxis = nv.models.axis()\n        , yAxis = nv.models.axis()\n        , interactiveLayer = nv.interactiveGuideline()\n        , legend = nv.models.legend()\n        , controls = nv.models.legend()\n        , tooltip = nv.models.tooltip()\n        ;\n\n    var margin = {top: 30, right: 20, bottom: 50, left: 60}\n        , marginTop = null\n        , width = null\n        , height = null\n        , color = nv.utils.defaultColor()\n        , showControls = true\n        , controlLabels = {}\n        , showLegend = true\n        , legendPosition = null\n        , showXAxis = true\n        , showYAxis = true\n        , rightAlignYAxis = false\n        , reduceXTicks = true // if false a tick will show for every data point\n        , staggerLabels = false\n        , wrapLabels = false\n        , rotateLabels = 0\n        , x //can be accessed via chart.xScale()\n        , y //can be accessed via chart.yScale()\n        , state = nv.utils.state()\n        , defaultState = null\n        , noData = null\n        , dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd')\n        , controlWidth = function() { return showControls ? 180 : 0 }\n        , duration = 250\n        , useInteractiveGuideline = false\n        ;\n\n    state.stacked = false // DEPRECATED Maintained for backward compatibility\n\n    multibar.stacked(false);\n    xAxis\n        .orient('bottom')\n        .tickPadding(7)\n        .showMaxMin(false)\n        .tickFormat(function(d) { return d })\n    ;\n    yAxis\n        .orient((rightAlignYAxis) ? 'right' : 'left')\n        .tickFormat(d3.format(',.1f'))\n    ;\n\n    tooltip\n        .duration(0)\n        .valueFormatter(function(d, i) {\n            return yAxis.tickFormat()(d, i);\n        })\n        .headerFormatter(function(d, i) {\n            return xAxis.tickFormat()(d, i);\n        });\n\n    interactiveLayer.tooltip\n        .valueFormatter(function(d, i) {\n            return d == null ? \"N/A\" : yAxis.tickFormat()(d, i);\n        })\n        .headerFormatter(function(d, i) {\n            return xAxis.tickFormat()(d, i);\n        });\n\n    interactiveLayer.tooltip\n        .valueFormatter(function (d, i) {\n            return d == null ? \"N/A\" : yAxis.tickFormat()(d, i);\n        })\n        .headerFormatter(function (d, i) {\n            return xAxis.tickFormat()(d, i);\n        });\n\n    interactiveLayer.tooltip\n        .duration(0)\n        .valueFormatter(function(d, i) {\n            return yAxis.tickFormat()(d, i);\n        })\n        .headerFormatter(function(d, i) {\n            return xAxis.tickFormat()(d, i);\n        });\n\n    controls.updateState(false);\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n    var stacked = false;\n\n    var stateGetter = function(data) {\n        return function(){\n            return {\n                active: data.map(function(d) { return !d.disabled }),\n                stacked: stacked\n            };\n        }\n    };\n\n    var stateSetter = function(data) {\n        return function(state) {\n            if (state.stacked !== undefined)\n                stacked = state.stacked;\n            if (state.active !== undefined)\n                data.forEach(function(series,i) {\n                    series.disabled = !state.active[i];\n                });\n        }\n    };\n\n    function chart(selection) {\n        renderWatch.reset();\n        renderWatch.models(multibar);\n        if (showXAxis) renderWatch.models(xAxis);\n        if (showYAxis) renderWatch.models(yAxis);\n\n        selection.each(function(data) {\n            var container = d3.select(this),\n                that = this;\n            nv.utils.initSVG(container);\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            chart.update = function() {\n                if (duration === 0)\n                    container.call(chart);\n                else\n                    container.transition()\n                        .duration(duration)\n                        .call(chart);\n            };\n            chart.container = this;\n\n            state\n                .setter(stateSetter(data), chart.update)\n                .getter(stateGetter(data))\n                .update();\n\n            // DEPRECATED set state.disableddisabled\n            state.disabled = data.map(function(d) { return !!d.disabled });\n\n            if (!defaultState) {\n                var key;\n                defaultState = {};\n                for (key in state) {\n                    if (state[key] instanceof Array)\n                        defaultState[key] = state[key].slice(0);\n                    else\n                        defaultState[key] = state[key];\n                }\n            }\n\n            // Display noData message if there's nothing to show.\n            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n                nv.utils.noData(chart, container)\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n\n            // Setup Scales\n            x = multibar.xScale();\n            y = multibar.yScale();\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-multiBarWithLegend').data([data]);\n            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multiBarWithLegend').append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-x nv-axis');\n            gEnter.append('g').attr('class', 'nv-y nv-axis');\n            gEnter.append('g').attr('class', 'nv-barsWrap');\n            gEnter.append('g').attr('class', 'nv-legendWrap');\n            gEnter.append('g').attr('class', 'nv-controlsWrap');\n            gEnter.append('g').attr('class', 'nv-interactive');\n\n            // Legend\n            if (!showLegend) {\n                g.select('.nv-legendWrap').selectAll('*').remove();\n            } else {\n                if (legendPosition === 'bottom') {\n                    legend.width(availableWidth - margin.right);\n\n                     g.select('.nv-legendWrap')\n                         .datum(data)\n                         .call(legend);\n\n                     margin.bottom = xAxis.height() + legend.height();\n                     availableHeight = nv.utils.availableHeight(height, container, margin);\n                     g.select('.nv-legendWrap')\n                         .attr('transform', 'translate(0,' + (availableHeight + xAxis.height())  +')');\n                } else {\n                    legend.width(availableWidth - controlWidth());\n\n                    g.select('.nv-legendWrap')\n                        .datum(data)\n                        .call(legend);\n\n                    if (!marginTop && legend.height() !== margin.top) {\n                        margin.top = legend.height();\n                        availableHeight = nv.utils.availableHeight(height, container, margin);\n                    }\n\n                    g.select('.nv-legendWrap')\n                        .attr('transform', 'translate(' + controlWidth() + ',' + (-margin.top) +')');\n                }\n            }\n\n            // Controls\n            if (!showControls) {\n                 g.select('.nv-controlsWrap').selectAll('*').remove();\n            } else {\n                var controlsData = [\n                    { key: controlLabels.grouped || 'Grouped', disabled: multibar.stacked() },\n                    { key: controlLabels.stacked || 'Stacked', disabled: !multibar.stacked() }\n                ];\n\n                controls.width(controlWidth()).color(['#444', '#444', '#444']);\n                g.select('.nv-controlsWrap')\n                    .datum(controlsData)\n                    .attr('transform', 'translate(0,' + (-margin.top) +')')\n                    .call(controls);\n            }\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n            if (rightAlignYAxis) {\n                g.select(\".nv-y.nv-axis\")\n                    .attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n            }\n\n            // Main Chart Component(s)\n            multibar\n                .disabled(data.map(function(series) { return series.disabled }))\n                .width(availableWidth)\n                .height(availableHeight)\n                .color(data.map(function(d,i) {\n                    return d.color || color(d, i);\n                }).filter(function(d,i) { return !data[i].disabled }));\n\n\n            var barsWrap = g.select('.nv-barsWrap')\n                .datum(data.filter(function(d) { return !d.disabled }));\n\n            barsWrap.call(multibar);\n\n            // Setup Axes\n            if (showXAxis) {\n                xAxis\n                    .scale(x)\n                    ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n                    .tickSize(-availableHeight, 0);\n\n                g.select('.nv-x.nv-axis')\n                    .attr('transform', 'translate(0,' + y.range()[0] + ')');\n                g.select('.nv-x.nv-axis')\n                    .call(xAxis);\n\n                var xTicks = g.select('.nv-x.nv-axis > g').selectAll('g');\n\n                xTicks\n                    .selectAll('line, text')\n                    .style('opacity', 1)\n\n                if (staggerLabels) {\n                    var getTranslate = function(x,y) {\n                        return \"translate(\" + x + \",\" + y + \")\";\n                    };\n\n                    var staggerUp = 5, staggerDown = 17;  //pixels to stagger by\n                    // Issue #140\n                    xTicks\n                        .selectAll(\"text\")\n                        .attr('transform', function(d,i,j) {\n                            return  getTranslate(0, (j % 2 == 0 ? staggerUp : staggerDown));\n                        });\n\n                    var totalInBetweenTicks = d3.selectAll(\".nv-x.nv-axis .nv-wrap g g text\")[0].length;\n                    g.selectAll(\".nv-x.nv-axis .nv-axisMaxMin text\")\n                        .attr(\"transform\", function(d,i) {\n                            return getTranslate(0, (i === 0 || totalInBetweenTicks % 2 !== 0) ? staggerDown : staggerUp);\n                        });\n                }\n\n                if (wrapLabels) {\n                    g.selectAll('.tick text')\n                        .call(nv.utils.wrapTicks, chart.xAxis.rangeBand())\n                }\n\n                if (reduceXTicks)\n                    xTicks\n                        .filter(function(d,i) {\n                            return i % Math.ceil(data[0].values.length / (availableWidth / 100)) !== 0;\n                        })\n                        .selectAll('text, line')\n                        .style('opacity', 0);\n\n                if(rotateLabels)\n                    xTicks\n                        .selectAll('.tick text')\n                        .attr('transform', 'rotate(' + rotateLabels + ' 0,0)')\n                        .style('text-anchor', rotateLabels > 0 ? 'start' : 'end');\n\n                g.select('.nv-x.nv-axis').selectAll('g.nv-axisMaxMin text')\n                    .style('opacity', 1);\n            }\n\n            if (showYAxis) {\n                yAxis\n                    .scale(y)\n                    ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n                    .tickSize( -availableWidth, 0);\n\n                g.select('.nv-y.nv-axis')\n                    .call(yAxis);\n            }\n\n            //Set up interactive layer\n            if (useInteractiveGuideline) {\n                interactiveLayer\n                    .width(availableWidth)\n                    .height(availableHeight)\n                    .margin({left:margin.left, top:margin.top})\n                    .svgContainer(container)\n                    .xScale(x);\n                wrap.select(\".nv-interactive\").call(interactiveLayer);\n            }\n\n            //============================================================\n            // Event Handling/Dispatching (in chart's scope)\n            //------------------------------------------------------------\n\n            legend.dispatch.on('stateChange', function(newState) {\n                for (var key in newState)\n                    state[key] = newState[key];\n                dispatch.stateChange(state);\n                chart.update();\n            });\n\n            controls.dispatch.on('legendClick', function(d,i) {\n                if (!d.disabled) return;\n                controlsData = controlsData.map(function(s) {\n                    s.disabled = true;\n                    return s;\n                });\n                d.disabled = false;\n\n                switch (d.key) {\n                    case 'Grouped':\n                    case controlLabels.grouped:\n                        multibar.stacked(false);\n                        break;\n                    case 'Stacked':\n                    case controlLabels.stacked:\n                        multibar.stacked(true);\n                        break;\n                }\n\n                state.stacked = multibar.stacked();\n                dispatch.stateChange(state);\n                chart.update();\n            });\n\n            // Update chart from a state object passed to event handler\n            dispatch.on('changeState', function(e) {\n                if (typeof e.disabled !== 'undefined') {\n                    data.forEach(function(series,i) {\n                        series.disabled = e.disabled[i];\n                    });\n                    state.disabled = e.disabled;\n                }\n                if (typeof e.stacked !== 'undefined') {\n                    multibar.stacked(e.stacked);\n                    state.stacked = e.stacked;\n                    stacked = e.stacked;\n                }\n                chart.update();\n            });\n\n            if (useInteractiveGuideline) {\n                interactiveLayer.dispatch.on('elementMousemove', function(e) {\n                    if (e.pointXValue == undefined) return;\n\n                    var singlePoint, pointIndex, pointXLocation, xValue, allData = [];\n                    data\n                        .filter(function(series, i) {\n                            series.seriesIndex = i;\n                            return !series.disabled;\n                        })\n                        .forEach(function(series,i) {\n                            pointIndex = x.domain().indexOf(e.pointXValue)\n\n                            var point = series.values[pointIndex];\n                            if (point === undefined) return;\n\n                            xValue = point.x;\n                            if (singlePoint === undefined) singlePoint = point;\n                            if (pointXLocation === undefined) pointXLocation = e.mouseX\n                            allData.push({\n                                key: series.key,\n                                value: chart.y()(point, pointIndex),\n                                color: color(series,series.seriesIndex),\n                                data: series.values[pointIndex]\n                            });\n                        });\n\n                    interactiveLayer.tooltip\n                        .data({\n                            value: xValue,\n                            index: pointIndex,\n                            series: allData\n                        })();\n\n                    interactiveLayer.renderGuideLine(pointXLocation);\n                });\n\n                interactiveLayer.dispatch.on(\"elementMouseout\",function(e) {\n                    interactiveLayer.tooltip.hidden(true);\n                });\n            }\n            else {\n                multibar.dispatch.on('elementMouseover.tooltip', function(evt) {\n                    evt.value = chart.x()(evt.data);\n                    evt['series'] = {\n                        key: evt.data.key,\n                        value: chart.y()(evt.data),\n                        color: evt.color\n                    };\n                    tooltip.data(evt).hidden(false);\n                });\n\n                multibar.dispatch.on('elementMouseout.tooltip', function(evt) {\n                    tooltip.hidden(true);\n                });\n\n                multibar.dispatch.on('elementMousemove.tooltip', function(evt) {\n                    tooltip();\n                });\n            }\n        });\n\n        renderWatch.renderEnd('multibarchart immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    // expose chart's sub-components\n    chart.dispatch = dispatch;\n    chart.multibar = multibar;\n    chart.legend = legend;\n    chart.controls = controls;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.state = state;\n    chart.tooltip = tooltip;\n    chart.interactiveLayer = interactiveLayer;\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n        legendPosition: {get: function(){return legendPosition;}, set: function(_){legendPosition=_;}},\n        showControls: {get: function(){return showControls;}, set: function(_){showControls=_;}},\n        controlLabels: {get: function(){return controlLabels;}, set: function(_){controlLabels=_;}},\n        showXAxis:      {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n        showYAxis:    {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n        defaultState:    {get: function(){return defaultState;}, set: function(_){defaultState=_;}},\n        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n        reduceXTicks:    {get: function(){return reduceXTicks;}, set: function(_){reduceXTicks=_;}},\n        rotateLabels:    {get: function(){return rotateLabels;}, set: function(_){rotateLabels=_;}},\n        staggerLabels:    {get: function(){return staggerLabels;}, set: function(_){staggerLabels=_;}},\n        wrapLabels:   {get: function(){return wrapLabels;}, set: function(_){wrapLabels=!!_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            if (_.top !== undefined) {\n                margin.top = _.top;\n                marginTop = _.top;\n            }\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            multibar.duration(duration);\n            xAxis.duration(duration);\n            yAxis.duration(duration);\n            renderWatch.reset(duration);\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n            legend.color(color);\n        }},\n        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n            rightAlignYAxis = _;\n            yAxis.orient( rightAlignYAxis ? 'right' : 'left');\n        }},\n        useInteractiveGuideline: {get: function(){return useInteractiveGuideline;}, set: function(_){\n            useInteractiveGuideline = _;\n        }},\n        barColor:  {get: function(){return multibar.barColor;}, set: function(_){\n            multibar.barColor(_);\n            legend.color(function(d,i) {return d3.rgb('#ccc').darker(i * 1.5).toString();})\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, multibar);\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n\nnv.models.multiBarHorizontal = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n        , width = 960\n        , height = 500\n        , id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n        , container = null\n        , x = d3.scale.ordinal()\n        , y = d3.scale.linear()\n        , getX = function(d) { return d.x }\n        , getY = function(d) { return d.y }\n        , getYerr = function(d) { return d.yErr }\n        , forceY = [0] // 0 is forced by default.. this makes sense for the majority of bar graphs... user can always do chart.forceY([]) to remove\n        , color = nv.utils.defaultColor()\n        , barColor = null // adding the ability to set the color for each rather than the whole group\n        , disabled // used in conjunction with barColor to communicate from multiBarHorizontalChart what series are disabled\n        , stacked = false\n        , showValues = false\n        , showBarLabels = false\n        , valuePadding = 60\n        , groupSpacing = 0.1\n        , fillOpacity = 0.75\n        , valueFormat = d3.format(',.2f')\n        , delay = 1200\n        , xDomain\n        , yDomain\n        , xRange\n        , yRange\n        , duration = 250\n        , dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd')\n        ;\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var x0, y0; //used to store previous scales\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n        renderWatch.reset();\n        selection.each(function(data) {\n            var availableWidth = width - margin.left - margin.right,\n                availableHeight = height - margin.top - margin.bottom;\n\n            container = d3.select(this);\n            nv.utils.initSVG(container);\n\n            if (stacked)\n                data = d3.layout.stack()\n                    .offset('zero')\n                    .values(function(d){ return d.values })\n                    .y(getY)\n                (data);\n\n            //add series index and key to each data point for reference\n            data.forEach(function(series, i) {\n                series.values.forEach(function(point) {\n                    point.series = i;\n                    point.key = series.key;\n                });\n            });\n\n            // HACK for negative value stacking\n            if (stacked)\n                data[0].values.map(function(d,i) {\n                    var posBase = 0, negBase = 0;\n                    data.map(function(d) {\n                        var f = d.values[i]\n                        f.size = Math.abs(f.y);\n                        if (f.y<0)  {\n                            f.y1 = negBase - f.size;\n                            negBase = negBase - f.size;\n                        } else\n                        {\n                            f.y1 = posBase;\n                            posBase = posBase + f.size;\n                        }\n                    });\n                });\n\n            // Setup Scales\n            // remap and flatten the data for use in calculating the scales' domains\n            var seriesData = (xDomain && yDomain) ? [] : // if we know xDomain and yDomain, no need to calculate\n                data.map(function(d) {\n                    return d.values.map(function(d,i) {\n                        return { x: getX(d,i), y: getY(d,i), y0: d.y0, y1: d.y1 }\n                    })\n                });\n\n            x.domain(xDomain || d3.merge(seriesData).map(function(d) { return d.x }))\n                .rangeBands(xRange || [0, availableHeight], groupSpacing);\n\n            y.domain(yDomain || d3.extent(d3.merge(seriesData).map(function(d) { return stacked ? (d.y > 0 ? d.y1 + d.y : d.y1 ) : d.y }).concat(forceY)))\n\n            if (showValues && !stacked)\n                y.range(yRange || [(y.domain()[0] < 0 ? valuePadding : 0), availableWidth - (y.domain()[1] > 0 ? valuePadding : 0) ]);\n            else\n                y.range(yRange || [0, availableWidth]);\n\n            x0 = x0 || x;\n            y0 = y0 || d3.scale.linear().domain(y.domain()).range([y(0),y(0)]);\n\n            // Setup containers and skeleton of chart\n            var wrap = d3.select(this).selectAll('g.nv-wrap.nv-multibarHorizontal').data([data]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multibarHorizontal');\n            var defsEnter = wrapEnter.append('defs');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-groups');\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            var groups = wrap.select('.nv-groups').selectAll('.nv-group')\n                .data(function(d) { return d }, function(d,i) { return i });\n            groups.enter().append('g')\n                .style('stroke-opacity', 1e-6)\n                .style('fill-opacity', 1e-6);\n            groups.exit().watchTransition(renderWatch, 'multibarhorizontal: exit groups')\n                .style('stroke-opacity', 1e-6)\n                .style('fill-opacity', 1e-6)\n                .remove();\n            groups\n                .attr('class', function(d,i) { return 'nv-group nv-series-' + i })\n                .classed('hover', function(d) { return d.hover })\n                .style('fill', function(d,i){ return color(d, i) })\n                .style('stroke', function(d,i){ return color(d, i) });\n            groups.watchTransition(renderWatch, 'multibarhorizontal: groups')\n                .style('stroke-opacity', 1)\n                .style('fill-opacity', fillOpacity);\n\n            var bars = groups.selectAll('g.nv-bar')\n                .data(function(d) { return d.values });\n            bars.exit().remove();\n\n            var barsEnter = bars.enter().append('g')\n                .attr('transform', function(d,i,j) {\n                    return 'translate(' + y0(stacked ? d.y0 : 0) + ',' + (stacked ? 0 : (j * x.rangeBand() / data.length ) + x(getX(d,i))) + ')'\n                });\n\n            barsEnter.append('rect')\n                .attr('width', 0)\n                .attr('height', x.rangeBand() / (stacked ? 1 : data.length) )\n\n            bars\n                .on('mouseover', function(d,i) { //TODO: figure out why j works above, but not here\n                    d3.select(this).classed('hover', true);\n                    dispatch.elementMouseover({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                })\n                .on('mouseout', function(d,i) {\n                    d3.select(this).classed('hover', false);\n                    dispatch.elementMouseout({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                })\n                .on('mouseout', function(d,i) {\n                    dispatch.elementMouseout({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                })\n                .on('mousemove', function(d,i) {\n                    dispatch.elementMousemove({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                })\n                .on('click', function(d,i) {\n                    var element = this;\n                    dispatch.elementClick({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\"),\n                        event: d3.event,\n                        element: element\n                    });\n                    d3.event.stopPropagation();\n                })\n                .on('dblclick', function(d,i) {\n                    dispatch.elementDblClick({\n                        data: d,\n                        index: i,\n                        color: d3.select(this).style(\"fill\")\n                    });\n                    d3.event.stopPropagation();\n                });\n\n            if (getYerr(data[0],0)) {\n                barsEnter.append('polyline');\n\n                bars.select('polyline')\n                    .attr('fill', 'none')\n                    .attr('points', function(d,i) {\n                        var xerr = getYerr(d,i)\n                            , mid = 0.8 * x.rangeBand() / ((stacked ? 1 : data.length) * 2);\n                        xerr = xerr.length ? xerr : [-Math.abs(xerr), Math.abs(xerr)];\n                        xerr = xerr.map(function(e) { return y(e + ((getY(d,i) < 0) ? 0 : getY(d,i))) - y(0); });\n                        var a = [[xerr[0],-mid], [xerr[0],mid], [xerr[0],0], [xerr[1],0], [xerr[1],-mid], [xerr[1],mid]];\n                        return a.map(function (path) { return path.join(',') }).join(' ');\n                    })\n                    .attr('transform', function(d,i) {\n                        var mid = x.rangeBand() / ((stacked ? 1 : data.length) * 2);\n                        return 'translate(0, ' + mid + ')';\n                    });\n            }\n\n            barsEnter.append('text');\n\n            if (showValues && !stacked) {\n                bars.select('text')\n                    .attr('text-anchor', function(d,i) { return getY(d,i) < 0 ? 'end' : 'start' })\n                    .attr('y', x.rangeBand() / (data.length * 2))\n                    .attr('dy', '.32em')\n                    .text(function(d,i) {\n                        var t = valueFormat(getY(d,i))\n                            , yerr = getYerr(d,i);\n                        if (yerr === undefined)\n                            return t;\n                        if (!yerr.length)\n                            return t + '±' + valueFormat(Math.abs(yerr));\n                        return t + '+' + valueFormat(Math.abs(yerr[1])) + '-' + valueFormat(Math.abs(yerr[0]));\n                    });\n                bars.watchTransition(renderWatch, 'multibarhorizontal: bars')\n                    .select('text')\n                    .attr('x', function(d,i) { return getY(d,i) < 0 ? -4 : y(getY(d,i)) - y(0) + 4 })\n            } else {\n                bars.selectAll('text').text('');\n            }\n\n            if (showBarLabels && !stacked) {\n                barsEnter.append('text').classed('nv-bar-label',true);\n                bars.select('text.nv-bar-label')\n                    .attr('text-anchor', function(d,i) { return getY(d,i) < 0 ? 'start' : 'end' })\n                    .attr('y', x.rangeBand() / (data.length * 2))\n                    .attr('dy', '.32em')\n                    .text(function(d,i) { return getX(d,i) });\n                bars.watchTransition(renderWatch, 'multibarhorizontal: bars')\n                    .select('text.nv-bar-label')\n                    .attr('x', function(d,i) { return getY(d,i) < 0 ? y(0) - y(getY(d,i)) + 4 : -4 });\n            }\n            else {\n                bars.selectAll('text.nv-bar-label').text('');\n            }\n\n            bars\n                .attr('class', function(d,i) { return getY(d,i) < 0 ? 'nv-bar negative' : 'nv-bar positive'})\n\n            if (barColor) {\n                if (!disabled) disabled = data.map(function() { return true });\n                bars\n                    .style('fill', function(d,i,j) { return d3.rgb(barColor(d,i)).darker(  disabled.map(function(d,i) { return i }).filter(function(d,i){ return !disabled[i]  })[j]   ).toString(); })\n                    .style('stroke', function(d,i,j) { return d3.rgb(barColor(d,i)).darker(  disabled.map(function(d,i) { return i }).filter(function(d,i){ return !disabled[i]  })[j]   ).toString(); });\n            }\n\n            if (stacked)\n                bars.watchTransition(renderWatch, 'multibarhorizontal: bars')\n                    .attr('transform', function(d,i) {\n                        return 'translate(' + y(d.y1) + ',' + x(getX(d,i)) + ')'\n                    })\n                    .select('rect')\n                    .attr('width', function(d,i) {\n                        return Math.abs(y(getY(d,i) + d.y0) - y(d.y0)) || 0\n                    })\n                    .attr('height', x.rangeBand() );\n            else\n                bars.watchTransition(renderWatch, 'multibarhorizontal: bars')\n                    .attr('transform', function(d,i) {\n                        //TODO: stacked must be all positive or all negative, not both?\n                        return 'translate(' +\n                            (getY(d,i) < 0 ? y(getY(d,i)) : y(0))\n                            + ',' +\n                            (d.series * x.rangeBand() / data.length\n                                +\n                                x(getX(d,i)) )\n                            + ')'\n                    })\n                    .select('rect')\n                    .attr('height', x.rangeBand() / data.length )\n                    .attr('width', function(d,i) {\n                        return Math.max(Math.abs(y(getY(d,i)) - y(0)),1) || 0\n                    });\n\n            //store old scales for use in transitions on update\n            x0 = x.copy();\n            y0 = y.copy();\n\n        });\n\n        renderWatch.renderEnd('multibarHorizontal immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:   {get: function(){return width;}, set: function(_){width=_;}},\n        height:  {get: function(){return height;}, set: function(_){height=_;}},\n        x:       {get: function(){return getX;}, set: function(_){getX=_;}},\n        y:       {get: function(){return getY;}, set: function(_){getY=_;}},\n        yErr:       {get: function(){return getYerr;}, set: function(_){getYerr=_;}},\n        xScale:  {get: function(){return x;}, set: function(_){x=_;}},\n        yScale:  {get: function(){return y;}, set: function(_){y=_;}},\n        xDomain: {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n        yDomain: {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n        xRange:  {get: function(){return xRange;}, set: function(_){xRange=_;}},\n        yRange:  {get: function(){return yRange;}, set: function(_){yRange=_;}},\n        forceY:  {get: function(){return forceY;}, set: function(_){forceY=_;}},\n        stacked: {get: function(){return stacked;}, set: function(_){stacked=_;}},\n        showValues: {get: function(){return showValues;}, set: function(_){showValues=_;}},\n        // this shows the group name, seems pointless?\n        //showBarLabels:    {get: function(){return showBarLabels;}, set: function(_){showBarLabels=_;}},\n        disabled:     {get: function(){return disabled;}, set: function(_){disabled=_;}},\n        id:           {get: function(){return id;}, set: function(_){id=_;}},\n        valueFormat:  {get: function(){return valueFormat;}, set: function(_){valueFormat=_;}},\n        valuePadding: {get: function(){return valuePadding;}, set: function(_){valuePadding=_;}},\n        groupSpacing: {get: function(){return groupSpacing;}, set: function(_){groupSpacing=_;}},\n        fillOpacity:  {get: function(){return fillOpacity;}, set: function(_){fillOpacity=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }},\n        barColor:  {get: function(){return barColor;}, set: function(_){\n            barColor = _ ? nv.utils.getColor(_) : null;\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n\nnv.models.multiBarHorizontalChart = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var multibar = nv.models.multiBarHorizontal()\n        , xAxis = nv.models.axis()\n        , yAxis = nv.models.axis()\n        , legend = nv.models.legend().height(30)\n        , controls = nv.models.legend().height(30)\n        , tooltip = nv.models.tooltip()\n        ;\n\n    var margin = {top: 30, right: 20, bottom: 50, left: 60}\n        , marginTop = null\n        , width = null\n        , height = null\n        , color = nv.utils.defaultColor()\n        , showControls = true\n        , controlsPosition = 'top'        \n        , controlLabels = {}\n        , showLegend = true\n        , legendPosition = 'top'\n        , showXAxis = true\n        , showYAxis = true\n        , stacked = false\n        , x //can be accessed via chart.xScale()\n        , y //can be accessed via chart.yScale()\n        , state = nv.utils.state()\n        , defaultState = null\n        , noData = null\n        , dispatch = d3.dispatch('stateChange', 'changeState','renderEnd')\n        , controlWidth = function() { return showControls ? 180 : 0 }\n        , duration = 250\n        ;\n\n    state.stacked = false; // DEPRECATED Maintained for backward compatibility\n\n    multibar.stacked(stacked);\n\n    xAxis\n        .orient('left')\n        .tickPadding(5)\n        .showMaxMin(false)\n        .tickFormat(function(d) { return d })\n    ;\n    yAxis\n        .orient('bottom')\n        .tickFormat(d3.format(',.1f'))\n    ;\n\n    tooltip\n        .duration(0)\n        .valueFormatter(function(d, i) {\n            return yAxis.tickFormat()(d, i);\n        })\n        .headerFormatter(function(d, i) {\n            return xAxis.tickFormat()(d, i);\n        });\n\n    controls.updateState(false);\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var stateGetter = function(data) {\n        return function(){\n            return {\n                active: data.map(function(d) { return !d.disabled }),\n                stacked: stacked\n            };\n        }\n    };\n\n    var stateSetter = function(data) {\n        return function(state) {\n            if (state.stacked !== undefined)\n                stacked = state.stacked;\n            if (state.active !== undefined)\n                data.forEach(function(series,i) {\n                    series.disabled = !state.active[i];\n                });\n        }\n    };\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n        renderWatch.reset();\n        renderWatch.models(multibar);\n        if (showXAxis) renderWatch.models(xAxis);\n        if (showYAxis) renderWatch.models(yAxis);\n\n        selection.each(function(data) {\n            var container = d3.select(this),\n                that = this;\n            nv.utils.initSVG(container);\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            chart.update = function() { container.transition().duration(duration).call(chart) };\n            chart.container = this;\n\n            stacked = multibar.stacked();\n\n            state\n                .setter(stateSetter(data), chart.update)\n                .getter(stateGetter(data))\n                .update();\n\n            // DEPRECATED set state.disableddisabled\n            state.disabled = data.map(function(d) { return !!d.disabled });\n\n            if (!defaultState) {\n                var key;\n                defaultState = {};\n                for (key in state) {\n                    if (state[key] instanceof Array)\n                        defaultState[key] = state[key].slice(0);\n                    else\n                        defaultState[key] = state[key];\n                }\n            }\n\n            // Display No Data message if there's nothing to show.\n            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n                nv.utils.noData(chart, container)\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n\n            // Setup Scales\n            x = multibar.xScale();\n            y = multibar.yScale().clamp(true);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-multiBarHorizontalChart').data([data]);\n            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multiBarHorizontalChart').append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-x nv-axis');\n            gEnter.append('g').attr('class', 'nv-y nv-axis')\n                .append('g').attr('class', 'nv-zeroLine')\n                .append('line');\n            gEnter.append('g').attr('class', 'nv-barsWrap');\n            gEnter.append('g').attr('class', 'nv-legendWrap');\n            gEnter.append('g').attr('class', 'nv-controlsWrap');\n\n            // Legend\n            if (!showLegend) {\n                g.select('.nv-legendWrap').selectAll('*').remove();\n            } else {\n                legend.width(availableWidth - controlWidth());\n\n                g.select('.nv-legendWrap')\n                    .datum(data)\n                    .call(legend);\n                if (legendPosition === 'bottom') {\n                     margin.bottom = xAxis.height() + legend.height();\n                     availableHeight = nv.utils.availableHeight(height, container, margin);\n                     g.select('.nv-legendWrap')\n                         .attr('transform', 'translate(' + controlWidth() + ',' + (availableHeight + xAxis.height())  +')');\n                } else if (legendPosition === 'top') {\n\n                    if (!marginTop && legend.height() !== margin.top) {\n                        margin.top = legend.height();\n                        availableHeight = nv.utils.availableHeight(height, container, margin);\n                    }\n\n                    g.select('.nv-legendWrap')\n                        .attr('transform', 'translate(' + controlWidth() + ',' + (-margin.top) +')');\n                }                    \n            }\n\n            // Controls\n            if (!showControls) {\n                 g.select('.nv-controlsWrap').selectAll('*').remove();\n            } else {\n                var controlsData = [\n                    { key: controlLabels.grouped || 'Grouped', disabled: multibar.stacked() },\n                    { key: controlLabels.stacked || 'Stacked', disabled: !multibar.stacked() }\n                ];\n\n                controls.width(controlWidth()).color(['#444', '#444', '#444']);\n\n                if (controlsPosition === 'bottom') {\n                     margin.bottom = xAxis.height() + legend.height();\n                     availableHeight = nv.utils.availableHeight(height, container, margin);\n                    g.select('.nv-controlsWrap')\n                        .datum(controlsData)\n                        .attr('transform', 'translate(0,' + (availableHeight + xAxis.height()) +')')\n                        .call(controls);  \n\n                } else if (controlsPosition === 'top') {\n                    g.select('.nv-controlsWrap')\n                        .datum(controlsData)\n                        .attr('transform', 'translate(0,' + (-margin.top) +')')\n                        .call(controls);                        \n                }\n            }\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            // Main Chart Component(s)\n            multibar\n                .disabled(data.map(function(series) { return series.disabled }))\n                .width(availableWidth)\n                .height(availableHeight)\n                .color(data.map(function(d,i) {\n                    return d.color || color(d, i);\n                }).filter(function(d,i) { return !data[i].disabled }));\n\n            var barsWrap = g.select('.nv-barsWrap')\n                .datum(data.filter(function(d) { return !d.disabled }));\n\n            barsWrap.transition().call(multibar);\n\n            // Setup Axes\n            if (showXAxis) {\n                xAxis\n                    .scale(x)\n                    ._ticks( nv.utils.calcTicksY(availableHeight/24, data) )\n                    .tickSize(-availableWidth, 0);\n\n                g.select('.nv-x.nv-axis').call(xAxis);\n\n                var xTicks = g.select('.nv-x.nv-axis').selectAll('g');\n\n                xTicks\n                    .selectAll('line, text');\n            }\n\n            if (showYAxis) {\n                yAxis\n                    .scale(y)\n                    ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n                    .tickSize( -availableHeight, 0);\n\n                g.select('.nv-y.nv-axis')\n                    .attr('transform', 'translate(0,' + availableHeight + ')');\n                g.select('.nv-y.nv-axis').call(yAxis);\n            }\n\n            // Zero line\n            g.select(\".nv-zeroLine line\")\n                .attr(\"x1\", y(0))\n                .attr(\"x2\", y(0))\n                .attr(\"y1\", 0)\n                .attr(\"y2\", -availableHeight)\n            ;\n\n            //============================================================\n            // Event Handling/Dispatching (in chart's scope)\n            //------------------------------------------------------------\n\n            legend.dispatch.on('stateChange', function(newState) {\n                for (var key in newState)\n                    state[key] = newState[key];\n                dispatch.stateChange(state);\n                chart.update();\n            });\n\n            controls.dispatch.on('legendClick', function(d,i) {\n                if (!d.disabled) return;\n                controlsData = controlsData.map(function(s) {\n                    s.disabled = true;\n                    return s;\n                });\n                d.disabled = false;\n\n                switch (d.key) {\n                    case 'Grouped':\n                    case controlLabels.grouped:\n                        multibar.stacked(false);\n                        break;\n                    case 'Stacked':\n                    case controlLabels.stacked:\n                        multibar.stacked(true);\n                        break;\n                }\n\n                state.stacked = multibar.stacked();\n                dispatch.stateChange(state);\n                stacked = multibar.stacked();\n\n                chart.update();\n            });\n\n            // Update chart from a state object passed to event handler\n            dispatch.on('changeState', function(e) {\n\n                if (typeof e.disabled !== 'undefined') {\n                    data.forEach(function(series,i) {\n                        series.disabled = e.disabled[i];\n                    });\n\n                    state.disabled = e.disabled;\n                }\n\n                if (typeof e.stacked !== 'undefined') {\n                    multibar.stacked(e.stacked);\n                    state.stacked = e.stacked;\n                    stacked = e.stacked;\n                }\n\n                chart.update();\n            });\n        });\n        renderWatch.renderEnd('multibar horizontal chart immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n    multibar.dispatch.on('elementMouseover.tooltip', function(evt) {\n        evt.value = chart.x()(evt.data);\n        evt['series'] = {\n            key: evt.data.key,\n            value: chart.y()(evt.data),\n            color: evt.color\n        };\n        tooltip.data(evt).hidden(false);\n    });\n\n    multibar.dispatch.on('elementMouseout.tooltip', function(evt) {\n        tooltip.hidden(true);\n    });\n\n    multibar.dispatch.on('elementMousemove.tooltip', function(evt) {\n        tooltip();\n    });\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    // expose chart's sub-components\n    chart.dispatch = dispatch;\n    chart.multibar = multibar;\n    chart.legend = legend;\n    chart.controls = controls;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.state = state;\n    chart.tooltip = tooltip;\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n        legendPosition: {get: function(){return legendPosition;}, set: function(_){legendPosition=_;}},\n        controlsPosition: {get: function(){return controlsPosition;}, set: function(_){controlsPosition=_;}},\n        showControls: {get: function(){return showControls;}, set: function(_){showControls=_;}},\n        controlLabels: {get: function(){return controlLabels;}, set: function(_){controlLabels=_;}},\n        showXAxis:      {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n        showYAxis:    {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n        defaultState:    {get: function(){return defaultState;}, set: function(_){defaultState=_;}},\n        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            if (_.top !== undefined) {\n                margin.top = _.top;\n                marginTop = _.top;\n            }\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n            multibar.duration(duration);\n            xAxis.duration(duration);\n            yAxis.duration(duration);\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n            legend.color(color);\n        }},\n        barColor:  {get: function(){return multibar.barColor;}, set: function(_){\n            multibar.barColor(_);\n            legend.color(function(d,i) {return d3.rgb('#ccc').darker(i * 1.5).toString();})\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, multibar);\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\nnv.models.multiChart = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 30, right: 20, bottom: 50, left: 60},\n        marginTop = null,\n        color = nv.utils.defaultColor(),\n        width = null,\n        height = null,\n        showLegend = true,\n        noData = null,\n        yDomain1,\n        yDomain2,\n        getX = function(d) { return d.x },\n        getY = function(d) { return d.y},\n        interpolate = 'linear',\n        useVoronoi = true,\n        interactiveLayer = nv.interactiveGuideline(),\n        useInteractiveGuideline = false,\n        legendRightAxisHint = ' (right axis)',\n        duration = 250\n        ;\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var x = d3.scale.linear(),\n        yScale1 = d3.scale.linear(),\n        yScale2 = d3.scale.linear(),\n\n        lines1 = nv.models.line().yScale(yScale1).duration(duration),\n        lines2 = nv.models.line().yScale(yScale2).duration(duration),\n\n        scatters1 = nv.models.scatter().yScale(yScale1).duration(duration),\n        scatters2 = nv.models.scatter().yScale(yScale2).duration(duration),\n\n        bars1 = nv.models.multiBar().stacked(false).yScale(yScale1).duration(duration),\n        bars2 = nv.models.multiBar().stacked(false).yScale(yScale2).duration(duration),\n\n        stack1 = nv.models.stackedArea().yScale(yScale1).duration(duration),\n        stack2 = nv.models.stackedArea().yScale(yScale2).duration(duration),\n\n        xAxis = nv.models.axis().scale(x).orient('bottom').tickPadding(5).duration(duration),\n        yAxis1 = nv.models.axis().scale(yScale1).orient('left').duration(duration),\n        yAxis2 = nv.models.axis().scale(yScale2).orient('right').duration(duration),\n\n        legend = nv.models.legend().height(30),\n        tooltip = nv.models.tooltip(),\n        dispatch = d3.dispatch();\n\n    var charts = [lines1, lines2, scatters1, scatters2, bars1, bars2, stack1, stack2];\n\n    function chart(selection) {\n        selection.each(function(data) {\n            var container = d3.select(this),\n                that = this;\n            nv.utils.initSVG(container);\n\n            chart.update = function() { container.transition().call(chart); };\n            chart.container = this;\n\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            var dataLines1 = data.filter(function(d) {return d.type == 'line' && d.yAxis == 1});\n            var dataLines2 = data.filter(function(d) {return d.type == 'line' && d.yAxis == 2});\n            var dataScatters1 = data.filter(function(d) {return d.type == 'scatter' && d.yAxis == 1});\n            var dataScatters2 = data.filter(function(d) {return d.type == 'scatter' && d.yAxis == 2});\n            var dataBars1 =  data.filter(function(d) {return d.type == 'bar'  && d.yAxis == 1});\n            var dataBars2 =  data.filter(function(d) {return d.type == 'bar'  && d.yAxis == 2});\n            var dataStack1 = data.filter(function(d) {return d.type == 'area' && d.yAxis == 1});\n            var dataStack2 = data.filter(function(d) {return d.type == 'area' && d.yAxis == 2});\n\n            // Display noData message if there's nothing to show.\n            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n                nv.utils.noData(chart, container);\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n\n            var series1 = data.filter(function(d) {return !d.disabled && d.yAxis == 1})\n                .map(function(d) {\n                    return d.values.map(function(d,i) {\n                        return { x: getX(d), y: getY(d) }\n                    })\n                });\n\n            var series2 = data.filter(function(d) {return !d.disabled && d.yAxis == 2})\n                .map(function(d) {\n                    return d.values.map(function(d,i) {\n                        return { x: getX(d), y: getY(d) }\n                    })\n                });\n\n            x   .domain(d3.extent(d3.merge(series1.concat(series2)), function(d) { return d.x }))\n                .range([0, availableWidth]);\n\n            var wrap = container.selectAll('g.wrap.multiChart').data([data]);\n            var gEnter = wrap.enter().append('g').attr('class', 'wrap nvd3 multiChart').append('g');\n\n            gEnter.append('g').attr('class', 'nv-x nv-axis');\n            gEnter.append('g').attr('class', 'nv-y1 nv-axis');\n            gEnter.append('g').attr('class', 'nv-y2 nv-axis');\n            gEnter.append('g').attr('class', 'stack1Wrap');\n            gEnter.append('g').attr('class', 'stack2Wrap');\n            gEnter.append('g').attr('class', 'bars1Wrap');\n            gEnter.append('g').attr('class', 'bars2Wrap');\n            gEnter.append('g').attr('class', 'scatters1Wrap');\n            gEnter.append('g').attr('class', 'scatters2Wrap');\n            gEnter.append('g').attr('class', 'lines1Wrap');\n            gEnter.append('g').attr('class', 'lines2Wrap');\n            gEnter.append('g').attr('class', 'legendWrap');\n            gEnter.append('g').attr('class', 'nv-interactive');\n\n            var g = wrap.select('g');\n\n            var color_array = data.map(function(d,i) {\n                return data[i].color || color(d, i);\n            });\n\n            // Legend\n            if (!showLegend) {\n                g.select('.legendWrap').selectAll('*').remove();\n            } else {\n                var legendWidth = legend.align() ? availableWidth / 2 : availableWidth;\n                var legendXPosition = legend.align() ? legendWidth : 0;\n\n                legend.width(legendWidth);\n                legend.color(color_array);\n\n                g.select('.legendWrap')\n                    .datum(data.map(function(series) {\n                        series.originalKey = series.originalKey === undefined ? series.key : series.originalKey;\n                        series.key = series.originalKey + (series.yAxis == 1 ? '' : legendRightAxisHint);\n                        return series;\n                    }))\n                    .call(legend);\n\n                if (!marginTop && legend.height() !== margin.top) {\n                    margin.top = legend.height();\n                    availableHeight = nv.utils.availableHeight(height, container, margin);\n                }\n\n                g.select('.legendWrap')\n                    .attr('transform', 'translate(' + legendXPosition + ',' + (-margin.top) +')');\n            }\n\n            lines1\n                .width(availableWidth)\n                .height(availableHeight)\n                .interpolate(interpolate)\n                .color(color_array.filter(function(d,i) { return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'line'}));\n            lines2\n                .width(availableWidth)\n                .height(availableHeight)\n                .interpolate(interpolate)\n                .color(color_array.filter(function(d,i) { return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'line'}));\n            scatters1\n                .width(availableWidth)\n                .height(availableHeight)\n                .color(color_array.filter(function(d,i) { return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'scatter'}));\n            scatters2\n                .width(availableWidth)\n                .height(availableHeight)\n                .color(color_array.filter(function(d,i) { return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'scatter'}));\n            bars1\n                .width(availableWidth)\n                .height(availableHeight)\n                .color(color_array.filter(function(d,i) { return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'bar'}));\n            bars2\n                .width(availableWidth)\n                .height(availableHeight)\n                .color(color_array.filter(function(d,i) { return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'bar'}));\n            stack1\n                .width(availableWidth)\n                .height(availableHeight)\n                .interpolate(interpolate)\n                .color(color_array.filter(function(d,i) { return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'area'}));\n            stack2\n                .width(availableWidth)\n                .height(availableHeight)\n                .interpolate(interpolate)\n                .color(color_array.filter(function(d,i) { return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'area'}));\n\n            g.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            var lines1Wrap = g.select('.lines1Wrap')\n                .datum(dataLines1.filter(function(d){return !d.disabled}));\n            var scatters1Wrap = g.select('.scatters1Wrap')\n                .datum(dataScatters1.filter(function(d){return !d.disabled}));\n            var bars1Wrap = g.select('.bars1Wrap')\n                .datum(dataBars1.filter(function(d){return !d.disabled}));\n            var stack1Wrap = g.select('.stack1Wrap')\n                .datum(dataStack1.filter(function(d){return !d.disabled}));\n            var lines2Wrap = g.select('.lines2Wrap')\n                .datum(dataLines2.filter(function(d){return !d.disabled}));\n            var scatters2Wrap = g.select('.scatters2Wrap')\n                .datum(dataScatters2.filter(function(d){return !d.disabled}));\n            var bars2Wrap = g.select('.bars2Wrap')\n                .datum(dataBars2.filter(function(d){return !d.disabled}));\n            var stack2Wrap = g.select('.stack2Wrap')\n                .datum(dataStack2.filter(function(d){return !d.disabled}));\n\n            var extraValue1BarStacked = [];\n            if (bars1.stacked() && dataBars1.length) {\n                var extraValue1BarStacked = dataBars1.filter(function(d){return !d.disabled}).map(function(a){return a.values});\n                \n                if (extraValue1BarStacked.length > 0)\n                    extraValue1BarStacked = extraValue1BarStacked.reduce(function(a,b){\n                        return a.map(function(aVal,i){return {x: aVal.x, y: aVal.y + b[i].y}})\n                    });\n            }\n            if (dataBars1.length) {\n                extraValue1BarStacked.push({x:0, y:0});\n            }\n            \n            var extraValue2BarStacked = [];\n            if (bars2.stacked() && dataBars2.length) {\n                var extraValue2BarStacked = dataBars2.filter(function(d){return !d.disabled}).map(function(a){return a.values});\n                \n                if (extraValue2BarStacked.length > 0)\n                    extraValue2BarStacked = extraValue2BarStacked.reduce(function(a,b){\n                        return a.map(function(aVal,i){return {x: aVal.x, y: aVal.y + b[i].y}})\n                    });\n            }\n            if (dataBars2.length) {\n                extraValue2BarStacked.push({x:0, y:0});\n            }\n            \n            yScale1 .domain(yDomain1 || d3.extent(d3.merge(series1).concat(extraValue1BarStacked), function(d) { return d.y } ))\n                .range([0, availableHeight]);\n\n            yScale2 .domain(yDomain2 || d3.extent(d3.merge(series2).concat(extraValue2BarStacked), function(d) { return d.y } ))\n                .range([0, availableHeight]);\n\n            lines1.yDomain(yScale1.domain());\n            scatters1.yDomain(yScale1.domain());\n            bars1.yDomain(yScale1.domain());\n            stack1.yDomain(yScale1.domain());\n\n            lines2.yDomain(yScale2.domain());\n            scatters2.yDomain(yScale2.domain());\n            bars2.yDomain(yScale2.domain());\n            stack2.yDomain(yScale2.domain());\n\n            if(dataStack1.length){d3.transition(stack1Wrap).call(stack1);}\n            if(dataStack2.length){d3.transition(stack2Wrap).call(stack2);}\n\n            if(dataBars1.length){d3.transition(bars1Wrap).call(bars1);}\n            if(dataBars2.length){d3.transition(bars2Wrap).call(bars2);}\n\n            if(dataLines1.length){d3.transition(lines1Wrap).call(lines1);}\n            if(dataLines2.length){d3.transition(lines2Wrap).call(lines2);}\n\n            if(dataScatters1.length){d3.transition(scatters1Wrap).call(scatters1);}\n            if(dataScatters2.length){d3.transition(scatters2Wrap).call(scatters2);}\n\n            xAxis\n                ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n                .tickSize(-availableHeight, 0);\n\n            g.select('.nv-x.nv-axis')\n                .attr('transform', 'translate(0,' + availableHeight + ')');\n            d3.transition(g.select('.nv-x.nv-axis'))\n                .call(xAxis);\n\n            yAxis1\n                ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n                .tickSize( -availableWidth, 0);\n\n\n            d3.transition(g.select('.nv-y1.nv-axis'))\n                .call(yAxis1);\n\n            yAxis2\n                ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n                .tickSize( -availableWidth, 0);\n\n            d3.transition(g.select('.nv-y2.nv-axis'))\n                .call(yAxis2);\n\n            g.select('.nv-y1.nv-axis')\n                .classed('nv-disabled', series1.length ? false : true)\n                .attr('transform', 'translate(' + x.range()[0] + ',0)');\n\n            g.select('.nv-y2.nv-axis')\n                .classed('nv-disabled', series2.length ? false : true)\n                .attr('transform', 'translate(' + x.range()[1] + ',0)');\n\n            legend.dispatch.on('stateChange', function(newState) {\n                chart.update();\n            });\n\n            if(useInteractiveGuideline){\n                interactiveLayer\n                    .width(availableWidth)\n                    .height(availableHeight)\n                    .margin({left:margin.left, top:margin.top})\n                    .svgContainer(container)\n                    .xScale(x);\n                wrap.select(\".nv-interactive\").call(interactiveLayer);\n            }\n\n            //============================================================\n            // Event Handling/Dispatching\n            //------------------------------------------------------------\n\n            function mouseover_line(evt) {\n                var yaxis = evt.series.yAxis === 2 ? yAxis2 : yAxis1;\n                evt.value = evt.point.x;\n                evt.series = {\n                    value: evt.point.y,\n                    color: evt.point.color,\n                    key: evt.series.key\n                };\n                tooltip\n                    .duration(0)\n                    .headerFormatter(function(d, i) {\n                    \treturn xAxis.tickFormat()(d, i);\n                    })\n                    .valueFormatter(function(d, i) {\n                        return yaxis.tickFormat()(d, i);\n                    })\n                    .data(evt)\n                    .hidden(false);\n            }\n\n            function mouseover_scatter(evt) {\n                var yaxis = evt.series.yAxis === 2 ? yAxis2 : yAxis1;\n                evt.value = evt.point.x;\n                evt.series = {\n                    value: evt.point.y,\n                    color: evt.point.color,\n                    key: evt.series.key\n                };\n                tooltip\n                    .duration(100)\n                    .headerFormatter(function(d, i) {\n                    \treturn xAxis.tickFormat()(d, i);\n                    })\n                    .valueFormatter(function(d, i) {\n                        return yaxis.tickFormat()(d, i);\n                    })\n                    .data(evt)\n                    .hidden(false);\n            }\n\n            function mouseover_stack(evt) {\n                var yaxis = evt.series.yAxis === 2 ? yAxis2 : yAxis1;\n                evt.point['x'] = stack1.x()(evt.point);\n                evt.point['y'] = stack1.y()(evt.point);\n                tooltip\n                    .duration(0)\n                    .headerFormatter(function(d, i) {\n                    \treturn xAxis.tickFormat()(d, i);\n                    })\n                    .valueFormatter(function(d, i) {\n                        return yaxis.tickFormat()(d, i);\n                    })\n                    .data(evt)\n                    .hidden(false);\n            }\n\n            function mouseover_bar(evt) {\n                var yaxis = evt.series.yAxis === 2 ? yAxis2 : yAxis1;\n\n                evt.value = bars1.x()(evt.data);\n                evt['series'] = {\n                    value: bars1.y()(evt.data),\n                    color: evt.color,\n                    key: evt.data.key\n                };\n                tooltip\n                    .duration(0)\n                    .headerFormatter(function(d, i) {\n                    \treturn xAxis.tickFormat()(d, i);\n                    })\n                    .valueFormatter(function(d, i) {\n                        return yaxis.tickFormat()(d, i);\n                    })\n                    .data(evt)\n                    .hidden(false);\n            }\n\n\n\n            function clearHighlights() {\n              for(var i=0, il=charts.length; i < il; i++){\n                var chart = charts[i];\n                try {\n                  chart.clearHighlights();\n                } catch(e){}\n              }\n            }\n\n            function highlightPoint(serieIndex, pointIndex, b){\n              for(var i=0, il=charts.length; i < il; i++){\n                var chart = charts[i];\n                try {\n                  chart.highlightPoint(serieIndex, pointIndex, b);\n                } catch(e){}\n              }\n            }\n\n            if(useInteractiveGuideline){\n                interactiveLayer.dispatch.on('elementMousemove', function(e) {\n                    clearHighlights();\n                    var singlePoint, pointIndex, pointXLocation, allData = [];\n                    data\n                    .filter(function(series, i) {\n                        series.seriesIndex = i;\n                        return !series.disabled;\n                    })\n                    .forEach(function(series,i) {\n                        var extent = x.domain();\n                        var currentValues = series.values.filter(function(d,i) {\n                            return chart.x()(d,i) >= extent[0] && chart.x()(d,i) <= extent[1];\n                        });\n\n                        pointIndex = nv.interactiveBisect(currentValues, e.pointXValue, chart.x());\n                        var point = currentValues[pointIndex];\n                        var pointYValue = chart.y()(point, pointIndex);\n                        if (pointYValue !== null) {\n                            highlightPoint(i, pointIndex, true);\n                        }\n                        if (point === undefined) return;\n                        if (singlePoint === undefined) singlePoint = point;\n                        if (pointXLocation === undefined) pointXLocation = x(chart.x()(point,pointIndex));\n                        allData.push({\n                            key: series.key,\n                            value: pointYValue,\n                            color: color(series,series.seriesIndex),\n                            data: point,\n                            yAxis: series.yAxis == 2 ? yAxis2 : yAxis1\n                        });\n                    });\n\n                    var defaultValueFormatter = function(d,i) {\n                        var yAxis = allData[i].yAxis;\n                        return d == null ? \"N/A\" : yAxis.tickFormat()(d);\n                    };\n\n                    interactiveLayer.tooltip\n                        .headerFormatter(function(d, i) {\n                            return xAxis.tickFormat()(d, i);\n                        })\n                        .valueFormatter(interactiveLayer.tooltip.valueFormatter() || defaultValueFormatter)\n                        .data({\n                            value: chart.x()( singlePoint,pointIndex ),\n                            index: pointIndex,\n                            series: allData\n                        })();\n\n                    interactiveLayer.renderGuideLine(pointXLocation);\n                });\n\n                interactiveLayer.dispatch.on(\"elementMouseout\",function(e) {\n                    clearHighlights();\n                });\n            } else {\n                lines1.dispatch.on('elementMouseover.tooltip', mouseover_line);\n                lines2.dispatch.on('elementMouseover.tooltip', mouseover_line);\n                lines1.dispatch.on('elementMouseout.tooltip', function(evt) {\n                    tooltip.hidden(true)\n                });\n                lines2.dispatch.on('elementMouseout.tooltip', function(evt) {\n                    tooltip.hidden(true)\n                });\n\n                scatters1.dispatch.on('elementMouseover.tooltip', mouseover_scatter);\n                scatters2.dispatch.on('elementMouseover.tooltip', mouseover_scatter);\n                scatters1.dispatch.on('elementMouseout.tooltip', function(evt) {\n                    tooltip.hidden(true)\n                });\n                scatters2.dispatch.on('elementMouseout.tooltip', function(evt) {\n                    tooltip.hidden(true)\n                });\n\n                stack1.dispatch.on('elementMouseover.tooltip', mouseover_stack);\n                stack2.dispatch.on('elementMouseover.tooltip', mouseover_stack);\n                stack1.dispatch.on('elementMouseout.tooltip', function(evt) {\n                    tooltip.hidden(true)\n                });\n                stack2.dispatch.on('elementMouseout.tooltip', function(evt) {\n                    tooltip.hidden(true)\n                });\n\n                bars1.dispatch.on('elementMouseover.tooltip', mouseover_bar);\n                bars2.dispatch.on('elementMouseover.tooltip', mouseover_bar);\n\n                bars1.dispatch.on('elementMouseout.tooltip', function(evt) {\n                    tooltip.hidden(true);\n                });\n                bars2.dispatch.on('elementMouseout.tooltip', function(evt) {\n                    tooltip.hidden(true);\n                });\n                bars1.dispatch.on('elementMousemove.tooltip', function(evt) {\n                    tooltip();\n                });\n                bars2.dispatch.on('elementMousemove.tooltip', function(evt) {\n                    tooltip();\n                });\n            }\n        });\n\n        return chart;\n    }\n\n    //============================================================\n    // Global getters and setters\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.legend = legend;\n    chart.lines1 = lines1;\n    chart.lines2 = lines2;\n    chart.scatters1 = scatters1;\n    chart.scatters2 = scatters2;\n    chart.bars1 = bars1;\n    chart.bars2 = bars2;\n    chart.stack1 = stack1;\n    chart.stack2 = stack2;\n    chart.xAxis = xAxis;\n    chart.yAxis1 = yAxis1;\n    chart.yAxis2 = yAxis2;\n    chart.tooltip = tooltip;\n    chart.interactiveLayer = interactiveLayer;\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n        yDomain1:      {get: function(){return yDomain1;}, set: function(_){yDomain1=_;}},\n        yDomain2:    {get: function(){return yDomain2;}, set: function(_){yDomain2=_;}},\n        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n        interpolate:    {get: function(){return interpolate;}, set: function(_){interpolate=_;}},\n        legendRightAxisHint:    {get: function(){return legendRightAxisHint;}, set: function(_){legendRightAxisHint=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            if (_.top !== undefined) {\n                margin.top = _.top;\n                marginTop = _.top;\n            }\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }},\n        x: {get: function(){return getX;}, set: function(_){\n            getX = _;\n            lines1.x(_);\n            lines2.x(_);\n            scatters1.x(_);\n            scatters2.x(_);\n            bars1.x(_);\n            bars2.x(_);\n            stack1.x(_);\n            stack2.x(_);\n        }},\n        y: {get: function(){return getY;}, set: function(_){\n            getY = _;\n            lines1.y(_);\n            lines2.y(_);\n            scatters1.y(_);\n            scatters2.y(_);\n            stack1.y(_);\n            stack2.y(_);\n            bars1.y(_);\n            bars2.y(_);\n        }},\n        useVoronoi: {get: function(){return useVoronoi;}, set: function(_){\n            useVoronoi=_;\n            lines1.useVoronoi(_);\n            lines2.useVoronoi(_);\n            stack1.useVoronoi(_);\n            stack2.useVoronoi(_);\n        }},\n\n        useInteractiveGuideline: {get: function(){return useInteractiveGuideline;}, set: function(_){\n            useInteractiveGuideline = _;\n            if (useInteractiveGuideline) {\n                lines1.interactive(false);\n                lines1.useVoronoi(false);\n                lines2.interactive(false);\n                lines2.useVoronoi(false);\n                stack1.interactive(false);\n                stack1.useVoronoi(false);\n                stack2.interactive(false);\n                stack2.useVoronoi(false);\n                scatters1.interactive(false);\n                scatters2.interactive(false);\n            }\n        }},\n\n        duration: {get: function(){return duration;}, set: function(_) {\n            duration = _;\n            [lines1, lines2, stack1, stack2, scatters1, scatters2, xAxis, yAxis1, yAxis2].forEach(function(model){\n              model.duration(duration);\n            });\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n\nnv.models.ohlcBar = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n        , width = null\n        , height = null\n        , id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n        , container = null\n        , x = d3.scale.linear()\n        , y = d3.scale.linear()\n        , getX = function(d) { return d.x }\n        , getY = function(d) { return d.y }\n        , getOpen = function(d) { return d.open }\n        , getClose = function(d) { return d.close }\n        , getHigh = function(d) { return d.high }\n        , getLow = function(d) { return d.low }\n        , forceX = []\n        , forceY = []\n        , padData     = false // If true, adds half a data points width to front and back, for lining up a line chart with a bar chart\n        , clipEdge = true\n        , color = nv.utils.defaultColor()\n        , interactive = false\n        , xDomain\n        , yDomain\n        , xRange\n        , yRange\n        , dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd', 'chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove')\n        ;\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    function chart(selection) {\n        selection.each(function(data) {\n            container = d3.select(this);\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            nv.utils.initSVG(container);\n\n            // ohlc bar width.\n            var w = (availableWidth / data[0].values.length) * .9;\n\n            // Setup Scales\n            x.domain(xDomain || d3.extent(data[0].values.map(getX).concat(forceX) ));\n\n            if (padData)\n                x.range(xRange || [availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5)  / data[0].values.length ]);\n            else\n                x.range(xRange || [5 + w/2, availableWidth - w/2 - 5]);\n\n            y.domain(yDomain || [\n                    d3.min(data[0].values.map(getLow).concat(forceY)),\n                    d3.max(data[0].values.map(getHigh).concat(forceY))\n                ]\n            ).range(yRange || [availableHeight, 0]);\n\n            // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n            if (x.domain()[0] === x.domain()[1])\n                x.domain()[0] ?\n                    x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01])\n                    : x.domain([-1,1]);\n\n            if (y.domain()[0] === y.domain()[1])\n                y.domain()[0] ?\n                    y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01])\n                    : y.domain([-1,1]);\n\n            // Setup containers and skeleton of chart\n            var wrap = d3.select(this).selectAll('g.nv-wrap.nv-ohlcBar').data([data[0].values]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-ohlcBar');\n            var defsEnter = wrapEnter.append('defs');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-ticks');\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            container\n                .on('click', function(d,i) {\n                    dispatch.chartClick({\n                        data: d,\n                        index: i,\n                        pos: d3.event,\n                        id: id\n                    });\n                });\n\n            defsEnter.append('clipPath')\n                .attr('id', 'nv-chart-clip-path-' + id)\n                .append('rect');\n\n            wrap.select('#nv-chart-clip-path-' + id + ' rect')\n                .attr('width', availableWidth)\n                .attr('height', availableHeight);\n\n            g   .attr('clip-path', clipEdge ? 'url(#nv-chart-clip-path-' + id + ')' : '');\n\n            var ticks = wrap.select('.nv-ticks').selectAll('.nv-tick')\n                .data(function(d) { return d });\n            ticks.exit().remove();\n\n            ticks.enter().append('path')\n                .attr('class', function(d,i,j) { return (getOpen(d,i) > getClose(d,i) ? 'nv-tick negative' : 'nv-tick positive') + ' nv-tick-' + j + '-' + i })\n                .attr('d', function(d,i) {\n                    return 'm0,0l0,'\n                        + (y(getOpen(d,i))\n                            - y(getHigh(d,i)))\n                        + 'l'\n                        + (-w/2)\n                        + ',0l'\n                        + (w/2)\n                        + ',0l0,'\n                        + (y(getLow(d,i)) - y(getOpen(d,i)))\n                        + 'l0,'\n                        + (y(getClose(d,i))\n                            - y(getLow(d,i)))\n                        + 'l'\n                        + (w/2)\n                        + ',0l'\n                        + (-w/2)\n                        + ',0z';\n                })\n                .attr('transform', function(d,i) { return 'translate(' + x(getX(d,i)) + ',' + y(getHigh(d,i)) + ')'; })\n                .attr('fill', function(d,i) { return color[0]; })\n                .attr('stroke', function(d,i) { return color[0]; })\n                .attr('x', 0 )\n                .attr('y', function(d,i) {  return y(Math.max(0, getY(d,i))) })\n                .attr('height', function(d,i) { return Math.abs(y(getY(d,i)) - y(0)) });\n\n            // the bar colors are controlled by CSS currently\n            ticks.attr('class', function(d,i,j) {\n                return (getOpen(d,i) > getClose(d,i) ? 'nv-tick negative' : 'nv-tick positive') + ' nv-tick-' + j + '-' + i;\n            });\n\n            d3.transition(ticks)\n                .attr('transform', function(d,i) { return 'translate(' + x(getX(d,i)) + ',' + y(getHigh(d,i)) + ')'; })\n                .attr('d', function(d,i) {\n                    var w = (availableWidth / data[0].values.length) * .9;\n                    return 'm0,0l0,'\n                        + (y(getOpen(d,i))\n                            - y(getHigh(d,i)))\n                        + 'l'\n                        + (-w/2)\n                        + ',0l'\n                        + (w/2)\n                        + ',0l0,'\n                        + (y(getLow(d,i))\n                            - y(getOpen(d,i)))\n                        + 'l0,'\n                        + (y(getClose(d,i))\n                            - y(getLow(d,i)))\n                        + 'l'\n                        + (w/2)\n                        + ',0l'\n                        + (-w/2)\n                        + ',0z';\n                });\n        });\n\n        return chart;\n    }\n\n\n    //Create methods to allow outside functions to highlight a specific bar.\n    chart.highlightPoint = function(pointIndex, isHoverOver) {\n        chart.clearHighlights();\n        container.select(\".nv-ohlcBar .nv-tick-0-\" + pointIndex)\n            .classed(\"hover\", isHoverOver)\n        ;\n    };\n\n    chart.clearHighlights = function() {\n        container.select(\".nv-ohlcBar .nv-tick.hover\")\n            .classed(\"hover\", false)\n        ;\n    };\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:    {get: function(){return width;}, set: function(_){width=_;}},\n        height:   {get: function(){return height;}, set: function(_){height=_;}},\n        xScale:   {get: function(){return x;}, set: function(_){x=_;}},\n        yScale:   {get: function(){return y;}, set: function(_){y=_;}},\n        xDomain:  {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n        yDomain:  {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n        xRange:   {get: function(){return xRange;}, set: function(_){xRange=_;}},\n        yRange:   {get: function(){return yRange;}, set: function(_){yRange=_;}},\n        forceX:   {get: function(){return forceX;}, set: function(_){forceX=_;}},\n        forceY:   {get: function(){return forceY;}, set: function(_){forceY=_;}},\n        padData:  {get: function(){return padData;}, set: function(_){padData=_;}},\n        clipEdge: {get: function(){return clipEdge;}, set: function(_){clipEdge=_;}},\n        id:       {get: function(){return id;}, set: function(_){id=_;}},\n        interactive: {get: function(){return interactive;}, set: function(_){interactive=_;}},\n\n        x:     {get: function(){return getX;}, set: function(_){getX=_;}},\n        y:     {get: function(){return getY;}, set: function(_){getY=_;}},\n        open:  {get: function(){return getOpen();}, set: function(_){getOpen=_;}},\n        close: {get: function(){return getClose();}, set: function(_){getClose=_;}},\n        high:  {get: function(){return getHigh;}, set: function(_){getHigh=_;}},\n        low:   {get: function(){return getLow;}, set: function(_){getLow=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    != undefined ? _.top    : margin.top;\n            margin.right  = _.right  != undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom != undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   != undefined ? _.left   : margin.left;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n    return chart;\n};\n// Code adapted from Jason Davies' \"Parallel Coordinates\"\n// http://bl.ocks.org/jasondavies/1341281\nnv.models.parallelCoordinates = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 30, right: 0, bottom: 10, left: 0}\n        , width = null\n        , height = null\n        , availableWidth = null\n        , availableHeight = null\n        , x = d3.scale.ordinal()\n        , y = {}\n        , undefinedValuesLabel = \"undefined values\"\n        , dimensionData = []\n        , enabledDimensions = []\n        , dimensionNames = []\n        , displayBrush = true\n        , color = nv.utils.defaultColor()\n        , filters = []\n        , active = []\n        , dragging = []\n        , axisWithUndefinedValues = []\n        , lineTension = 1\n        , foreground\n        , background\n        , dimensions\n        , line = d3.svg.line()\n        , axis = d3.svg.axis()\n        , dispatch = d3.dispatch('brushstart', 'brush', 'brushEnd', 'dimensionsOrder', \"stateChange\", 'elementClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd', 'activeChanged')\n        ;\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n        renderWatch.reset();\n        selection.each(function(data) {\n            var container = d3.select(this);\n            availableWidth = nv.utils.availableWidth(width, container, margin);\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            nv.utils.initSVG(container);\n\n           //Convert old data to new format (name, values)\n            if (data[0].values === undefined) {\n                var newData = [];\n                data.forEach(function (d) {\n                        var val = {};\n                        var key = Object.keys(d);\n                        key.forEach(function (k) { if (k !== \"name\") val[k] = d[k] });\n                        newData.push({ key: d.name, values: val });\n                });\n                data = newData;\n            }\n\n            var dataValues = data.map(function (d) {return d.values});\n            if (active.length === 0) {\n                active = data;\n            }; //set all active before first brush call\n            \n            dimensionNames = dimensionData.sort(function (a, b) { return a.currentPosition - b.currentPosition; }).map(function (d) { return d.key });\n            enabledDimensions = dimensionData.filter(function (d) { return !d.disabled; });\n            \n            // Setup Scales\n            x.rangePoints([0, availableWidth], 1).domain(enabledDimensions.map(function (d) { return d.key; }));\n\n            //Set as true if all values on an axis are missing.\n            // Extract the list of dimensions and create a scale for each.\n            var oldDomainMaxValue = {};\n            var displayMissingValuesline = false;\n            var currentTicks = [];\n            \n            dimensionNames.forEach(function(d) {\n                var extent = d3.extent(dataValues, function (p) { return +p[d]; });\n                var min = extent[0];\n                var max = extent[1];\n                var onlyUndefinedValues = false;\n                //If there is no values to display on an axis, set the extent to 0\n                if (isNaN(min) || isNaN(max)) {\n                    onlyUndefinedValues = true;\n                    min = 0;\n                    max = 0;\n                }\n                //Scale axis if there is only one value\n                if (min === max) {\n                    min = min - 1;\n                    max = max + 1;\n                }\n                var f = filters.filter(function (k) { return k.dimension == d; });\n                if (f.length !== 0) {\n                    //If there is only NaN values, keep the existing domain.\n                    if (onlyUndefinedValues) {\n                        min = y[d].domain()[0];\n                        max = y[d].domain()[1];\n                    }\n                        //If the brush extent is > max (< min), keep the extent value.\n                    else if (!f[0].hasOnlyNaN && displayBrush) {\n                        min = min > f[0].extent[0] ? f[0].extent[0] : min;\n                        max = max < f[0].extent[1] ? f[0].extent[1] : max;\n                    }\n                        //If there is NaN values brushed be sure the brush extent is on the domain.\n                    else if (f[0].hasNaN) {\n                        max = max < f[0].extent[1] ? f[0].extent[1] : max;\n                        oldDomainMaxValue[d] = y[d].domain()[1];\n                        displayMissingValuesline = true;\n                    }\n                }\n                //Use 90% of (availableHeight - 12) for the axis range, 12 reprensenting the space necessary to display \"undefined values\" text.\n                //The remaining 10% are used to display the missingValue line.\n                y[d] = d3.scale.linear()\n                    .domain([min, max])\n                    .range([(availableHeight - 12) * 0.9, 0]);\n\n                axisWithUndefinedValues = [];\n                y[d].brush = d3.svg.brush().y(y[d]).on('brushstart', brushstart).on('brush', brush).on('brushend', brushend);\n            });\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-parallelCoordinates').data([data]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-parallelCoordinates');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-parallelCoordinates background');\n            gEnter.append('g').attr('class', 'nv-parallelCoordinates foreground');\n            gEnter.append('g').attr('class', 'nv-parallelCoordinates missingValuesline');\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            line.interpolate('cardinal').tension(lineTension);\n            axis.orient('left');\n            var axisDrag = d3.behavior.drag()\n                        .on('dragstart', dragStart)\n                        .on('drag', dragMove)\n                        .on('dragend', dragEnd);\n\n            //Add missing value line at the bottom of the chart\n            var missingValuesline, missingValueslineText;\n            var step = x.range()[1] - x.range()[0];\n            step = isNaN(step) ? x.range()[0] : step;\n            if (!isNaN(step)) {\n                var lineData = [0 + step / 2, availableHeight - 12, availableWidth - step / 2, availableHeight - 12];\n                missingValuesline = wrap.select('.missingValuesline').selectAll('line').data([lineData]);\n                missingValuesline.enter().append('line');\n                missingValuesline.exit().remove();\n                missingValuesline.attr(\"x1\", function(d) { return d[0]; })\n                        .attr(\"y1\", function(d) { return d[1]; })\n                        .attr(\"x2\", function(d) { return d[2]; })\n                        .attr(\"y2\", function(d) { return d[3]; });\n    \n                //Add the text \"undefined values\" under the missing value line\n                missingValueslineText = wrap.select('.missingValuesline').selectAll('text').data([undefinedValuesLabel]);\n                missingValueslineText.append('text').data([undefinedValuesLabel]);\n                missingValueslineText.enter().append('text');\n                missingValueslineText.exit().remove();\n                missingValueslineText.attr(\"y\", availableHeight)\n                        //To have the text right align with the missingValues line, substract 92 representing the text size.\n                        .attr(\"x\", availableWidth - 92 - step / 2)\n                        .text(function(d) { return d; });\n            }\n            // Add grey background lines for context.\n            background = wrap.select('.background').selectAll('path').data(data);\n            background.enter().append('path');\n            background.exit().remove();\n            background.attr('d', path);\n\n            // Add blue foreground lines for focus.\n            foreground = wrap.select('.foreground').selectAll('path').data(data);\n            foreground.enter().append('path')\n            foreground.exit().remove();\n            foreground.attr('d', path)\n                .style(\"stroke-width\", function (d, i) {\n                if (isNaN(d.strokeWidth)) { d.strokeWidth = 1;} return d.strokeWidth;})\n                .attr('stroke', function (d, i) { return d.color || color(d, i); });\n            foreground.on(\"mouseover\", function (d, i) {\n                d3.select(this).classed('hover', true).style(\"stroke-width\", d.strokeWidth + 2 + \"px\").style(\"stroke-opacity\", 1);\n                dispatch.elementMouseover({\n                    label: d.name,\n                    color: d.color || color(d, i),\n                    values: d.values,\n                    dimensions: enabledDimensions\n                });\n\n            });\n            foreground.on(\"mouseout\", function (d, i) {\n                d3.select(this).classed('hover', false).style(\"stroke-width\", d.strokeWidth + \"px\").style(\"stroke-opacity\", 0.7);\n                dispatch.elementMouseout({\n                    label: d.name,\n                    index: i\n                });\n            });\n            foreground.on('mousemove', function (d, i) {\n                dispatch.elementMousemove();\n            });\n            foreground.on('click', function (d) {\n                dispatch.elementClick({\n                    id: d.id\n                });\n            });\n            // Add a group element for each dimension.\n            dimensions = g.selectAll('.dimension').data(enabledDimensions);\n            var dimensionsEnter = dimensions.enter().append('g').attr('class', 'nv-parallelCoordinates dimension');\n\n            dimensions.attr('transform', function(d) { return 'translate(' + x(d.key) + ',0)'; });\n            dimensionsEnter.append('g').attr('class', 'nv-axis');\n\n            // Add an axis and title.\n            dimensionsEnter.append('text')\n                .attr('class', 'nv-label')\n                .style(\"cursor\", \"move\")\n                .attr('dy', '-1em')\n                .attr('text-anchor', 'middle')\n                .on(\"mouseover\", function(d, i) {\n                    dispatch.elementMouseover({\n                        label: d.tooltip || d.key,\n                        color: d.color \n                    });\n                })\n                .on(\"mouseout\", function(d, i) {\n                    dispatch.elementMouseout({\n                        label: d.tooltip\n                    });\n                })\n                .on('mousemove', function (d, i) {\n                    dispatch.elementMousemove();\n                })\n                .call(axisDrag);\n\n            dimensionsEnter.append('g').attr('class', 'nv-brushBackground');\n            dimensions.exit().remove();\n            dimensions.select('.nv-label').text(function (d) { return d.key });\n\n            // Add and store a brush for each axis.\n            restoreBrush(displayBrush);\n\n            var actives = dimensionNames.filter(function (p) { return !y[p].brush.empty(); }),\n                    extents = actives.map(function (p) { return y[p].brush.extent(); });\n            var formerActive = active.slice(0);\n\n            //Restore active values\n            active = [];\n            foreground.style(\"display\", function (d) {\n                var isActive = actives.every(function (p, i) {\n                    if ((isNaN(d.values[p]) || isNaN(parseFloat(d.values[p]))) && extents[i][0] == y[p].brush.y().domain()[0]) {\n                        return true;\n                    }\n                    return (extents[i][0] <= d.values[p] && d.values[p] <= extents[i][1]) && !isNaN(parseFloat(d.values[p]));\n                });\n                if (isActive)\n                    active.push(d);\n                return !isActive ? \"none\" : null;\n\n            });\n\n            if (filters.length > 0 || !nv.utils.arrayEquals(active, formerActive)) {\n               dispatch.activeChanged(active);\n            }\n\n            // Returns the path for a given data point.\n            function path(d) {\n                return line(enabledDimensions.map(function (p) {\n                    //If value if missing, put the value on the missing value line\n                    if (isNaN(d.values[p.key]) || isNaN(parseFloat(d.values[p.key])) || displayMissingValuesline) {\n                        var domain = y[p.key].domain();\n                        var range = y[p.key].range();\n                        var min = domain[0] - (domain[1] - domain[0]) / 9;\n\n                        //If it's not already the case, allow brush to select undefined values\n                        if (axisWithUndefinedValues.indexOf(p.key) < 0) {\n\n                            var newscale = d3.scale.linear().domain([min, domain[1]]).range([availableHeight - 12, range[1]]);\n                            y[p.key].brush.y(newscale);\n                            axisWithUndefinedValues.push(p.key);\n                        }\n                        if (isNaN(d.values[p.key]) || isNaN(parseFloat(d.values[p.key]))) {\n                            return [x(p.key), y[p.key](min)];\n                        }\n                    }\n\n                    //If parallelCoordinate contain missing values show the missing values line otherwise, hide it.\n                    if (missingValuesline !== undefined) {\n                        if (axisWithUndefinedValues.length > 0 || displayMissingValuesline) {\n                            missingValuesline.style(\"display\", \"inline\");\n                            missingValueslineText.style(\"display\", \"inline\");\n                        } else {\n                            missingValuesline.style(\"display\", \"none\");\n                            missingValueslineText.style(\"display\", \"none\");\n                        }\n                    }\n                    return [x(p.key), y[p.key](d.values[p.key])];\n                }));\n            }\n\n            function restoreBrush(visible) {\n                filters.forEach(function (f) {\n                    //If filter brushed NaN values, keep the brush on the bottom of the axis.\n                    var brushDomain = y[f.dimension].brush.y().domain();\n                    if (f.hasOnlyNaN) {\n                        f.extent[1] = (y[f.dimension].domain()[1] - brushDomain[0]) * (f.extent[1] - f.extent[0]) / (oldDomainMaxValue[f.dimension] - f.extent[0]) + brushDomain[0];\n                    }\n                    if (f.hasNaN) {\n                        f.extent[0] = brushDomain[0];\n                    }\n                    if (visible)\n                        y[f.dimension].brush.extent(f.extent);\n                });\n                \n                dimensions.select('.nv-brushBackground')\n                    .each(function (d) {\n                        d3.select(this).call(y[d.key].brush);\n\n                    })\n                    .selectAll('rect')\n                    .attr('x', -8)\n                    .attr('width', 16);\n                \n                updateTicks();\n            }\n            \n            // Handles a brush event, toggling the display of foreground lines.\n            function brushstart() {\n                //If brush aren't visible, show it before brushing again.\n                if (displayBrush === false) {\n                    displayBrush = true;\n                    restoreBrush(true);\n                }\n            }\n            \n            // Handles a brush event, toggling the display of foreground lines.\n            function brush() {\n                actives = dimensionNames.filter(function (p) { return !y[p].brush.empty(); });\n                extents = actives.map(function(p) { return y[p].brush.extent(); });\n\n                filters = []; //erase current filters\n                actives.forEach(function(d,i) {\n                    filters[i] = {\n                        dimension: d,\n                        extent: extents[i],\n                        hasNaN: false,\n                        hasOnlyNaN: false\n                    }\n                });\n\n                active = []; //erase current active list\n                foreground.style('display', function(d) {\n                    var isActive = actives.every(function(p, i) {\n                        if ((isNaN(d.values[p]) || isNaN(parseFloat(d.values[p]))) && extents[i][0] == y[p].brush.y().domain()[0]) return true;\n                        return (extents[i][0] <= d.values[p] && d.values[p] <= extents[i][1]) && !isNaN(parseFloat(d.values[p]));\n                    });\n                    if (isActive) active.push(d);\n                    return isActive ? null : 'none';\n                });\n                \n                updateTicks();\n                \n                dispatch.brush({\n                    filters: filters,\n                    active: active\n                });\n            }\n            function brushend() {\n                var hasActiveBrush = actives.length > 0 ? true : false;\n                filters.forEach(function (f) {\n                    if (f.extent[0] === y[f.dimension].brush.y().domain()[0] && axisWithUndefinedValues.indexOf(f.dimension) >= 0)\n                        f.hasNaN = true;\n                    if (f.extent[1] < y[f.dimension].domain()[0])\n                        f.hasOnlyNaN = true;\n                });\n                dispatch.brushEnd(active, hasActiveBrush);\n            }           \n            function updateTicks() {\n                dimensions.select('.nv-axis')\n                    .each(function (d, i) {\n                        var f = filters.filter(function (k) { return k.dimension == d.key; });\n                        currentTicks[d.key] = y[d.key].domain();\n                        \n                        //If brush are available, display brush extent\n                        if (f.length != 0 && displayBrush)\n                        {\n                            currentTicks[d.key] = [];\n                            if (f[0].extent[1] > y[d.key].domain()[0]) \n                                currentTicks[d.key] = [f[0].extent[1]];\n                            if (f[0].extent[0] >= y[d.key].domain()[0])\n                                currentTicks[d.key].push(f[0].extent[0]);    \n                        }\n                            \n                        d3.select(this).call(axis.scale(y[d.key]).tickFormat(d.format).tickValues(currentTicks[d.key]));\n                });\n            }\n            function dragStart(d) {\n                dragging[d.key] = this.parentNode.__origin__ = x(d.key);\n                background.attr(\"visibility\", \"hidden\");\n            }\n            function dragMove(d) {\n                dragging[d.key] = Math.min(availableWidth, Math.max(0, this.parentNode.__origin__ += d3.event.x));\n                foreground.attr(\"d\", path);\n                enabledDimensions.sort(function (a, b) { return dimensionPosition(a.key) - dimensionPosition(b.key); });\n                enabledDimensions.forEach(function (d, i) { return d.currentPosition = i; });\n                x.domain(enabledDimensions.map(function (d) { return d.key; }));\n                dimensions.attr(\"transform\", function(d) { return \"translate(\" + dimensionPosition(d.key) + \")\"; });\n            }\n            function dragEnd(d, i) {\n                delete this.parentNode.__origin__;\n                delete dragging[d.key];\n                d3.select(this.parentNode).attr(\"transform\", \"translate(\" + x(d.key) + \")\");\n                foreground\n                  .attr(\"d\", path);\n                background\n                  .attr(\"d\", path)\n                  .attr(\"visibility\", null);\n\n                dispatch.dimensionsOrder(enabledDimensions);\n            }\n            function dimensionPosition(d) {\n                var v = dragging[d];\n                return v == null ? x(d) : v;\n            }\n        });\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:         {get: function(){return width;},           set: function(_){width= _;}},\n        height:        {get: function(){return height;},          set: function(_){height= _;}},\n        dimensionData: { get: function () { return dimensionData; }, set: function (_) { dimensionData = _; } },\n        displayBrush: { get: function () { return displayBrush; }, set: function (_) { displayBrush = _; } },\n        filters: { get: function () { return filters; }, set: function (_) { filters = _; } },\n        active: { get: function () { return active; }, set: function (_) { active = _; } },\n        lineTension:   {get: function(){return lineTension;},     set: function(_){lineTension = _;}},\n        undefinedValuesLabel : {get: function(){return undefinedValuesLabel;}, set: function(_){undefinedValuesLabel=_;}},\n        \n        // deprecated options\n        dimensions: {get: function () { return dimensionData.map(function (d){return d.key}); }, set: function (_) {\n            // deprecated after 1.8.1\n            nv.deprecated('dimensions', 'use dimensionData instead');\n            if (dimensionData.length === 0) {\n                _.forEach(function (k) { dimensionData.push({ key: k }) })\n            } else {\n                _.forEach(function (k, i) { dimensionData[i].key= k })\n            }\n        }},\n        dimensionNames: {get: function () { return dimensionData.map(function (d){return d.key}); }, set: function (_) {\n            // deprecated after 1.8.1\n            nv.deprecated('dimensionNames', 'use dimensionData instead');\n            dimensionNames = [];\n            if (dimensionData.length === 0) {\n                _.forEach(function (k) { dimensionData.push({ key: k }) })\n            } else {\n                _.forEach(function (k, i) { dimensionData[i].key = k })\n            }\n \n        }},\n        dimensionFormats: {get: function () { return dimensionData.map(function (d) { return d.format }); }, set: function (_) {\n            // deprecated after 1.8.1\n            nv.deprecated('dimensionFormats', 'use dimensionData instead');\n            if (dimensionData.length === 0) {\n                _.forEach(function (f) { dimensionData.push({ format: f }) })\n            } else {\n                _.forEach(function (f, i) { dimensionData[i].format = f })\n            }\n\n        }},\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    =  _.top    !== undefined ? _.top    : margin.top;\n            margin.right  =  _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom =  _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   =  _.left   !== undefined ? _.left   : margin.left;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }}\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n};\nnv.models.parallelCoordinatesChart = function () {\n        \"use strict\";\n        //============================================================\n        // Public Variables with Default Settings\n        //------------------------------------------------------------\n\n        var parallelCoordinates = nv.models.parallelCoordinates()\n        var legend = nv.models.legend()\n        var tooltip = nv.models.tooltip();\n        var dimensionTooltip = nv.models.tooltip();\n\n        var margin = { top: 0, right: 0, bottom: 0, left: 0 }\n        , marginTop = null\n        , width = null\n        , height = null\n        , showLegend = true\n        , color = nv.utils.defaultColor()\n        , state = nv.utils.state()\n        , dimensionData = []\n        , displayBrush = true\n        , defaultState = null\n        , noData = null\n        , nanValue = \"undefined\"\n        , dispatch = d3.dispatch('dimensionsOrder', 'brushEnd', 'stateChange', 'changeState', 'renderEnd')\n        , controlWidth = function () { return showControls ? 180 : 0 }\n        ;\n\n\t    //============================================================\n\n\t\t//============================================================\n        // Private Variables\n        //------------------------------------------------------------\n\n        var renderWatch = nv.utils.renderWatch(dispatch);\n\n        var stateGetter = function(data) {\n            return function() {\n                return {\n                    active: data.map(function(d) { return !d.disabled })\n                };\n            }\n        };\n\n        var stateSetter = function(data) {\n            return function(state) {\n                if(state.active !== undefined) {\n                    data.forEach(function(series, i) {\n                        series.disabled = !state.active[i];\n                    });\n                }\n            }\n        };\n\n        tooltip.contentGenerator(function(data) {\n            var str = '<table><thead><tr><td class=\"legend-color-guide\"><div style=\"background-color:' + data.color + '\"></div></td><td><strong>' + data.key + '</strong></td></tr></thead>';\n            if(data.series.length !== 0)\n            {\n                str = str + '<tbody><tr><td height =\"10px\"></td></tr>';\n                data.series.forEach(function(d){\n                    str = str + '<tr><td class=\"legend-color-guide\"><div style=\"background-color:' + d.color + '\"></div></td><td class=\"key\">' + d.key + '</td><td class=\"value\">' + d.value + '</td></tr>';\n                });\n                str = str + '</tbody>';\n            }\n            str = str + '</table>';\n            return str;\n        });\n\n        //============================================================\n        // Chart function\n        //------------------------------------------------------------\n\n        function chart(selection) {\n            renderWatch.reset();\n            renderWatch.models(parallelCoordinates);\n\n            selection.each(function(data) {\n                var container = d3.select(this);\n                nv.utils.initSVG(container);\n\n                var that = this;\n\n                var availableWidth = nv.utils.availableWidth(width, container, margin),\n                    availableHeight = nv.utils.availableHeight(height, container, margin);\n\n                chart.update = function() { container.call(chart); };\n                chart.container = this;\n\n                state.setter(stateSetter(dimensionData), chart.update)\n                    .getter(stateGetter(dimensionData))\n                    .update();\n\n                //set state.disabled\n                state.disabled = dimensionData.map(function (d) { return !!d.disabled });\n\n                //Keep dimensions position in memory\n                dimensionData = dimensionData.map(function (d) {d.disabled = !!d.disabled; return d});\n                dimensionData.forEach(function (d, i) {\n                    d.originalPosition = isNaN(d.originalPosition) ? i : d.originalPosition;\n                    d.currentPosition = isNaN(d.currentPosition) ? i : d.currentPosition;\n                });\n\n               if (!defaultState) {\n                    var key;\n                    defaultState = {};\n                    for(key in state) {\n                        if(state[key] instanceof Array)\n                            defaultState[key] = state[key].slice(0);\n                        else\n                            defaultState[key] = state[key];\n                    }\n                }\n\n                // Display No Data message if there's nothing to show.\n                if(!data || !data.length) {\n                    nv.utils.noData(chart, container);\n                    return chart;\n                } else {\n                    container.selectAll('.nv-noData').remove();\n                }\n\n                //------------------------------------------------------------\n                // Setup containers and skeleton of chart\n\n                var wrap = container.selectAll('g.nv-wrap.nv-parallelCoordinatesChart').data([data]);\n                var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-parallelCoordinatesChart').append('g');\n\n                var g = wrap.select('g');\n\n                gEnter.append('g').attr('class', 'nv-parallelCoordinatesWrap');\n                gEnter.append('g').attr('class', 'nv-legendWrap');\n\n                g.select(\"rect\")\n                    .attr(\"width\", availableWidth)\n                    .attr(\"height\", (availableHeight > 0) ? availableHeight : 0);\n\n                // Legend\n                if (!showLegend) {\n                    g.select('.nv-legendWrap').selectAll('*').remove();\n                } else {\n                    legend.width(availableWidth)\n                        .color(function (d) { return \"rgb(188,190,192)\"; });\n\n                    g.select('.nv-legendWrap')\n                        .datum(dimensionData.sort(function (a, b) { return a.originalPosition - b.originalPosition; }))\n                        .call(legend);\n\n                    if (!marginTop && legend.height() !== margin.top) {\n                        margin.top = legend.height();\n                        availableHeight = nv.utils.availableHeight(height, container, margin);\n                    }\n                    wrap.select('.nv-legendWrap')\n                       .attr('transform', 'translate( 0 ,' + (-margin.top) + ')');\n                }\n                wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n                // Main Chart Component(s)\n                parallelCoordinates\n                    .width(availableWidth)\n                    .height(availableHeight)\n                    .dimensionData(dimensionData)\n                    .displayBrush(displayBrush);\n\n\t\t        var parallelCoordinatesWrap = g.select('.nv-parallelCoordinatesWrap ')\n                  .datum(data);\n\n\t\t        parallelCoordinatesWrap.transition().call(parallelCoordinates);\n\n\t\t\t\t//============================================================\n                // Event Handling/Dispatching (in chart's scope)\n                //------------------------------------------------------------\n                //Display reset brush button\n\t\t        parallelCoordinates.dispatch.on('brushEnd', function (active, hasActiveBrush) {\n\t\t            if (hasActiveBrush) {\n\t\t                displayBrush = true;\n\t\t                dispatch.brushEnd(active);\n\t\t            } else {\n\n\t\t                displayBrush = false;\n\t\t            }\n\t\t        });\n\n\t\t        legend.dispatch.on('stateChange', function(newState) {\n\t\t            for(var key in newState) {\n\t\t                state[key] = newState[key];\n\t\t            }\n\t\t            dispatch.stateChange(state);\n\t\t            chart.update();\n\t\t        });\n\n                //Update dimensions order and display reset sorting button\n\t\t        parallelCoordinates.dispatch.on('dimensionsOrder', function (e) {\n\t\t            dimensionData.sort(function (a, b) { return a.currentPosition - b.currentPosition; });\n\t\t            var isSorted = false;\n\t\t            dimensionData.forEach(function (d, i) {\n\t\t                d.currentPosition = i;\n\t\t                if (d.currentPosition !== d.originalPosition)\n\t\t                    isSorted = true;\n\t\t            });\n\t\t            dispatch.dimensionsOrder(dimensionData, isSorted);\n\t\t        });\n\n\t\t\t\t// Update chart from a state object passed to event handler\n                dispatch.on('changeState', function (e) {\n\n                    if (typeof e.disabled !== 'undefined') {\n                        dimensionData.forEach(function (series, i) {\n                            series.disabled = e.disabled[i];\n                        });\n                        state.disabled = e.disabled;\n                    }\n                    chart.update();\n                });\n            });\n\n            renderWatch.renderEnd('parraleleCoordinateChart immediate');\n            return chart;\n        }\n\n\t\t//============================================================\n        // Event Handling/Dispatching (out of chart's scope)\n        //------------------------------------------------------------\n\n        parallelCoordinates.dispatch.on('elementMouseover.tooltip', function (evt) {\n            var tp = {\n                key: evt.label,\n                color: evt.color,\n                series: []\n             }\n            if(evt.values){\n                Object.keys(evt.values).forEach(function (d) {\n                    var dim = evt.dimensions.filter(function (dd) {return dd.key === d;})[0];\n                    if(dim){\n                        var v;\n                        if (isNaN(evt.values[d]) || isNaN(parseFloat(evt.values[d]))) {\n                            v = nanValue;\n                        } else {\n                            v = dim.format(evt.values[d]);\n                        }\n                        tp.series.push({ idx: dim.currentPosition, key: d, value: v, color: dim.color });\n                    }\n                });\n                tp.series.sort(function(a,b) {return a.idx - b.idx});\n             }\n            tooltip.data(tp).hidden(false);\n        });\n\n        parallelCoordinates.dispatch.on('elementMouseout.tooltip', function(evt) {\n            tooltip.hidden(true)\n        });\n\n        parallelCoordinates.dispatch.on('elementMousemove.tooltip', function () {\n            tooltip();\n        });\n\t\t //============================================================\n        // Expose Public Variables\n        //------------------------------------------------------------\n\n\t\t// expose chart's sub-components\n        chart.dispatch = dispatch;\n        chart.parallelCoordinates = parallelCoordinates;\n        chart.legend = legend;\n        chart.tooltip = tooltip;\n        chart.options = nv.utils.optionsFunc.bind(chart);\n\n        chart._options = Object.create({}, {\n            // simple options, just get/set the necessary values\n            width: { get: function () { return width; }, set: function (_) { width = _; } },\n            height: { get: function () { return height; }, set: function (_) { height = _; } },\n            showLegend: { get: function () { return showLegend; }, set: function (_) { showLegend = _; } },\n            defaultState: { get: function () { return defaultState; }, set: function (_) { defaultState = _; } },\n            dimensionData: { get: function () { return dimensionData; }, set: function (_) { dimensionData = _; } },\n            displayBrush: { get: function () { return displayBrush; }, set: function (_) { displayBrush = _; } },\n            noData: { get: function () { return noData; }, set: function (_) { noData = _; } },\n            nanValue: { get: function () { return nanValue; }, set: function (_) { nanValue = _; } },\n\n            // options that require extra logic in the setter\n            margin: {\n                get: function () { return margin; },\n                set: function (_) {\n                    if (_.top !== undefined) {\n                        margin.top = _.top;\n                        marginTop = _.top;\n                    }\n                    margin.right = _.right !== undefined ? _.right : margin.right;\n                    margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n                    margin.left = _.left !== undefined ? _.left : margin.left;\n                }\n            },\n            color: {get: function(){return color;}, set: function(_){\n                    color = nv.utils.getColor(_);\n                    legend.color(color);\n                    parallelCoordinates.color(color);\n                }}\n        });\n\n        nv.utils.inheritOptions(chart, parallelCoordinates);\n        nv.utils.initOptions(chart);\n\n        return chart;\n    };\nnv.models.pie = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n        , width = 500\n        , height = 500\n        , getX = function(d) { return d.x }\n        , getY = function(d) { return d.y }\n        , id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n        , container = null\n        , color = nv.utils.defaultColor()\n        , valueFormat = d3.format(',.2f')\n        , showLabels = true\n        , labelsOutside = false\n        , labelType = \"key\"\n        , labelThreshold = .02 //if slice percentage is under this, don't show label\n        , hideOverlapLabels = false //Hide labels that don't fit in slice\n        , donut = false\n        , title = false\n        , growOnHover = true\n        , titleOffset = 0\n        , labelSunbeamLayout = false\n        , startAngle = false\n        , padAngle = false\n        , endAngle = false\n        , cornerRadius = 0\n        , donutRatio = 0.5\n        , duration = 250\n        , arcsRadius = []\n        , dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd')\n        ;\n\n    var arcs = [];\n    var arcsOver = [];\n\n    //============================================================\n    // chart function\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n        renderWatch.reset();\n        selection.each(function(data) {\n            var availableWidth = width - margin.left - margin.right\n                , availableHeight = height - margin.top - margin.bottom\n                , radius = Math.min(availableWidth, availableHeight) / 2\n                , arcsRadiusOuter = []\n                , arcsRadiusInner = []\n                ;\n\n            container = d3.select(this)\n            if (arcsRadius.length === 0) {\n                var outer = radius - radius / 10;\n                var inner = donutRatio * radius;\n                for (var i = 0; i < data[0].length; i++) {\n                    arcsRadiusOuter.push(outer);\n                    arcsRadiusInner.push(inner);\n                }\n            } else {\n                if(growOnHover){\n                    arcsRadiusOuter = arcsRadius.map(function (d) { return (d.outer - d.outer / 10) * radius; });\n                    arcsRadiusInner = arcsRadius.map(function (d) { return (d.inner - d.inner / 10) * radius; });\n                    donutRatio = d3.min(arcsRadius.map(function (d) { return (d.inner - d.inner / 10); }));\n                } else {\n                    arcsRadiusOuter = arcsRadius.map(function (d) { return d.outer * radius; });\n                    arcsRadiusInner = arcsRadius.map(function (d) { return d.inner * radius; });\n                    donutRatio = d3.min(arcsRadius.map(function (d) { return d.inner; }));\n                }\n            }\n            nv.utils.initSVG(container);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('.nv-wrap.nv-pie').data(data);\n            var wrapEnter = wrap.enter().append('g').attr('class','nvd3 nv-wrap nv-pie nv-chart-' + id);\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n            var g_pie = gEnter.append('g').attr('class', 'nv-pie');\n            gEnter.append('g').attr('class', 'nv-pieLabels');\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n            g.select('.nv-pie').attr('transform', 'translate(' + availableWidth / 2 + ',' + availableHeight / 2 + ')');\n            g.select('.nv-pieLabels').attr('transform', 'translate(' + availableWidth / 2 + ',' + availableHeight / 2 + ')');\n\n            //\n            container.on('click', function(d,i) {\n                dispatch.chartClick({\n                    data: d,\n                    index: i,\n                    pos: d3.event,\n                    id: id\n                });\n            });\n\n            arcs = [];\n            arcsOver = [];\n            for (var i = 0; i < data[0].length; i++) {\n\n                var arc = d3.svg.arc().outerRadius(arcsRadiusOuter[i]);\n                var arcOver = d3.svg.arc().outerRadius(arcsRadiusOuter[i] + 5);\n\n                if (startAngle !== false) {\n                    arc.startAngle(startAngle);\n                    arcOver.startAngle(startAngle);\n                }\n                if (endAngle !== false) {\n                    arc.endAngle(endAngle);\n                    arcOver.endAngle(endAngle);\n                }\n                if (donut) {\n                    arc.innerRadius(arcsRadiusInner[i]);\n                    arcOver.innerRadius(arcsRadiusInner[i]);\n                }\n\n                if (arc.cornerRadius && cornerRadius) {\n                    arc.cornerRadius(cornerRadius);\n                    arcOver.cornerRadius(cornerRadius);\n                }\n\n                arcs.push(arc);\n                arcsOver.push(arcOver);\n            }\n\n            // Setup the Pie chart and choose the data element\n            var pie = d3.layout.pie()\n                .sort(null)\n                .value(function(d) { return d.disabled ? 0 : getY(d) });\n\n            // padAngle added in d3 3.5\n            if (pie.padAngle && padAngle) {\n                pie.padAngle(padAngle);\n            }\n\n            // if title is specified and donut, put it in the middle\n            if (donut && title) {\n                g_pie.append(\"text\").attr('class', 'nv-pie-title');\n\n                wrap.select('.nv-pie-title')\n                    .style(\"text-anchor\", \"middle\")\n                    .text(function (d) {\n                        return title;\n                    })\n                    .style(\"font-size\", (Math.min(availableWidth, availableHeight)) * donutRatio * 2 / (title.length + 2) + \"px\")\n                    .attr(\"dy\", \"0.35em\") // trick to vertically center text\n                    .attr('transform', function(d, i) {\n                        return 'translate(0, '+ titleOffset + ')';\n                    });\n            }\n\n            var slices = wrap.select('.nv-pie').selectAll('.nv-slice').data(pie);\n            var pieLabels = wrap.select('.nv-pieLabels').selectAll('.nv-label').data(pie);\n\n            slices.exit().remove();\n            pieLabels.exit().remove();\n\n            var ae = slices.enter().append('g');\n            ae.attr('class', 'nv-slice');\n            ae.on('mouseover', function(d, i) {\n                d3.select(this).classed('hover', true);\n                if (growOnHover) {\n                    d3.select(this).select(\"path\").transition()\n                        .duration(70)\n                        .attr(\"d\", arcsOver[i]);\n                }\n                dispatch.elementMouseover({\n                    data: d.data,\n                    index: i,\n                    color: d3.select(this).style(\"fill\"),\n                    percent: (d.endAngle - d.startAngle) / (2 * Math.PI)\n                });\n            });\n            ae.on('mouseout', function(d, i) {\n                d3.select(this).classed('hover', false);\n                if (growOnHover) {\n                    d3.select(this).select(\"path\").transition()\n                        .duration(50)\n                        .attr(\"d\", arcs[i]);\n                }\n                dispatch.elementMouseout({data: d.data, index: i});\n            });\n            ae.on('mousemove', function(d, i) {\n                dispatch.elementMousemove({data: d.data, index: i});\n            });\n            ae.on('click', function(d, i) {\n                var element = this;\n                dispatch.elementClick({\n                    data: d.data,\n                    index: i,\n                    color: d3.select(this).style(\"fill\"),\n                    event: d3.event,\n                    element: element\n                });\n            });\n            ae.on('dblclick', function(d, i) {\n                dispatch.elementDblClick({\n                    data: d.data,\n                    index: i,\n                    color: d3.select(this).style(\"fill\")\n                });\n            });\n\n            slices.attr('fill', function(d,i) { return color(d.data, i); });\n            slices.attr('stroke', function(d,i) { return color(d.data, i); });\n\n            var paths = ae.append('path').each(function(d) {\n                this._current = d;\n            });\n\n            slices.select('path')\n                .transition()\n                .duration(duration)\n                .attr('d', function (d, i) { return arcs[i](d); })\n                .attrTween('d', arcTween);\n\n            if (showLabels) {\n                // This does the normal label\n                var labelsArc = [];\n                for (var i = 0; i < data[0].length; i++) {\n                    labelsArc.push(arcs[i]);\n\n                    if (labelsOutside) {\n                        if (donut) {\n                            labelsArc[i] = d3.svg.arc().outerRadius(arcs[i].outerRadius());\n                            if (startAngle !== false) labelsArc[i].startAngle(startAngle);\n                            if (endAngle !== false) labelsArc[i].endAngle(endAngle);\n                        }\n                    } else if (!donut) {\n                            labelsArc[i].innerRadius(0);\n                    }\n                }\n\n                pieLabels.enter().append(\"g\").classed(\"nv-label\",true).each(function(d,i) {\n                    var group = d3.select(this);\n\n                    group.attr('transform', function (d, i) {\n                        if (labelSunbeamLayout) {\n                            d.outerRadius = arcsRadiusOuter[i] + 10; // Set Outer Coordinate\n                            d.innerRadius = arcsRadiusOuter[i] + 15; // Set Inner Coordinate\n                            var rotateAngle = (d.startAngle + d.endAngle) / 2 * (180 / Math.PI);\n                            if ((d.startAngle + d.endAngle) / 2 < Math.PI) {\n                                rotateAngle -= 90;\n                            } else {\n                                rotateAngle += 90;\n                            }\n                            return 'translate(' + labelsArc[i].centroid(d) + ') rotate(' + rotateAngle + ')';\n                        } else {\n                            d.outerRadius = radius + 10; // Set Outer Coordinate\n                            d.innerRadius = radius + 15; // Set Inner Coordinate\n                            return 'translate(' + labelsArc[i].centroid(d) + ')'\n                        }\n                    });\n\n                    group.append('rect')\n                        .style('stroke', '#fff')\n                        .style('fill', '#fff')\n                        .attr(\"rx\", 3)\n                        .attr(\"ry\", 3);\n\n                    group.append('text')\n                        .style('text-anchor', labelSunbeamLayout ? ((d.startAngle + d.endAngle) / 2 < Math.PI ? 'start' : 'end') : 'middle') //center the text on it's origin or begin/end if orthogonal aligned\n                        .style('fill', '#000')\n                });\n\n                var labelLocationHash = {};\n                var avgHeight = 14;\n                var avgWidth = 140;\n                var createHashKey = function(coordinates) {\n                    return Math.floor(coordinates[0]/avgWidth) * avgWidth + ',' + Math.floor(coordinates[1]/avgHeight) * avgHeight;\n                };\n                var getSlicePercentage = function(d) {\n                    return (d.endAngle - d.startAngle) / (2 * Math.PI);\n                };\n\n                pieLabels.watchTransition(renderWatch, 'pie labels').attr('transform', function (d, i) {\n                    if (labelSunbeamLayout) {\n                        d.outerRadius = arcsRadiusOuter[i] + 10; // Set Outer Coordinate\n                        d.innerRadius = arcsRadiusOuter[i] + 15; // Set Inner Coordinate\n                        var rotateAngle = (d.startAngle + d.endAngle) / 2 * (180 / Math.PI);\n                        if ((d.startAngle + d.endAngle) / 2 < Math.PI) {\n                            rotateAngle -= 90;\n                        } else {\n                            rotateAngle += 90;\n                        }\n                        return 'translate(' + labelsArc[i].centroid(d) + ') rotate(' + rotateAngle + ')';\n                    } else {\n                        d.outerRadius = radius + 10; // Set Outer Coordinate\n                        d.innerRadius = radius + 15; // Set Inner Coordinate\n\n                        /*\n                        Overlapping pie labels are not good. What this attempts to do is, prevent overlapping.\n                        Each label location is hashed, and if a hash collision occurs, we assume an overlap.\n                        Adjust the label's y-position to remove the overlap.\n                        */\n                        var center = labelsArc[i].centroid(d);\n                        var percent = getSlicePercentage(d);\n                        if (d.value && percent >= labelThreshold) {\n                            var hashKey = createHashKey(center);\n                            if (labelLocationHash[hashKey]) {\n                                center[1] -= avgHeight;\n                            }\n                            labelLocationHash[createHashKey(center)] = true;\n                        }\n                        return 'translate(' + center + ')'\n                    }\n                });\n\n                pieLabels.select(\".nv-label text\")\n                    .style('text-anchor', function(d,i) {\n                        //center the text on it's origin or begin/end if orthogonal aligned\n                        return labelSunbeamLayout ? ((d.startAngle + d.endAngle) / 2 < Math.PI ? 'start' : 'end') : 'middle';\n                    })\n                    .text(function(d, i) {\n                        var percent = getSlicePercentage(d);\n                        var label = '';\n                        if (!d.value || percent < labelThreshold) return '';\n\n                        if(typeof labelType === 'function') {\n                            label = labelType(d, i, {\n                                'key': getX(d.data),\n                                'value': getY(d.data),\n                                'percent': valueFormat(percent)\n                            });\n                        } else {\n                            switch (labelType) {\n                                case 'key':\n                                    label = getX(d.data);\n                                    break;\n                                case 'value':\n                                    label = valueFormat(getY(d.data));\n                                    break;\n                                case 'percent':\n                                    label = d3.format('%')(percent);\n                                    break;\n                            }\n                        }\n                        return label;\n                    })\n                ;\n\n                if (hideOverlapLabels) {\n                    pieLabels\n                        .each(function (d, i) {\n                            if (!this.getBBox) return;\n                            var bb = this.getBBox(),\n                            center = labelsArc[i].centroid(d);\n                            var topLeft = {\n                              x : center[0] + bb.x,\n                              y : center[1] + bb.y\n                            };\n\n                            var topRight = {\n                              x : topLeft.x + bb.width,\n                              y : topLeft.y\n                            };\n\n                            var bottomLeft = {\n                              x : topLeft.x,\n                              y : topLeft.y + bb.height\n                            };\n\n                            var bottomRight = {\n                              x : topLeft.x + bb.width,\n                              y : topLeft.y + bb.height\n                            };\n\n                            d.visible = nv.utils.pointIsInArc(topLeft, d, arc) &&\n                            nv.utils.pointIsInArc(topRight, d, arc) &&\n                            nv.utils.pointIsInArc(bottomLeft, d, arc) &&\n                            nv.utils.pointIsInArc(bottomRight, d, arc);\n                        })\n                        .style('display', function (d) {\n                            return d.visible ? null : 'none';\n                        })\n                    ;\n                }\n\n            }\n\n\n            // Computes the angle of an arc, converting from radians to degrees.\n            function angle(d) {\n                var a = (d.startAngle + d.endAngle) * 90 / Math.PI - 90;\n                return a > 90 ? a - 180 : a;\n            }\n\n            function arcTween(a, idx) {\n                a.endAngle = isNaN(a.endAngle) ? 0 : a.endAngle;\n                a.startAngle = isNaN(a.startAngle) ? 0 : a.startAngle;\n                if (!donut) a.innerRadius = 0;\n                var i = d3.interpolate(this._current, a);\n                this._current = i(0);\n                return function (t) {\n                    return arcs[idx](i(t));\n                };\n            }\n        });\n\n        renderWatch.renderEnd('pie immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        arcsRadius: { get: function () { return arcsRadius; }, set: function (_) { arcsRadius = _; } },\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        showLabels: {get: function(){return showLabels;}, set: function(_){showLabels=_;}},\n        title:      {get: function(){return title;}, set: function(_){title=_;}},\n        titleOffset:    {get: function(){return titleOffset;}, set: function(_){titleOffset=_;}},\n        labelThreshold: {get: function(){return labelThreshold;}, set: function(_){labelThreshold=_;}},\n        hideOverlapLabels: {get: function(){return hideOverlapLabels;}, set: function(_){hideOverlapLabels=_;}},\n        valueFormat:    {get: function(){return valueFormat;}, set: function(_){valueFormat=_;}},\n        x:          {get: function(){return getX;}, set: function(_){getX=_;}},\n        id:         {get: function(){return id;}, set: function(_){id=_;}},\n        endAngle:   {get: function(){return endAngle;}, set: function(_){endAngle=_;}},\n        startAngle: {get: function(){return startAngle;}, set: function(_){startAngle=_;}},\n        padAngle:   {get: function(){return padAngle;}, set: function(_){padAngle=_;}},\n        cornerRadius: {get: function(){return cornerRadius;}, set: function(_){cornerRadius=_;}},\n        donutRatio:   {get: function(){return donutRatio;}, set: function(_){donutRatio=_;}},\n        labelsOutside: {get: function(){return labelsOutside;}, set: function(_){labelsOutside=_;}},\n        labelSunbeamLayout: {get: function(){return labelSunbeamLayout;}, set: function(_){labelSunbeamLayout=_;}},\n        donut:              {get: function(){return donut;}, set: function(_){donut=_;}},\n        growOnHover:        {get: function(){return growOnHover;}, set: function(_){growOnHover=_;}},\n\n        // depreciated after 1.7.1\n        pieLabelsOutside: {get: function(){return labelsOutside;}, set: function(_){\n            labelsOutside=_;\n            nv.deprecated('pieLabelsOutside', 'use labelsOutside instead');\n        }},\n        // depreciated after 1.7.1\n        donutLabelsOutside: {get: function(){return labelsOutside;}, set: function(_){\n            labelsOutside=_;\n            nv.deprecated('donutLabelsOutside', 'use labelsOutside instead');\n        }},\n        // deprecated after 1.7.1\n        labelFormat: {get: function(){ return valueFormat;}, set: function(_) {\n            valueFormat=_;\n            nv.deprecated('labelFormat','use valueFormat instead');\n        }},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = typeof _.top    != 'undefined' ? _.top    : margin.top;\n            margin.right  = typeof _.right  != 'undefined' ? _.right  : margin.right;\n            margin.bottom = typeof _.bottom != 'undefined' ? _.bottom : margin.bottom;\n            margin.left   = typeof _.left   != 'undefined' ? _.left   : margin.left;\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n        }},\n        y: {get: function(){return getY;}, set: function(_){\n            getY=d3.functor(_);\n        }},\n        color: {get: function(){return color;}, set: function(_){\n            color=nv.utils.getColor(_);\n        }},\n        labelType:          {get: function(){return labelType;}, set: function(_){\n            labelType= _ || 'key';\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n    return chart;\n};\nnv.models.pieChart = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var pie = nv.models.pie();\n    var legend = nv.models.legend();\n    var tooltip = nv.models.tooltip();\n\n    var margin = {top: 30, right: 20, bottom: 20, left: 20}\n        , marginTop = null\n        , width = null\n        , height = null\n        , showTooltipPercent = false\n        , showLegend = true\n        , legendPosition = \"top\"\n        , color = nv.utils.defaultColor()\n        , state = nv.utils.state()\n        , defaultState = null\n        , noData = null\n        , duration = 250\n        , dispatch = d3.dispatch('stateChange', 'changeState','renderEnd')\n        ;\n\n    tooltip\n        .duration(0)\n        .headerEnabled(false)\n        .valueFormatter(function(d, i) {\n            return pie.valueFormat()(d, i);\n        });\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    var stateGetter = function(data) {\n        return function(){\n            return {\n                active: data.map(function(d) { return !d.disabled })\n            };\n        }\n    };\n\n    var stateSetter = function(data) {\n        return function(state) {\n            if (state.active !== undefined) {\n                data.forEach(function (series, i) {\n                    series.disabled = !state.active[i];\n                });\n            }\n        }\n    };\n\n    //============================================================\n    // Chart function\n    //------------------------------------------------------------\n\n    function chart(selection) {\n        renderWatch.reset();\n        renderWatch.models(pie);\n\n        selection.each(function(data) {\n            var container = d3.select(this);\n            nv.utils.initSVG(container);\n\n            var that = this;\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            chart.update = function() { container.transition().call(chart); };\n            chart.container = this;\n\n            state.setter(stateSetter(data), chart.update)\n                .getter(stateGetter(data))\n                .update();\n\n            //set state.disabled\n            state.disabled = data.map(function(d) { return !!d.disabled });\n\n            if (!defaultState) {\n                var key;\n                defaultState = {};\n                for (key in state) {\n                    if (state[key] instanceof Array)\n                        defaultState[key] = state[key].slice(0);\n                    else\n                        defaultState[key] = state[key];\n                }\n            }\n\n            // Display No Data message if there's nothing to show.\n            if (!data || !data.length) {\n                nv.utils.noData(chart, container);\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-pieChart').data([data]);\n            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-pieChart').append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-pieWrap');\n            gEnter.append('g').attr('class', 'nv-legendWrap');\n\n            // Legend\n            if (!showLegend) {\n                g.select('.nv-legendWrap').selectAll('*').remove();\n            } else {\n                if (legendPosition === \"top\") {\n                    legend.width( availableWidth ).key(pie.x());\n\n                    wrap.select('.nv-legendWrap')\n                        .datum(data)\n                        .call(legend);\n\n                    if (!marginTop && legend.height() !== margin.top) {\n                        margin.top = legend.height();\n                        availableHeight = nv.utils.availableHeight(height, container, margin);\n                    }\n\n                    wrap.select('.nv-legendWrap')\n                        .attr('transform', 'translate(0,' + (-margin.top) +')');\n                } else if (legendPosition === \"right\") {\n                    var legendWidth = nv.models.legend().width();\n                    if (availableWidth / 2 < legendWidth) {\n                        legendWidth = (availableWidth / 2)\n                    }\n                    legend.height(availableHeight).key(pie.x());\n                    legend.width(legendWidth);\n                    availableWidth -= legend.width();\n\n                    wrap.select('.nv-legendWrap')\n                        .datum(data)\n                        .call(legend)\n                        .attr('transform', 'translate(' + (availableWidth) +',0)');\n                } else if (legendPosition === \"bottom\") {\n                    legend.width( availableWidth ).key(pie.x());\n                    wrap.select('.nv-legendWrap')\n                        .datum(data)\n                        .call(legend);\n\n                    margin.bottom = legend.height();\n                    availableHeight = nv.utils.availableHeight(height, container, margin);\n                    wrap.select('.nv-legendWrap')\n                        .attr('transform', 'translate(0,' + availableHeight +')');\n                }\n            }\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            // Main Chart Component(s)\n            pie.width(availableWidth).height(availableHeight);\n            var pieWrap = g.select('.nv-pieWrap').datum([data]);\n            d3.transition(pieWrap).call(pie);\n\n            //============================================================\n            // Event Handling/Dispatching (in chart's scope)\n            //------------------------------------------------------------\n\n            legend.dispatch.on('stateChange', function(newState) {\n                for (var key in newState) {\n                    state[key] = newState[key];\n                }\n                dispatch.stateChange(state);\n                chart.update();\n            });\n\n            // Update chart from a state object passed to event handler\n            dispatch.on('changeState', function(e) {\n                if (typeof e.disabled !== 'undefined') {\n                    data.forEach(function(series,i) {\n                        series.disabled = e.disabled[i];\n                    });\n                    state.disabled = e.disabled;\n                }\n                chart.update();\n            });\n        });\n\n        renderWatch.renderEnd('pieChart immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n    pie.dispatch.on('elementMouseover.tooltip', function(evt) {\n        evt['series'] = {\n            key: chart.x()(evt.data),\n            value: chart.y()(evt.data),\n            color: evt.color,\n            percent: evt.percent\n        };\n        if (!showTooltipPercent) {\n            delete evt.percent;\n            delete evt.series.percent;\n        }\n        tooltip.data(evt).hidden(false);\n    });\n\n    pie.dispatch.on('elementMouseout.tooltip', function(evt) {\n        tooltip.hidden(true);\n    });\n\n    pie.dispatch.on('elementMousemove.tooltip', function(evt) {\n        tooltip();\n    });\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    // expose chart's sub-components\n    chart.legend = legend;\n    chart.dispatch = dispatch;\n    chart.pie = pie;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    // use Object get/set functionality to map between vars and chart functions\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:              {get: function(){return width;},                set: function(_){width=_;}},\n        height:             {get: function(){return height;},               set: function(_){height=_;}},\n        noData:             {get: function(){return noData;},               set: function(_){noData=_;}},\n        showTooltipPercent: {get: function(){return showTooltipPercent;},   set: function(_){showTooltipPercent=_;}},\n        showLegend:         {get: function(){return showLegend;},           set: function(_){showLegend=_;}},\n        legendPosition:     {get: function(){return legendPosition;},       set: function(_){legendPosition=_;}},\n        defaultState:       {get: function(){return defaultState;},         set: function(_){defaultState=_;}},\n\n        // options that require extra logic in the setter\n        color: {get: function(){return color;}, set: function(_){\n            color = _;\n            legend.color(color);\n            pie.color(color);\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n            pie.duration(duration);\n        }},\n        margin: {get: function(){return margin;}, set: function(_){\n            if (_.top !== undefined) {\n                margin.top = _.top;\n                marginTop = _.top;\n            }\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }}\n    });\n    nv.utils.inheritOptions(chart, pie);\n    nv.utils.initOptions(chart);\n    return chart;\n};\nnv.models.sankey = function() {\n    'use strict';\n\n    // Sources:\n    // - https://bost.ocks.org/mike/sankey/\n    // - https://github.com/soxofaan/d3-plugin-captain-sankey\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var sankey = {},\n        nodeWidth = 24,\n        nodePadding = 8,\n        size = [1, 1],\n        nodes = [],\n        links = [],\n        sinksRight = true;\n\n    var layout = function(iterations) {\n        computeNodeLinks();\n        computeNodeValues();\n        computeNodeBreadths();\n        computeNodeDepths(iterations);\n    };\n\n    var relayout = function() {\n        computeLinkDepths();\n    };\n\n    // SVG path data generator, to be used as 'd' attribute on 'path' element selection.\n    var link = function() {\n        var curvature = .5;\n\n        function link(d) {\n\n            var x0 = d.source.x + d.source.dx,\n                x1 = d.target.x,\n                xi = d3.interpolateNumber(x0, x1),\n                x2 = xi(curvature),\n                x3 = xi(1 - curvature),\n                y0 = d.source.y + d.sy + d.dy / 2,\n                y1 = d.target.y + d.ty + d.dy / 2;\n            var linkPath = 'M' + x0 + ',' + y0\n                + 'C' + x2 + ',' + y0\n                + ' ' + x3 + ',' + y1\n                + ' ' + x1 + ',' + y1;\n            return linkPath;\n        }\n\n        link.curvature = function(_) {\n            if (!arguments.length) return curvature;\n            curvature = +_;\n            return link;\n        };\n\n        return link;\n    };\n\n    // Y-position of the middle of a node.\n    var center = function(node) {\n        return node.y + node.dy / 2;\n    };\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    // Populate the sourceLinks and targetLinks for each node.\n    // Also, if the source and target are not objects, assume they are indices.\n    function computeNodeLinks() {\n        nodes.forEach(function(node) {\n            // Links that have this node as source.\n            node.sourceLinks = [];\n            // Links that have this node as target.\n            node.targetLinks = [];\n        });\n        links.forEach(function(link) {\n            var source = link.source,\n                target = link.target;\n            if (typeof source === 'number') source = link.source = nodes[link.source];\n            if (typeof target === 'number') target = link.target = nodes[link.target];\n            source.sourceLinks.push(link);\n            target.targetLinks.push(link);\n        });\n    }\n\n    // Compute the value (size) of each node by summing the associated links.\n    function computeNodeValues() {\n        nodes.forEach(function(node) {\n            node.value = Math.max(\n                d3.sum(node.sourceLinks, value),\n                d3.sum(node.targetLinks, value)\n            );\n        });\n    }\n\n    // Iteratively assign the breadth (x-position) for each node.\n    // Nodes are assigned the maximum breadth of incoming neighbors plus one;\n    // nodes with no incoming links are assigned breadth zero, while\n    // nodes with no outgoing links are assigned the maximum breadth.\n    function computeNodeBreadths() {\n        //\n        var remainingNodes = nodes,\n            nextNodes,\n            x = 0;\n\n        // Work from left to right.\n        // Keep updating the breath (x-position) of nodes that are target of recently updated nodes.\n        //\n        while (remainingNodes.length && x < nodes.length) {\n            nextNodes = [];\n            remainingNodes.forEach(function(node) {\n                node.x = x;\n                node.dx = nodeWidth;\n                node.sourceLinks.forEach(function(link) {\n                    if (nextNodes.indexOf(link.target) < 0) {\n                        nextNodes.push(link.target);\n                    }\n                });\n            });\n            remainingNodes = nextNodes;\n            ++x;\n            //\n        }\n\n        // Optionally move pure sinks always to the right.\n        if (sinksRight) {\n            moveSinksRight(x);\n        }\n\n        scaleNodeBreadths((size[0] - nodeWidth) / (x - 1));\n    }\n\n    function moveSourcesRight() {\n        nodes.forEach(function(node) {\n            if (!node.targetLinks.length) {\n                node.x = d3.min(node.sourceLinks, function(d) { return d.target.x; }) - 1;\n            }\n        });\n    }\n\n    function moveSinksRight(x) {\n        nodes.forEach(function(node) {\n            if (!node.sourceLinks.length) {\n                node.x = x - 1;\n            }\n        });\n    }\n\n    function scaleNodeBreadths(kx) {\n        nodes.forEach(function(node) {\n            node.x *= kx;\n        });\n    }\n\n    // Compute the depth (y-position) for each node.\n    function computeNodeDepths(iterations) {\n        // Group nodes by breath.\n        var nodesByBreadth = d3.nest()\n            .key(function(d) { return d.x; })\n            .sortKeys(d3.ascending)\n            .entries(nodes)\n            .map(function(d) { return d.values; });\n\n        //\n        initializeNodeDepth();\n        resolveCollisions();\n        computeLinkDepths();\n        for (var alpha = 1; iterations > 0; --iterations) {\n            relaxRightToLeft(alpha *= .99);\n            resolveCollisions();\n            computeLinkDepths();\n            relaxLeftToRight(alpha);\n            resolveCollisions();\n            computeLinkDepths();\n        }\n\n        function initializeNodeDepth() {\n            // Calculate vertical scaling factor.\n            var ky = d3.min(nodesByBreadth, function(nodes) {\n                return (size[1] - (nodes.length - 1) * nodePadding) / d3.sum(nodes, value);\n            });\n\n            nodesByBreadth.forEach(function(nodes) {\n                nodes.forEach(function(node, i) {\n                    node.y = i;\n                    node.dy = node.value * ky;\n                });\n            });\n\n            links.forEach(function(link) {\n                link.dy = link.value * ky;\n            });\n        }\n\n        function relaxLeftToRight(alpha) {\n            nodesByBreadth.forEach(function(nodes, breadth) {\n                nodes.forEach(function(node) {\n                    if (node.targetLinks.length) {\n                        // Value-weighted average of the y-position of source node centers linked to this node.\n                        var y = d3.sum(node.targetLinks, weightedSource) / d3.sum(node.targetLinks, value);\n                        node.y += (y - center(node)) * alpha;\n                    }\n                });\n            });\n\n            function weightedSource(link) {\n                return (link.source.y + link.sy + link.dy / 2) * link.value;\n            }\n        }\n\n        function relaxRightToLeft(alpha) {\n            nodesByBreadth.slice().reverse().forEach(function(nodes) {\n                nodes.forEach(function(node) {\n                    if (node.sourceLinks.length) {\n                        // Value-weighted average of the y-positions of target nodes linked to this node.\n                        var y = d3.sum(node.sourceLinks, weightedTarget) / d3.sum(node.sourceLinks, value);\n                        node.y += (y - center(node)) * alpha;\n                    }\n                });\n            });\n\n            function weightedTarget(link) {\n                return (link.target.y + link.ty + link.dy / 2) * link.value;\n            }\n        }\n\n        function resolveCollisions() {\n            nodesByBreadth.forEach(function(nodes) {\n                var node,\n                    dy,\n                    y0 = 0,\n                    n = nodes.length,\n                    i;\n\n                // Push any overlapping nodes down.\n                nodes.sort(ascendingDepth);\n                for (i = 0; i < n; ++i) {\n                    node = nodes[i];\n                    dy = y0 - node.y;\n                    if (dy > 0) node.y += dy;\n                    y0 = node.y + node.dy + nodePadding;\n                }\n\n                // If the bottommost node goes outside the bounds, push it back up.\n                dy = y0 - nodePadding - size[1];\n                if (dy > 0) {\n                    y0 = node.y -= dy;\n\n                    // Push any overlapping nodes back up.\n                    for (i = n - 2; i >= 0; --i) {\n                        node = nodes[i];\n                        dy = node.y + node.dy + nodePadding - y0;\n                        if (dy > 0) node.y -= dy;\n                        y0 = node.y;\n                    }\n                }\n            });\n        }\n\n        function ascendingDepth(a, b) {\n            return a.y - b.y;\n        }\n    }\n\n    // Compute y-offset of the source endpoint (sy) and target endpoints (ty) of links,\n    // relative to the source/target node's y-position.\n    function computeLinkDepths() {\n        nodes.forEach(function(node) {\n            node.sourceLinks.sort(ascendingTargetDepth);\n            node.targetLinks.sort(ascendingSourceDepth);\n        });\n        nodes.forEach(function(node) {\n            var sy = 0, ty = 0;\n            node.sourceLinks.forEach(function(link) {\n                link.sy = sy;\n                sy += link.dy;\n            });\n            node.targetLinks.forEach(function(link) {\n                link.ty = ty;\n                ty += link.dy;\n            });\n        });\n\n        function ascendingSourceDepth(a, b) {\n            return a.source.y - b.source.y;\n        }\n\n        function ascendingTargetDepth(a, b) {\n            return a.target.y - b.target.y;\n        }\n    }\n\n    // Value property accessor.\n    function value(x) {\n        return x.value;\n    }\n\n    sankey.options = nv.utils.optionsFunc.bind(sankey);\n    sankey._options = Object.create({}, {\n        nodeWidth:    {get: function(){return nodeWidth;},   set: function(_){nodeWidth=+_;}},\n        nodePadding:  {get: function(){return nodePadding;}, set: function(_){nodePadding=_;}},\n        nodes:        {get: function(){return nodes;},       set: function(_){nodes=_;}},\n        links:        {get: function(){return links ;},      set: function(_){links=_;}},\n        size:         {get: function(){return size;},        set: function(_){size=_;}},\n        sinksRight:   {get: function(){return sinksRight;},  set: function(_){sinksRight=_;}},\n\n        layout:       {get: function(){layout(32);},         set: function(_){layout(_);}},\n        relayout:     {get: function(){relayout();},         set: function(_){}},\n        center:       {get: function(){return center();},    set: function(_){\n            if(typeof _ === 'function'){\n                center=_;\n            }\n        }},\n        link:         {get: function(){return link();},      set: function(_){\n            if(typeof _ === 'function'){\n                link=_;\n            }\n            return link();\n        }}\n    });\n\n    nv.utils.initOptions(sankey);\n\n    return sankey;\n};\nnv.models.sankeyChart = function() {\n    \"use strict\";\n\n    // Sources:\n    // - https://bost.ocks.org/mike/sankey/\n    // - https://github.com/soxofaan/d3-plugin-captain-sankey\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 5, right: 0, bottom: 5, left: 0}\n        , sankey = nv.models.sankey()\n        , width = 600\n        , height = 400\n        , nodeWidth = 36\n        , nodePadding =  40\n        , units = 'units'\n        , center = undefined\n        ;\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var formatNumber = d3.format(',.0f');    // zero decimal places\n    var format = function(d) {\n        return formatNumber(d) + ' ' + units;\n    };\n    var color = d3.scale.category20();\n    var linkTitle = function(d){\n        return d.source.name + ' → ' + d.target.name + '\\n' + format(d.value);\n    };\n    var nodeFillColor = function(d){\n        return d.color = color(d.name.replace(/ .*/, ''));\n    };\n    var nodeStrokeColor = function(d){\n        return d3.rgb(d.color).darker(2);\n    };\n    var nodeTitle = function(d){\n        return d.name + '\\n' + format(d.value);\n    };\n\n    var showError = function(element, message) {\n        element.append('text')\n            .attr('x', 0)\n            .attr('y', 0)\n            .attr('class', 'nvd3-sankey-chart-error')\n            .attr('text-anchor', 'middle')\n            .text(message);\n    };\n\n    function chart(selection) {\n        selection.each(function(data) {\n\n            var testData = {\n                nodes:\n                    [\n                        {'node': 1, 'name': 'Test 1'},\n                        {'node': 2, 'name': 'Test 2'},\n                        {'node': 3, 'name': 'Test 3'},\n                        {'node': 4, 'name': 'Test 4'},\n                        {'node': 5, 'name': 'Test 5'},\n                        {'node': 6, 'name': 'Test 6'}\n                    ],\n                links:\n                    [\n                        {'source': 0, 'target': 1, 'value': 2295},\n                        {'source': 0, 'target': 5, 'value': 1199},\n                        {'source': 1, 'target': 2, 'value': 1119},\n                        {'source': 1, 'target': 5, 'value': 1176},\n                        {'source': 2, 'target': 3, 'value': 487},\n                        {'source': 2, 'target': 5, 'value': 632},\n                        {'source': 3, 'target': 4, 'value': 301},\n                        {'source': 3, 'target': 5, 'value': 186}\n                    ]\n            };\n\n            // Error handling\n            var isDataValid = false;\n            var dataAvailable = false;\n\n            // check if data is valid\n            if(\n                (typeof data['nodes'] === 'object' && data['nodes'].length) >= 0 &&\n                (typeof data['links'] === 'object' && data['links'].length) >= 0\n            ){\n                isDataValid = true;\n            }\n\n            // check if data is available\n            if(\n                data['nodes'] && data['nodes'].length > 0 &&\n                data['links'] && data['links'].length > 0\n            ) {\n                dataAvailable = true;\n            }\n\n            // show error\n            if(!isDataValid) {\n                console.error('NVD3 Sankey chart error:', 'invalid data format for', data);\n                console.info('Valid data format is: ', testData, JSON.stringify(testData));\n                showError(selection, 'Error loading chart, data is invalid');\n                return false;\n            }\n\n            // TODO use nv.utils.noData\n            if(!dataAvailable) {\n                showError(selection, 'No data available');\n                return false;\n            }\n\n            // No errors, continue\n\n            // append the svg canvas to the page\n            var svg = selection.append('svg')\n                .attr('width', width)\n                .attr('height', height)\n                .append('g')\n                .attr('class', 'nvd3 nv-wrap nv-sankeyChart');\n\n            // Set the sankey diagram properties\n            sankey\n                .nodeWidth(nodeWidth)\n                .nodePadding(nodePadding)\n                .size([width, height]);\n\n            var path = sankey.link();\n\n            sankey\n                .nodes(data.nodes)\n                .links(data.links)\n                .layout(32)\n                .center(center);\n\n            // add in the links\n            var link = svg.append('g').selectAll('.link')\n                .data(data.links)\n                .enter().append('path')\n                .attr('class', 'link')\n                .attr('d', path)\n                .style('stroke-width', function(d) { return Math.max(1, d.dy); })\n            .sort(function(a,b) { return b.dy - a.dy; });\n\n            // add the link titles\n            link.append('title')\n                .text(linkTitle);\n\n            // add in the nodes\n            var node = svg.append('g').selectAll('.node')\n                .data(data.nodes)\n                .enter().append('g')\n                .attr('class', 'node')\n                .attr('transform', function(d) { return 'translate(' + d.x + ',' + d.y + ')'; })\n                .call(\n                    d3.behavior\n                        .drag()\n                        .origin(function(d) { return d; })\n                        .on('dragstart', function() {\n                            this.parentNode.appendChild(this);\n                        })\n                        .on('drag', dragmove)\n                );\n\n            // add the rectangles for the nodes\n            node.append('rect')\n                .attr('height', function(d) { return d.dy; })\n                .attr('width', sankey.nodeWidth())\n                .style('fill', nodeFillColor)\n                .style('stroke', nodeStrokeColor)\n                .append('title')\n                .text(nodeTitle);\n\n            // add in the title for the nodes\n            node.append('text')\n                .attr('x', -6)\n                .attr('y', function(d) { return d.dy / 2; })\n                .attr('dy', '.35em')\n                .attr('text-anchor', 'end')\n                .attr('transform', null)\n                .text(function(d) { return d.name; })\n                .filter(function(d) { return d.x < width / 2; })\n                .attr('x', 6 + sankey.nodeWidth())\n                .attr('text-anchor', 'start');\n\n            // the function for moving the nodes\n            function dragmove(d) {\n                d3.select(this).attr('transform',\n                'translate(' + d.x + ',' + (\n                    d.y = Math.max(0, Math.min(height - d.dy, d3.event.y))\n                ) + ')');\n                sankey.relayout();\n                link.attr('d', path);\n            }\n        });\n\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        units:           {get: function(){return units;},       set: function(_){units=_;}},\n        width:           {get: function(){return width;},       set: function(_){width=_;}},\n        height:          {get: function(){return height;},      set: function(_){height=_;}},\n        format:          {get: function(){return format;},      set: function(_){format=_;}},\n        linkTitle:       {get: function(){return linkTitle;},   set: function(_){linkTitle=_;}},\n        nodeWidth:       {get: function(){return nodeWidth;},   set: function(_){nodeWidth=_;}},\n        nodePadding:     {get: function(){return nodePadding;}, set: function(_){nodePadding=_;}},\n        center:          {get: function(){return center},       set: function(_){center=_}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        nodeStyle: {get: function(){return {};}, set: function(_){\n            nodeFillColor   = _.fillColor   !== undefined ? _.fillColor   : nodeFillColor;\n            nodeStrokeColor = _.strokeColor !== undefined ? _.strokeColor : nodeStrokeColor;\n            nodeTitle       = _.title       !== undefined ? _.title       : nodeTitle;\n        }}\n\n    });\n\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n\nnv.models.scatter = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin       = {top: 0, right: 0, bottom: 0, left: 0}\n        , width        = null\n        , height       = null\n        , color        = nv.utils.defaultColor() // chooses color\n        , pointBorderColor = null\n        , id           = Math.floor(Math.random() * 100000) //Create semi-unique ID incase user doesn't select one\n        , container    = null\n        , x            = d3.scale.linear()\n        , y            = d3.scale.linear()\n        , z            = d3.scale.linear() //linear because d3.svg.shape.size is treated as area\n        , getX         = function(d) { return d.x } // accessor to get the x value\n        , getY         = function(d) { return d.y } // accessor to get the y value\n        , getSize      = function(d) { return d.size || 1} // accessor to get the point size\n        , getShape     = function(d) { return d.shape || 'circle' } // accessor to get point shape\n        , forceX       = [] // List of numbers to Force into the X scale (ie. 0, or a max / min, etc.)\n        , forceY       = [] // List of numbers to Force into the Y scale\n        , forceSize    = [] // List of numbers to Force into the Size scale\n        , interactive  = true // If true, plots a voronoi overlay for advanced point intersection\n        , pointActive  = function(d) { return !d.notActive } // any points that return false will be filtered out\n        , padData      = false // If true, adds half a data points width to front and back, for lining up a line chart with a bar chart\n        , padDataOuter = .1 //outerPadding to imitate ordinal scale outer padding\n        , clipEdge     = false // if true, masks points within x and y scale\n        , clipVoronoi  = true // if true, masks each point with a circle... can turn off to slightly increase performance\n        , showVoronoi  = false // display the voronoi areas\n        , clipRadius   = function() { return 25 } // function to get the radius for voronoi point clips\n        , xDomain      = null // Override x domain (skips the calculation from data)\n        , yDomain      = null // Override y domain\n        , xRange       = null // Override x range\n        , yRange       = null // Override y range\n        , sizeDomain   = null // Override point size domain\n        , sizeRange    = null\n        , singlePoint  = false\n        , dispatch     = d3.dispatch('elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'renderEnd')\n        , useVoronoi   = true\n        , duration     = 250\n        , interactiveUpdateDelay = 300\n        , showLabels    = false\n        ;\n\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var x0, y0, z0 // used to store previous scales\n        , xDom, yDom // used to store previous domains\n        , width0\n        , height0\n        , timeoutID\n        , needsUpdate = false // Flag for when the points are visually updating, but the interactive layer is behind, to disable tooltips\n        , renderWatch = nv.utils.renderWatch(dispatch, duration)\n        , _sizeRange_def = [16, 256]\n        , _cache = {}\n        ;\n\n    //============================================================\n    // Diff and Cache Utilities\n    //------------------------------------------------------------\n    // getDiffs is used to filter unchanged points from the update\n    // selection. It implicitly updates it's cache when called and\n    // therefor the diff is based upon the previous invocation NOT\n    // the previous update.\n    //\n    // getDiffs takes a point as its first argument followed by n\n    // key getter pairs (d, [key, get... key, get]) this approach\n    // was chosen for efficiency. (The filter will call it a LOT).\n    //\n    // It is important to call delCache on point exit to prevent a\n    // memory leak. It is also needed to prevent invalid caches if\n    // a new point uses the same series and point id key.\n    //\n    // Argument Performance Concerns:\n    // - Object property lists for key getter pairs would be very\n    // expensive (points * objects for the GC every update).\n    // - ES6 function names for implicit keys would be nice but\n    // they are not guaranteed to be unique.\n    // - function.toString to obtain implicit keys is possible\n    // but long object keys are not free (internal hash).\n    // - Explicit key without objects are the most efficient.\n\n    function getCache(d) {\n        var key, val;\n        key = d[0].series + ':' + d[1];\n        val = _cache[key] = _cache[key] || {};\n        return val;\n    }\n\n    function delCache(d) {\n        var key, val;\n        key = d[0].series + ':' + d[1];\n        delete _cache[key];\n    }\n\n    function getDiffs(d) {\n        var i, key, val,\n            cache = getCache(d),\n            diffs = false;\n        for (i = 1; i < arguments.length; i += 2) {\n            key = arguments[i];\n            val = arguments[i + 1](d[0], d[1]);\n            if (cache[key] !== val || !cache.hasOwnProperty(key)) {\n                cache[key] = val;\n                diffs = true;\n            }\n        }\n        return diffs;\n    }\n\n    function chart(selection) {\n        renderWatch.reset();\n        selection.each(function(data) {\n            container = d3.select(this);\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            nv.utils.initSVG(container);\n\n            //add series index to each data point for reference\n            data.forEach(function(series, i) {\n                series.values.forEach(function(point) {\n                    point.series = i;\n                });\n            });\n\n            // Setup Scales\n            var logScale = (typeof(chart.yScale().base) === \"function\"); // Only log scale has a method \"base()\"\n            // remap and flatten the data for use in calculating the scales' domains\n            var seriesData = (xDomain && yDomain && sizeDomain) ? [] : // if we know xDomain and yDomain and sizeDomain, no need to calculate.... if Size is constant remember to set sizeDomain to speed up performance\n                d3.merge(\n                    data.map(function(d) {\n                        return d.values.map(function(d,i) {\n                            return { x: getX(d,i), y: getY(d,i), size: getSize(d,i) }\n                        })\n                    })\n                );\n\n            x   .domain(xDomain || d3.extent(seriesData.map(function(d) { return d.x; }).concat(forceX)))\n\n            if (padData && data[0])\n                x.range(xRange || [(availableWidth * padDataOuter +  availableWidth) / (2 *data[0].values.length), availableWidth - availableWidth * (1 + padDataOuter) / (2 * data[0].values.length)  ]);\n            //x.range([availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5)  / data[0].values.length ]);\n            else\n                x.range(xRange || [0, availableWidth]);\n\n             if (logScale) {\n                    var min = d3.min(seriesData.map(function(d) { if (d.y !== 0) return d.y; }));\n                    y.clamp(true)\n                        .domain(yDomain || d3.extent(seriesData.map(function(d) {\n                            if (d.y !== 0) return d.y;\n                            else return min * 0.1;\n                        }).concat(forceY)))\n                        .range(yRange || [availableHeight, 0]);\n                } else {\n                        y.domain(yDomain || d3.extent(seriesData.map(function (d) { return d.y;}).concat(forceY)))\n                        .range(yRange || [availableHeight, 0]);\n                }\n\n            z   .domain(sizeDomain || d3.extent(seriesData.map(function(d) { return d.size }).concat(forceSize)))\n                .range(sizeRange || _sizeRange_def);\n\n            // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n            singlePoint = x.domain()[0] === x.domain()[1] || y.domain()[0] === y.domain()[1];\n\n            if (x.domain()[0] === x.domain()[1])\n                x.domain()[0] ?\n                    x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01])\n                    : x.domain([-1,1]);\n\n            if (y.domain()[0] === y.domain()[1])\n                y.domain()[0] ?\n                    y.domain([y.domain()[0] - y.domain()[0] * 0.01, y.domain()[1] + y.domain()[1] * 0.01])\n                    : y.domain([-1,1]);\n\n            if ( isNaN(x.domain()[0])) {\n                x.domain([-1,1]);\n            }\n\n            if ( isNaN(y.domain()[0])) {\n                y.domain([-1,1]);\n            }\n\n            x0 = x0 || x;\n            y0 = y0 || y;\n            z0 = z0 || z;\n\n            var scaleDiff = x(1) !== x0(1) || y(1) !== y0(1) || z(1) !== z0(1);\n\n            width0 = width0 || width;\n            height0 = height0 || height;\n\n            var sizeDiff = width0 !== width || height0 !== height;\n\n            // Domain Diffs\n\n            xDom = xDom || [];\n            var domainDiff = xDom[0] !== x.domain()[0] || xDom[1] !== x.domain()[1];\n            xDom = x.domain();\n\n            yDom = yDom || [];\n            domainDiff = domainDiff || yDom[0] !== y.domain()[0] || yDom[1] !== y.domain()[1];\n            yDom = y.domain();\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-scatter').data([data]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-scatter nv-chart-' + id);\n            var defsEnter = wrapEnter.append('defs');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            wrap.classed('nv-single-point', singlePoint);\n            gEnter.append('g').attr('class', 'nv-groups');\n            gEnter.append('g').attr('class', 'nv-point-paths');\n            wrapEnter.append('g').attr('class', 'nv-point-clips');\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            defsEnter.append('clipPath')\n                .attr('id', 'nv-edge-clip-' + id)\n                .append('rect')\n                .attr('transform', 'translate( -10, -10)');\n\n            wrap.select('#nv-edge-clip-' + id + ' rect')\n                .attr('width', availableWidth + 20)\n                .attr('height', (availableHeight > 0) ? availableHeight + 20 : 0);\n\n            g.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + id + ')' : '');\n\n            function updateInteractiveLayer() {\n                // Always clear needs-update flag regardless of whether or not\n                // we will actually do anything (avoids needless invocations).\n                needsUpdate = false;\n\n                if (!interactive) return false;\n\n                // inject series and point index for reference into voronoi\n                if (useVoronoi === true) {\n\n                    // nuke all voronoi paths on reload and recreate them\n                    wrap.select('.nv-point-paths').selectAll('path').remove();\n\n                    var vertices = d3.merge(data.map(function(group, groupIndex) {\n                            return group.values\n                                .map(function(point, pointIndex) {\n                                    // *Adding noise to make duplicates very unlikely\n                                    // *Injecting series and point index for reference\n                                    // *Adding a 'jitter' to the points, because there's an issue in d3.geom.voronoi.\n                                    var pX = getX(point,pointIndex);\n                                    var pY = getY(point,pointIndex);\n\n                                    return [nv.utils.NaNtoZero(x(pX)) + Math.random() * 1e-4,\n                                            nv.utils.NaNtoZero(y(pY)) + Math.random() * 1e-4,\n                                        groupIndex,\n                                        pointIndex, point];\n                                })\n                                .filter(function(pointArray, pointIndex) {\n                                    return pointActive(pointArray[4], pointIndex); // Issue #237.. move filter to after map, so pointIndex is correct!\n                                })\n                        })\n                    );\n\n                    if (vertices.length == 0) return false;  // No active points, we're done\n                    if (vertices.length < 3) {\n                        // Issue #283 - Adding 2 dummy points to the voronoi b/c voronoi requires min 3 points to work\n                        vertices.push([x.range()[0] - 20, y.range()[0] - 20, null, null]);\n                        vertices.push([x.range()[1] + 20, y.range()[1] + 20, null, null]);\n                        vertices.push([x.range()[0] - 20, y.range()[0] + 20, null, null]);\n                        vertices.push([x.range()[1] + 20, y.range()[1] - 20, null, null]);\n                    }\n\n                    // keep voronoi sections from going more than 10 outside of graph\n                    // to avoid overlap with other things like legend etc\n                    var bounds = d3.geom.polygon([\n                        [-10,-10],\n                        [-10,height + 10],\n                        [width + 10,height + 10],\n                        [width + 10,-10]\n                    ]);\n\n                    // delete duplicates from vertices - essential assumption for d3.geom.voronoi\n                    var epsilon = 1e-4; // Uses 1e-4 to determine equivalence.\n                    vertices = vertices.sort(function(a,b){return ((a[0] - b[0]) || (a[1] - b[1]))});\n                    for (var i = 0; i < vertices.length - 1; ) {\n                        if ((Math.abs(vertices[i][0] - vertices[i+1][0]) < epsilon) &&\n                        (Math.abs(vertices[i][1] - vertices[i+1][1]) < epsilon)) {\n                            vertices.splice(i+1, 1);\n                        } else {\n                            i++;\n                        }\n                    }\n\n                    var voronoi = d3.geom.voronoi(vertices).map(function(d, i) {\n                        return {\n                            'data': bounds.clip(d),\n                            'series': vertices[i][2],\n                            'point': vertices[i][3]\n                        }\n                    });\n\n                    var pointPaths = wrap.select('.nv-point-paths').selectAll('path').data(voronoi);\n                    var vPointPaths = pointPaths\n                        .enter().append(\"svg:path\")\n                        .attr(\"d\", function(d) {\n                            if (!d || !d.data || d.data.length === 0)\n                                return 'M 0 0';\n                            else\n                                return \"M\" + d.data.join(\",\") + \"Z\";\n                        })\n                        .attr(\"id\", function(d,i) {\n                            return \"nv-path-\"+i; })\n                        .attr(\"clip-path\", function(d,i) { return \"url(#nv-clip-\"+id+\"-\"+i+\")\"; })\n                        ;\n\n                    // good for debugging point hover issues\n                    if (showVoronoi) {\n                        vPointPaths.style(\"fill\", d3.rgb(230, 230, 230))\n                            .style('fill-opacity', 0.4)\n                            .style('stroke-opacity', 1)\n                            .style(\"stroke\", d3.rgb(200,200,200));\n                    }\n\n                    if (clipVoronoi) {\n                        // voronoi sections are already set to clip,\n                        // just create the circles with the IDs they expect\n                        wrap.select('.nv-point-clips').selectAll('*').remove(); // must do * since it has sub-dom\n                        var pointClips = wrap.select('.nv-point-clips').selectAll('clipPath').data(vertices);\n                        var vPointClips = pointClips\n                            .enter().append(\"svg:clipPath\")\n                            .attr(\"id\", function(d, i) { return \"nv-clip-\"+id+\"-\"+i;})\n                            .append(\"svg:circle\")\n                            .attr('cx', function(d) { return d[0]; })\n                            .attr('cy', function(d) { return d[1]; })\n                            .attr('r', clipRadius);\n                    }\n\n                    var mouseEventCallback = function(el, d, mDispatch) {\n                        if (needsUpdate) return 0;\n                        var series = data[d.series];\n                        if (series === undefined) return;\n                        var point  = series.values[d.point];\n                        point['color'] = color(series, d.series);\n\n                        // standardize attributes for tooltip.\n                        point['x'] = getX(point);\n                        point['y'] = getY(point);\n\n                        // can't just get box of event node since it's actually a voronoi polygon\n                        var box = container.node().getBoundingClientRect();\n                        var scrollTop  = window.pageYOffset || document.documentElement.scrollTop;\n                        var scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\n\n                        var pos = {\n                            left: x(getX(point, d.point)) + box.left + scrollLeft + margin.left + 10,\n                            top: y(getY(point, d.point)) + box.top + scrollTop + margin.top + 10\n                        };\n\n                        mDispatch({\n                            point: point,\n                            series: series,\n                            pos: pos,\n                            relativePos: [x(getX(point, d.point)) + margin.left, y(getY(point, d.point)) + margin.top],\n                            seriesIndex: d.series,\n                            pointIndex: d.point,\n                            event: d3.event,\n                            element: el\n                        });\n                    };\n\n                    pointPaths\n                        .on('click', function(d) {\n                            mouseEventCallback(this, d, dispatch.elementClick);\n                        })\n                        .on('dblclick', function(d) {\n                            mouseEventCallback(this, d, dispatch.elementDblClick);\n                        })\n                        .on('mouseover', function(d) {\n                            mouseEventCallback(this, d, dispatch.elementMouseover);\n                        })\n                        .on('mouseout', function(d, i) {\n                            mouseEventCallback(this, d, dispatch.elementMouseout);\n                        });\n\n                } else {\n                    // add event handlers to points instead voronoi paths\n                    wrap.select('.nv-groups').selectAll('.nv-group')\n                        .selectAll('.nv-point')\n                        //.data(dataWithPoints)\n                        //.style('pointer-events', 'auto') // recativate events, disabled by css\n                        .on('click', function(d,i) {\n                            //nv.log('test', d, i);\n                            if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n                            var series = data[d.series],\n                                point  = series.values[i];\n                            var element = this;\n                            dispatch.elementClick({\n                                point: point,\n                                series: series,\n                                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top], //TODO: make this pos base on the page\n                                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                                seriesIndex: d.series,\n                                pointIndex: i,\n                                event: d3.event,\n                                element: element\n                            });\n                        })\n                        .on('dblclick', function(d,i) {\n                            if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n                            var series = data[d.series],\n                                point  = series.values[i];\n\n                            dispatch.elementDblClick({\n                                point: point,\n                                series: series,\n                                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],//TODO: make this pos base on the page\n                                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                                seriesIndex: d.series,\n                                pointIndex: i\n                            });\n                        })\n                        .on('mouseover', function(d,i) {\n                            if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n                            var series = data[d.series],\n                                point  = series.values[i];\n\n                            dispatch.elementMouseover({\n                                point: point,\n                                series: series,\n                                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],//TODO: make this pos base on the page\n                                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                                seriesIndex: d.series,\n                                pointIndex: i,\n                                color: color(d, i)\n                            });\n                        })\n                        .on('mouseout', function(d,i) {\n                            if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n                            var series = data[d.series],\n                                point  = series.values[i];\n\n                            dispatch.elementMouseout({\n                                point: point,\n                                series: series,\n                                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],//TODO: make this pos base on the page\n                                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                                seriesIndex: d.series,\n                                pointIndex: i,\n                                color: color(d, i)\n                            });\n                        });\n                }\n            }\n\n            needsUpdate = true;\n            var groups = wrap.select('.nv-groups').selectAll('.nv-group')\n                .data(function(d) { return d }, function(d) { return d.key });\n            groups.enter().append('g')\n                .style('stroke-opacity', 1e-6)\n                .style('fill-opacity', 1e-6);\n            groups.exit()\n                .remove();\n            groups\n                .attr('class', function(d,i) {\n                    return (d.classed || '') + ' nv-group nv-series-' + i;\n                })\n                .classed('nv-noninteractive', !interactive)\n                .classed('hover', function(d) { return d.hover });\n            groups.watchTransition(renderWatch, 'scatter: groups')\n                .style('fill', function(d,i) { return color(d, i) })\n                .style('stroke', function(d,i) { return d.pointBorderColor || pointBorderColor || color(d, i) })\n                .style('stroke-opacity', 1)\n                .style('fill-opacity', .5);\n\n            // create the points, maintaining their IDs from the original data set\n            var points = groups.selectAll('path.nv-point')\n                .data(function(d) {\n                    return d.values.map(\n                        function (point, pointIndex) {\n                            return [point, pointIndex]\n                        }).filter(\n                            function(pointArray, pointIndex) {\n                                return pointActive(pointArray[0], pointIndex)\n                            })\n                    });\n            points.enter().append('path')\n                .attr('class', function (d) {\n                    return 'nv-point nv-point-' + d[1];\n                })\n                .style('fill', function (d) { return d.color })\n                .style('stroke', function (d) { return d.color })\n                .attr('transform', function(d) {\n                    return 'translate(' + nv.utils.NaNtoZero(x0(getX(d[0],d[1]))) + ',' + nv.utils.NaNtoZero(y0(getY(d[0],d[1]))) + ')'\n                })\n                .attr('d',\n                    nv.utils.symbol()\n                    .type(function(d) { return getShape(d[0]); })\n                    .size(function(d) { return z(getSize(d[0],d[1])) })\n            );\n            points.exit().each(delCache).remove();\n            groups.exit().selectAll('path.nv-point')\n                .watchTransition(renderWatch, 'scatter exit')\n                .attr('transform', function(d) {\n                    return 'translate(' + nv.utils.NaNtoZero(x(getX(d[0],d[1]))) + ',' + nv.utils.NaNtoZero(y(getY(d[0],d[1]))) + ')'\n                })\n                .remove();\n\n            //============================================================\n            // Point Update Optimisation Notes\n            //------------------------------------------------------------\n            // The following update selections are filtered with getDiffs\n            // (defined at the top of this file) this brings a performance\n            // benefit for charts with large data sets that accumulate a\n            // subset of changes or additions over time.\n            //\n            // Uneccesary and expensive DOM calls are avoided by culling\n            // unchanged points from the selection in exchange for the\n            // cheaper overhead of caching and diffing each point first.\n            //\n            // Due to the way D3 and NVD3 work, other global changes need\n            // to be considered in addition to local point properties.\n            // This is a potential source of bugs (if any of the global\n            // changes that possibly affect points are missed).\n\n            // Update Point Positions [x, y]\n            points.filter(function (d) {\n                // getDiffs must always be called to update cache\n                return getDiffs(d, 'x', getX, 'y', getY) ||\n                    scaleDiff || sizeDiff || domainDiff;\n            })\n            .watchTransition(renderWatch, 'scatter points')\n            .attr('transform', function (d) {\n                return 'translate(' +\n                    nv.utils.NaNtoZero(x(getX(d[0], d[1]))) + ',' +\n                    nv.utils.NaNtoZero(y(getY(d[0], d[1]))) + ')'\n            });\n\n            // Update Point Appearance [shape, size]\n            points.filter(function (d) {\n                // getDiffs must always be called to update cache\n                return getDiffs(d, 'shape', getShape, 'size', getSize) ||\n                    scaleDiff || sizeDiff || domainDiff;\n            })\n            .watchTransition(renderWatch, 'scatter points')\n            .attr('d', nv.utils.symbol()\n                .type(function (d) { return getShape(d[0]) })\n                .size(function (d) { return z(getSize(d[0], d[1])) })\n            );\n\n            // add label a label to scatter chart\n            if(showLabels)\n            {\n                var titles =  groups.selectAll('.nv-label')\n                    .data(function(d) {\n                        return d.values.map(\n                            function (point, pointIndex) {\n                                return [point, pointIndex]\n                            }).filter(\n                                function(pointArray, pointIndex) {\n                                    return pointActive(pointArray[0], pointIndex)\n                                })\n                        });\n\n                titles.enter().append('text')\n                    .style('fill', function (d,i) {\n                        return d.color })\n                    .style('stroke-opacity', 0)\n                    .style('fill-opacity', 1)\n                    .attr('transform', function(d) {\n                        var dx = nv.utils.NaNtoZero(x0(getX(d[0],d[1]))) + Math.sqrt(z(getSize(d[0],d[1]))/Math.PI) + 2;\n                        return 'translate(' + dx + ',' + nv.utils.NaNtoZero(y0(getY(d[0],d[1]))) + ')';\n                    })\n                    .text(function(d,i){\n                        return d[0].label;});\n\n                titles.exit().remove();\n                groups.exit().selectAll('path.nv-label')\n                    .watchTransition(renderWatch, 'scatter exit')\n                    .attr('transform', function(d) {\n                        var dx = nv.utils.NaNtoZero(x(getX(d[0],d[1])))+ Math.sqrt(z(getSize(d[0],d[1]))/Math.PI)+2;\n                        return 'translate(' + dx + ',' + nv.utils.NaNtoZero(y(getY(d[0],d[1]))) + ')';\n                    })\n                    .remove();\n               titles.each(function(d) {\n                  d3.select(this)\n                    .classed('nv-label', true)\n                    .classed('nv-label-' + d[1], false)\n                    .classed('hover',false);\n                });\n                titles.watchTransition(renderWatch, 'scatter labels')\n                    .attr('transform', function(d) {\n                        var dx = nv.utils.NaNtoZero(x(getX(d[0],d[1])))+ Math.sqrt(z(getSize(d[0],d[1]))/Math.PI)+2;\n                        return 'translate(' + dx + ',' + nv.utils.NaNtoZero(y(getY(d[0],d[1]))) + ')'\n                    });\n            }\n\n            // Delay updating the invisible interactive layer for smoother animation\n            if( interactiveUpdateDelay )\n            {\n                clearTimeout(timeoutID); // stop repeat calls to updateInteractiveLayer\n                timeoutID = setTimeout(updateInteractiveLayer, interactiveUpdateDelay );\n            }\n            else\n            {\n                updateInteractiveLayer();\n            }\n\n            //store old scales for use in transitions on update\n            x0 = x.copy();\n            y0 = y.copy();\n            z0 = z.copy();\n\n            width0 = width;\n            height0 = height;\n\n        });\n        renderWatch.renderEnd('scatter immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    // utility function calls provided by this chart\n    chart._calls = new function() {\n        this.clearHighlights = function () {\n            nv.dom.write(function() {\n                container.selectAll(\".nv-point.hover\").classed(\"hover\", false);\n            });\n            return null;\n        };\n        this.highlightPoint = function (seriesIndex, pointIndex, isHoverOver) {\n            nv.dom.write(function() {\n                container.select('.nv-groups')\n                  .selectAll(\".nv-series-\" + seriesIndex)\n                  .selectAll(\".nv-point-\" + pointIndex)\n                  .classed(\"hover\", isHoverOver);\n            });\n        };\n    };\n\n    // trigger calls from events too\n    dispatch.on('elementMouseover.point', function(d) {\n        if (interactive) chart._calls.highlightPoint(d.seriesIndex,d.pointIndex,true);\n    });\n\n    dispatch.on('elementMouseout.point', function(d) {\n        if (interactive) chart._calls.highlightPoint(d.seriesIndex,d.pointIndex,false);\n    });\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:        {get: function(){return width;}, set: function(_){width=_;}},\n        height:       {get: function(){return height;}, set: function(_){height=_;}},\n        xScale:       {get: function(){return x;}, set: function(_){x=_;}},\n        yScale:       {get: function(){return y;}, set: function(_){y=_;}},\n        pointScale:   {get: function(){return z;}, set: function(_){z=_;}},\n        xDomain:      {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n        yDomain:      {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n        pointDomain:  {get: function(){return sizeDomain;}, set: function(_){sizeDomain=_;}},\n        xRange:       {get: function(){return xRange;}, set: function(_){xRange=_;}},\n        yRange:       {get: function(){return yRange;}, set: function(_){yRange=_;}},\n        pointRange:   {get: function(){return sizeRange;}, set: function(_){sizeRange=_;}},\n        forceX:       {get: function(){return forceX;}, set: function(_){forceX=_;}},\n        forceY:       {get: function(){return forceY;}, set: function(_){forceY=_;}},\n        forcePoint:   {get: function(){return forceSize;}, set: function(_){forceSize=_;}},\n        interactive:  {get: function(){return interactive;}, set: function(_){interactive=_;}},\n        pointActive:  {get: function(){return pointActive;}, set: function(_){pointActive=_;}},\n        padDataOuter: {get: function(){return padDataOuter;}, set: function(_){padDataOuter=_;}},\n        padData:      {get: function(){return padData;}, set: function(_){padData=_;}},\n        clipEdge:     {get: function(){return clipEdge;}, set: function(_){clipEdge=_;}},\n        clipVoronoi:  {get: function(){return clipVoronoi;}, set: function(_){clipVoronoi=_;}},\n        clipRadius:   {get: function(){return clipRadius;}, set: function(_){clipRadius=_;}},\n        showVoronoi:   {get: function(){return showVoronoi;}, set: function(_){showVoronoi=_;}},\n        id:           {get: function(){return id;}, set: function(_){id=_;}},\n        interactiveUpdateDelay: {get:function(){return interactiveUpdateDelay;}, set: function(_){interactiveUpdateDelay=_;}},\n        showLabels: {get: function(){return showLabels;}, set: function(_){ showLabels = _;}},\n        pointBorderColor: {get: function(){return pointBorderColor;}, set: function(_){pointBorderColor=_;}},\n\n        // simple functor options\n        x:     {get: function(){return getX;}, set: function(_){getX = d3.functor(_);}},\n        y:     {get: function(){return getY;}, set: function(_){getY = d3.functor(_);}},\n        pointSize: {get: function(){return getSize;}, set: function(_){getSize = d3.functor(_);}},\n        pointShape: {get: function(){return getShape;}, set: function(_){getShape = d3.functor(_);}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n        }},\n        color: {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }},\n        useVoronoi: {get: function(){return useVoronoi;}, set: function(_){\n            useVoronoi = _;\n            if (useVoronoi === false) {\n                clipVoronoi = false;\n            }\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n    return chart;\n};\n\nnv.models.scatterChart = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var scatter      = nv.models.scatter()\n        , xAxis        = nv.models.axis()\n        , yAxis        = nv.models.axis()\n        , legend       = nv.models.legend()\n        , distX        = nv.models.distribution()\n        , distY        = nv.models.distribution()\n        , tooltip      = nv.models.tooltip()\n        ;\n\n    var margin       = {top: 30, right: 20, bottom: 50, left: 75}\n        , marginTop = null\n        , width        = null\n        , height       = null\n        , container    = null\n        , color        = nv.utils.defaultColor()\n        , x            = scatter.xScale()\n        , y            = scatter.yScale()\n        , showDistX    = false\n        , showDistY    = false\n        , showLegend   = true\n        , showXAxis    = true\n        , showYAxis    = true\n        , rightAlignYAxis = false\n        , state = nv.utils.state()\n        , defaultState = null\n        , dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd')\n        , noData       = null\n        , duration = 250\n        , showLabels    = false\n        ;\n\n    scatter.xScale(x).yScale(y);\n    xAxis.orient('bottom').tickPadding(10);\n    yAxis\n        .orient((rightAlignYAxis) ? 'right' : 'left')\n        .tickPadding(10)\n    ;\n    distX.axis('x');\n    distY.axis('y');\n    tooltip\n        .headerFormatter(function(d, i) {\n            return xAxis.tickFormat()(d, i);\n        })\n        .valueFormatter(function(d, i) {\n            return yAxis.tickFormat()(d, i);\n        });\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var x0, y0\n        , renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    var stateGetter = function(data) {\n        return function(){\n            return {\n                active: data.map(function(d) { return !d.disabled })\n            };\n        }\n    };\n\n    var stateSetter = function(data) {\n        return function(state) {\n            if (state.active !== undefined)\n                data.forEach(function(series,i) {\n                    series.disabled = !state.active[i];\n                });\n        }\n    };\n\n    function chart(selection) {\n        renderWatch.reset();\n        renderWatch.models(scatter);\n        if (showXAxis) renderWatch.models(xAxis);\n        if (showYAxis) renderWatch.models(yAxis);\n        if (showDistX) renderWatch.models(distX);\n        if (showDistY) renderWatch.models(distY);\n\n        selection.each(function(data) {\n            var that = this;\n\n            container = d3.select(this);\n            nv.utils.initSVG(container);\n\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            chart.update = function() {\n                if (duration === 0)\n                    container.call(chart);\n                else\n                    container.transition().duration(duration).call(chart);\n            };\n            chart.container = this;\n\n            state\n                .setter(stateSetter(data), chart.update)\n                .getter(stateGetter(data))\n                .update();\n\n            // DEPRECATED set state.disableddisabled\n            state.disabled = data.map(function(d) { return !!d.disabled });\n\n            if (!defaultState) {\n                var key;\n                defaultState = {};\n                for (key in state) {\n                    if (state[key] instanceof Array)\n                        defaultState[key] = state[key].slice(0);\n                    else\n                        defaultState[key] = state[key];\n                }\n            }\n\n            // Display noData message if there's nothing to show.\n            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n                nv.utils.noData(chart, container);\n                renderWatch.renderEnd('scatter immediate');\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n\n            // Setup Scales\n            x = scatter.xScale();\n            y = scatter.yScale();\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-scatterChart').data([data]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-scatterChart nv-chart-' + scatter.id());\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            // background for pointer events\n            gEnter.append('rect').attr('class', 'nvd3 nv-background').style(\"pointer-events\",\"none\");\n\n            gEnter.append('g').attr('class', 'nv-x nv-axis');\n            gEnter.append('g').attr('class', 'nv-y nv-axis');\n            gEnter.append('g').attr('class', 'nv-scatterWrap');\n            gEnter.append('g').attr('class', 'nv-regressionLinesWrap');\n            gEnter.append('g').attr('class', 'nv-distWrap');\n            gEnter.append('g').attr('class', 'nv-legendWrap');\n\n            if (rightAlignYAxis) {\n                g.select(\".nv-y.nv-axis\")\n                    .attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n            }\n\n            // Legend\n            if (!showLegend) {\n                g.select('.nv-legendWrap').selectAll('*').remove();\n            } else {\n                var legendWidth = availableWidth;\n                legend.width(legendWidth);\n\n                wrap.select('.nv-legendWrap')\n                    .datum(data)\n                    .call(legend);\n\n                if (!marginTop && legend.height() !== margin.top) {\n                    margin.top = legend.height();\n                    availableHeight = nv.utils.availableHeight(height, container, margin);\n                }\n\n                wrap.select('.nv-legendWrap')\n                    .attr('transform', 'translate(0' + ',' + (-margin.top) +')');\n            }\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            // Main Chart Component(s)\n            scatter\n                .width(availableWidth)\n                .height(availableHeight)\n                .color(data.map(function(d,i) {\n                    d.color = d.color || color(d, i);\n                    return d.color;\n                }).filter(function(d,i) { return !data[i].disabled }))\n                .showLabels(showLabels);\n\n            wrap.select('.nv-scatterWrap')\n                .datum(data.filter(function(d) { return !d.disabled }))\n                .call(scatter);\n\n\n            wrap.select('.nv-regressionLinesWrap')\n                .attr('clip-path', 'url(#nv-edge-clip-' + scatter.id() + ')');\n\n            var regWrap = wrap.select('.nv-regressionLinesWrap').selectAll('.nv-regLines')\n                .data(function (d) {\n                    return d;\n                });\n\n            regWrap.enter().append('g').attr('class', 'nv-regLines');\n\n            var regLine = regWrap.selectAll('.nv-regLine')\n                .data(function (d) {\n                    return [d]\n                });\n\n            regLine.enter()\n                .append('line').attr('class', 'nv-regLine')\n                .style('stroke-opacity', 0);\n\n            // don't add lines unless we have slope and intercept to use\n            regLine.filter(function(d) {\n                return d.intercept && d.slope;\n            })\n                .watchTransition(renderWatch, 'scatterPlusLineChart: regline')\n                .attr('x1', x.range()[0])\n                .attr('x2', x.range()[1])\n                .attr('y1', function (d, i) {\n                    return y(x.domain()[0] * d.slope + d.intercept)\n                })\n                .attr('y2', function (d, i) {\n                    return y(x.domain()[1] * d.slope + d.intercept)\n                })\n                .style('stroke', function (d, i, j) {\n                    return color(d, j)\n                })\n                .style('stroke-opacity', function (d, i) {\n                    return (d.disabled || typeof d.slope === 'undefined' || typeof d.intercept === 'undefined') ? 0 : 1\n                });\n\n            // Setup Axes\n            if (showXAxis) {\n                xAxis\n                    .scale(x)\n                    ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n                    .tickSize( -availableHeight , 0);\n\n                g.select('.nv-x.nv-axis')\n                    .attr('transform', 'translate(0,' + y.range()[0] + ')')\n                    .call(xAxis);\n            }\n\n            if (showYAxis) {\n                yAxis\n                    .scale(y)\n                    ._ticks( nv.utils.calcTicksY(availableHeight/36, data) )\n                    .tickSize( -availableWidth, 0);\n\n                g.select('.nv-y.nv-axis')\n                    .call(yAxis);\n            }\n\n            // Setup Distribution\n            if (showDistX) {\n                distX\n                    .getData(scatter.x())\n                    .scale(x)\n                    .width(availableWidth)\n                    .color(data.map(function(d,i) {\n                        return d.color || color(d, i);\n                    }).filter(function(d,i) { return !data[i].disabled }));\n                gEnter.select('.nv-distWrap').append('g')\n                    .attr('class', 'nv-distributionX');\n                g.select('.nv-distributionX')\n                    .attr('transform', 'translate(0,' + y.range()[0] + ')')\n                    .datum(data.filter(function(d) { return !d.disabled }))\n                    .call(distX);\n            }\n\n            if (showDistY) {\n                distY\n                    .getData(scatter.y())\n                    .scale(y)\n                    .width(availableHeight)\n                    .color(data.map(function(d,i) {\n                        return d.color || color(d, i);\n                    }).filter(function(d,i) { return !data[i].disabled }));\n                gEnter.select('.nv-distWrap').append('g')\n                    .attr('class', 'nv-distributionY');\n                g.select('.nv-distributionY')\n                    .attr('transform', 'translate(' + (rightAlignYAxis ? availableWidth : -distY.size() ) + ',0)')\n                    .datum(data.filter(function(d) { return !d.disabled }))\n                    .call(distY);\n            }\n\n            //============================================================\n            // Event Handling/Dispatching (in chart's scope)\n            //------------------------------------------------------------\n\n            legend.dispatch.on('stateChange', function(newState) {\n                for (var key in newState)\n                    state[key] = newState[key];\n                dispatch.stateChange(state);\n                chart.update();\n            });\n\n            // Update chart from a state object passed to event handler\n            dispatch.on('changeState', function(e) {\n                if (typeof e.disabled !== 'undefined') {\n                    data.forEach(function(series,i) {\n                        series.disabled = e.disabled[i];\n                    });\n                    state.disabled = e.disabled;\n                }\n                chart.update();\n            });\n\n            // mouseover needs availableHeight so we just keep scatter mouse events inside the chart block\n            scatter.dispatch.on('elementMouseout.tooltip', function(evt) {\n                tooltip.hidden(true);\n                container.select('.nv-chart-' + scatter.id() + ' .nv-series-' + evt.seriesIndex + ' .nv-distx-' + evt.pointIndex)\n                    .attr('y1', 0);\n                container.select('.nv-chart-' + scatter.id() + ' .nv-series-' + evt.seriesIndex + ' .nv-disty-' + evt.pointIndex)\n                    .attr('x2', distY.size());\n            });\n\n            scatter.dispatch.on('elementMouseover.tooltip', function(evt) {\n                container.select('.nv-series-' + evt.seriesIndex + ' .nv-distx-' + evt.pointIndex)\n                    .attr('y1', evt.relativePos[1] - availableHeight);\n                container.select('.nv-series-' + evt.seriesIndex + ' .nv-disty-' + evt.pointIndex)\n                    .attr('x2', evt.relativePos[0] + distX.size());\n                tooltip.data(evt).hidden(false);\n            });\n\n            //store old scales for use in transitions on update\n            x0 = x.copy();\n            y0 = y.copy();\n\n        });\n\n        renderWatch.renderEnd('scatter with line immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    // expose chart's sub-components\n    chart.dispatch = dispatch;\n    chart.scatter = scatter;\n    chart.legend = legend;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.distX = distX;\n    chart.distY = distY;\n    chart.tooltip = tooltip;\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        container:  {get: function(){return container;}, set: function(_){container=_;}},\n        showDistX:  {get: function(){return showDistX;}, set: function(_){showDistX=_;}},\n        showDistY:  {get: function(){return showDistY;}, set: function(_){showDistY=_;}},\n        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n        showXAxis:  {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n        showYAxis:  {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n        defaultState:     {get: function(){return defaultState;}, set: function(_){defaultState=_;}},\n        noData:     {get: function(){return noData;}, set: function(_){noData=_;}},\n        duration:   {get: function(){return duration;}, set: function(_){duration=_;}},\n        showLabels: {get: function(){return showLabels;}, set: function(_){showLabels=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            if (_.top !== undefined) {\n                margin.top = _.top;\n                marginTop = _.top;\n            }\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n            rightAlignYAxis = _;\n            yAxis.orient( (_) ? 'right' : 'left');\n        }},\n        color: {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n            legend.color(color);\n            distX.color(color);\n            distY.color(color);\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, scatter);\n    nv.utils.initOptions(chart);\n    return chart;\n};\n\nnv.models.sparkline = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 2, right: 0, bottom: 2, left: 0}\n        , width = 400\n        , height = 32\n        , container = null\n        , animate = true\n        , x = d3.scale.linear()\n        , y = d3.scale.linear()\n        , getX = function(d) { return d.x }\n        , getY = function(d) { return d.y }\n        , color = nv.utils.getColor(['#000'])\n        , xDomain\n        , yDomain\n        , xRange\n        , yRange\n        , showMinMaxPoints = true\n        , showCurrentPoint = true\n        , dispatch = d3.dispatch('renderEnd')\n        ;\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n    \n    function chart(selection) {\n        renderWatch.reset();\n        selection.each(function(data) {\n            var availableWidth = width - margin.left - margin.right,\n                availableHeight = height - margin.top - margin.bottom;\n\n            container = d3.select(this);\n            nv.utils.initSVG(container);\n\n            // Setup Scales\n            x   .domain(xDomain || d3.extent(data, getX ))\n                .range(xRange || [0, availableWidth]);\n\n            y   .domain(yDomain || d3.extent(data, getY ))\n                .range(yRange || [availableHeight, 0]);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-sparkline').data([data]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-sparkline');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')\n\n            var paths = wrap.selectAll('path')\n                .data(function(d) { return [d] });\n            paths.enter().append('path');\n            paths.exit().remove();\n            paths\n                .style('stroke', function(d,i) { return d.color || color(d, i) })\n                .attr('d', d3.svg.line()\n                    .x(function(d,i) { return x(getX(d,i)) })\n                    .y(function(d,i) { return y(getY(d,i)) })\n            );\n\n            // TODO: Add CURRENT data point (Need Min, Mac, Current / Most recent)\n            var points = wrap.selectAll('circle.nv-point')\n                .data(function(data) {\n                    var yValues = data.map(function(d, i) { return getY(d,i); });\n                    function pointIndex(index) {\n                        if (index != -1) {\n                            var result = data[index];\n                            result.pointIndex = index;\n                            return result;\n                        } else {\n                            return null;\n                        }\n                    }\n                    var maxPoint = pointIndex(yValues.lastIndexOf(y.domain()[1])),\n                        minPoint = pointIndex(yValues.indexOf(y.domain()[0])),\n                        currentPoint = pointIndex(yValues.length - 1);\n                    return [(showMinMaxPoints ? minPoint : null), (showMinMaxPoints ? maxPoint : null), (showCurrentPoint ? currentPoint : null)].filter(function (d) {return d != null;});\n                });\n            points.enter().append('circle');\n            points.exit().remove();\n            points\n                .attr('cx', function(d,i) { return x(getX(d,d.pointIndex)) })\n                .attr('cy', function(d,i) { return y(getY(d,d.pointIndex)) })\n                .attr('r', 2)\n                .attr('class', function(d,i) {\n                    return getX(d, d.pointIndex) == x.domain()[1] ? 'nv-point nv-currentValue' :\n                            getY(d, d.pointIndex) == y.domain()[0] ? 'nv-point nv-minValue' : 'nv-point nv-maxValue'\n                });\n        });\n        \n        renderWatch.renderEnd('sparkline immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:            {get: function(){return width;}, set: function(_){width=_;}},\n        height:           {get: function(){return height;}, set: function(_){height=_;}},\n        xDomain:          {get: function(){return xDomain;}, set: function(_){xDomain=_;}},\n        yDomain:          {get: function(){return yDomain;}, set: function(_){yDomain=_;}},\n        xRange:           {get: function(){return xRange;}, set: function(_){xRange=_;}},\n        yRange:           {get: function(){return yRange;}, set: function(_){yRange=_;}},\n        xScale:           {get: function(){return x;}, set: function(_){x=_;}},\n        yScale:           {get: function(){return y;}, set: function(_){y=_;}},\n        animate:          {get: function(){return animate;}, set: function(_){animate=_;}},\n        showMinMaxPoints: {get: function(){return showMinMaxPoints;}, set: function(_){showMinMaxPoints=_;}},\n        showCurrentPoint: {get: function(){return showCurrentPoint;}, set: function(_){showCurrentPoint=_;}},\n\n        //functor options\n        x: {get: function(){return getX;}, set: function(_){getX=d3.functor(_);}},\n        y: {get: function(){return getY;}, set: function(_){getY=d3.functor(_);}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }}\n    });\n\n    chart.dispatch = dispatch;\n    nv.utils.initOptions(chart);\n    return chart;\n};\n\nnv.models.sparklinePlus = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var sparkline = nv.models.sparkline();\n\n    var margin = {top: 15, right: 100, bottom: 10, left: 50}\n        , width = null\n        , height = null\n        , x\n        , y\n        , index = []\n        , paused = false\n        , xTickFormat = d3.format(',r')\n        , yTickFormat = d3.format(',.2f')\n        , showLastValue = true\n        , alignValue = true\n        , rightAlignValue = false\n        , noData = null\n        , dispatch = d3.dispatch('renderEnd')\n        ;\n        \n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n        renderWatch.reset();\n        renderWatch.models(sparkline);\n        selection.each(function(data) {\n            var container = d3.select(this);\n            nv.utils.initSVG(container);\n\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            chart.update = function() { container.call(chart); };\n            chart.container = this;\n\n            // Display No Data message if there's nothing to show.\n            if (!data || !data.length) {\n                nv.utils.noData(chart, container)\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n\n            var currentValue = sparkline.y()(data[data.length-1], data.length-1);\n\n            // Setup Scales\n            x = sparkline.xScale();\n            y = sparkline.yScale();\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-sparklineplus').data([data]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-sparklineplus');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-sparklineWrap');\n            gEnter.append('g').attr('class', 'nv-valueWrap');\n            gEnter.append('g').attr('class', 'nv-hoverArea');\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            // Main Chart Component(s)\n            var sparklineWrap = g.select('.nv-sparklineWrap');\n\n            sparkline.width(availableWidth).height(availableHeight);\n            sparklineWrap.call(sparkline);\n\n            if (showLastValue) {\n                var valueWrap = g.select('.nv-valueWrap');\n                var value = valueWrap.selectAll('.nv-currentValue')\n                    .data([currentValue]);\n\n                value.enter().append('text').attr('class', 'nv-currentValue')\n                    .attr('dx', rightAlignValue ? -8 : 8)\n                    .attr('dy', '.9em')\n                    .style('text-anchor', rightAlignValue ? 'end' : 'start');\n\n                value\n                    .attr('x', availableWidth + (rightAlignValue ? margin.right : 0))\n                    .attr('y', alignValue ? function (d) {\n                        return y(d)\n                    } : 0)\n                    .style('fill', sparkline.color()(data[data.length - 1], data.length - 1))\n                    .text(yTickFormat(currentValue));\n            }\n\n            gEnter.select('.nv-hoverArea').append('rect')\n                .on('mousemove', sparklineHover)\n                .on('click', function() { paused = !paused })\n                .on('mouseout', function() { index = []; updateValueLine(); });\n\n            g.select('.nv-hoverArea rect')\n                .attr('transform', function(d) { return 'translate(' + -margin.left + ',' + -margin.top + ')' })\n                .attr('width', availableWidth + margin.left + margin.right)\n                .attr('height', availableHeight + margin.top);\n\n            //index is currently global (within the chart), may or may not keep it that way\n            function updateValueLine() {\n                if (paused) return;\n\n                var hoverValue = g.selectAll('.nv-hoverValue').data(index);\n\n                var hoverEnter = hoverValue.enter()\n                    .append('g').attr('class', 'nv-hoverValue')\n                    .style('stroke-opacity', 0)\n                    .style('fill-opacity', 0);\n\n                hoverValue.exit()\n                    .transition().duration(250)\n                    .style('stroke-opacity', 0)\n                    .style('fill-opacity', 0)\n                    .remove();\n\n                hoverValue\n                    .attr('transform', function(d) { return 'translate(' + x(sparkline.x()(data[d],d)) + ',0)' })\n                    .transition().duration(250)\n                    .style('stroke-opacity', 1)\n                    .style('fill-opacity', 1);\n\n                if (!index.length) return;\n\n                hoverEnter.append('line')\n                    .attr('x1', 0)\n                    .attr('y1', -margin.top)\n                    .attr('x2', 0)\n                    .attr('y2', availableHeight);\n\n                hoverEnter.append('text').attr('class', 'nv-xValue')\n                    .attr('x', -6)\n                    .attr('y', -margin.top)\n                    .attr('text-anchor', 'end')\n                    .attr('dy', '.9em');\n\n                g.select('.nv-hoverValue .nv-xValue')\n                    .text(xTickFormat(sparkline.x()(data[index[0]], index[0])));\n\n                hoverEnter.append('text').attr('class', 'nv-yValue')\n                    .attr('x', 6)\n                    .attr('y', -margin.top)\n                    .attr('text-anchor', 'start')\n                    .attr('dy', '.9em');\n\n                g.select('.nv-hoverValue .nv-yValue')\n                    .text(yTickFormat(sparkline.y()(data[index[0]], index[0])));\n            }\n\n            function sparklineHover() {\n                if (paused) return;\n\n                var pos = d3.mouse(this)[0] - margin.left;\n\n                function getClosestIndex(data, x) {\n                    var distance = Math.abs(sparkline.x()(data[0], 0) - x);\n                    var closestIndex = 0;\n                    for (var i = 0; i < data.length; i++){\n                        if (Math.abs(sparkline.x()(data[i], i) - x) < distance) {\n                            distance = Math.abs(sparkline.x()(data[i], i) - x);\n                            closestIndex = i;\n                        }\n                    }\n                    return closestIndex;\n                }\n\n                index = [getClosestIndex(data, Math.round(x.invert(pos)))];\n                updateValueLine();\n            }\n\n        });\n        renderWatch.renderEnd('sparklinePlus immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    // expose chart's sub-components\n    chart.dispatch = dispatch;\n    chart.sparkline = sparkline;\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:           {get: function(){return width;}, set: function(_){width=_;}},\n        height:          {get: function(){return height;}, set: function(_){height=_;}},\n        xTickFormat:     {get: function(){return xTickFormat;}, set: function(_){xTickFormat=_;}},\n        yTickFormat:     {get: function(){return yTickFormat;}, set: function(_){yTickFormat=_;}},\n        showLastValue:   {get: function(){return showLastValue;}, set: function(_){showLastValue=_;}},\n        alignValue:      {get: function(){return alignValue;}, set: function(_){alignValue=_;}},\n        rightAlignValue: {get: function(){return rightAlignValue;}, set: function(_){rightAlignValue=_;}},\n        noData:          {get: function(){return noData;}, set: function(_){noData=_;}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, sparkline);\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n\nnv.models.stackedArea = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n        , width = 960\n        , height = 500\n        , color = nv.utils.defaultColor() // a function that computes the color\n        , id = Math.floor(Math.random() * 100000) //Create semi-unique ID incase user doesn't selet one\n        , container = null\n        , getX = function(d) { return d.x } // accessor to get the x value from a data point\n        , getY = function(d) { return d.y } // accessor to get the y value from a data point\n        , defined = function(d,i) { return !isNaN(getY(d,i)) && getY(d,i) !== null } // allows a line to be not continuous when it is not defined\n        , style = 'stack'\n        , offset = 'zero'\n        , order = 'default'\n        , interpolate = 'linear'  // controls the line interpolation\n        , clipEdge = false // if true, masks lines within x and y scale\n        , x //can be accessed via chart.xScale()\n        , y //can be accessed via chart.yScale()\n        , scatter = nv.models.scatter()\n        , duration = 250\n        , dispatch =  d3.dispatch('areaClick', 'areaMouseover', 'areaMouseout','renderEnd', 'elementClick', 'elementMouseover', 'elementMouseout')\n        ;\n\n    scatter\n        .pointSize(2.2) // default size\n        .pointDomain([2.2, 2.2]) // all the same size by default\n    ;\n\n    /************************************\n     * offset:\n     *   'wiggle' (stream)\n     *   'zero' (stacked)\n     *   'expand' (normalize to 100%)\n     *   'silhouette' (simple centered)\n     *\n     * order:\n     *   'inside-out' (stream)\n     *   'default' (input order)\n     ************************************/\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n        renderWatch.reset();\n        renderWatch.models(scatter);\n        selection.each(function(data) {\n            var availableWidth = width - margin.left - margin.right,\n                availableHeight = height - margin.top - margin.bottom;\n\n            container = d3.select(this);\n            nv.utils.initSVG(container);\n\n            // Setup Scales\n            x = scatter.xScale();\n            y = scatter.yScale();\n\n            var dataRaw = data;\n            // Injecting point index into each point because d3.layout.stack().out does not give index\n            data.forEach(function(aseries, i) {\n                aseries.seriesIndex = i;\n                aseries.values = aseries.values.map(function(d, j) {\n                    d.index = j;\n                    d.seriesIndex = i;\n                    return d;\n                });\n            });\n\n            var dataFiltered = data.filter(function(series) {\n                return !series.disabled;\n            });\n\n            data = d3.layout.stack()\n                .order(order)\n                .offset(offset)\n                .values(function(d) { return d.values })  //TODO: make values customizeable in EVERY model in this fashion\n                .x(getX)\n                .y(getY)\n                .out(function(d, y0, y) {\n                    d.display = {\n                        y: y,\n                        y0: y0\n                    };\n                })\n            (dataFiltered);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-stackedarea').data([data]);\n            var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-stackedarea');\n            var defsEnter = wrapEnter.append('defs');\n            var gEnter = wrapEnter.append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-areaWrap');\n            gEnter.append('g').attr('class', 'nv-scatterWrap');\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n            \n            // If the user has not specified forceY, make sure 0 is included in the domain\n            // Otherwise, use user-specified values for forceY\n            if (scatter.forceY().length == 0) {\n                scatter.forceY().push(0);\n            }\n            \n            scatter\n                .width(availableWidth)\n                .height(availableHeight)\n                .x(getX)\n                .y(function(d) {\n                    if (d.display !== undefined) { return d.display.y + d.display.y0; }\n                })\n                .color(data.map(function(d,i) {\n                    d.color = d.color || color(d, d.seriesIndex);\n                    return d.color;\n                }));\n\n            var scatterWrap = g.select('.nv-scatterWrap')\n                .datum(data);\n\n            scatterWrap.call(scatter);\n\n            defsEnter.append('clipPath')\n                .attr('id', 'nv-edge-clip-' + id)\n                .append('rect');\n\n            wrap.select('#nv-edge-clip-' + id + ' rect')\n                .attr('width', availableWidth)\n                .attr('height', availableHeight);\n\n            g.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + id + ')' : '');\n\n            var area = d3.svg.area()\n                .defined(defined)\n                .x(function(d,i)  { return x(getX(d,i)) })\n                .y0(function(d) {\n                    return y(d.display.y0)\n                })\n                .y1(function(d) {\n                    return y(d.display.y + d.display.y0)\n                })\n                .interpolate(interpolate);\n\n            var zeroArea = d3.svg.area()\n                .defined(defined)\n                .x(function(d,i)  { return x(getX(d,i)) })\n                .y0(function(d) { return y(d.display.y0) })\n                .y1(function(d) { return y(d.display.y0) });\n\n            var path = g.select('.nv-areaWrap').selectAll('path.nv-area')\n                .data(function(d) { return d });\n\n            path.enter().append('path').attr('class', function(d,i) { return 'nv-area nv-area-' + i })\n                .attr('d', function(d,i){\n                    return zeroArea(d.values, d.seriesIndex);\n                })\n                .on('mouseover', function(d,i) {\n                    d3.select(this).classed('hover', true);\n                    dispatch.areaMouseover({\n                        point: d,\n                        series: d.key,\n                        pos: [d3.event.pageX, d3.event.pageY],\n                        seriesIndex: d.seriesIndex\n                    });\n                })\n                .on('mouseout', function(d,i) {\n                    d3.select(this).classed('hover', false);\n                    dispatch.areaMouseout({\n                        point: d,\n                        series: d.key,\n                        pos: [d3.event.pageX, d3.event.pageY],\n                        seriesIndex: d.seriesIndex\n                    });\n                })\n                .on('click', function(d,i) {\n                    d3.select(this).classed('hover', false);\n                    dispatch.areaClick({\n                        point: d,\n                        series: d.key,\n                        pos: [d3.event.pageX, d3.event.pageY],\n                        seriesIndex: d.seriesIndex\n                    });\n                });\n\n            path.exit().remove();\n            path.style('fill', function(d,i){\n                    return d.color || color(d, d.seriesIndex)\n                })\n                .style('stroke', function(d,i){ return d.color || color(d, d.seriesIndex) });\n            path.watchTransition(renderWatch,'stackedArea path')\n                .attr('d', function(d,i) {\n                    return area(d.values,i)\n                });\n\n            //============================================================\n            // Event Handling/Dispatching (in chart's scope)\n            //------------------------------------------------------------\n\n            scatter.dispatch.on('elementMouseover.area', function(e) {\n                g.select('.nv-chart-' + id + ' .nv-area-' + e.seriesIndex).classed('hover', true);\n            });\n            scatter.dispatch.on('elementMouseout.area', function(e) {\n                g.select('.nv-chart-' + id + ' .nv-area-' + e.seriesIndex).classed('hover', false);\n            });\n\n            //Special offset functions\n            chart.d3_stackedOffset_stackPercent = function(stackData) {\n                var n = stackData.length,    //How many series\n                    m = stackData[0].length,     //how many points per series\n                    i,\n                    j,\n                    o,\n                    y0 = [];\n\n                for (j = 0; j < m; ++j) { //Looping through all points\n                    for (i = 0, o = 0; i < dataRaw.length; i++) { //looping through all series\n                        o += getY(dataRaw[i].values[j]); //total y value of all series at a certian point in time.\n                    }\n\n                    if (o) for (i = 0; i < n; i++) { //(total y value of all series at point in time i) != 0\n                        stackData[i][j][1] /= o;\n                    } else { //(total y value of all series at point in time i) == 0\n                        for (i = 0; i < n; i++) {\n                            stackData[i][j][1] = 0;\n                        }\n                    }\n                }\n                for (j = 0; j < m; ++j) y0[j] = 0;\n                return y0;\n            };\n\n        });\n\n        renderWatch.renderEnd('stackedArea immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Global getters and setters\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.scatter = scatter;\n\n    scatter.dispatch.on('elementClick', function(){ dispatch.elementClick.apply(this, arguments); });\n    scatter.dispatch.on('elementMouseover', function(){ dispatch.elementMouseover.apply(this, arguments); });\n    scatter.dispatch.on('elementMouseout', function(){ dispatch.elementMouseout.apply(this, arguments); });\n\n    chart.interpolate = function(_) {\n        if (!arguments.length) return interpolate;\n        interpolate = _;\n        return chart;\n    };\n\n    chart.duration = function(_) {\n        if (!arguments.length) return duration;\n        duration = _;\n        renderWatch.reset(duration);\n        scatter.duration(duration);\n        return chart;\n    };\n\n    chart.dispatch = dispatch;\n    chart.scatter = scatter;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        defined: {get: function(){return defined;}, set: function(_){defined=_;}},\n        clipEdge: {get: function(){return clipEdge;}, set: function(_){clipEdge=_;}},\n        offset:      {get: function(){return offset;}, set: function(_){offset=_;}},\n        order:    {get: function(){return order;}, set: function(_){order=_;}},\n        interpolate:    {get: function(){return interpolate;}, set: function(_){interpolate=_;}},\n\n        // simple functor options\n        x:     {get: function(){return getX;}, set: function(_){getX = d3.functor(_);}},\n        y:     {get: function(){return getY;}, set: function(_){getY = d3.functor(_);}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n        }},\n        style: {get: function(){return style;}, set: function(_){\n            style = _;\n            switch (style) {\n                case 'stack':\n                    chart.offset('zero');\n                    chart.order('default');\n                    break;\n                case 'stream':\n                    chart.offset('wiggle');\n                    chart.order('inside-out');\n                    break;\n                case 'stream-center':\n                    chart.offset('silhouette');\n                    chart.order('inside-out');\n                    break;\n                case 'expand':\n                    chart.offset('expand');\n                    chart.order('default');\n                    break;\n                case 'stack_percent':\n                    chart.offset(chart.d3_stackedOffset_stackPercent);\n                    chart.order('default');\n                    break;\n            }\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n            scatter.duration(duration);\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, scatter);\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n\nnv.models.stackedAreaChart = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var stacked = nv.models.stackedArea()\n        , xAxis = nv.models.axis()\n        , yAxis = nv.models.axis()\n        , legend = nv.models.legend()\n        , controls = nv.models.legend()\n        , interactiveLayer = nv.interactiveGuideline()\n        , tooltip = nv.models.tooltip()\n        , focus = nv.models.focus(nv.models.stackedArea())\n        ;\n\n    var margin = {top: 10, right: 25, bottom: 50, left: 60}\n        , marginTop = null\n        , width = null\n        , height = null\n        , color = nv.utils.defaultColor()\n        , showControls = true\n        , showLegend = true\n        , legendPosition = 'top'\n        , showXAxis = true\n        , showYAxis = true\n        , rightAlignYAxis = false\n        , focusEnable = false\n        , useInteractiveGuideline = false\n        , showTotalInTooltip = true\n        , totalLabel = 'TOTAL'\n        , x //can be accessed via chart.xScale()\n        , y //can be accessed via chart.yScale()\n        , state = nv.utils.state()\n        , defaultState = null\n        , noData = null\n        , dispatch = d3.dispatch('stateChange', 'changeState','renderEnd')\n        , controlWidth = 250\n        , controlOptions = ['Stacked','Stream','Expanded']\n        , controlLabels = {}\n        , duration = 250\n        ;\n\n    state.style = stacked.style();\n    xAxis.orient('bottom').tickPadding(7);\n    yAxis.orient((rightAlignYAxis) ? 'right' : 'left');\n\n    tooltip\n        .headerFormatter(function(d, i) {\n            return xAxis.tickFormat()(d, i);\n        })\n        .valueFormatter(function(d, i) {\n            return yAxis.tickFormat()(d, i);\n        });\n\n    interactiveLayer.tooltip\n        .headerFormatter(function(d, i) {\n            return xAxis.tickFormat()(d, i);\n        })\n        .valueFormatter(function(d, i) {\n            return d == null ? \"N/A\" : yAxis.tickFormat()(d, i);\n        });\n\n    var oldYTickFormat = null,\n        oldValueFormatter = null;\n\n    controls.updateState(false);\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n    var style = stacked.style();\n\n    var stateGetter = function(data) {\n        return function(){\n            return {\n                active: data.map(function(d) { return !d.disabled }),\n                style: stacked.style()\n            };\n        }\n    };\n\n    var stateSetter = function(data) {\n        return function(state) {\n            if (state.style !== undefined)\n                style = state.style;\n            if (state.active !== undefined)\n                data.forEach(function(series,i) {\n                    series.disabled = !state.active[i];\n                });\n        }\n    };\n\n    var percentFormatter = d3.format('%');\n\n    function chart(selection) {\n        renderWatch.reset();\n        renderWatch.models(stacked);\n        if (showXAxis) renderWatch.models(xAxis);\n        if (showYAxis) renderWatch.models(yAxis);\n\n        selection.each(function(data) {\n            var container = d3.select(this),\n                that = this;\n            nv.utils.initSVG(container);\n\n            var availableWidth = nv.utils.availableWidth(width, container, margin),\n                availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n\n            chart.update = function() { container.transition().duration(duration).call(chart); };\n            chart.container = this;\n\n            state\n                .setter(stateSetter(data), chart.update)\n                .getter(stateGetter(data))\n                .update();\n\n            // DEPRECATED set state.disabled\n            state.disabled = data.map(function(d) { return !!d.disabled });\n\n            if (!defaultState) {\n                var key;\n                defaultState = {};\n                for (key in state) {\n                    if (state[key] instanceof Array)\n                        defaultState[key] = state[key].slice(0);\n                    else\n                        defaultState[key] = state[key];\n                }\n            }\n\n            // Display No Data message if there's nothing to show.\n            if (!data || !data.length || !data.filter(function(d) { return d.values.length }).length) {\n                nv.utils.noData(chart, container)\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n            // Setup Scales\n            x = stacked.xScale();\n            y = stacked.yScale();\n\n            // Setup containers and skeleton of chart\n            var wrap = container.selectAll('g.nv-wrap.nv-stackedAreaChart').data([data]);\n            var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-stackedAreaChart').append('g');\n            var g = wrap.select('g');\n\n            gEnter.append('g').attr('class', 'nv-legendWrap');\n            gEnter.append('g').attr('class', 'nv-controlsWrap');\n\n            var focusEnter = gEnter.append('g').attr('class', 'nv-focus');\n            focusEnter.append('g').attr('class', 'nv-background').append('rect');\n            focusEnter.append('g').attr('class', 'nv-x nv-axis');\n            focusEnter.append('g').attr('class', 'nv-y nv-axis');\n            focusEnter.append('g').attr('class', 'nv-stackedWrap');\n            focusEnter.append('g').attr('class', 'nv-interactive');\n\n            // g.select(\"rect\").attr(\"width\",availableWidth).attr(\"height\",availableHeight);\n\n            var contextEnter = gEnter.append('g').attr('class', 'nv-focusWrap');\n\n            // Legend\n            if (!showLegend) {\n                g.select('.nv-legendWrap').selectAll('*').remove();\n            } else {\n                var legendWidth = (showControls && legendPosition === 'top') ? availableWidth - controlWidth : availableWidth;\n\n                legend.width(legendWidth);\n                g.select('.nv-legendWrap').datum(data).call(legend);\n\n                if (legendPosition === 'bottom') {\n                \t// constant from axis.js, plus some margin for better layout\n                \tvar xAxisHeight = (showXAxis ? 12 : 0) + 10;\n                   \tmargin.bottom = Math.max(legend.height() + xAxisHeight, margin.bottom);\n                   \tavailableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n                \tvar legendTop = availableHeight + xAxisHeight;\n                    g.select('.nv-legendWrap')\n                        .attr('transform', 'translate(0,' + legendTop +')');\n                } else if (legendPosition === 'top') {\n                    if (!marginTop && margin.top != legend.height()) {\n                        margin.top = legend.height();\n                        availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n                    }\n\n                    g.select('.nv-legendWrap')\n                    \t.attr('transform', 'translate(' + (availableWidth-legendWidth) + ',' + (-margin.top) +')');\n                }\n            }\n\n            // Controls\n            if (!showControls) {\n                 g.select('.nv-controlsWrap').selectAll('*').remove();\n            } else {\n                var controlsData = [\n                    {\n                        key: controlLabels.stacked || 'Stacked',\n                        metaKey: 'Stacked',\n                        disabled: stacked.style() != 'stack',\n                        style: 'stack'\n                    },\n                    {\n                        key: controlLabels.stream || 'Stream',\n                        metaKey: 'Stream',\n                        disabled: stacked.style() != 'stream',\n                        style: 'stream'\n                    },\n                    {\n                        key: controlLabels.expanded || 'Expanded',\n                        metaKey: 'Expanded',\n                        disabled: stacked.style() != 'expand',\n                        style: 'expand'\n                    },\n                    {\n                        key: controlLabels.stack_percent || 'Stack %',\n                        metaKey: 'Stack_Percent',\n                        disabled: stacked.style() != 'stack_percent',\n                        style: 'stack_percent'\n                    }\n                ];\n\n                controlWidth = (controlOptions.length/3) * 260;\n                controlsData = controlsData.filter(function(d) {\n                    return controlOptions.indexOf(d.metaKey) !== -1;\n                });\n\n                controls\n                    .width( controlWidth )\n                    .color(['#444', '#444', '#444']);\n\n                g.select('.nv-controlsWrap')\n                    .datum(controlsData)\n                    .call(controls);\n\n                var requiredTop = Math.max(controls.height(), showLegend && (legendPosition === 'top') ? legend.height() : 0);\n\n                if ( margin.top != requiredTop ) {\n                    margin.top = requiredTop;\n                    availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n                }\n\n                g.select('.nv-controlsWrap')\n                    .attr('transform', 'translate(0,' + (-margin.top) +')');\n            }\n\n            wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            if (rightAlignYAxis) {\n                g.select(\".nv-y.nv-axis\")\n                    .attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n            }\n\n            //Set up interactive layer\n            if (useInteractiveGuideline) {\n                interactiveLayer\n                    .width(availableWidth)\n                    .height(availableHeight)\n                    .margin({left: margin.left, top: margin.top})\n                    .svgContainer(container)\n                    .xScale(x);\n                wrap.select(\".nv-interactive\").call(interactiveLayer);\n            }\n\n            g.select('.nv-focus .nv-background rect')\n                .attr('width', availableWidth)\n                .attr('height', availableHeight);\n\n            stacked\n                .width(availableWidth)\n                .height(availableHeight)\n                .color(data.map(function(d,i) {\n                    return d.color || color(d, i);\n                }).filter(function(d,i) { return !data[i].disabled; }));\n\n            var stackedWrap = g.select('.nv-focus .nv-stackedWrap')\n                .datum(data.filter(function(d) { return !d.disabled; }));\n\n            // Setup Axes\n            if (showXAxis) {\n                xAxis.scale(x)\n                    ._ticks( nv.utils.calcTicksX(availableWidth/100, data) )\n                    .tickSize( -availableHeight, 0);\n            }\n\n            if (showYAxis) {\n                var ticks;\n                if (stacked.offset() === 'wiggle') {\n                    ticks = 0;\n                }\n                else {\n                    ticks = nv.utils.calcTicksY(availableHeight/36, data);\n                }\n                yAxis.scale(y)\n                    ._ticks(ticks)\n                    .tickSize(-availableWidth, 0);\n            }\n\n            //============================================================\n            // Update Axes\n            //============================================================\n            function updateXAxis() {\n                if(showXAxis) {\n                    g.select('.nv-focus .nv-x.nv-axis')\n                        .attr('transform', 'translate(0,' + availableHeight + ')')\n                        .transition()\n                        .duration(duration)\n                        .call(xAxis)\n                        ;\n                }\n            }\n\n            function updateYAxis() {\n                if(showYAxis) {\n                    if (stacked.style() === 'expand' || stacked.style() === 'stack_percent') {\n                        var currentFormat = yAxis.tickFormat();\n\n                        if ( !oldYTickFormat || currentFormat !== percentFormatter )\n                            oldYTickFormat = currentFormat;\n\n                        //Forces the yAxis to use percentage in 'expand' mode.\n                        yAxis.tickFormat(percentFormatter);\n                    }\n                    else {\n                        if (oldYTickFormat) {\n                            yAxis.tickFormat(oldYTickFormat);\n                            oldYTickFormat = null;\n                        }\n                    }\n\n                    g.select('.nv-focus .nv-y.nv-axis')\n                    .transition().duration(0)\n                    .call(yAxis);\n                }\n            }\n\n            //============================================================\n            // Update Focus\n            //============================================================\n            if(!focusEnable) {\n                stackedWrap.transition().call(stacked);\n                updateXAxis();\n                updateYAxis();\n            } else {\n                focus.width(availableWidth);\n                g.select('.nv-focusWrap')\n                    .attr('transform', 'translate(0,' + ( availableHeight + margin.bottom + focus.margin().top) + ')')\n                    .datum(data.filter(function(d) { return !d.disabled; }))\n                    .call(focus);\n                var extent = focus.brush.empty() ? focus.xDomain() : focus.brush.extent();\n                if(extent !== null){\n                    onBrush(extent);\n                }\n            }\n\n            //============================================================\n            // Event Handling/Dispatching (in chart's scope)\n            //------------------------------------------------------------\n\n            stacked.dispatch.on('areaClick.toggle', function(e) {\n                if (data.filter(function(d) { return !d.disabled }).length === 1)\n                    data.forEach(function(d) {\n                        d.disabled = false;\n                    });\n                else\n                    data.forEach(function(d,i) {\n                        d.disabled = (i != e.seriesIndex);\n                    });\n\n                state.disabled = data.map(function(d) { return !!d.disabled });\n                dispatch.stateChange(state);\n\n                chart.update();\n            });\n\n            legend.dispatch.on('stateChange', function(newState) {\n                for (var key in newState)\n                    state[key] = newState[key];\n                dispatch.stateChange(state);\n                chart.update();\n            });\n\n            controls.dispatch.on('legendClick', function(d,i) {\n                if (!d.disabled) return;\n\n                controlsData = controlsData.map(function(s) {\n                    s.disabled = true;\n                    return s;\n                });\n                d.disabled = false;\n\n                stacked.style(d.style);\n\n\n                state.style = stacked.style();\n                dispatch.stateChange(state);\n\n                chart.update();\n            });\n\n            interactiveLayer.dispatch.on('elementMousemove', function(e) {\n                stacked.clearHighlights();\n                var singlePoint, pointIndex, pointXLocation, allData = [], valueSum = 0, allNullValues = true, atleastOnePoint = false;\n                data\n                    .filter(function(series, i) {\n                        series.seriesIndex = i;\n                        return !series.disabled;\n                    })\n                    .forEach(function(series,i) {\n                        pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n                        var point = series.values[pointIndex];\n                        var pointYValue = chart.y()(point, pointIndex);\n                        if (pointYValue != null && pointYValue > 0) {\n                            stacked.highlightPoint(i, pointIndex, true);\n                            atleastOnePoint = true;\n                        }\n                    \n                        // Draw at least one point if all values are zero.\n                        if (i === (data.length - 1) && !atleastOnePoint) {\n                            stacked.highlightPoint(i, pointIndex, true);\n                        }\n                        if (typeof point === 'undefined') return;\n                        if (typeof singlePoint === 'undefined') singlePoint = point;\n                        if (typeof pointXLocation === 'undefined') pointXLocation = chart.xScale()(chart.x()(point,pointIndex));\n\n                        //If we are in 'expand' mode, use the stacked percent value instead of raw value.\n                        var tooltipValue = (stacked.style() == 'expand') ? point.display.y : chart.y()(point,pointIndex);\n                        allData.push({\n                            key: series.key,\n                            value: tooltipValue,\n                            color: color(series,series.seriesIndex),\n                            point: point\n                        });\n\n                        if (showTotalInTooltip && stacked.style() != 'expand' && tooltipValue != null) {\n                          valueSum += tooltipValue;\n                          allNullValues = false;\n                        };\n                    });\n\n                allData.reverse();\n\n                //Highlight the tooltip entry based on which stack the mouse is closest to.\n                if (allData.length > 2) {\n                    var yValue = chart.yScale().invert(e.mouseY);\n                    var yDistMax = Infinity, indexToHighlight = null;\n                    allData.forEach(function(series,i) {\n\n                        //To handle situation where the stacked area chart is negative, we need to use absolute values\n                        //when checking if the mouse Y value is within the stack area.\n                        yValue = Math.abs(yValue);\n                        var stackedY0 = Math.abs(series.point.display.y0);\n                        var stackedY = Math.abs(series.point.display.y);\n                        if ( yValue >= stackedY0 && yValue <= (stackedY + stackedY0))\n                        {\n                            indexToHighlight = i;\n                            return;\n                        }\n                    });\n                    if (indexToHighlight != null)\n                        allData[indexToHighlight].highlight = true;\n                }\n\n                //If we are not in 'expand' mode, add a 'Total' row to the tooltip.\n                if (showTotalInTooltip && stacked.style() != 'expand' && allData.length >= 2 && !allNullValues) {\n                    allData.push({\n                        key: totalLabel,\n                        value: valueSum,\n                        total: true\n                    });\n                }\n\n                var xValue = chart.x()(singlePoint,pointIndex);\n\n                var valueFormatter = interactiveLayer.tooltip.valueFormatter();\n                // Keeps track of the tooltip valueFormatter if the chart changes to expanded view\n                if (stacked.style() === 'expand' || stacked.style() === 'stack_percent') {\n                    if ( !oldValueFormatter ) {\n                        oldValueFormatter = valueFormatter;\n                    }\n                    //Forces the tooltip to use percentage in 'expand' mode.\n                    valueFormatter = d3.format(\".1%\");\n                }\n                else {\n                    if (oldValueFormatter) {\n                        valueFormatter = oldValueFormatter;\n                        oldValueFormatter = null;\n                    }\n                }\n\n                interactiveLayer.tooltip\n                    .valueFormatter(valueFormatter)\n                    .data(\n                    {\n                        value: xValue,\n                        series: allData\n                    }\n                )();\n\n                interactiveLayer.renderGuideLine(pointXLocation);\n\n            });\n\n            interactiveLayer.dispatch.on(\"elementMouseout\",function(e) {\n                stacked.clearHighlights();\n            });\n\n            /* Update `main' graph on brush update. */\n            focus.dispatch.on(\"onBrush\", function(extent) {\n                onBrush(extent);\n            });\n\n            // Update chart from a state object passed to event handler\n            dispatch.on('changeState', function(e) {\n\n                if (typeof e.disabled !== 'undefined' && data.length === e.disabled.length) {\n                    data.forEach(function(series,i) {\n                        series.disabled = e.disabled[i];\n                    });\n\n                    state.disabled = e.disabled;\n                }\n\n                if (typeof e.style !== 'undefined') {\n                    stacked.style(e.style);\n                    style = e.style;\n                }\n\n                chart.update();\n            });\n\n            //============================================================\n            // Functions\n            //------------------------------------------------------------\n\n            function onBrush(extent) {\n                // Update Main (Focus)\n                var stackedWrap = g.select('.nv-focus .nv-stackedWrap')\n                    .datum(\n                    data.filter(function(d) { return !d.disabled; })\n                        .map(function(d,i) {\n                            return {\n                                key: d.key,\n                                area: d.area,\n                                classed: d.classed,\n                                values: d.values.filter(function(d,i) {\n                                    return stacked.x()(d,i) >= extent[0] && stacked.x()(d,i) <= extent[1];\n                                }),\n                                disableTooltip: d.disableTooltip\n                            };\n                        })\n                );\n                stackedWrap.transition().duration(duration).call(stacked);\n\n                // Update Main (Focus) Axes\n                updateXAxis();\n                updateYAxis();\n            }\n\n        });\n\n        renderWatch.renderEnd('stacked Area chart immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n    stacked.dispatch.on('elementMouseover.tooltip', function(evt) {\n        evt.point['x'] = stacked.x()(evt.point);\n        evt.point['y'] = stacked.y()(evt.point);\n        tooltip.data(evt).hidden(false);\n    });\n\n    stacked.dispatch.on('elementMouseout.tooltip', function(evt) {\n        tooltip.hidden(true)\n    });\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    // expose chart's sub-components\n    chart.dispatch = dispatch;\n    chart.stacked = stacked;\n    chart.legend = legend;\n    chart.controls = controls;\n    chart.xAxis = xAxis;\n    chart.x2Axis = focus.xAxis;\n    chart.yAxis = yAxis;\n    chart.y2Axis = focus.yAxis;\n    chart.interactiveLayer = interactiveLayer;\n    chart.tooltip = tooltip;\n    chart.focus = focus;\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        showLegend: {get: function(){return showLegend;}, set: function(_){showLegend=_;}},\n        legendPosition: {get: function(){return legendPosition;}, set: function(_){legendPosition=_;}},\n        showXAxis:      {get: function(){return showXAxis;}, set: function(_){showXAxis=_;}},\n        showYAxis:    {get: function(){return showYAxis;}, set: function(_){showYAxis=_;}},\n        defaultState:    {get: function(){return defaultState;}, set: function(_){defaultState=_;}},\n        noData:    {get: function(){return noData;}, set: function(_){noData=_;}},\n        showControls:    {get: function(){return showControls;}, set: function(_){showControls=_;}},\n        controlLabels:    {get: function(){return controlLabels;}, set: function(_){controlLabels=_;}},\n        controlOptions:    {get: function(){return controlOptions;}, set: function(_){controlOptions=_;}},\n        showTotalInTooltip:      {get: function(){return showTotalInTooltip;}, set: function(_){showTotalInTooltip=_;}},\n        totalLabel:      {get: function(){return totalLabel;}, set: function(_){totalLabel=_;}},\n        focusEnable:    {get: function(){return focusEnable;}, set: function(_){focusEnable=_;}},\n        focusHeight:     {get: function(){return focus.height();}, set: function(_){focus.height(_);}},\n        brushExtent: {get: function(){return focus.brushExtent();}, set: function(_){focus.brushExtent(_);}},\n\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            if (_.top !== undefined) {\n                margin.top = _.top;\n                marginTop = _.top;\n            }\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n        }},\n        focusMargin: {get: function(){return focus.margin}, set: function(_){\n            focus.margin.top    = _.top    !== undefined ? _.top    : focus.margin.top;\n            focus.margin.right  = _.right  !== undefined ? _.right  : focus.margin.right;\n            focus.margin.bottom = _.bottom !== undefined ? _.bottom : focus.margin.bottom;\n            focus.margin.left   = _.left   !== undefined ? _.left   : focus.margin.left;\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n            stacked.duration(duration);\n            xAxis.duration(duration);\n            yAxis.duration(duration);\n        }},\n        color:  {get: function(){return color;}, set: function(_){\n            color = nv.utils.getColor(_);\n            legend.color(color);\n            stacked.color(color);\n            focus.color(color);\n        }},\n        x: {get: function(){return stacked.x();}, set: function(_){\n            stacked.x(_);\n            focus.x(_);\n        }},\n        y: {get: function(){return stacked.y();}, set: function(_){\n            stacked.y(_);\n            focus.y(_);\n        }},\n        rightAlignYAxis: {get: function(){return rightAlignYAxis;}, set: function(_){\n            rightAlignYAxis = _;\n            yAxis.orient( rightAlignYAxis ? 'right' : 'left');\n        }},\n        useInteractiveGuideline: {get: function(){return useInteractiveGuideline;}, set: function(_){\n            useInteractiveGuideline = !!_;\n            chart.interactive(!_);\n            chart.useVoronoi(!_);\n            stacked.scatter.interactive(!_);\n        }}\n    });\n\n    nv.utils.inheritOptions(chart, stacked);\n    nv.utils.initOptions(chart);\n\n    return chart;\n};\n\nnv.models.stackedAreaWithFocusChart = function() {\n  return nv.models.stackedAreaChart()\n    .margin({ bottom: 30 })\n    .focusEnable( true );\n};\n// based on http://bl.ocks.org/kerryrodden/477c1bfb081b783f80ad\nnv.models.sunburst = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {top: 0, right: 0, bottom: 0, left: 0}\n        , width = 600\n        , height = 600\n        , mode = \"count\"\n        , modes = {count: function(d) { return 1; }, value: function(d) { return d.value || d.size }, size: function(d) { return d.value || d.size }}\n        , id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n        , container = null\n        , color = nv.utils.defaultColor()\n        , showLabels = false\n        , labelFormat = function(d){if(mode === 'count'){return d.name + ' #' + d.value}else{return d.name + ' ' + (d.value || d.size)}}\n        , labelThreshold = 0.02\n        , sort = function(d1, d2){return d1.name > d2.name;}\n        , key = function(d,i){\n            if (d.parent !== undefined) {\n                return d.name + '-' + d.parent.name + '-' + i;\n            } else {\n                return d.name;\n            }\n        }\n        , groupColorByParent = true\n        , duration = 500\n        , dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMousemove', 'elementMouseover', 'elementMouseout', 'renderEnd');\n\n    //============================================================\n    // aux functions and setup\n    //------------------------------------------------------------\n\n    var x = d3.scale.linear().range([0, 2 * Math.PI]);\n    var y = d3.scale.sqrt();\n\n    var partition = d3.layout.partition().sort(sort);\n\n    var node, availableWidth, availableHeight, radius;\n    var prevPositions = {};\n\n    var arc = d3.svg.arc()\n        .startAngle(function(d) {return Math.max(0, Math.min(2 * Math.PI, x(d.x))) })\n        .endAngle(function(d) {return Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx))) })\n        .innerRadius(function(d) {return Math.max(0, y(d.y)) })\n        .outerRadius(function(d) {return Math.max(0, y(d.y + d.dy)) });\n\n    function rotationToAvoidUpsideDown(d) {\n        var centerAngle = computeCenterAngle(d);\n        if(centerAngle > 90){\n            return 180;\n        }\n        else {\n            return 0;\n        }\n    }\n\n    function computeCenterAngle(d) {\n        var startAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x)));\n        var endAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx)));\n        var centerAngle = (((startAngle + endAngle) / 2) * (180 / Math.PI)) - 90;\n        return centerAngle;\n    }\n\n    function computeNodePercentage(d) {\n        var startAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x)));\n        var endAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx)));\n        return (endAngle - startAngle) / (2 * Math.PI);\n    }\n\n    function labelThresholdMatched(d) {\n        var startAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x)));\n        var endAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx)));\n\n        var size = endAngle - startAngle;\n        return size > labelThreshold;\n    }\n\n    // When zooming: interpolate the scales.\n    function arcTweenZoom(e,i) {\n        var xd = d3.interpolate(x.domain(), [node.x, node.x + node.dx]),\n        yd = d3.interpolate(y.domain(), [node.y, 1]),\n        yr = d3.interpolate(y.range(), [node.y ? 20 : 0, radius]);\n\n        if (i === 0) {\n            return function() {return arc(e);}\n        }\n        else {\n            return function (t) {\n                x.domain(xd(t));\n                y.domain(yd(t)).range(yr(t));\n                return arc(e);\n            }\n        };\n    }\n\n    function arcTweenUpdate(d) {\n        var ipo = d3.interpolate({x: d.x0, dx: d.dx0, y: d.y0, dy: d.dy0}, d);\n\n        return function (t) {\n            var b = ipo(t);\n\n            d.x0 = b.x;\n            d.dx0 = b.dx;\n            d.y0 = b.y;\n            d.dy0 = b.dy;\n\n            return arc(b);\n        };\n    }\n\n    function updatePrevPosition(node) {\n        var k = key(node);\n        if(! prevPositions[k]) prevPositions[k] = {};\n        var pP = prevPositions[k];\n        pP.dx = node.dx;\n        pP.x = node.x;\n        pP.dy = node.dy;\n        pP.y = node.y;\n    }\n\n    function storeRetrievePrevPositions(nodes) {\n        nodes.forEach(function(n){\n            var k = key(n);\n            var pP = prevPositions[k];\n            //console.log(k,n,pP);\n            if( pP ){\n                n.dx0 = pP.dx;\n                n.x0 = pP.x;\n                n.dy0 = pP.dy;\n                n.y0 = pP.y;\n            }\n            else {\n                n.dx0 = n.dx;\n                n.x0 = n.x;\n                n.dy0 = n.dy;\n                n.y0 = n.y;\n            }\n            updatePrevPosition(n);\n        });\n    }\n\n    function zoomClick(d) {\n        var labels = container.selectAll('text')\n        var path = container.selectAll('path')\n\n        // fade out all text elements\n        labels.transition().attr(\"opacity\",0);\n\n        // to allow reference to the new center node\n        node = d;\n\n        path.transition()\n            .duration(duration)\n            .attrTween(\"d\", arcTweenZoom)\n            .each('end', function(e) {\n                // partially taken from here: http://bl.ocks.org/metmajer/5480307\n                // check if the animated element's data e lies within the visible angle span given in d\n                if(e.x >= d.x && e.x < (d.x + d.dx) ){\n                    if(e.depth >= d.depth){\n                        // get a selection of the associated text element\n                        var parentNode = d3.select(this.parentNode);\n                        var arcText = parentNode.select('text');\n\n                        // fade in the text element and recalculate positions\n                        arcText.transition().duration(duration)\n                        .text( function(e){return labelFormat(e) })\n                        .attr(\"opacity\", function(d){\n                            if(labelThresholdMatched(d)) {\n                                return 1;\n                            }\n                            else {\n                                return 0;\n                            }\n                        })\n                        .attr(\"transform\", function() {\n                            var width = this.getBBox().width;\n                            if(e.depth === 0)\n                            return \"translate(\" + (width / 2 * - 1) + \",0)\";\n                            else if(e.depth === d.depth){\n                                return \"translate(\" + (y(e.y) + 5) + \",0)\";\n                            }\n                            else {\n                                var centerAngle = computeCenterAngle(e);\n                                var rotation = rotationToAvoidUpsideDown(e);\n                                if (rotation === 0) {\n                                    return 'rotate('+ centerAngle +')translate(' + (y(e.y) + 5) + ',0)';\n                                }\n                                else {\n                                    return 'rotate('+ centerAngle +')translate(' + (y(e.y) + width + 5) + ',0)rotate(' + rotation + ')';\n                                }\n                            }\n                        });\n                    }\n                }\n            })\n    }\n\n    //============================================================\n    // chart function\n    //------------------------------------------------------------\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n        renderWatch.reset();\n\n        selection.each(function(data) {\n            container = d3.select(this);\n            availableWidth = nv.utils.availableWidth(width, container, margin);\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n            radius = Math.min(availableWidth, availableHeight) / 2;\n\n            y.range([0, radius]);\n\n            // Setup containers and skeleton of chart\n            var wrap = container.select('g.nvd3.nv-wrap.nv-sunburst');\n            if( !wrap[0][0] ) {\n                wrap = container.append('g')\n                    .attr('class', 'nvd3 nv-wrap nv-sunburst nv-chart-' + id)\n                    .attr('transform', 'translate(' + ((availableWidth / 2) + margin.left + margin.right) + ',' + ((availableHeight / 2) + margin.top + margin.bottom) + ')');\n            } else {\n                wrap.attr('transform', 'translate(' + ((availableWidth / 2) + margin.left + margin.right) + ',' + ((availableHeight / 2) + margin.top + margin.bottom) + ')');\n            }\n\n            container.on('click', function (d, i) {\n                dispatch.chartClick({\n                    data: d,\n                    index: i,\n                    pos: d3.event,\n                    id: id\n                });\n            });\n\n            partition.value(modes[mode] || modes[\"count\"]);\n\n            //reverse the drawing order so that the labels of inner\n            //arcs are drawn on top of the outer arcs.\n            var nodes = partition.nodes(data[0]).reverse()\n\n            storeRetrievePrevPositions(nodes);\n            var cG = wrap.selectAll('.arc-container').data(nodes, key)\n\n            //handle new datapoints\n            var cGE = cG.enter()\n                .append(\"g\")\n                .attr(\"class\",'arc-container')\n\n            cGE.append(\"path\")\n                .attr(\"d\", arc)\n                .style(\"fill\", function (d) {\n                    if (d.color) {\n                        return d.color;\n                    }\n                    else if (groupColorByParent) {\n                        return color((d.children ? d : d.parent).name);\n                    }\n                    else {\n                        return color(d.name);\n                    }\n                })\n                .style(\"stroke\", \"#FFF\")\n                .on(\"click\", function(d,i){\n                    zoomClick(d);\n                    dispatch.elementClick({\n                        data: d,\n                        index: i\n                    })\n                })\n                .on('mouseover', function(d,i){\n                    d3.select(this).classed('hover', true).style('opacity', 0.8);\n                    dispatch.elementMouseover({\n                        data: d,\n                        color: d3.select(this).style(\"fill\"),\n                        percent: computeNodePercentage(d)\n                    });\n                })\n                .on('mouseout', function(d,i){\n                    d3.select(this).classed('hover', false).style('opacity', 1);\n                    dispatch.elementMouseout({\n                        data: d\n                    });\n                })\n                .on('mousemove', function(d,i){\n                    dispatch.elementMousemove({\n                        data: d\n                    });\n                });\n\n            ///Iterating via each and selecting based on the this\n            ///makes it work ... a cG.selectAll('path') doesn't.\n            ///Without iteration the data (in the element) didn't update.\n            cG.each(function(d){\n                d3.select(this).select('path')\n                    .transition()\n                    .duration(duration)\n                    .attrTween('d', arcTweenUpdate);\n            });\n\n            if(showLabels){\n                //remove labels first and add them back\n                cG.selectAll('text').remove();\n\n                //this way labels are on top of newly added arcs\n                cG.append('text')\n                    .text( function(e){ return labelFormat(e)})\n                    .transition()\n                    .duration(duration)\n                    .attr(\"opacity\", function(d){\n                        if(labelThresholdMatched(d)) {\n                            return 1;\n                        }\n                        else {\n                            return 0;\n                        }\n                    })\n                    .attr(\"transform\", function(d) {\n                        var width = this.getBBox().width;\n                        if(d.depth === 0){\n                            return \"rotate(0)translate(\" + (width / 2 * -1) + \",0)\";\n                        }\n                        else {\n                            var centerAngle = computeCenterAngle(d);\n                            var rotation = rotationToAvoidUpsideDown(d);\n                            if (rotation === 0) {\n                                return 'rotate('+ centerAngle +')translate(' + (y(d.y) + 5) + ',0)';\n                            }\n                            else {\n                                return 'rotate('+ centerAngle +')translate(' + (y(d.y) + width + 5) + ',0)rotate(' + rotation + ')';\n                            }\n                        }\n                    });\n            }\n\n            //zoom out to the center when the data is updated.\n            zoomClick(nodes[nodes.length - 1])\n\n\n            //remove unmatched elements ...\n            cG.exit()\n                .transition()\n                .duration(duration)\n                .attr('opacity',0)\n                .each('end',function(d){\n                    var k = key(d);\n                    prevPositions[k] = undefined;\n                })\n                .remove();\n        });\n\n\n        renderWatch.renderEnd('sunburst immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        width:      {get: function(){return width;}, set: function(_){width=_;}},\n        height:     {get: function(){return height;}, set: function(_){height=_;}},\n        mode:       {get: function(){return mode;}, set: function(_){mode=_;}},\n        id:         {get: function(){return id;}, set: function(_){id=_;}},\n        duration:   {get: function(){return duration;}, set: function(_){duration=_;}},\n        groupColorByParent: {get: function(){return groupColorByParent;}, set: function(_){groupColorByParent=!!_;}},\n        showLabels: {get: function(){return showLabels;}, set: function(_){showLabels=!!_}},\n        labelFormat: {get: function(){return labelFormat;}, set: function(_){labelFormat=_}},\n        labelThreshold: {get: function(){return labelThreshold;}, set: function(_){labelThreshold=_}},\n        sort: {get: function(){return sort;}, set: function(_){sort=_}},\n        key: {get: function(){return key;}, set: function(_){key=_}},\n        // options that require extra logic in the setter\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    != undefined ? _.top    : margin.top;\n            margin.right  = _.right  != undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom != undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   != undefined ? _.left   : margin.left;\n        }},\n        color: {get: function(){return color;}, set: function(_){\n            color=nv.utils.getColor(_);\n        }}\n    });\n\n    nv.utils.initOptions(chart);\n    return chart;\n};\nnv.models.sunburstChart = function() {\n    \"use strict\";\n\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var sunburst = nv.models.sunburst();\n    var tooltip = nv.models.tooltip();\n\n    var margin = {top: 30, right: 20, bottom: 20, left: 20}\n        , width = null\n        , height = null\n        , color = nv.utils.defaultColor()\n        , showTooltipPercent = false\n        , id = Math.round(Math.random() * 100000)\n        , defaultState = null\n        , noData = null\n        , duration = 250\n        , dispatch = d3.dispatch('stateChange', 'changeState','renderEnd');\n\n\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    tooltip\n        .duration(0)\n        .headerEnabled(false)\n        .valueFormatter(function(d){return d;});\n\n    //============================================================\n    // Chart function\n    //------------------------------------------------------------\n\n    function chart(selection) {\n        renderWatch.reset();\n        renderWatch.models(sunburst);\n\n        selection.each(function(data) {\n            var container = d3.select(this);\n\n            nv.utils.initSVG(container);\n\n            var availableWidth = nv.utils.availableWidth(width, container, margin);\n            var availableHeight = nv.utils.availableHeight(height, container, margin);\n\n            chart.update = function() {\n                if (duration === 0) {\n                    container.call(chart);\n                } else {\n                    container.transition().duration(duration).call(chart);\n                }\n            };\n            chart.container = container;\n\n            // Display No Data message if there's nothing to show.\n            if (!data || !data.length) {\n                nv.utils.noData(chart, container);\n                return chart;\n            } else {\n                container.selectAll('.nv-noData').remove();\n            }\n\n            sunburst.width(availableWidth).height(availableHeight).margin(margin);\n            container.call(sunburst);\n        });\n\n        renderWatch.renderEnd('sunburstChart immediate');\n        return chart;\n    }\n\n    //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n    sunburst.dispatch.on('elementMouseover.tooltip', function(evt) {\n        evt.series = {\n            key: evt.data.name,\n            value: (evt.data.value || evt.data.size),\n            color: evt.color,\n            percent: evt.percent\n        };\n        if (!showTooltipPercent) {\n            delete evt.percent;\n            delete evt.series.percent;\n        }\n        tooltip.data(evt).hidden(false);\n    });\n\n    sunburst.dispatch.on('elementMouseout.tooltip', function(evt) {\n        tooltip.hidden(true);\n    });\n\n    sunburst.dispatch.on('elementMousemove.tooltip', function(evt) {\n        tooltip();\n    });\n\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    // expose chart's sub-components\n    chart.dispatch = dispatch;\n    chart.sunburst = sunburst;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n\n    // use Object get/set functionality to map between vars and chart functions\n    chart._options = Object.create({}, {\n        // simple options, just get/set the necessary values\n        noData:             {get: function(){return noData;},               set: function(_){noData=_;}},\n        defaultState:       {get: function(){return defaultState;},         set: function(_){defaultState=_;}},\n        showTooltipPercent: {get: function(){return showTooltipPercent;},   set: function(_){showTooltipPercent=_;}},\n\n        // options that require extra logic in the setter\n        color: {get: function(){return color;}, set: function(_){\n            color = _;\n            sunburst.color(color);\n        }},\n        duration: {get: function(){return duration;}, set: function(_){\n            duration = _;\n            renderWatch.reset(duration);\n            sunburst.duration(duration);\n        }},\n        margin: {get: function(){return margin;}, set: function(_){\n            margin.top    = _.top    !== undefined ? _.top    : margin.top;\n            margin.right  = _.right  !== undefined ? _.right  : margin.right;\n            margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n            margin.left   = _.left   !== undefined ? _.left   : margin.left;\n            sunburst.margin(margin);\n        }}\n    });\n    nv.utils.inheritOptions(chart, sunburst);\n    nv.utils.initOptions(chart);\n    return chart;\n\n};\n\nnv.version = \"1.8.6\";\n})();\n//# sourceMappingURL=nv.d3.js.map"],"sourceRoot":""}